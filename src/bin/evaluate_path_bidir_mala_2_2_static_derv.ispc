static void evaluate_path_bidir_mala_2_2_static_derv_kernel(uniform const float lens[2], uniform const float primary[7], uniform const float scene[38], uniform const float vertParams[297], float grad[6]) {
	uniform float _t800, _t799, _t1274, _t796, _t795, _t794, _t793, _t1269, _t422, _t789, _t421, _t471, _t776, _t517, _t774, _t1320, _t438, _t1321, _t745, _t742, _t618, _t910, _t735, _t734, _t639, _t733, _t1314, _t732, _t637, _t1313, _t635, _t722, _t711, _t710, _t707, _t706, _t705, _t704, _t703, _t702, _t701, _t700, _t303, _t699, _t301, _t698, _t692, _t432, _t1059, _t1597, _t673, _t875, _t672, _t671, _t661, _t985, _t1273, _t473, _t651, _t785, _t540, _t633, _t632, _t629, _t628, _t627, _t1520, _t913, _t1082, _t1518, _t1517, _t622, _t1370, _t621, _t1350, _t1631, _t604, _t99, _t1630, _t603, _t602, _t595, _t594, _t787, _t580, _t588, _t587, _t319, _t586, _t798, _t585, _t584, _t68, _t788, _t1205, _t480, _t479, _t478, _t477, _t1467, _t482, _t481, _t1303, _t1511, _t610, _t1304, _t608, _t1510, _t607, _t1633, _t606, _t1632, _t37, _t986, _t559, _t558, _t557, _t556, _t1503, _t549, _t548, _t978, _t545, _t544, _t542, _t541, _t538, _t823, _t1095, _t536, _t1577, _t535, _t534, _t532, _t530, _t529, _t50, _t347, _t1226, _t38, _t1318, _t1384, _t515, _t514, _t512, _t511, _t781, _t510, _t1233, _t509, _t166, _t1190, _t507, _t1188, _t1235, _t504, _t782, _t737, _t500, _t60, _t498, _t738, _t1452, _t1431, _t736, _t490, _t489, _t721, _t476, _t475, _t472, _t1344, _t590, _t589, _t466, _t16, _t513, _t14, _t1222, _t279, _t10, _t171, _t468, _t965, _t9, _t526, _t6, _t1343, _t464, _t623, _t460, _t452, _t451, _t84, _t448, _t246, _t1014, _t245, _t446, _t676, _t444, _t675, _t443, _t428, _t748, _t427, _t385, _t747, _t426, _t746, _t1519, _t425, _t744, _t1516, _t423, _t1346, _t1609, _t1091, _t502, _t205, _t439, _t501, _t437, _t435, _t636, _t731, _t1312, _t433, _t741, _t104, _t431, _t739, _t103, _t1455, _t1432, _t430, _t463, _t419, _t414, _t1337, _t528, _t1229, _t914, _t520, _t270, _t725, _t222, _t314, _t453, _t349, _t497, _t1482, _t454, _t350, _t1601, _t417, _t1409, _t202, _t1064, _t206, _t547, _t977, _t277, _t210, _t1525, _t801, _t808, _t1278, _t380, _t1154, _t1401, _t645, _t1094, _t126, _t216, _t7, _t1564, _t178, _t1600, _t25, _t777, _t1342, _t678, _t280, _t214, _t400, _t546, _t276, _t449, _t59, _t743, _t724, _t424, _t1382, _t495, _t1302, _t693, _t327, _t221, _t686, _t1107, _t165, _t1081, _t687, _t239, _t220, _t643, _t375, _t899, _t63, _t163, _t162, _t968, _t519, _t269, _t1109, _t200, _t1279, _t161, _t393, _t233, _t1196, _t668, _t158, _t820, _t806, _t655, _t1052, _t467, _t151, _t813, _t1283, _t599, _t657, _t153, _t677, _t1421, _t669, _t159, _t821, _t582, _t132, _t708, _t130, _t809, _t199, _t1281, _t156, _t786, _t579, _t127, _t330, _t193, _t1105, _t824, _t1083, _t496, _t172, _t578, _t211, _t114, _t144, _t142, _t1193, _t493, _t97, _t494, _t95, _t82, _t76, _t1481, _t34, _t278, _t726, _t223, _t1389, _t592, _t143, _t1194, _t70, _t125, _t406, _t445, _t401, _t11, _t340, _t167, _t944, _t192, _t1415, _t329, _t351, _t35, _t122, _t71, _t807, _t1277, _t656, _t1588, _t1285, _t164, _t941, _t461, _t47, _t1104, _t52, _t1331, _t102, _t109, _t1026, _t312, _t129, _t1536, _t27, _t56, _t105, _t644, _t51, _t1195, _t694, _t596, _t1469, _t640, _t508, _t1189, _t1381, _t175, _t24, _t274, _t695, _t1541, _t1507, _t354, _t491, _t94, _t242, _t685, _t237, _t647, _t1005, _t386, _t28, _t328, _t391, _t611, _t816, _t598, _t1217, _t418, _t253, _t863, _t525, _t66, _t1011, _t459, _t101, _t1508, _t355, _t209, _t341, _t44, _t634, _t1429, _t80, _t389, _t434, _t22, _t1197, _t62, _t1417, _t666, _t1592, _t871, _t155, _t818, _t1162, _t331, _t194, _t709, _t1332, _t26, _t470, _t962, _t441, _t727, _t224, _t1254, _t1396, _t712, _t377, _t901, _t614, _t810, _t1078, _t1157, _t74, _t358, _t852, _t691, _t1040, _t1012, _t260, _t670, _t160, _t822, _t465, _t42, _t123, _t1411, _t54, _t1298, _t1022, _t1540, _t294, _t533, _t244, _t1174, _t157, _t819, _t1164, _t23, _t1056, _t1563, _t173, _t625, _t1446, _t728, _t225, _t616, _t642, _t374, _t591, _t124, _t658, _t740, _t1504, _t332, _t284, _t195, _t333, _t191, _t120, _t805, _t667, _t49, _t215, _t281, _t1599, _t539, _t1006, _t79, _t868, _t1465, _t234, _t371, _t36, _t1461, _t382, _t583, _t121, _t57, _t87, _t39, _t243, _t1287, _t802, _t662, _t527, _t64, _t348, _t1231, _t81, _t58, _t900, _t174, _t1000, _t61, _t982, _t88, _t1457, _t89, _t654, _t48, _t729, _t226, _t67, _t12, _t133, _t659, _t817, _t1161, _t282, _t601, _t1182, _t106, _t723, _t690, _t1239, _t1294, _t72, _t521, _t271, _t55, _t383, _t1612, _t730, _t227, _t228, _t889, _t13, _t339, _t1349, _t265, _t1472, _t1500, _t1618, _t230, _t1325, _t1400, _t268, _t326, _t1118, _t1473, _t368, _t896, _t1501, _t641, _t1234, _t231, _t369, _t232, _t682, _t235, _t168, _t372, _t318, _t91, _t310, _t373, _t689, _t241, _t436, _t45, _t680, _t612, _t313, _t407, _t1199, _t408, _t1200, _t201, _t814, _t597, _t1566, _t251, _t815, _t600, _t252, _t503, _t1050, _t402, _t305, _t936, _t77, _t256, _t1586, _t78, _t939, _t257, _t1466, _t258, _t866, _t259, _t867, _t779, _t420, _t403, _t649, _t778, _t1330, _t93, _t1407, _t447, _t308, _t516, _t266, _t518, _t267, _t118, _t1310, _t119, _t275, _t1155, _t229, _t1338, _t646, _t1324, _t1399, _t378, _t1072, _t1153, _t1442, _t679, _t286, _t450, _t537, _t204, _t283, _t315, _t1444, _t960, _t289, _t180, _t772, _t196, _t285, _t240, _t688, _t152, _t291, _t469, _t963, _t292, _t287, _t298, _t134, _t1434, _t135, _t1435, _t136, _t938, _t139, _t140, _t40, _t442, _t1568, _t773, _t295, _t288, _t1559, _t296, _t297, _t1387, _t302, _t1232, _t681, _t613, _t696, _t1547, _t255, _t304, _t697, _t1244, _t138, _t218, _t1549, _t307, _t299, _t1319, _t170, _t107, _t112, _t1391, _t440, _t1528, _t1591, _t1240, _t1341, _t317, _t506, _t1187, _t320, _t321, _t405, _t273, _t1087, _t322, _t323, _t942, _t1558, _t197, _t334, _t531, _t337, _t8, _t338, _t352, _t345, _t353, _t847, _t356, _t505, _t1490, _t713, _t902, _t615, _t1306, _t1223, _t1218, _t359, _t714, _t617, _t360, _t715, _t361, _t716, _t619, _t911, _t1354, _t1428, _t362, _t620, _t912, _t363, _t718, _t364, _t719, _t365, _t720, _t499, _t1296, _t379, _t650, _t75, _t492, _t96, _t483, _t387, _t415, _t392, _t247, _t1459, _t248, _t1460, _t394, _t775, _t416, _t1265, _t249, _t395, _t396, _t397, _t398, _t1299, _t15, _t1016, _t43, _t949, _t1079, _t811, _t1280, _t1080, _t812, _t1282, _t674, _t1419, _t826, _t1301, _t1002, _t1375, _t827, _t370, _t1360, _t828, _t346, _t1032, _t1594, _t522, _t272, _t1086, _t523, _t1106, _t864, _t1108, _t975, _t1028, _t85, _t752, _t753, _t754, _t846, _t848, _t1487, _t891, _t1489, _t117, _t851, _t890, _t1063, _t1488, _t825, _t1041, _t1492, _t780, _t1066, _t1493, _t855, _t577, _t857, _t1044, _t1496, _t859, _t1051, _t1498, _t1499, _t860, _t1497, _t865, _t1021, _t69, _t1585, _t869, _t1587, _t870, _t1236, _t872, _t858, _t1119, _t1237, _t873, _t1238, _t874, _t876, _t877, _t878, _t1061, _t1065, _t894, _t895, _t1620, _t898, _t1505, _t904, _t905, _t906, _t907, _t1305, _t908, _t909, _t543, _t920, _t550, _t921, _t551, _t922, _t553, _t46, _t53, _t923, _t554, _t924, _t552, _t925, _t555, _t926, _t1160, _t609, _t1420, _t17, _t927, _t1163, _t915, _t916, _t917, _t918, _t934, _t791, _t1068, _t1147, _t935, _t937, _t928, _t929, _t943, _t176, _t946, _t947, _t948, _t1192, _t207, _t208, _t950, _t1537, _t177, _t1561, _t952, _t1443, _t290, _t961, _t154, _t964, _t966, _t967, _t311, _t969, _t970, _t971, _t1578, _t972, _t973, _t974, _t976, _t956, _t1441, _t957, _t958, _t1224, _t984, _t980, _t1615, _t981, _t987, _t325, _t856, _t996, _t997, _t998, _t624, _t1448, _t1001, _t1003, _t1230, _t1004, _t1575, _t1007, _t1008, _t989, _t990, _t484, _t390, _t1474, _t991, _t485, _t388, _t1475, _t1009, _t1010, _t1015, _t1017, _t1227, _t1018, _t1019, _t1020, _t1049, _t1023, _t1025, _t111, _t169, _t854, _t994, _t1116, _t1323, _t1031, _t1033, _t131, _t1034, _t880, _t881, _t1408, _t653, _t1039, _t652, _t1037, _t660, _t1042, _t1043, _t1495, _t1045, _t664, _t1047, _t665, _t1048, _t1035, _t1595, _t1113, _t1589, _t992, _t1114, _t1468, _t1055, _t1053, _t1058, _t336, _t1121, _t1060, _t1598, _t783, _t1514, _t1494, _t792, _t1069, _t404, _t1148, _t1073, _t1509, _t1074, _t1075, _t1076, _t1077, _t790, _t1070, _t1146, _t1085, _t1090, _t306, _t457, _t1572, _t1096, _t1097, _t1098, _t1099, _t1102, _t1092, _t1088, _t1103, _t1110, _t1111, _t853, _t993, _t1115, _t324, _t1117, _t862, _t335, _t1120, _t1122, _t1123, _t1477, _t1124, _t343, _t344, _t1485, _t1486, _t1186, _t1608, _t250, _t212, _t399, _t1151, _t1152, _t1100, _t1158, _t1101, _t1159, _t630, _t1352, _t988, _t1166, _t1424, _t116, _t850, _t1112, _t115, _t849, _t1173, _t1638, _t1177, _t342, _t1178, _t1179, _t1180, _t100, _t1181, _t1183, _t1184, _t1185, _t1297, _t1198, _t1201, _t1202, _t1203, _t999, _t1149, _t1623, _t1624, _t1219, _t879, _t882, _t1478, _t1593, _t1386, _t1250, _t1251, _t1252, _t1253, _t883, _t1245, _t1246, _t1247, _t1248, _t1260, _t1261, _t1262, _t1263, _t1264, _t1266, _t1267, _t1268, _t1270, _t1276, _t1271, _t1272, _t1255, _t1256, _t1257, _t1258, _t1290, _t717, _t1291, _t21, _t1369, _t367, _t1433, _t683, _t238, _t1292, _t1293, _t236, _t684, _t1295, _t1284, _t1286, _t1288, _t1013, _t1316, _t110, _t1027, _t1317, _t1322, _t1326, _t1327, _t92, _t1328, _t648, _t1329, _t1333, _t1334, _t90, _t663, _t1046, _t1340, _t1336, _t1398, _t631, _t1353, _t1355, _t1450, _t1356, _t638, _t1357, _t1358, _t1359, _t1436, _t1361, _t1425, _t1456, _t1362, _t376, _t1363, _t1364, _t1345, _t1347, _t1348, _t1365, _t1367, _t1368, _t1371, _t1372, _t1373, _t1300, _t1374, _t1376, _t1377, _t1378, _t1379, _t1380, _t797, _t1522, _t1308, _t1383, _t1388, _t1390, _t113, _t108, _t1395, _t1024, _t1393, _t1030, _t1397, _t1402, _t1403, _t1404, _t1405, _t1406, _t1414, _t1412, _t1416, _t366, _t1430, _t1426, _t1422, _t1437, _t1366, _t1438, _t1439, _t626, _t1447, _t73, _t357, _t458, _t1573, _t1451, _t1453, _t1454, _t1458, _t1462, _t1463, _t1470, _t1471, _t1476, _t1479, _t1480, _t1483, _t1484, _t1491, _t1513, _t784, _t1515, _t1523, _t1524, _t804, _t803, _t1526, _t1529, _t1530, _t1531, _t1532, _t1533, _t1534, _t1535, _t1538, _t293, _t1539, _t1542, _t931, _t263, _t1545, _t930, _t1543, _t254, _t1546, _t219, _t1548, _t1550, _t217, _t1551, _t261, _t1552, _t262, _t1553, _t264, _t1554, _t1555, _t1556, _t1560, _t179, _t1562, _t1565, _t1502, _t1506, _t128, _t1569, _t605, _t316, _t1576, _t455, _t1570, _t456, _t1571, _t462, _t1579, _t1580, _t1581, _t1582, _t1583, _t1584, _t1590, _t1610, _t1611, _t1613, _t1614, _t1616, _t1619, _t1621, _t1622, _t1625, _t1626, _t1627, _t1628, _t1629, _t1634, _t1464, _t1635, _t1636, _t1637, _t198, _t65, _t524;
	float _t2112, _t2109, _t2108, _t2104, _t2103, _t2102, _t2101, _t2098, _t2097, _t2096, _t2095, _t2093, _t2090, _t2087, _t2085, _t2083, _t2081, _t2080, _t2076, _t2075, _t2074, _t2072, _t2069, _t2068, _t2065, _t2062, _t2061, _t2060, _t2057, _t2056, _t2055, _t2052, _t2049, _t2047, _t2046, _t2044, _t2043, _t2042, _t2041, _t2037, _t2035, _t2034, _t2032, _t2031, _t2029, _t2028, _t2026, _t2025, _t2024, _t2023, _t2022, _t2021, _t2020, _t2019, _t2018, _t2017, _t2016, _t2011, _t2005, _t2004, _t2002, _t2001, _t2000, _t1999, _t1998, _t1997, _t1996, _t2036, _t1995, _t1991, _t1990, _t1989, _t1988, _t1986, _t1985, _t1981, _t1980, _t1978, _t1982, _t1977, _t1971, _t1966, _t1964, _t1962, _t1961, _t1959, _t1958, _t1957, _t1956, _t1954, _t1951, _t1949, _t1948, _t1944, _t2084, _t1943, _t1942, _t1941, _t1940, _t1939, _t1938, _t1937, _t1935, _t1934, _t1931, _t1930, _t1929, _t1928, _t1925, _t1923, _t1915, _t1911, _t1910, _t1909, _t1907, _t1906, _t1905, _t1904, _t1900, _t1899, _t1896, _t1895, _t1893, _t1892, _t1886, _t1884, _t1883, _t1882, _t1880, _t1879, _t1878, _t1877, _t1874, _t1869, _t1866, _t1865, _t2050, _t1864, _t1863, _t1861, _t1859, _t1858, _t1857, _t1856, _t1855, _t1854, _t1852, _t1851, _t1850, _t1848, _t1846, _t1845, _t1844, _t1843, _t1842, _t1840, _t1868, _t1838, _t1833, _t1832, _t1830, _t1829, _t1828, _t1827, _t1826, _t1824, _t1823, _t1822, _t1821, _t1932, _t1820, _t1818, _t1816, _t1814, _t1901, _t1813, _t1812, _t1811, _t1806, _t1817, _t1805, _t1804, _t1803, _t1802, _t1801, _t1800, _t1799, _t1792, _t1791, _t1790, _t1787, _t1786, _t1785, _t1783, _t1781, _t1780, _t1776, _t1775, _t1774, _t1773, _t1772, _t1771, _t1770, _t1769, _t1767, _t2007, _t1763, _t1762, _t1761, _t1760, _t1759, _t1756, _t1755, _t1754, _t1746, _t1745, _t1740, _t1738, _t1737, _t1731, _t1730, _t1766, _t1729, _t1727, _t1725, _t1724, _t1720, _t1719, _t1718, _t1717, _t1716, _t1715, _t1714, _t1712, _t1709, _t1708, _t1706, _t1705, _t1703, _t1700, _t1699, _t1698, _t1695, _t1693, _t1692, _t1689, _t1688, _t1687, _t1686, _t1684, _t1912, _t1683, _t1681, _t1679, _t1677, _t1676, _t1675, _t1674, _t1673, _t1885, _t1672, _t1671, _t1670, _t1669, _t1668, _t1664, _t1979, _t1659, _t1657, _t1656, _t1655, _t1653, _t1652, _t1651, _t2054, _t1903, _t1835, _t1649, _t1648, _t1987, _t1647, _t1645, _t1644, _t1661, _t770, _t769, _t767, _t1742, _t764, _t2111, _t2091, _t2082, _t1872, _t1871, _t1788, _t1646, _t2058, _t1643, _t1735, _t2003, _t1713, _t31, _t1665, _t1658, _t560, _t574, _t1983, _t573, _t568, _t566, _t2039, _t564, _t2038, _t563, _t2014, _t766, _t565, _t765, _t762, _t1847, _t763, _t1825, _t1172, _t1810, _t576, _t1208, _t2053, _t575, _t1967, _t2010, _t1815, _t2009, _t1809, _t1744, _t1743, _t1728, _t1927, _t1142, _t1690, _t1739, _t1973, _t1839, _t1307, _t1953, _t1733, _t749, _t1210, _t1603, _t2051, _t189, _t1209, _t1711, _t771, _t1807, _t837, _t1834, _t1726, _t838, _t2099, _t1902, _t840, _t1876, _t1662, _t1206, _t187, _t954, _t33, _t1862, _t1936, _t1207, _t561, _t1126, _t1947, _t572, _t1145, _t839, _t1753, _t1955, _t188, _t1704, _t1642, _t190, _t1837, _t761, _t2107, _t1887, _t1875, _t756, _t1945, _t567, _t570, _t487, _t932, _t1211, _t486, _t1777, _t1752, _t1779, _t1894, _t1793, _t1950, _t1747, _t1778, _t888, _t1666, _t1702, _t1691, _t1757, _t1721, _t1853, _t2086, _t1216, _t2012, _t1764, _t2070, _t1888, _t1789, _t1736, _t768, _t411, _t2048, _t1734, _t1795, _t148, _t185, _t1794, _t1831, _t2094, _t1867, _t1741, _t1782, _t2100, _t1963, _t149, _t1722, _t1710, _t1749, _t945, _t29, _t2008, _t1808, _t1765, _t1975, _t181, _t137, _t183, _t186, _t184, _t141, _t145, _t147, _t1881, _t1707, _t2088, _t758, _t182, _t760, _t1933, _t759, _t1678, _t1920, _t1891, _t1921, _t2006, _t2105, _t1130, _t2106, _t571, _t1972, _t1870, _t1836, _t1994, _t569, _t1212, _t1723, _t1663, _t1667, _t832, _t833, _t1913, _t835, _t2064, _t836, _t841, _t842, _t845, _t829, _t830, _t750, _t751, _t1873, _t1841, _t755, _t1135, _t892, _t1136, _t2066, _t1918, _t1144, _t1917, _t1984, _t1137, _t1607, _t897, _t2033, _t1694, _t1696, _t1697, _t1701, _t1993, _t1748, _t940, _t951, _t1680, _t1897, _t1898, _t2013, _t1890, _t834, _t979, _t1889, _t2059, _t2063, _t1919, _t2078, _t1213, _t2079, _t2092, _t1228, _t1952, _t1650, _t1139, _t1685, _t1768, _t843, _t844, _t1908, _t1916, _t1125, _t1127, _t1128, _t1129, _t1131, _t1605, _t1922, _t1132, _t1133, _t1134, _t1138, _t1140, _t1641, _t1141, _t1926, _t1143, _t1682, _t1965, _t1914, _t1167, _t1168, _t1169, _t2067, _t1170, _t1175, _t1176, _t1924, _t2071, _t2073, _t2077, _t1150, _t1225, _t1946, _t1220, _t2027, _t1784, _t2089, _t884, _t1798, _t2045, _t1819, _t1992, _t2040, _t1335, _t1969, _t1970, _t1849, _t1960, _t2110, _t1215, _t1968, _t1974, _t1976, _t1602, _t1604, _t1654, _t1660, _t32, _t146, _t412, _t1640, _t1751, _t1750, _t1758, _t1732, _t2015, _t1606, _t2030, _t1796, _t1860, _t1617, _t1797, _t1639;
	/* Forward */
	cif (vertParams[4] == 0.000000) {
		_t21 = 6.283185 * primary[3];
		_t22 = 3.141593 * primary[4];
		_t23 = sin(_t22);
		_t24 = cos(_t22);
		_t25 = sin(_t21);
		_t26 = _t23 * _t25;
		_t27 = cos(_t21);
		_t28 = _t23 * _t27;
		cif (_t23 >= 0.000000) {
			_t29 = _t23;
		}
		else {
			_t31 = -_t23;
			_t29 = _t31;
		}
		_t32 = _t29 * 6.283185;
		_t33 = _t32 * 3.141593;
		_t6 = vertParams[5];
		_t7 = vertParams[6];
		_t8 = vertParams[7];
		_t9 = _t28;
		_t10 = _t26;
		_t11 = _t24;
		_t12 = vertParams[8];
		_t13 = vertParams[9];
		_t14 = vertParams[10];
		_t15 = 1.000000;
		_t16 = 0.079577;
		_t17 = 1.000000;
	}
	else cif (vertParams[4] == 1.000000) {
		cif (vertParams[5] == 0.000000) {
			_t42 = 1.000001-primary[1];
			_t43 = sqrt(_t42);
			_t44 = 1.000000-_t43;
			_t45 = _t43 * primary[2];
			_t46 = vertParams[13] * _t45;
			_t47 = vertParams[10] * _t44;
			_t48 = vertParams[7]+_t47;
			_t49 = _t48+_t46;
			_t50 = vertParams[14] * _t45;
			_t51 = vertParams[11] * _t44;
			_t52 = vertParams[8]+_t51;
			_t53 = _t52+_t50;
			_t54 = vertParams[15] * _t45;
			_t55 = vertParams[12] * _t44;
			_t56 = vertParams[9]+_t55;
			_t57 = _t56+_t54;
			_t58 = 1.000000-_t44;
			_t59 = _t58-_t45;
			_t60 = vertParams[22] * _t45;
			_t61 = vertParams[19] * _t44;
			_t62 = vertParams[16] * _t59;
			_t63 = _t62+_t61;
			_t64 = _t63+_t60;
			_t65 = vertParams[23] * _t45;
			_t66 = vertParams[20] * _t44;
			_t67 = vertParams[17] * _t59;
			_t68 = _t67+_t66;
			_t69 = _t68+_t65;
			_t70 = vertParams[24] * _t45;
			_t71 = vertParams[21] * _t44;
			_t72 = vertParams[18] * _t59;
			_t73 = _t72+_t71;
			_t74 = _t73+_t70;
			_t75 = sqrt(_t64*_t64+_t69*_t69+_t74*_t74);
			_t76 = (float)1.0 / (_t75);
			_t77 = _t64 * _t76;
			_t78 = _t69 * _t76;
			_t79 = _t74 * _t76;
			_t34 = _t49;
			_t35 = _t53;
			_t36 = _t57;
			_t37 = _t77;
			_t38 = _t78;
			_t39 = _t79;
			_t40 = vertParams[50];
		}
		else {
			_t34 = 0.000000;
			_t35 = 0.000000;
			_t36 = 0.000000;
			_t37 = 0.000000;
			_t38 = 0.000000;
			_t39 = 0.000000;
			_t40 = 0.000000;
		}
		_t80 = 6.283185 * primary[3];
		_t81 = 1.000000-primary[4];
		cif (_t81 >= 0.000001) {
			_t82 = _t81;
		}
		else {
			_t82 = 0.000001;
		}
		_t84 = sqrt(_t82);
		cif (primary[4] >= 0.000001) {
			_t85 = primary[4];
		}
		else {
			_t85 = 0.000001;
		}
		_t87 = sqrt(_t85);
		_t88 = sin(_t80);
		_t89 = _t88 * _t84;
		_t90 = cos(_t80);
		_t91 = _t90 * _t84;
		cif (_t39 < -0.999999) {
			_t92 = 0.000000;
			_t93 = -1.000000;
			_t94 = 0.000000;
			_t95 = -1.000000;
			_t96 = 0.000000;
			_t97 = 0.000000;
		}
		else {
			_t99 = 1.000000+_t39;
			_t100 = (float)1.0 / (_t99);
			_t101 = -_t37;
			_t102 = _t101 * _t38;
			_t103 = _t102 * _t100;
			_t104 = -_t37;
			_t105 = _t37 * _t37;
			_t106 = _t105 * _t100;
			_t107 = 1.000000-_t106;
			_t108 = -_t38;
			_t109 = _t38 * _t38;
			_t110 = _t109 * _t100;
			_t111 = 1.000000-_t110;
			_t92 = _t107;
			_t93 = _t103;
			_t94 = _t104;
			_t95 = _t103;
			_t96 = _t111;
			_t97 = _t108;
		}
		_t112 = _t87 * _t37;
		_t113 = _t89 * _t95;
		_t114 = _t91 * _t92;
		_t115 = _t114+_t113;
		_t116 = _t115+_t112;
		_t117 = _t87 * _t38;
		_t118 = _t89 * _t96;
		_t119 = _t91 * _t93;
		_t120 = _t119+_t118;
		_t121 = _t120+_t117;
		_t122 = _t87 * _t39;
		_t123 = _t89 * _t97;
		_t124 = _t91 * _t94;
		_t125 = _t124+_t123;
		_t126 = _t125+_t122;
		_t127 = (float)1.0 / (_t40);
		_t128 = 3.141593 * _t127;
		_t129 = vertParams[51] * _t128;
		_t130 = vertParams[52] * _t128;
		_t131 = vertParams[53] * _t128;
		_t132 = _t87 * 0.318310;
		_t133 = _t132 * _t40;
		_t6 = _t34;
		_t7 = _t35;
		_t8 = _t36;
		_t9 = _t116;
		_t10 = _t121;
		_t11 = _t126;
		_t12 = _t129;
		_t13 = _t130;
		_t14 = _t131;
		_t15 = _t87;
		_t16 = _t133;
		_t17 = _t40;
	}
	else cif (vertParams[4] == 2.000000) {
		cif (vertParams[5] == 0.000000) {
			_t151 = vertParams[12] * vertParams[12];
			_t152 = vertParams[13] * vertParams[13];
			_t153 = vertParams[14] * vertParams[14];
			_t154 = vertParams[12] * vertParams[13];
			_t155 = vertParams[12] * vertParams[14];
			_t156 = vertParams[13] * vertParams[14];
			_t157 = vertParams[12] * vertParams[15];
			_t158 = vertParams[13] * vertParams[15];
			_t159 = vertParams[14] * vertParams[15];
			_t160 = _t152+_t153;
			_t161 = 2.000000 * _t160;
			_t162 = 1.000000-_t161;
			_t163 = _t154+_t159;
			_t164 = 2.000000 * _t163;
			_t165 = _t155-_t158;
			_t166 = 2.000000 * _t165;
			_t167 = _t154-_t159;
			_t168 = 2.000000 * _t167;
			_t169 = _t151+_t153;
			_t170 = 2.000000 * _t169;
			_t171 = 1.000000-_t170;
			_t172 = _t156+_t157;
			_t173 = 2.000000 * _t172;
			_t174 = _t155+_t158;
			_t175 = 2.000000 * _t174;
			_t176 = _t156-_t157;
			_t177 = 2.000000 * _t176;
			_t178 = _t151+_t152;
			_t179 = 2.000000 * _t178;
			_t180 = 1.000000-_t179;
			_t134 = _t162;
			_t135 = _t164;
			_t136 = _t166;
			_t137 = 0.000000;
			_t138 = _t168;
			_t139 = _t171;
			_t140 = _t173;
			_t141 = 0.000000;
			_t142 = _t175;
			_t143 = _t177;
			_t144 = _t180;
			_t145 = 0.000000;
			_t146 = vertParams[6];
			_t147 = vertParams[7];
			_t148 = vertParams[8];
			_t149 = 1.000000;
		}
		else {
			_t181 = 1.000000-primary[0];
			_t182 = primary[0] * vertParams[9];
			_t183 = _t181 * vertParams[6];
			_t184 = _t183+_t182;
			_t185 = primary[0] * vertParams[10];
			_t186 = _t181 * vertParams[7];
			_t187 = _t186+_t185;
			_t188 = primary[0] * vertParams[11];
			_t189 = _t181 * vertParams[8];
			_t190 = _t189+_t188;
			_t191 = vertParams[15] * vertParams[19];
			_t192 = vertParams[14] * vertParams[18];
			_t193 = vertParams[13] * vertParams[17];
			_t194 = vertParams[12] * vertParams[16];
			_t195 = _t194+_t193;
			_t196 = _t195+_t192;
			_t197 = _t196+_t191;
			cif (_t197 < 0.000000) {
				_t204 = -vertParams[16];
				_t205 = -vertParams[17];
				_t206 = -vertParams[18];
				_t207 = -vertParams[19];
				_t208 = -_t197;
				_t198 = _t204;
				_t199 = _t205;
				_t200 = _t206;
				_t201 = _t207;
				_t202 = _t208;
			}
			else {
				_t198 = vertParams[16];
				_t199 = vertParams[17];
				_t200 = vertParams[18];
				_t201 = vertParams[19];
				_t202 = _t197;
			}
			cif (_t202 > 0.999500) {
				_t214 = 1.000000-primary[0];
				_t215 = primary[0] * _t198;
				_t216 = _t214 * vertParams[12];
				_t217 = _t216+_t215;
				_t218 = primary[0] * _t199;
				_t219 = _t214 * vertParams[13];
				_t220 = _t219+_t218;
				_t221 = primary[0] * _t200;
				_t222 = _t214 * vertParams[14];
				_t223 = _t222+_t221;
				_t224 = primary[0] * _t201;
				_t225 = _t214 * vertParams[15];
				_t226 = _t225+_t224;
				_t227 = sqrt(_t217*_t217+_t220*_t220+_t223*_t223+_t226*_t226);
				_t228 = (float)1.0 / (_t227);
				_t229 = _t217 * _t228;
				_t230 = _t220 * _t228;
				_t231 = _t223 * _t228;
				_t232 = _t226 * _t228;
				_t209 = _t229;
				_t210 = _t230;
				_t211 = _t231;
				_t212 = _t232;
			}
			else {
				_t233 = acos(_t202);
				_t234 = _t233 * primary[0];
				_t235 = vertParams[12] * _t202;
				_t236 = _t198-_t235;
				_t237 = vertParams[13] * _t202;
				_t238 = _t199-_t237;
				_t239 = vertParams[14] * _t202;
				_t240 = _t200-_t239;
				_t241 = vertParams[15] * _t202;
				_t242 = _t201-_t241;
				_t243 = sqrt(_t236*_t236+_t238*_t238+_t240*_t240+_t242*_t242);
				_t244 = (float)1.0 / (_t243);
				_t245 = _t236 * _t244;
				_t246 = _t238 * _t244;
				_t247 = _t240 * _t244;
				_t248 = _t242 * _t244;
				_t249 = sin(_t234);
				_t250 = cos(_t234);
				_t251 = _t245 * _t249;
				_t252 = vertParams[12] * _t250;
				_t253 = _t252+_t251;
				_t254 = _t246 * _t249;
				_t255 = vertParams[13] * _t250;
				_t256 = _t255+_t254;
				_t257 = _t247 * _t249;
				_t258 = vertParams[14] * _t250;
				_t259 = _t258+_t257;
				_t260 = _t248 * _t249;
				_t261 = vertParams[15] * _t250;
				_t262 = _t261+_t260;
				_t209 = _t253;
				_t210 = _t256;
				_t211 = _t259;
				_t212 = _t262;
			}
			_t263 = _t209 * _t209;
			_t264 = _t210 * _t210;
			_t265 = _t211 * _t211;
			_t266 = _t209 * _t210;
			_t267 = _t209 * _t211;
			_t268 = _t210 * _t211;
			_t269 = _t209 * _t212;
			_t270 = _t210 * _t212;
			_t271 = _t211 * _t212;
			_t272 = _t264+_t265;
			_t273 = 2.000000 * _t272;
			_t274 = 1.000000-_t273;
			_t275 = _t266+_t271;
			_t276 = 2.000000 * _t275;
			_t277 = _t267-_t270;
			_t278 = 2.000000 * _t277;
			_t279 = _t266-_t271;
			_t280 = 2.000000 * _t279;
			_t281 = _t263+_t265;
			_t282 = 2.000000 * _t281;
			_t283 = 1.000000-_t282;
			_t284 = _t268+_t269;
			_t285 = 2.000000 * _t284;
			_t286 = _t267+_t270;
			_t287 = 2.000000 * _t286;
			_t288 = _t268-_t269;
			_t289 = 2.000000 * _t288;
			_t290 = _t263+_t264;
			_t291 = 2.000000 * _t290;
			_t292 = 1.000000-_t291;
			_t134 = _t274;
			_t135 = _t276;
			_t136 = _t278;
			_t137 = 0.000000;
			_t138 = _t280;
			_t139 = _t283;
			_t140 = _t285;
			_t141 = 0.000000;
			_t142 = _t287;
			_t143 = _t289;
			_t144 = _t292;
			_t145 = 0.000000;
			_t146 = _t184;
			_t147 = _t187;
			_t148 = _t190;
			_t149 = 1.000000;
		}
		_t293 = vertParams[36]-vertParams[35];
		_t294 = primary[3]-vertParams[35];
		_t295 = _t294 / _t293;
		_t296 = vertParams[38]-vertParams[37];
		_t297 = primary[4]-vertParams[37];
		_t298 = _t297 / _t296;
		cif (_t298 < 0.500000) {
			_t301 = 2.000000 * _t298;
			_t302 = sqrt(_t301);
			_t303 = 1.000000-_t302;
			_t299 = _t303;
		}
		else {
			_t304 = _t298-0.500000;
			_t305 = 2.000000 * _t304;
			_t306 = sqrt(_t305);
			_t307 = _t306-1.000000;
			_t299 = _t307;
		}
		cif (_t295 < 0.500000) {
			_t310 = 2.000000 * _t295;
			_t311 = sqrt(_t310);
			_t312 = 1.000000-_t311;
			_t308 = _t312;
		}
		else {
			_t313 = _t295-0.500000;
			_t314 = 2.000000 * _t313;
			_t315 = sqrt(_t314);
			_t316 = _t315-1.000000;
			_t308 = _t316;
		}
		_t317 = vertParams[39]+_t308;
		_t318 = vertParams[40]+_t299;
		_t319 = _t317+0.500000;
		_t320 = _t319 * vertParams[41];
		_t321 = _t318+0.500000;
		_t322 = _t321 * vertParams[42];
		_t323 = sin(_t320);
		_t324 = cos(_t320);
		_t325 = sin(_t322);
		_t326 = cos(_t322);
		_t327 = -_t324;
		_t328 = _t327 * _t325;
		_t329 = _t323 * _t325;
		_t330 = _t144 * _t328;
		_t331 = _t140 * _t326;
		_t332 = _t136 * _t329;
		_t333 = _t332+_t331;
		_t334 = _t333+_t330;
		_t335 = _t143 * _t328;
		_t336 = _t139 * _t326;
		_t337 = _t135 * _t329;
		_t338 = _t337+_t336;
		_t339 = _t338+_t335;
		_t340 = _t142 * _t328;
		_t341 = _t138 * _t326;
		_t342 = _t134 * _t329;
		_t343 = _t342+_t341;
		_t344 = _t343+_t340;
		_t345 = 1.000000-_t308;
		_t346 = 1.000000-_t299;
		_t347 = vertParams[46] * _t308;
		_t348 = _t347 * _t346;
		_t349 = vertParams[43] * _t345;
		_t350 = _t349 * _t346;
		_t351 = _t350+_t348;
		_t352 = vertParams[47] * _t308;
		_t353 = _t352 * _t346;
		_t354 = vertParams[44] * _t345;
		_t355 = _t354 * _t346;
		_t356 = _t355+_t353;
		_t357 = vertParams[48] * _t308;
		_t358 = _t357 * _t346;
		_t359 = vertParams[45] * _t345;
		_t360 = _t359 * _t346;
		_t361 = _t360+_t358;
		_t362 = vertParams[52] * _t308;
		_t363 = _t362 * _t299;
		_t364 = vertParams[49] * _t345;
		_t365 = _t364 * _t299;
		_t366 = _t365+_t363;
		_t367 = vertParams[53] * _t308;
		_t368 = _t367 * _t299;
		_t369 = vertParams[50] * _t345;
		_t370 = _t369 * _t299;
		_t371 = _t370+_t368;
		_t372 = vertParams[54] * _t308;
		_t373 = _t372 * _t299;
		_t374 = vertParams[51] * _t345;
		_t375 = _t374 * _t299;
		_t376 = _t375+_t373;
		_t377 = _t351+_t366;
		_t378 = _t356+_t371;
		_t379 = _t361+_t376;
		cif (_t325 >= 0.000000) {
			_t380 = _t325;
		}
		else {
			_t382 = -_t325;
			_t380 = _t382;
		}
		cif (_t380 >= 0.000000) {
			_t383 = _t380;
		}
		else {
			_t383 = 0.000000;
		}
		_t385 = _t376 * 0.072169;
		_t386 = _t371 * 0.715160;
		_t387 = _t366 * 0.212671;
		_t388 = _t387+_t386;
		_t389 = _t388+_t385;
		_t390 = _t389 * vertParams[56];
		_t391 = _t361 * 0.072169;
		_t392 = _t356 * 0.715160;
		_t393 = _t351 * 0.212671;
		_t394 = _t393+_t392;
		_t395 = _t394+_t391;
		_t396 = _t395 * vertParams[55];
		_t397 = _t396+_t390;
		_t398 = _t397 * vertParams[57];
		_t399 = _t398 / _t383;
		_t400 = -_t344;
		_t401 = -_t339;
		_t402 = -_t334;
		_t403 = 2.000000 * primary[1];
		_t404 = _t403-1.000000;
		_t405 = 2.000000 * primary[2];
		_t406 = _t405-1.000000;
		cif (_t404 == 0.000000) {
			_t407 = 0.000000;
			_t408 = 0.000000;
		}
		else cif (_t406 == 0.000000) {
			_t412 = _t406 * _t406;
			_t411 = _t404 * _t404;
			_t407 = 0.000000;
			_t408 = 0.000000;
		}
		else cif (_t411 > _t412) {
			_t414 = _t406 / _t404;
			_t415 = 0.785398 * _t414;
			_t407 = _t404;
			_t408 = _t415;
		}
		else {
			_t416 = _t404 / _t406;
			_t417 = _t416 * 0.785398;
			_t418 = 1.570796-_t417;
			_t407 = _t406;
			_t408 = _t418;
		}
		_t419 = sin(_t408);
		_t420 = cos(_t408);
		_t421 = _t407 * _t419;
		_t422 = _t407 * _t420;
		cif (_t402 < -0.999999) {
			_t423 = 0.000000;
			_t424 = -1.000000;
			_t425 = 0.000000;
			_t426 = -1.000000;
			_t427 = 0.000000;
			_t428 = 0.000000;
		}
		else {
			_t430 = 1.000000+_t402;
			_t431 = (float)1.0 / (_t430);
			_t432 = -_t400;
			_t433 = _t432 * _t401;
			_t434 = _t433 * _t431;
			_t435 = -_t400;
			_t436 = _t400 * _t400;
			_t437 = _t436 * _t431;
			_t438 = 1.000000-_t437;
			_t439 = -_t401;
			_t440 = _t401 * _t401;
			_t441 = _t440 * _t431;
			_t442 = 1.000000-_t441;
			_t423 = _t438;
			_t424 = _t434;
			_t425 = _t435;
			_t426 = _t434;
			_t427 = _t442;
			_t428 = _t439;
		}
		_t443 = _t421 * _t426;
		_t444 = _t422 * _t423;
		_t445 = _t444+_t443;
		_t446 = _t421 * _t427;
		_t447 = _t422 * _t424;
		_t448 = _t447+_t446;
		_t449 = _t421 * _t428;
		_t450 = _t422 * _t425;
		_t451 = _t450+_t449;
		_t452 = _t445-_t400;
		_t453 = _t452 * scene[37];
		_t454 = scene[34]+_t453;
		_t455 = _t448-_t401;
		_t456 = _t455 * scene[37];
		_t457 = scene[35]+_t456;
		_t458 = _t451-_t402;
		_t459 = _t458 * scene[37];
		_t460 = scene[36]+_t459;
		_t461 = scene[37] * scene[37];
		_t462 = (float)1.0 / (_t461);
		_t463 = 0.318310 * _t462;
		_t464 = _t399 * _t463;
		_t6 = _t454;
		_t7 = _t457;
		_t8 = _t460;
		_t9 = _t400;
		_t10 = _t401;
		_t11 = _t402;
		_t12 = _t377;
		_t13 = _t378;
		_t14 = _t379;
		_t15 = 1.000000;
		_t16 = _t464;
		_t17 = _t399;
	}
	else {
		_t6 = 0.000000;
		_t7 = 0.000000;
		_t8 = 0.000000;
		_t9 = 0.000000;
		_t10 = 0.000000;
		_t11 = 0.000000;
		_t12 = 0.000000;
		_t13 = 0.000000;
		_t14 = 0.000000;
		_t15 = 0.000000;
		_t16 = 0.000000;
		_t17 = 0.000000;
	}
	_t465 = _t16 * vertParams[3];
	_t466 = _t17 * vertParams[3];
	_t467 = (float)1.0 / (vertParams[3]);
	_t468 = _t12 * _t467;
	_t469 = _t13 * _t467;
	_t470 = _t14 * _t467;
	_t471 = _t466 / _t465;
	_t472 = _t471 * _t471;
	cif (vertParams[4] == 0.000000) {
		_t475 = _t15 / _t465;
		_t476 = _t475 * _t475;
		_t473 = _t476;
	}
	else {
		_t473 = 0.000000;
	}
	cif (vertParams[60] == 0.000000) {
		_t489 = vertParams[66] * vertParams[68];
		_t490 = vertParams[65] * vertParams[69];
		_t491 = _t490-_t489;
		_t492 = vertParams[65] * vertParams[70];
		_t493 = vertParams[67] * vertParams[68];
		_t494 = _t493-_t492;
		_t495 = vertParams[67] * vertParams[69];
		_t496 = vertParams[66] * vertParams[70];
		_t497 = _t496-_t495;
		_t498 = sqrt(_t497*_t497+_t494*_t494+_t491*_t491);
		_t499 = (float)1.0 / (_t498);
		_t500 = _t497 * _t499;
		_t501 = _t494 * _t499;
		_t502 = _t491 * _t499;
		_t503 = _t10 * vertParams[68];
		_t504 = _t9 * vertParams[69];
		_t505 = _t504-_t503;
		_t506 = _t9 * vertParams[70];
		_t507 = _t11 * vertParams[68];
		_t508 = _t507-_t506;
		_t509 = _t11 * vertParams[69];
		_t510 = _t10 * vertParams[70];
		_t511 = _t510-_t509;
		_t512 = _t511 * vertParams[65] + _t508 * vertParams[66] + _t505 * vertParams[67];
		_t513 = (float)1.0 / (_t512);
		_t514 = _t6-vertParams[62];
		_t515 = _t7-vertParams[63];
		_t516 = _t8-vertParams[64];
		_t517 = _t514 * _t511 + _t515 * _t508 + _t516 * _t505;
		_t518 = _t517 * _t513;
		_t519 = _t515 * vertParams[65];
		_t520 = _t514 * vertParams[66];
		_t521 = _t520-_t519;
		_t522 = _t514 * vertParams[67];
		_t523 = _t516 * vertParams[65];
		_t524 = _t523-_t522;
		_t525 = _t516 * vertParams[66];
		_t526 = _t515 * vertParams[67];
		_t527 = _t526-_t525;
		_t528 = _t9 * _t527 + _t10 * _t524 + _t11 * _t521;
		_t529 = _t528 * _t513;
		_t530 = vertParams[68] * _t527 + vertParams[69] * _t524 + vertParams[70] * _t521;
		_t531 = _t530 * _t513;
		_t532 = 1.000000-_t518;
		_t533 = _t532-_t529;
		_t534 = _t531 * _t9;
		_t535 = _t6+_t534;
		_t536 = _t531 * _t10;
		_t537 = _t7+_t536;
		_t538 = _t531 * _t11;
		_t539 = _t8+_t538;
		_t540 = _t529 * vertParams[77];
		_t541 = _t518 * vertParams[74];
		_t542 = _t533 * vertParams[71];
		_t543 = _t542+_t541;
		_t544 = _t543+_t540;
		_t545 = _t529 * vertParams[78];
		_t546 = _t518 * vertParams[75];
		_t547 = _t533 * vertParams[72];
		_t548 = _t547+_t546;
		_t549 = _t548+_t545;
		_t550 = _t529 * vertParams[79];
		_t551 = _t518 * vertParams[76];
		_t552 = _t533 * vertParams[73];
		_t553 = _t552+_t551;
		_t554 = _t553+_t550;
		_t555 = sqrt(_t544*_t544+_t549*_t549+_t554*_t554);
		_t556 = (float)1.0 / (_t555);
		_t557 = _t544 * _t556;
		_t558 = _t549 * _t556;
		_t559 = _t554 * _t556;
		cif (vertParams[98] == 0.000000) {
			_t560 = _t518;
			_t561 = _t529;
		}
		else {
			_t563 = _t529 * vertParams[103];
			_t564 = _t518 * vertParams[101];
			_t565 = 1.000000-_t518;
			_t566 = _t565-_t529;
			_t567 = _t566 * vertParams[99];
			_t568 = _t567+_t564;
			_t569 = _t568+_t563;
			_t570 = _t529 * vertParams[104];
			_t571 = _t518 * vertParams[102];
			_t572 = 1.000000-_t518;
			_t573 = _t572-_t529;
			_t574 = _t573 * vertParams[100];
			_t575 = _t574+_t571;
			_t576 = _t575+_t570;
			_t560 = _t569;
			_t561 = _t576;
		}
		_t477 = _t535;
		_t478 = _t537;
		_t479 = _t539;
		_t480 = _t500;
		_t481 = _t501;
		_t482 = _t502;
		_t483 = _t557;
		_t484 = _t558;
		_t485 = _t559;
		_t486 = _t560;
		_t487 = _t561;
	}
	else {
		_t477 = 0.000000;
		_t478 = 0.000000;
		_t479 = 0.000000;
		_t480 = 0.000000;
		_t481 = 0.000000;
		_t482 = 0.000000;
		_t483 = 0.000000;
		_t484 = 0.000000;
		_t485 = 0.000000;
		_t486 = 0.000000;
		_t487 = 0.000000;
	}
	_t577 = -_t9;
	_t578 = -_t10;
	_t579 = -_t11;
	cif (vertParams[4] == 2.000000) {
		_t580 = 1.000000;
	}
	else {
		_t582 = _t8-_t479;
		_t583 = _t582 * _t582;
		_t584 = _t7-_t478;
		_t585 = _t584 * _t584;
		_t586 = _t6-_t477;
		_t587 = _t586 * _t586;
		_t588 = _t587+_t585;
		_t589 = _t588+_t583;
		_t590 = _t589 * _t589;
		_t580 = _t590;
	}
	_t591 = _t9 * _t483 + _t10 * _t484 + _t11 * _t485;
	cif (_t591 >= 0.000000) {
		_t592 = _t591;
	}
	else {
		_t594 = -_t591;
		_t592 = _t594;
	}
	_t595 = _t592 * _t592;
	_t596 = (float)1.0 / (_t595);
	_t597 = _t596 * _t580;
	_t598 = _t472 * _t597;
	_t599 = _t473 * _t596;
	_t600 = scene[8] * 0.500000;
	_t601 = scene[4] * 0.500000;
	_t602 = _t601+_t600;
	_t603 = _t602+scene[16];
	_t604 = scene[7] * 0.500000;
	_t605 = scene[3] * 0.500000;
	_t606 = _t605+_t604;
	_t607 = _t606+scene[15];
	_t608 = scene[6] * 0.500000;
	_t609 = scene[2] * 0.500000;
	_t610 = _t609+_t608;
	_t611 = _t610+scene[14];
	_t612 = scene[5] * 0.500000;
	_t613 = scene[1] * 0.500000;
	_t614 = _t613+_t612;
	_t615 = _t614+scene[13];
	_t616 = (float)1.0 / (_t603);
	_t617 = _t607 * _t616;
	_t618 = _t611 * _t616;
	_t619 = _t615 * _t616;
	_t620 = sqrt(_t619*_t619+_t618*_t618+_t617*_t617);
	_t621 = (float)1.0 / (_t620);
	_t622 = _t619 * _t621;
	_t623 = _t618 * _t621;
	_t624 = _t617 * _t621;
	_t625 = scene[24] * scene[24];
	_t626 = scene[25] * scene[25];
	_t627 = scene[26] * scene[26];
	_t628 = scene[24] * scene[25];
	_t629 = scene[24] * scene[26];
	_t630 = scene[25] * scene[26];
	_t631 = scene[24] * scene[27];
	_t632 = scene[25] * scene[27];
	_t633 = scene[26] * scene[27];
	_t634 = _t626+_t627;
	_t635 = 2.000000 * _t634;
	_t636 = 1.000000-_t635;
	_t637 = _t628+_t633;
	_t638 = 2.000000 * _t637;
	_t639 = _t629-_t632;
	_t640 = 2.000000 * _t639;
	_t641 = _t628-_t633;
	_t642 = 2.000000 * _t641;
	_t643 = _t625+_t627;
	_t644 = 2.000000 * _t643;
	_t645 = 1.000000-_t644;
	_t646 = _t630+_t631;
	_t647 = 2.000000 * _t646;
	_t648 = _t629+_t632;
	_t649 = 2.000000 * _t648;
	_t650 = _t630-_t631;
	_t651 = 2.000000 * _t650;
	_t652 = _t625+_t626;
	_t653 = 2.000000 * _t652;
	_t654 = 1.000000-_t653;
	_t655 = _t654 * _t624;
	_t656 = _t647 * _t623;
	_t657 = _t640 * _t622;
	_t658 = _t657+_t656;
	_t659 = _t658+_t655;
	_t660 = _t651 * _t624;
	_t661 = _t645 * _t623;
	_t662 = _t638 * _t622;
	_t663 = _t662+_t661;
	_t664 = _t663+_t660;
	_t665 = _t649 * _t624;
	_t666 = _t642 * _t623;
	_t667 = _t636 * _t622;
	_t668 = _t667+_t666;
	_t669 = _t668+_t665;
	_t670 = scene[8] * primary[6];
	_t671 = scene[4] * primary[5];
	_t672 = _t671+_t670;
	_t673 = _t672+scene[16];
	_t674 = scene[7] * primary[6];
	_t675 = scene[3] * primary[5];
	_t676 = _t675+_t674;
	_t677 = _t676+scene[15];
	_t678 = scene[6] * primary[6];
	_t679 = scene[2] * primary[5];
	_t680 = _t679+_t678;
	_t681 = _t680+scene[14];
	_t682 = scene[5] * primary[6];
	_t683 = scene[1] * primary[5];
	_t684 = _t683+_t682;
	_t685 = _t684+scene[13];
	_t686 = (float)1.0 / (_t673);
	_t687 = _t677 * _t686;
	_t688 = _t681 * _t686;
	_t689 = _t685 * _t686;
	_t690 = sqrt(_t689*_t689+_t688*_t688+_t687*_t687);
	_t691 = (float)1.0 / (_t690);
	_t692 = _t689 * _t691;
	_t693 = _t688 * _t691;
	_t694 = _t687 * _t691;
	_t695 = scene[24] * scene[24];
	_t696 = scene[25] * scene[25];
	_t697 = scene[26] * scene[26];
	_t698 = scene[24] * scene[25];
	_t699 = scene[24] * scene[26];
	_t700 = scene[25] * scene[26];
	_t701 = scene[24] * scene[27];
	_t702 = scene[25] * scene[27];
	_t703 = scene[26] * scene[27];
	_t704 = _t696+_t697;
	_t705 = 2.000000 * _t704;
	_t706 = 1.000000-_t705;
	_t707 = _t698+_t703;
	_t708 = 2.000000 * _t707;
	_t709 = _t699-_t702;
	_t710 = 2.000000 * _t709;
	_t711 = _t698-_t703;
	_t712 = 2.000000 * _t711;
	_t713 = _t695+_t697;
	_t714 = 2.000000 * _t713;
	_t715 = 1.000000-_t714;
	_t716 = _t700+_t701;
	_t717 = 2.000000 * _t716;
	_t718 = _t699+_t702;
	_t719 = 2.000000 * _t718;
	_t720 = _t700-_t701;
	_t721 = 2.000000 * _t720;
	_t722 = _t695+_t696;
	_t723 = 2.000000 * _t722;
	_t724 = 1.000000-_t723;
	_t725 = _t724 * _t694;
	_t726 = _t717 * _t693;
	_t727 = _t710 * _t692;
	_t728 = _t727+_t726;
	_t729 = _t728+_t725;
	_t730 = _t721 * _t694;
	_t731 = _t715 * _t693;
	_t732 = _t708 * _t692;
	_t733 = _t732+_t731;
	_t734 = _t733+_t730;
	_t735 = _t719 * _t694;
	_t736 = _t712 * _t693;
	_t737 = _t706 * _t692;
	_t738 = _t737+_t736;
	_t739 = _t738+_t735;
	_t740 = _t669 * _t739 + _t664 * _t734 + _t659 * _t729;
	_t741 = scene[33] / _t740;
	_t742 = _t741 * _t741;
	_t743 = _t742 / _t740;
	_t744 = scene[32] / _t743;
	_t745 = _t744 * _t744;
	cif (vertParams[118] == 0.000000) {
		_t758 = vertParams[124] * vertParams[126];
		_t759 = vertParams[123] * vertParams[127];
		_t760 = _t759-_t758;
		_t761 = vertParams[123] * vertParams[128];
		_t762 = vertParams[125] * vertParams[126];
		_t763 = _t762-_t761;
		_t764 = vertParams[125] * vertParams[127];
		_t765 = vertParams[124] * vertParams[128];
		_t766 = _t765-_t764;
		_t767 = sqrt(_t766*_t766+_t763*_t763+_t760*_t760);
		_t768 = (float)1.0 / (_t767);
		_t769 = _t766 * _t768;
		_t770 = _t763 * _t768;
		_t771 = _t760 * _t768;
		_t772 = _t734 * vertParams[126];
		_t773 = _t739 * vertParams[127];
		_t774 = _t773-_t772;
		_t775 = _t739 * vertParams[128];
		_t776 = _t729 * vertParams[126];
		_t777 = _t776-_t775;
		_t778 = _t729 * vertParams[127];
		_t779 = _t734 * vertParams[128];
		_t780 = _t779-_t778;
		_t781 = _t780 * vertParams[123] + _t777 * vertParams[124] + _t774 * vertParams[125];
		_t782 = (float)1.0 / (_t781);
		_t783 = scene[18]-vertParams[120];
		_t784 = scene[19]-vertParams[121];
		_t785 = scene[20]-vertParams[122];
		_t786 = _t783 * _t780 + _t784 * _t777 + _t785 * _t774;
		_t787 = _t786 * _t782;
		_t788 = _t784 * vertParams[123];
		_t789 = _t783 * vertParams[124];
		_t790 = _t789-_t788;
		_t791 = _t783 * vertParams[125];
		_t792 = _t785 * vertParams[123];
		_t793 = _t792-_t791;
		_t794 = _t785 * vertParams[124];
		_t795 = _t784 * vertParams[125];
		_t796 = _t795-_t794;
		_t797 = _t739 * _t796 + _t734 * _t793 + _t729 * _t790;
		_t798 = _t797 * _t782;
		_t799 = vertParams[126] * _t796 + vertParams[127] * _t793 + vertParams[128] * _t790;
		_t800 = _t799 * _t782;
		_t801 = 1.000000-_t787;
		_t802 = _t801-_t798;
		_t803 = _t800 * _t739;
		_t804 = scene[18]+_t803;
		_t805 = _t800 * _t734;
		_t806 = scene[19]+_t805;
		_t807 = _t800 * _t729;
		_t808 = scene[20]+_t807;
		_t809 = _t798 * vertParams[135];
		_t810 = _t787 * vertParams[132];
		_t811 = _t802 * vertParams[129];
		_t812 = _t811+_t810;
		_t813 = _t812+_t809;
		_t814 = _t798 * vertParams[136];
		_t815 = _t787 * vertParams[133];
		_t816 = _t802 * vertParams[130];
		_t817 = _t816+_t815;
		_t818 = _t817+_t814;
		_t819 = _t798 * vertParams[137];
		_t820 = _t787 * vertParams[134];
		_t821 = _t802 * vertParams[131];
		_t822 = _t821+_t820;
		_t823 = _t822+_t819;
		_t824 = sqrt(_t813*_t813+_t818*_t818+_t823*_t823);
		_t825 = (float)1.0 / (_t824);
		_t826 = _t813 * _t825;
		_t827 = _t818 * _t825;
		_t828 = _t823 * _t825;
		cif (vertParams[156] == 0.000000) {
			_t829 = _t787;
			_t830 = _t798;
		}
		else {
			_t832 = _t798 * vertParams[161];
			_t833 = _t787 * vertParams[159];
			_t834 = 1.000000-_t787;
			_t835 = _t834-_t798;
			_t836 = _t835 * vertParams[157];
			_t837 = _t836+_t833;
			_t838 = _t837+_t832;
			_t839 = _t798 * vertParams[162];
			_t840 = _t787 * vertParams[160];
			_t841 = 1.000000-_t787;
			_t842 = _t841-_t798;
			_t843 = _t842 * vertParams[158];
			_t844 = _t843+_t840;
			_t845 = _t844+_t839;
			_t829 = _t838;
			_t830 = _t845;
		}
		_t746 = _t804;
		_t747 = _t806;
		_t748 = _t808;
		_t749 = _t769;
		_t750 = _t770;
		_t751 = _t771;
		_t752 = _t826;
		_t753 = _t827;
		_t754 = _t828;
		_t755 = _t829;
		_t756 = _t830;
	}
	else {
		_t746 = 0.000000;
		_t747 = 0.000000;
		_t748 = 0.000000;
		_t749 = 0.000000;
		_t750 = 0.000000;
		_t751 = 0.000000;
		_t752 = 0.000000;
		_t753 = 0.000000;
		_t754 = 0.000000;
		_t755 = 0.000000;
		_t756 = 0.000000;
	}
	_t846 = -_t739;
	_t847 = -_t734;
	_t848 = -_t729;
	_t849 = scene[20]-_t748;
	_t850 = _t849 * _t849;
	_t851 = scene[19]-_t747;
	_t852 = _t851 * _t851;
	_t853 = scene[18]-_t746;
	_t854 = _t853 * _t853;
	_t855 = _t854+_t852;
	_t856 = _t855+_t850;
	_t857 = _t856 * _t856;
	_t858 = _t745 * _t857;
	_t859 = _t739 * _t752 + _t734 * _t753 + _t729 * _t754;
	cif (_t859 >= 0.000000) {
		_t860 = _t859;
	}
	else {
		_t862 = -_t859;
		_t860 = _t862;
	}
	_t863 = _t860 * _t860;
	_t864 = (float)1.0 / (_t863);
	_t865 = _t858 * _t864;
	_t866 = _t477-_t746;
	_t867 = _t478-_t747;
	_t868 = _t479-_t748;
	_t869 = _t868 * _t868;
	_t870 = _t867 * _t867;
	_t871 = _t866 * _t866;
	_t872 = _t871+_t870;
	_t873 = _t872+_t869;
	_t874 = sqrt(_t873);
	_t875 = (float)1.0 / (_t874);
	_t876 = _t866 * _t875;
	_t877 = _t867 * _t875;
	_t878 = _t868 * _t875;
	cif (vertParams[164] == 1.000000) {
		_t888 = _t752 * _t846 + _t753 * _t847 + _t754 * _t848;
		cif (_t888 > 0.000000) {
			_t889 = _t752;
			_t890 = _t753;
			_t891 = _t754;
			_t892 = _t888;
		}
		else {
			_t894 = -_t752;
			_t895 = -_t753;
			_t896 = -_t754;
			_t897 = -_t888;
			_t889 = _t894;
			_t890 = _t895;
			_t891 = _t896;
			_t892 = _t897;
		}
		_t898 = _t889 * _t876 + _t890 * _t877 + _t891 * _t878;
		cif (vertParams[172] > 0.000000) {
			_t904 = _t846 * _t889 + _t847 * _t890 + _t848 * _t891;
			_t905 = 2.000000 * _t904;
			_t906 = _t905 * _t889;
			_t907 = _t906-_t846;
			_t908 = _t905 * _t890;
			_t909 = _t908-_t847;
			_t910 = _t905 * _t891;
			_t911 = _t910-_t848;
			_t912 = _t907 * _t876 + _t909 * _t877 + _t911 * _t878;
			_t913 = pow(_t912,vertParams[171]);
			_t914 = _t913 * 0.159155;
			cif (_t914 > 0.000000) {
				_t920 = vertParams[171]+1.000000;
				_t921 = vertParams[171]+2.000000;
				_t922 = _t921 * _t914;
				_t923 = vertParams[168] * _t922;
				_t924 = vertParams[169] * _t922;
				_t925 = vertParams[170] * _t922;
				_t926 = vertParams[172] * _t920;
				_t927 = _t926 * _t914;
				_t915 = _t923;
				_t916 = _t924;
				_t917 = _t925;
				_t918 = _t927;
			}
			else {
				_t915 = 0.000000;
				_t916 = 0.000000;
				_t917 = 0.000000;
				_t918 = 0.000000;
			}
			_t899 = _t915;
			_t900 = _t916;
			_t901 = _t917;
			_t902 = _t918;
		}
		else {
			_t899 = 0.000000;
			_t900 = 0.000000;
			_t901 = 0.000000;
			_t902 = 0.000000;
		}
		cif (vertParams[172] < 1.000000) {
			_t934 = vertParams[165] * 0.318310;
			_t935 = vertParams[166] * 0.318310;
			_t936 = vertParams[167] * 0.318310;
			_t937 = 1.000000-vertParams[172];
			_t938 = _t937 * 0.318310;
			_t939 = _t938 * _t898;
			_t940 = _t938 * _t892;
			_t928 = _t934;
			_t929 = _t935;
			_t930 = _t936;
			_t931 = _t939;
			_t932 = _t940;
		}
		else {
			_t928 = 0.000000;
			_t929 = 0.000000;
			_t930 = 0.000000;
			_t931 = 0.000000;
			_t932 = 0.000000;
		}
		_t941 = _t899+_t928;
		_t942 = _t900+_t929;
		_t943 = _t901+_t930;
		_t944 = _t902+_t931;
		_t945 = _t902+_t932;
		_t946 = _t941 * _t898;
		_t947 = _t942 * _t898;
		_t948 = _t943 * _t898;
		_t879 = _t946;
		_t880 = _t947;
		_t881 = _t948;
		_t882 = _t898;
		_t883 = _t944;
		_t884 = _t945;
	}
	else cif (vertParams[164] == 2.000000) {
		_t949 = _t846 * _t752 + _t847 * _t753 + _t848 * _t754;
		_t950 = _t876 * _t752 + _t877 * _t753 + _t878 * _t754;
		_t951 = _t949 * _t950;
		cif (_t949 > 0.000000) {
			_t952 = vertParams[171];
		}
		else {
			_t952 = vertParams[172];
		}
		cif (_t950 > 0.000000) {
			_t954 = vertParams[171];
		}
		else {
			_t954 = vertParams[172];
		}
		cif (_t951 > 0.000000) {
			_t960 = _t846+_t876;
			_t961 = _t847+_t877;
			_t962 = _t848+_t878;
			_t963 = sqrt(_t960*_t960+_t961*_t961+_t962*_t962);
			_t964 = (float)1.0 / (_t963);
			_t965 = _t960 * _t964;
			_t966 = _t961 * _t964;
			_t967 = _t962 * _t964;
			_t956 = _t965;
			_t957 = _t966;
			_t958 = _t967;
		}
		else {
			_t968 = _t876 * _t952;
			_t969 = _t846+_t968;
			_t970 = _t877 * _t952;
			_t971 = _t847+_t970;
			_t972 = _t878 * _t952;
			_t973 = _t848+_t972;
			_t974 = sqrt(_t969*_t969+_t971*_t971+_t973*_t973);
			_t975 = (float)1.0 / (_t974);
			_t976 = _t969 * _t975;
			_t977 = _t971 * _t975;
			_t978 = _t973 * _t975;
			_t956 = _t976;
			_t957 = _t977;
			_t958 = _t978;
		}
		_t979 = _t956 * _t752 + _t957 * _t753 + _t958 * _t754;
		cif (_t979 < 0.000000) {
			_t984 = -_t956;
			_t985 = -_t957;
			_t986 = -_t958;
			_t980 = _t984;
			_t981 = _t985;
			_t982 = _t986;
		}
		else {
			_t980 = _t956;
			_t981 = _t957;
			_t982 = _t958;
		}
		_t987 = _t846 * _t980 + _t847 * _t981 + _t848 * _t982;
		_t988 = _t876 * _t980 + _t877 * _t981 + _t878 * _t982;
		cif (_t754 < -0.999999) {
			_t989 = 0.000000;
			_t990 = -1.000000;
			_t991 = 0.000000;
			_t992 = -1.000000;
			_t993 = 0.000000;
			_t994 = 0.000000;
		}
		else {
			_t996 = 1.000000+_t754;
			_t997 = (float)1.0 / (_t996);
			_t998 = -_t752;
			_t999 = _t998 * _t753;
			_t1000 = _t999 * _t997;
			_t1001 = -_t752;
			_t1002 = _t752 * _t752;
			_t1003 = _t1002 * _t997;
			_t1004 = 1.000000-_t1003;
			_t1005 = -_t753;
			_t1006 = _t753 * _t753;
			_t1007 = _t1006 * _t997;
			_t1008 = 1.000000-_t1007;
			_t989 = _t1004;
			_t990 = _t1000;
			_t991 = _t1001;
			_t992 = _t1000;
			_t993 = _t1008;
			_t994 = _t1005;
		}
		_t1009 = _t752 * _t980 + _t753 * _t981 + _t754 * _t982;
		_t1010 = _t992 * _t980 + _t993 * _t981 + _t994 * _t982;
		_t1011 = _t989 * _t980 + _t990 * _t981 + _t991 * _t982;
		_t1012 = _t1009 * _t1009;
		_t1013 = vertParams[173] * vertParams[173];
		_t1014 = _t1010 * _t1010;
		_t1015 = _t1014 / _t1013;
		_t1016 = vertParams[173] * vertParams[173];
		_t1017 = _t1011 * _t1011;
		_t1018 = _t1017 / _t1016;
		_t1019 = _t1018+_t1015;
		_t1020 = _t1019 / _t1012;
		_t1021 = _t1012 * _t1012;
		_t1022 = 3.141593 * vertParams[173];
		_t1023 = _t1022 * vertParams[173];
		_t1024 = _t1023 * _t1021;
		_t1025 = -_t1020;
		_t1026 = exp(_t1025);
		_t1027 = _t1026 / _t1024;
		cif (_t987 > 0.000000) {
			_t1028 = vertParams[172];
		}
		else {
			_t1028 = vertParams[171];
		}
		_t1030 = _t1028 * _t1028;
		_t1031 = _t987 * _t987;
		_t1032 = 1.000000-_t1031;
		_t1033 = _t1032 * _t1030;
		_t1034 = 1.000000-_t1033;
		cif (_t1034 <= 0.000000) {
			_t1035 = 1.000000;
		}
		else {
			cif (_t987 >= 0.000000) {
				_t1037 = _t987;
			}
			else {
				_t1039 = -_t987;
				_t1037 = _t1039;
			}
			_t1040 = sqrt(_t1034);
			_t1041 = vertParams[171] * _t1040;
			_t1042 = vertParams[171] * _t1037;
			_t1043 = _t1037+_t1041;
			_t1044 = _t1037-_t1041;
			_t1045 = _t1044 / _t1043;
			_t1046 = _t1042+_t1040;
			_t1047 = _t1042-_t1040;
			_t1048 = _t1047 / _t1046;
			_t1049 = _t1048 * _t1048;
			_t1050 = _t1045 * _t1045;
			_t1051 = _t1050+_t1049;
			_t1052 = 0.500000 * _t1051;
			_t1035 = _t1052;
		}
		cif (_t949 >= 0.000000) {
			_t1053 = _t949;
		}
		else {
			_t1055 = -_t949;
			_t1053 = _t1055;
		}
		cif (_t950 >= 0.000000) {
			_t1056 = _t950;
		}
		else {
			_t1058 = -_t950;
			_t1056 = _t1058;
		}
		_t1059 = _t1056 * _t1056;
		_t1060 = 1.000001-_t1059;
		cif (_t1060 >= 0.000000) {
			_t1061 = _t1060;
		}
		else {
			_t1063 = -_t1060;
			_t1061 = _t1063;
		}
		_t1064 = sqrt(_t1061);
		_t1065 = _t1064 / _t1056;
		cif (_t1065 <= 0.000000) {
			_t1066 = 1.000000;
		}
		else {
			_t1068 = vertParams[173] * _t1065;
			_t1069 = (float)1.0 / (_t1068);
			cif (_t1069 >= 1.600000) {
				_t1070 = 1.000000;
			}
			else {
				_t1072 = _t1069 * _t1069;
				_t1073 = 2.577000 * _t1072;
				_t1074 = 2.276000 * _t1069;
				_t1075 = 1.000000+_t1074;
				_t1076 = _t1075+_t1073;
				_t1077 = 2.181000 * _t1072;
				_t1078 = 3.535000 * _t1069;
				_t1079 = _t1078+_t1077;
				_t1080 = _t1079 / _t1076;
				_t1070 = _t1080;
			}
			_t1066 = _t1070;
		}
		_t1081 = _t1053 * _t1053;
		_t1082 = 1.000001-_t1081;
		cif (_t1082 >= 0.000000) {
			_t1083 = _t1082;
		}
		else {
			_t1085 = -_t1082;
			_t1083 = _t1085;
		}
		_t1086 = sqrt(_t1083);
		_t1087 = _t1086 / _t1053;
		cif (_t1087 <= 0.000000) {
			_t1088 = 1.000000;
		}
		else {
			_t1090 = vertParams[173] * _t1087;
			_t1091 = (float)1.0 / (_t1090);
			cif (_t1091 >= 1.600000) {
				_t1092 = 1.000000;
			}
			else {
				_t1094 = _t1091 * _t1091;
				_t1095 = 2.577000 * _t1094;
				_t1096 = 2.276000 * _t1091;
				_t1097 = 1.000000+_t1096;
				_t1098 = _t1097+_t1095;
				_t1099 = 2.181000 * _t1094;
				_t1100 = 3.535000 * _t1091;
				_t1101 = _t1100+_t1099;
				_t1102 = _t1101 / _t1098;
				_t1092 = _t1102;
			}
			_t1088 = _t1092;
		}
		_t1103 = _t1088 * _t1066;
		_t1104 = sqrt(_t1053);
		_t1105 = 0.200000 * _t1104;
		_t1106 = 1.200000-_t1105;
		_t1107 = vertParams[173] * _t1106;
		_t1108 = _t1009 * _t1009;
		_t1109 = _t1107 * _t1107;
		_t1110 = _t1010 * _t1010;
		_t1111 = _t1110 / _t1109;
		_t1112 = _t1107 * _t1107;
		_t1113 = _t1011 * _t1011;
		_t1114 = _t1113 / _t1112;
		_t1115 = _t1114+_t1111;
		_t1116 = _t1115 / _t1108;
		_t1117 = _t1108 * _t1108;
		_t1118 = 3.141593 * _t1107;
		_t1119 = _t1118 * _t1107;
		_t1120 = _t1119 * _t1117;
		_t1121 = -_t1116;
		_t1122 = exp(_t1121);
		_t1123 = _t1122 / _t1120;
		_t1124 = _t1009 * _t1123;
		_t1125 = sqrt(_t1056);
		_t1126 = 0.200000 * _t1125;
		_t1127 = 1.200000-_t1126;
		_t1128 = vertParams[173] * _t1127;
		_t1129 = _t1009 * _t1009;
		_t1130 = _t1128 * _t1128;
		_t1131 = _t1010 * _t1010;
		_t1132 = _t1131 / _t1130;
		_t1133 = _t1128 * _t1128;
		_t1134 = _t1011 * _t1011;
		_t1135 = _t1134 / _t1133;
		_t1136 = _t1135+_t1132;
		_t1137 = _t1136 / _t1129;
		_t1138 = _t1129 * _t1129;
		_t1139 = 3.141593 * _t1128;
		_t1140 = _t1139 * _t1128;
		_t1141 = _t1140 * _t1138;
		_t1142 = -_t1137;
		_t1143 = exp(_t1142);
		_t1144 = _t1143 / _t1141;
		_t1145 = _t1009 * _t1144;
		cif (_t951 > 0.000000) {
			_t1151 = 4.000000 * _t949;
			_t1152 = _t1035 * _t1027;
			_t1153 = _t1152 * _t1103;
			_t1154 = _t1153 / _t1151;
			cif (_t1154 >= 0.000000) {
				_t1155 = _t1154;
			}
			else {
				_t1157 = -_t1154;
				_t1155 = _t1157;
			}
			_t1158 = vertParams[165] * _t1155;
			_t1159 = vertParams[166] * _t1155;
			_t1160 = vertParams[167] * _t1155;
			_t1161 = 4.000000 * _t988;
			_t1162 = _t1124 * _t1035;
			_t1163 = _t1162 / _t1161;
			cif (_t1163 >= 0.000000) {
				_t1164 = _t1163;
			}
			else {
				_t1166 = -_t1163;
				_t1164 = _t1166;
			}
			_t1167 = 4.000000 * _t987;
			_t1168 = _t1145 * _t1035;
			_t1169 = _t1168 / _t1167;
			cif (_t1169 >= 0.000000) {
				_t1170 = _t1169;
			}
			else {
				_t1172 = -_t1169;
				_t1170 = _t1172;
			}
			_t1146 = _t1158;
			_t1147 = _t1159;
			_t1148 = _t1160;
			_t1149 = _t1164;
			_t1150 = _t1170;
		}
		else {
			_t1173 = _t952 * _t988;
			_t1174 = _t987+_t1173;
			_t1175 = _t954 * _t987;
			_t1176 = _t988+_t1175;
			_t1177 = (float)1.0 / (_t952);
			_t1178 = _t1177 * _t1177;
			_t1179 = _t1174 * _t1174;
			_t1180 = _t949 * _t1179;
			_t1181 = _t952 * _t952;
			_t1182 = 1.000000-_t1035;
			_t1183 = _t1182 * _t1027;
			_t1184 = _t1183 * _t1103;
			_t1185 = _t1184 * _t1181;
			_t1186 = _t1185 * _t987;
			_t1187 = _t1186 * _t988;
			_t1188 = _t1178 * _t1187;
			_t1189 = _t1188 / _t1180;
			cif (_t1189 >= 0.000000) {
				_t1190 = _t1189;
			}
			else {
				_t1192 = -_t1189;
				_t1190 = _t1192;
			}
			_t1193 = vertParams[168] * _t1190;
			_t1194 = vertParams[169] * _t1190;
			_t1195 = vertParams[170] * _t1190;
			_t1196 = _t1174 * _t1174;
			_t1197 = _t952 * _t952;
			_t1198 = _t1197 * _t988;
			_t1199 = 1.000000-_t1035;
			_t1200 = _t1124 * _t1199;
			_t1201 = _t1200 * _t1198;
			_t1202 = _t1201 / _t1196;
			cif (_t1202 >= 0.000000) {
				_t1203 = _t1202;
			}
			else {
				_t1205 = -_t1202;
				_t1203 = _t1205;
			}
			_t1206 = _t1176 * _t1176;
			_t1207 = _t954 * _t954;
			_t1208 = _t1207 * _t987;
			_t1209 = 1.000000-_t1035;
			_t1210 = _t1145 * _t1209;
			_t1211 = _t1210 * _t1208;
			_t1212 = _t1211 / _t1206;
			cif (_t1212 >= 0.000000) {
				_t1213 = _t1212;
			}
			else {
				_t1215 = -_t1212;
				_t1213 = _t1215;
			}
			_t1146 = _t1193;
			_t1147 = _t1194;
			_t1148 = _t1195;
			_t1149 = _t1203;
			_t1150 = _t1213;
		}
		_t879 = _t1146;
		_t880 = _t1147;
		_t881 = _t1148;
		_t882 = _t950;
		_t883 = _t1149;
		_t884 = _t1150;
	}
	else cif (vertParams[164] == 0.000000) {
		_t1216 = _t752 * _t846 + _t753 * _t847 + _t754 * _t848;
		cif (_t1216 > 0.000000) {
			_t1217 = _t752;
			_t1218 = _t753;
			_t1219 = _t754;
			_t1220 = _t1216;
		}
		else {
			_t1222 = -_t752;
			_t1223 = -_t753;
			_t1224 = -_t754;
			_t1225 = -_t1216;
			_t1217 = _t1222;
			_t1218 = _t1223;
			_t1219 = _t1224;
			_t1220 = _t1225;
		}
		_t1226 = _t1217 * _t876 + _t1218 * _t877 + _t1219 * _t878;
		_t1227 = _t1226 * 0.318310;
		_t1228 = _t1220 * 0.318310;
		_t1229 = _t1227 * vertParams[165];
		_t1230 = _t1227 * vertParams[166];
		_t1231 = _t1227 * vertParams[167];
		_t879 = _t1229;
		_t880 = _t1230;
		_t881 = _t1231;
		_t882 = _t1226;
		_t883 = _t1227;
		_t884 = _t1228;
	}
	else {
		_t879 = 0.000000;
		_t880 = 0.000000;
		_t881 = 0.000000;
		_t882 = 0.000000;
		_t883 = 0.000000;
		_t884 = 0.000000;
	}
	_t1232 = -_t876;
	_t1233 = -_t877;
	_t1234 = -_t878;
	cif (vertParams[108] == 1.000000) {
		_t1244 = _t483 * _t577 + _t484 * _t578 + _t485 * _t579;
		cif (_t1244 > 0.000000) {
			_t1245 = _t483;
			_t1246 = _t484;
			_t1247 = _t485;
			_t1248 = _t1244;
		}
		else {
			_t1250 = -_t483;
			_t1251 = -_t484;
			_t1252 = -_t485;
			_t1253 = -_t1244;
			_t1245 = _t1250;
			_t1246 = _t1251;
			_t1247 = _t1252;
			_t1248 = _t1253;
		}
		_t1254 = _t1245 * _t1232 + _t1246 * _t1233 + _t1247 * _t1234;
		cif (vertParams[116] > 0.000000) {
			_t1260 = _t577 * _t1245 + _t578 * _t1246 + _t579 * _t1247;
			_t1261 = 2.000000 * _t1260;
			_t1262 = _t1261 * _t1245;
			_t1263 = _t1262-_t577;
			_t1264 = _t1261 * _t1246;
			_t1265 = _t1264-_t578;
			_t1266 = _t1261 * _t1247;
			_t1267 = _t1266-_t579;
			_t1268 = _t1263 * _t1232 + _t1265 * _t1233 + _t1267 * _t1234;
			_t1269 = pow(_t1268,vertParams[115]);
			_t1270 = _t1269 * 0.159155;
			cif (_t1270 > 0.000000) {
				_t1276 = vertParams[115]+1.000000;
				_t1277 = vertParams[115]+2.000000;
				_t1278 = _t1277 * _t1270;
				_t1279 = vertParams[112] * _t1278;
				_t1280 = vertParams[113] * _t1278;
				_t1281 = vertParams[114] * _t1278;
				_t1282 = vertParams[116] * _t1276;
				_t1283 = _t1282 * _t1270;
				_t1271 = _t1279;
				_t1272 = _t1280;
				_t1273 = _t1281;
				_t1274 = _t1283;
			}
			else {
				_t1271 = 0.000000;
				_t1272 = 0.000000;
				_t1273 = 0.000000;
				_t1274 = 0.000000;
			}
			_t1255 = _t1271;
			_t1256 = _t1272;
			_t1257 = _t1273;
			_t1258 = _t1274;
		}
		else {
			_t1255 = 0.000000;
			_t1256 = 0.000000;
			_t1257 = 0.000000;
			_t1258 = 0.000000;
		}
		cif (vertParams[116] < 1.000000) {
			_t1290 = vertParams[109] * 0.318310;
			_t1291 = vertParams[110] * 0.318310;
			_t1292 = vertParams[111] * 0.318310;
			_t1293 = 1.000000-vertParams[116];
			_t1294 = _t1293 * 0.318310;
			_t1295 = _t1294 * _t1254;
			_t1296 = _t1294 * _t1248;
			_t1284 = _t1290;
			_t1285 = _t1291;
			_t1286 = _t1292;
			_t1287 = _t1295;
			_t1288 = _t1296;
		}
		else {
			_t1284 = 0.000000;
			_t1285 = 0.000000;
			_t1286 = 0.000000;
			_t1287 = 0.000000;
			_t1288 = 0.000000;
		}
		_t1297 = _t1255+_t1284;
		_t1298 = _t1256+_t1285;
		_t1299 = _t1257+_t1286;
		_t1300 = _t1258+_t1287;
		_t1301 = _t1258+_t1288;
		_t1302 = _t1297 * _t1254;
		_t1303 = _t1298 * _t1254;
		_t1304 = _t1299 * _t1254;
		_t1235 = _t1302;
		_t1236 = _t1303;
		_t1237 = _t1304;
		_t1238 = _t1254;
		_t1239 = _t1300;
		_t1240 = _t1301;
	}
	else cif (vertParams[108] == 2.000000) {
		_t1305 = _t577 * _t483 + _t578 * _t484 + _t579 * _t485;
		_t1306 = _t1232 * _t483 + _t1233 * _t484 + _t1234 * _t485;
		_t1307 = _t1305 * _t1306;
		cif (_t1305 > 0.000000) {
			_t1308 = vertParams[115];
		}
		else {
			_t1308 = vertParams[116];
		}
		cif (_t1306 > 0.000000) {
			_t1310 = vertParams[115];
		}
		else {
			_t1310 = vertParams[116];
		}
		cif (_t1307 > 0.000000) {
			_t1316 = _t577+_t1232;
			_t1317 = _t578+_t1233;
			_t1318 = _t579+_t1234;
			_t1319 = sqrt(_t1316*_t1316+_t1317*_t1317+_t1318*_t1318);
			_t1320 = (float)1.0 / (_t1319);
			_t1321 = _t1316 * _t1320;
			_t1322 = _t1317 * _t1320;
			_t1323 = _t1318 * _t1320;
			_t1312 = _t1321;
			_t1313 = _t1322;
			_t1314 = _t1323;
		}
		else {
			_t1324 = _t1232 * _t1308;
			_t1325 = _t577+_t1324;
			_t1326 = _t1233 * _t1308;
			_t1327 = _t578+_t1326;
			_t1328 = _t1234 * _t1308;
			_t1329 = _t579+_t1328;
			_t1330 = sqrt(_t1325*_t1325+_t1327*_t1327+_t1329*_t1329);
			_t1331 = (float)1.0 / (_t1330);
			_t1332 = _t1325 * _t1331;
			_t1333 = _t1327 * _t1331;
			_t1334 = _t1329 * _t1331;
			_t1312 = _t1332;
			_t1313 = _t1333;
			_t1314 = _t1334;
		}
		_t1335 = _t1312 * _t483 + _t1313 * _t484 + _t1314 * _t485;
		cif (_t1335 < 0.000000) {
			_t1340 = -_t1312;
			_t1341 = -_t1313;
			_t1342 = -_t1314;
			_t1336 = _t1340;
			_t1337 = _t1341;
			_t1338 = _t1342;
		}
		else {
			_t1336 = _t1312;
			_t1337 = _t1313;
			_t1338 = _t1314;
		}
		_t1343 = _t577 * _t1336 + _t578 * _t1337 + _t579 * _t1338;
		_t1344 = _t1232 * _t1336 + _t1233 * _t1337 + _t1234 * _t1338;
		cif (_t485 < -0.999999) {
			_t1345 = 0.000000;
			_t1346 = -1.000000;
			_t1347 = 0.000000;
			_t1348 = -1.000000;
			_t1349 = 0.000000;
			_t1350 = 0.000000;
		}
		else {
			_t1352 = 1.000000+_t485;
			_t1353 = (float)1.0 / (_t1352);
			_t1354 = -_t483;
			_t1355 = _t1354 * _t484;
			_t1356 = _t1355 * _t1353;
			_t1357 = -_t483;
			_t1358 = _t483 * _t483;
			_t1359 = _t1358 * _t1353;
			_t1360 = 1.000000-_t1359;
			_t1361 = -_t484;
			_t1362 = _t484 * _t484;
			_t1363 = _t1362 * _t1353;
			_t1364 = 1.000000-_t1363;
			_t1345 = _t1360;
			_t1346 = _t1356;
			_t1347 = _t1357;
			_t1348 = _t1356;
			_t1349 = _t1364;
			_t1350 = _t1361;
		}
		_t1365 = _t483 * _t1336 + _t484 * _t1337 + _t485 * _t1338;
		_t1366 = _t1348 * _t1336 + _t1349 * _t1337 + _t1350 * _t1338;
		_t1367 = _t1345 * _t1336 + _t1346 * _t1337 + _t1347 * _t1338;
		_t1368 = _t1365 * _t1365;
		_t1369 = vertParams[117] * vertParams[117];
		_t1370 = _t1366 * _t1366;
		_t1371 = _t1370 / _t1369;
		_t1372 = vertParams[117] * vertParams[117];
		_t1373 = _t1367 * _t1367;
		_t1374 = _t1373 / _t1372;
		_t1375 = _t1374+_t1371;
		_t1376 = _t1375 / _t1368;
		_t1377 = _t1368 * _t1368;
		_t1378 = 3.141593 * vertParams[117];
		_t1379 = _t1378 * vertParams[117];
		_t1380 = _t1379 * _t1377;
		_t1381 = -_t1376;
		_t1382 = exp(_t1381);
		_t1383 = _t1382 / _t1380;
		cif (_t1343 > 0.000000) {
			_t1384 = vertParams[116];
		}
		else {
			_t1384 = vertParams[115];
		}
		_t1386 = _t1384 * _t1384;
		_t1387 = _t1343 * _t1343;
		_t1388 = 1.000000-_t1387;
		_t1389 = _t1388 * _t1386;
		_t1390 = 1.000000-_t1389;
		cif (_t1390 <= 0.000000) {
			_t1391 = 1.000000;
		}
		else {
			cif (_t1343 >= 0.000000) {
				_t1393 = _t1343;
			}
			else {
				_t1395 = -_t1343;
				_t1393 = _t1395;
			}
			_t1396 = sqrt(_t1390);
			_t1397 = vertParams[115] * _t1396;
			_t1398 = vertParams[115] * _t1393;
			_t1399 = _t1393+_t1397;
			_t1400 = _t1393-_t1397;
			_t1401 = _t1400 / _t1399;
			_t1402 = _t1398+_t1396;
			_t1403 = _t1398-_t1396;
			_t1404 = _t1403 / _t1402;
			_t1405 = _t1404 * _t1404;
			_t1406 = _t1401 * _t1401;
			_t1407 = _t1406+_t1405;
			_t1408 = 0.500000 * _t1407;
			_t1391 = _t1408;
		}
		cif (_t1305 >= 0.000000) {
			_t1409 = _t1305;
		}
		else {
			_t1411 = -_t1305;
			_t1409 = _t1411;
		}
		cif (_t1306 >= 0.000000) {
			_t1412 = _t1306;
		}
		else {
			_t1414 = -_t1306;
			_t1412 = _t1414;
		}
		_t1415 = _t1412 * _t1412;
		_t1416 = 1.000001-_t1415;
		cif (_t1416 >= 0.000000) {
			_t1417 = _t1416;
		}
		else {
			_t1419 = -_t1416;
			_t1417 = _t1419;
		}
		_t1420 = sqrt(_t1417);
		_t1421 = _t1420 / _t1412;
		cif (_t1421 <= 0.000000) {
			_t1422 = 1.000000;
		}
		else {
			_t1424 = vertParams[117] * _t1421;
			_t1425 = (float)1.0 / (_t1424);
			cif (_t1425 >= 1.600000) {
				_t1426 = 1.000000;
			}
			else {
				_t1428 = _t1425 * _t1425;
				_t1429 = 2.577000 * _t1428;
				_t1430 = 2.276000 * _t1425;
				_t1431 = 1.000000+_t1430;
				_t1432 = _t1431+_t1429;
				_t1433 = 2.181000 * _t1428;
				_t1434 = 3.535000 * _t1425;
				_t1435 = _t1434+_t1433;
				_t1436 = _t1435 / _t1432;
				_t1426 = _t1436;
			}
			_t1422 = _t1426;
		}
		_t1437 = _t1409 * _t1409;
		_t1438 = 1.000001-_t1437;
		cif (_t1438 >= 0.000000) {
			_t1439 = _t1438;
		}
		else {
			_t1441 = -_t1438;
			_t1439 = _t1441;
		}
		_t1442 = sqrt(_t1439);
		_t1443 = _t1442 / _t1409;
		cif (_t1443 <= 0.000000) {
			_t1444 = 1.000000;
		}
		else {
			_t1446 = vertParams[117] * _t1443;
			_t1447 = (float)1.0 / (_t1446);
			cif (_t1447 >= 1.600000) {
				_t1448 = 1.000000;
			}
			else {
				_t1450 = _t1447 * _t1447;
				_t1451 = 2.577000 * _t1450;
				_t1452 = 2.276000 * _t1447;
				_t1453 = 1.000000+_t1452;
				_t1454 = _t1453+_t1451;
				_t1455 = 2.181000 * _t1450;
				_t1456 = 3.535000 * _t1447;
				_t1457 = _t1456+_t1455;
				_t1458 = _t1457 / _t1454;
				_t1448 = _t1458;
			}
			_t1444 = _t1448;
		}
		_t1459 = _t1444 * _t1422;
		_t1460 = sqrt(_t1409);
		_t1461 = 0.200000 * _t1460;
		_t1462 = 1.200000-_t1461;
		_t1463 = vertParams[117] * _t1462;
		_t1464 = _t1365 * _t1365;
		_t1465 = _t1463 * _t1463;
		_t1466 = _t1366 * _t1366;
		_t1467 = _t1466 / _t1465;
		_t1468 = _t1463 * _t1463;
		_t1469 = _t1367 * _t1367;
		_t1470 = _t1469 / _t1468;
		_t1471 = _t1470+_t1467;
		_t1472 = _t1471 / _t1464;
		_t1473 = _t1464 * _t1464;
		_t1474 = 3.141593 * _t1463;
		_t1475 = _t1474 * _t1463;
		_t1476 = _t1475 * _t1473;
		_t1477 = -_t1472;
		_t1478 = exp(_t1477);
		_t1479 = _t1478 / _t1476;
		_t1480 = _t1365 * _t1479;
		_t1481 = sqrt(_t1412);
		_t1482 = 0.200000 * _t1481;
		_t1483 = 1.200000-_t1482;
		_t1484 = vertParams[117] * _t1483;
		_t1485 = _t1365 * _t1365;
		_t1486 = _t1484 * _t1484;
		_t1487 = _t1366 * _t1366;
		_t1488 = _t1487 / _t1486;
		_t1489 = _t1484 * _t1484;
		_t1490 = _t1367 * _t1367;
		_t1491 = _t1490 / _t1489;
		_t1492 = _t1491+_t1488;
		_t1493 = _t1492 / _t1485;
		_t1494 = _t1485 * _t1485;
		_t1495 = 3.141593 * _t1484;
		_t1496 = _t1495 * _t1484;
		_t1497 = _t1496 * _t1494;
		_t1498 = -_t1493;
		_t1499 = exp(_t1498);
		_t1500 = _t1499 / _t1497;
		_t1501 = _t1365 * _t1500;
		cif (_t1307 > 0.000000) {
			_t1507 = 4.000000 * _t1305;
			_t1508 = _t1391 * _t1383;
			_t1509 = _t1508 * _t1459;
			_t1510 = _t1509 / _t1507;
			cif (_t1510 >= 0.000000) {
				_t1511 = _t1510;
			}
			else {
				_t1513 = -_t1510;
				_t1511 = _t1513;
			}
			_t1514 = vertParams[109] * _t1511;
			_t1515 = vertParams[110] * _t1511;
			_t1516 = vertParams[111] * _t1511;
			_t1517 = 4.000000 * _t1344;
			_t1518 = _t1480 * _t1391;
			_t1519 = _t1518 / _t1517;
			cif (_t1519 >= 0.000000) {
				_t1520 = _t1519;
			}
			else {
				_t1522 = -_t1519;
				_t1520 = _t1522;
			}
			_t1523 = 4.000000 * _t1343;
			_t1524 = _t1501 * _t1391;
			_t1525 = _t1524 / _t1523;
			cif (_t1525 >= 0.000000) {
				_t1526 = _t1525;
			}
			else {
				_t1528 = -_t1525;
				_t1526 = _t1528;
			}
			_t1502 = _t1514;
			_t1503 = _t1515;
			_t1504 = _t1516;
			_t1505 = _t1520;
			_t1506 = _t1526;
		}
		else {
			_t1529 = _t1308 * _t1344;
			_t1530 = _t1343+_t1529;
			_t1531 = _t1310 * _t1343;
			_t1532 = _t1344+_t1531;
			_t1533 = _t1530 * _t1530;
			_t1534 = _t1305 * _t1533;
			_t1535 = _t1308 * _t1308;
			_t1536 = 1.000000-_t1391;
			_t1537 = _t1536 * _t1383;
			_t1538 = _t1537 * _t1459;
			_t1539 = _t1538 * _t1535;
			_t1540 = _t1539 * _t1343;
			_t1541 = _t1540 * _t1344;
			_t1542 = _t1541 / _t1534;
			cif (_t1542 >= 0.000000) {
				_t1543 = _t1542;
			}
			else {
				_t1545 = -_t1542;
				_t1543 = _t1545;
			}
			_t1546 = vertParams[112] * _t1543;
			_t1547 = vertParams[113] * _t1543;
			_t1548 = vertParams[114] * _t1543;
			_t1549 = _t1530 * _t1530;
			_t1550 = _t1308 * _t1308;
			_t1551 = _t1550 * _t1344;
			_t1552 = 1.000000-_t1391;
			_t1553 = _t1480 * _t1552;
			_t1554 = _t1553 * _t1551;
			_t1555 = _t1554 / _t1549;
			cif (_t1555 >= 0.000000) {
				_t1556 = _t1555;
			}
			else {
				_t1558 = -_t1555;
				_t1556 = _t1558;
			}
			_t1559 = _t1532 * _t1532;
			_t1560 = _t1310 * _t1310;
			_t1561 = _t1560 * _t1343;
			_t1562 = 1.000000-_t1391;
			_t1563 = _t1501 * _t1562;
			_t1564 = _t1563 * _t1561;
			_t1565 = _t1564 / _t1559;
			cif (_t1565 >= 0.000000) {
				_t1566 = _t1565;
			}
			else {
				_t1568 = -_t1565;
				_t1566 = _t1568;
			}
			_t1502 = _t1546;
			_t1503 = _t1547;
			_t1504 = _t1548;
			_t1505 = _t1556;
			_t1506 = _t1566;
		}
		_t1235 = _t1502;
		_t1236 = _t1503;
		_t1237 = _t1504;
		_t1238 = _t1306;
		_t1239 = _t1505;
		_t1240 = _t1506;
	}
	else cif (vertParams[108] == 0.000000) {
		_t1569 = _t483 * _t577 + _t484 * _t578 + _t485 * _t579;
		cif (_t1569 > 0.000000) {
			_t1570 = _t483;
			_t1571 = _t484;
			_t1572 = _t485;
			_t1573 = _t1569;
		}
		else {
			_t1575 = -_t483;
			_t1576 = -_t484;
			_t1577 = -_t485;
			_t1578 = -_t1569;
			_t1570 = _t1575;
			_t1571 = _t1576;
			_t1572 = _t1577;
			_t1573 = _t1578;
		}
		_t1579 = _t1570 * _t1232 + _t1571 * _t1233 + _t1572 * _t1234;
		_t1580 = _t1579 * 0.318310;
		_t1581 = _t1573 * 0.318310;
		_t1582 = _t1580 * vertParams[109];
		_t1583 = _t1580 * vertParams[110];
		_t1584 = _t1580 * vertParams[111];
		_t1235 = _t1582;
		_t1236 = _t1583;
		_t1237 = _t1584;
		_t1238 = _t1579;
		_t1239 = _t1580;
		_t1240 = _t1581;
	}
	else {
		_t1235 = 0.000000;
		_t1236 = 0.000000;
		_t1237 = 0.000000;
		_t1238 = 0.000000;
		_t1239 = 0.000000;
		_t1240 = 0.000000;
	}
	_t1585 = -_t876;
	_t1586 = -_t877;
	_t1587 = -_t878;
	_t1588 = _t483 * _t577 + _t484 * _t578 + _t485 * _t579;
	_t1589 = _t483 * _t1585 + _t484 * _t1586 + _t485 * _t1587;
	_t1590 = _t480 * _t577 + _t481 * _t578 + _t482 * _t579;
	_t1591 = _t480 * _t1585 + _t481 * _t1586 + _t482 * _t1587;
	_t1592 = _t1590 * _t1589;
	_t1593 = _t1591 * _t1588;
	_t1594 = _t1593 / _t1592;
	cif (_t1594 >= 0.000000) {
		_t1595 = _t1594;
	}
	else {
		_t1597 = -_t1594;
		_t1595 = _t1597;
	}
	_t1598 = _t1235 * _t1595;
	_t1599 = _t1236 * _t1595;
	_t1600 = _t1237 * _t1595;
	_t1601 = (float)1.0 / (_t873);
	_t1602 = _t1598 * _t879;
	_t1603 = _t1602 * _t1601;
	_t1604 = _t1599 * _t880;
	_t1605 = _t1604 * _t1601;
	_t1606 = _t1600 * _t881;
	_t1607 = _t1606 * _t1601;
	_t1608 = _t883 * _t1238;
	_t1609 = _t1608 * _t1601;
	_t1610 = _t1239 * _t882;
	_t1611 = _t1610 * _t1601;
	_t1612 = _t1240 * _t1240;
	_t1613 = _t599 * _t1612;
	_t1614 = _t598+_t1613;
	_t1615 = _t1609 * _t1609;
	_t1616 = _t1615 * _t1614;
	_t1617 = _t884 * _t884;
	_t1618 = _t1611 * _t1611;
	_t1619 = _t1618 * _t865;
	_t1620 = _t1616+1.000000;
	_t1621 = _t1620+_t1619;
	_t1622 = (float)1.0 / (_t1621);
	_t1623 = _t468 * _t879;
	_t1624 = _t469 * _t880;
	_t1625 = _t470 * _t881;
	_t1626 = _t1601 * _t1622;
	_t1627 = _t1623 * _t1598;
	_t1628 = _t1627 * _t1626;
	_t1629 = _t1624 * _t1599;
	_t1630 = _t1629 * _t1626;
	_t1631 = _t1625 * _t1600;
	_t1632 = _t1631 * _t1626;
	_t1633 = _t1632 * 0.072169;
	_t1634 = _t1630 * 0.715160;
	_t1635 = _t1628 * 0.212671;
	_t1636 = _t1635+_t1634;
	_t1637 = _t1636+_t1633;
	_t1638 = log(_t1637);
	float _acc193 = 0, _acc194 = 0, _acc195 = 0, _acc191 = 0, _acc196 = 0, _acc197 = 0, _acc207 = 0, _acc206 = 0, _acc204 = 0, _acc235 = 0, _acc237 = 0, _acc239 = 0, _acc202 = 0, _acc241 = 0, _acc236 = 0, _acc240 = 0, _acc234 = 0, _acc251 = 0, _acc252 = 0, _acc254 = 0, _acc249 = 0, _acc250 = 0, _acc260 = 0, _acc261 = 0, _acc216 = 0, _acc218 = 0, _acc221 = 0, _acc222 = 0, _acc201 = 0, _acc225 = 0, _acc227 = 0, _acc217 = 0, _acc220 = 0, _acc232 = 0, _acc231 = 0, _acc212 = 0, _acc272 = 0, _acc273 = 0, _acc275 = 0, _acc210 = 0, _acc277 = 0, _acc271 = 0, _acc266 = 0, _acc215 = 0, _acc281 = 0, _acc282 = 0, _acc284 = 0, _acc267 = 0, _acc286 = 0, _acc264 = 0, _acc291 = 0, _acc289 = 0, _acc287 = 0, _acc285 = 0, _acc209 = 0, _acc276 = 0, _acc163 = 0, _acc170 = 0, _acc176 = 0, _acc179 = 0, _acc180 = 0, _acc175 = 0, _acc168 = 0, _acc162 = 0, _acc296 = 0, _acc304 = 0, _acc307 = 0, _acc298 = 0, _acc313 = 0, _acc219 = 0, _acc314 = 0, _acc283 = 0, _acc315 = 0, _acc295 = 0, _acc310 = 0, _acc312 = 0, _acc317 = 0, _acc318 = 0, _acc321 = 0, _acc320 = 0, _acc322 = 0, _acc324 = 0, _acc327 = 0, _acc144 = 0, _acc140 = 0, _acc331 = 0, _acc332 = 0, _acc330 = 0, _acc333 = 0, _acc139 = 0, _acc336 = 0, _acc337 = 0, _acc311 = 0, _acc335 = 0, _acc233 = 0, _acc138 = 0, _acc329 = 0, _acc340 = 0, _acc343 = 0, _acc352 = 0, _acc354 = 0, _acc355 = 0, _acc359 = 0, _acc360 = 0, _acc362 = 0, _acc364 = 0, _acc363 = 0, _acc365 = 0, _acc369 = 0, _acc370 = 0, _acc263 = 0, _acc308 = 0, _acc372 = 0, _acc345 = 0, _acc299 = 0, _acc373 = 0, _acc382 = 0, _acc366 = 0, _acc387 = 0, _acc389 = 0, _acc361 = 0, _acc356 = 0, _acc351 = 0, _acc392 = 0, _acc161 = 0, _acc393 = 0, _acc391 = 0, _acc394 = 0, _acc395 = 0, _acc390 = 0, _acc396 = 0, _acc397 = 0, _acc344 = 0, _acc306 = 0, _acc339 = 0, _acc334 = 0, _acc403 = 0, _acc405 = 0, _acc418 = 0, _acc414 = 0, _acc415 = 0, _acc404 = 0, _acc408 = 0, _acc419 = 0, _acc420 = 0, _acc430 = 0, _acc433 = 0, _acc436 = 0, _acc437 = 0, _acc431 = 0, _acc435 = 0, _acc434 = 0, _acc443 = 0, _acc444 = 0, _acc446 = 0, _acc447 = 0, _acc449 = 0, _acc450 = 0, _acc445 = 0, _acc452 = 0, _acc453 = 0, _acc448 = 0, _acc455 = 0, _acc456 = 0, _acc451 = 0, _acc461 = 0, _acc305 = 0, _acc463 = 0, _acc464 = 0, _acc379 = 0, _acc402 = 0, _acc401 = 0, _acc400 = 0, _acc460 = 0, _acc457 = 0, _acc454 = 0, _acc0 = 0, _acc1 = 0, _acc43 = 0, _acc46 = 0, _acc226 = 0, _acc48 = 0, _acc56 = 0, _acc61 = 0, _acc388 = 0, _acc62 = 0, _acc66 = 0, _acc67 = 0, _acc65 = 0, _acc59 = 0, _acc71 = 0, _acc72 = 0, _acc70 = 0, _acc75 = 0, _acc69 = 0, _acc270 = 0, _acc78 = 0, _acc269 = 0, _acc77 = 0, _acc223 = 0, _acc57 = 0, _acc53 = 0, _acc49 = 0, _acc81 = 0, _acc82 = 0, _acc85 = 0, _acc80 = 0, _acc105 = 0, _acc106 = 0, _acc109 = 0, _acc108 = 0, _acc243 = 0, _acc95 = 0, _acc115 = 0, _acc96 = 0, _acc119 = 0, _acc117 = 0, _acc120 = 0, _acc97 = 0, _acc91 = 0, _acc42 = 0, _acc123 = 0, _acc124 = 0, _acc122 = 0, _acc406 = 0, _acc125 = 0, _acc127 = 0, _acc128 = 0, _acc132 = 0, _acc40 = 0, _acc133 = 0, _acc87 = 0, _acc131 = 0, _acc130 = 0, _acc407 = 0, _acc126 = 0, _acc121 = 0, _acc36 = 0, _acc35 = 0, _acc34 = 0, _acc290 = 0, _acc2 = 0, _acc3 = 0, _acc25 = 0, _acc21 = 0, _acc27 = 0, _acc274 = 0, _acc24 = 0, _acc328 = 0, _acc28 = 0, _acc16 = 0, _acc12 = 0, _acc279 = 0, _acc13 = 0, _acc467 = 0, _acc17 = 0, _acc14 = 0, _acc466 = 0, _acc465 = 0, _acc475 = 0, _acc476 = 0, _acc489 = 0, _acc490 = 0, _acc496 = 0, _acc498 = 0, _acc497 = 0, _acc491 = 0, _acc503 = 0, _acc504 = 0, _acc510 = 0, _acc512 = 0, _acc505 = 0, _acc511 = 0, _acc38 = 0, _acc519 = 0, _acc520 = 0, _acc514 = 0, _acc523 = 0, _acc515 = 0, _acc346 = 0, _acc525 = 0, _acc347 = 0, _acc50 = 0, _acc63 = 0, _acc526 = 0, _acc521 = 0, _acc524 = 0, _acc513 = 0, _acc530 = 0, _acc532 = 0, _acc534 = 0, _acc531 = 0, _acc543 = 0, _acc546 = 0, _acc545 = 0, _acc529 = 0, _acc518 = 0, _acc533 = 0, _acc551 = 0, _acc552 = 0, _acc550 = 0, _acc84 = 0, _acc553 = 0, _acc544 = 0, _acc549 = 0, _acc556 = 0, _acc245 = 0, _acc554 = 0, _acc559 = 0, _acc558 = 0, _acc557 = 0, _acc205 = 0, _acc502 = 0, _acc501 = 0, _acc60 = 0, _acc500 = 0, _acc535 = 0, _acc8 = 0, _acc582 = 0, _acc7 = 0, _acc68 = 0, _acc584 = 0, _acc586 = 0, _acc585 = 0, _acc319 = 0, _acc587 = 0, _acc316 = 0, _acc583 = 0, _acc588 = 0, _acc589 = 0, _acc590 = 0, _acc11 = 0, _acc9 = 0, _acc594 = 0, _acc591 = 0, _acc592 = 0, _acc595 = 0, _acc580 = 0, _acc596 = 0, _acc600 = 0, _acc601 = 0, _acc602 = 0, _acc45 = 0, _acc612 = 0, _acc613 = 0, _acc603 = 0, _acc611 = 0, _acc374 = 0, _acc616 = 0, _acc628 = 0, _acc644 = 0, _acc90 = 0, _acc646 = 0, _acc629 = 0, _acc540 = 0, _acc648 = 0, _acc650 = 0, _acc652 = 0, _acc89 = 0, _acc654 = 0, _acc640 = 0, _acc651 = 0, _acc662 = 0, _acc660 = 0, _acc624 = 0, _acc623 = 0, _acc667 = 0, _acc665 = 0, _acc668 = 0, _acc670 = 0, _acc672 = 0, _acc674 = 0, _acc675 = 0, _acc676 = 0, _acc678 = 0, _acc679 = 0, _acc935 = 0, _acc928 = 0, _acc375 = 0, _acc899 = 0, _acc1565 = 0, _acc376 = 0, _acc58 = 0, _acc900 = 0, _acc597 = 0, _acc1566 = 0, _acc1371 = 0, _acc1368 = 0, _acc1017 = 0, _acc164 = 0, _acc941 = 0, _acc946 = 0, _acc1158 = 0, _acc1572 = 0, _acc1502 = 0, _acc1573 = 0, _acc1579 = 0, _acc800 = 0, _acc1583 = 0, _acc1286 = 0, _acc1326 = 0, _acc114 = 0, _acc1325 = 0, _acc1334 = 0, _acc649 = 0, _acc975 = 0, _acc111 = 0, _acc1323 = 0, _acc1584 = 0, _acc1426 = 0, _acc805 = 0, _acc1582 = 0, _acc1124 = 0, _acc806 = 0, _acc1340 = 0, _acc981 = 0, _acc1467 = 0, _acc1252 = 0, _acc110 = 0, _acc694 = 0, _acc1355 = 0, _acc1358 = 0, _acc1359 = 0, _acc1554 = 0, _acc1353 = 0, _acc695 = 0, _acc1362 = 0, _acc165 = 0, _acc942 = 0, _acc1425 = 0, _acc1361 = 0, _acc1357 = 0, _acc702 = 0, _acc1320 = 0, _acc1090 = 0, _acc262 = 0, _acc1469 = 0, _acc741 = 0, _acc739 = 0, _acc738 = 0, _acc507 = 0, _acc1188 = 0, _acc1379 = 0, _acc1322 = 0, _acc775 = 0, _acc229 = 0, _acc1338 = 0, _acc1399 = 0, _acc230 = 0, _acc1400 = 0, _acc1403 = 0, _acc1404 = 0, _acc1406 = 0, _acc1561 = 0, _acc1011 = 0, _acc1356 = 0, _acc1255 = 0, _acc1377 = 0, _acc471 = 0, _acc786 = 0, _acc1437 = 0, _acc1438 = 0, _acc1178 = 0, _acc1364 = 0, _acc288 = 0, _acc1559 = 0, _acc516 = 0, _acc1442 = 0, _acc1393 = 0, _acc1461 = 0, _acc693 = 0, _acc173 = 0, _acc1446 = 0, _acc753 = 0, _acc1336 = 0, _acc1398 = 0, _acc136 = 0, _acc1436 = 0, _acc1173 = 0, _acc1451 = 0, _acc129 = 0, _acc1536 = 0, _acc630 = 0, _acc725 = 0, _acc1453 = 0, _acc1397 = 0, _acc537 = 0, _acc1095 = 0, _acc1450 = 0, _acc1535 = 0, _acc44 = 0, _acc1429 = 0, _acc1292 = 0, _acc1087 = 0, _acc1447 = 0, _acc754 = 0, _acc1405 = 0, _acc653 = 0, _acc1456 = 0, _acc1454 = 0, _acc1458 = 0, _acc1388 = 0, _acc773 = 0, _acc417 = 0, _acc1409 = 0, _acc1268 = 0, _acc23 = 0, _acc1056 = 0, _acc536 = 0, _acc1577 = 0, _acc257 = 0, _acc1466 = 0, _acc1575 = 0, _acc1004 = 0, _acc1470 = 0, _acc1219 = 0, _acc1374 = 0, _acc982 = 0, _acc1471 = 0, _acc1463 = 0, _acc1378 = 0, _acc895 = 0, _acc338 = 0, _acc1223 = 0, _acc265 = 0, _acc1472 = 0, _acc1008 = 0, _acc1479 = 0, _acc208 = 0, _acc1064 = 0, _acc1462 = 0, _acc1412 = 0, _acc1637 = 0, _acc76 = 0, _acc1481 = 0, _acc1483 = 0, _acc1018 = 0, _acc931 = 0, _acc1366 = 0, _acc1486 = 0, _acc921 = 0, _acc1367 = 0, _acc1123 = 0, _acc1477 = 0, _acc917 = 0, _acc1103 = 0, _acc342 = 0, _acc1444 = 0, _acc357 = 0, _acc1490 = 0, _acc909 = 0, _acc1327 = 0, _acc399 = 0, _acc1302 = 0, _acc949 = 0, _acc1491 = 0, _acc1328 = 0, _acc943 = 0, _acc1363 = 0, _acc1485 = 0, _acc1484 = 0, _acc920 = 0, _acc904 = 0, _acc1019 = 0, _acc1390 = 0, _acc1494 = 0, _acc1498 = 0, _acc1569 = 0, _acc1416 = 0, _acc1428 = 0, _acc1365 = 0, _acc1395 = 0, _acc1256 = 0, _acc1345 = 0, _acc1529 = 0, _acc1619 = 0, _acc1531 = 0, _acc1381 = 0, _acc1533 = 0, _acc631 = 0, _acc726 = 0, _acc1538 = 0, _acc632 = 0, _acc727 = 0, _acc73 = 0, _acc1540 = 0, _acc634 = 0, _acc729 = 0, _acc1552 = 0, _acc1009 = 0, _acc1284 = 0, _acc1055 = 0, _acc1545 = 0, _acc39 = 0, _acc1287 = 0, _acc118 = 0, _acc1310 = 0, _acc952 = 0, _acc1422 = 0, _acc398 = 0, _acc1299 = 0, _acc1329 = 0, _acc1402 = 0, _acc802 = 0, _acc326 = 0, _acc1563 = 0, _acc1542 = 0, _acc1581 = 0, _acc1417 = 0, _acc804 = 0, _acc664 = 0, _acc636 = 0, _acc731 = 0, _acc1312 = 0, _acc1258 = 0, _acc1380 = 0, _acc1522 = 0, _acc1503 = 0, _acc599 = 0, _acc1293 = 0, _acc967 = 0, _acc478 = 0, _acc1245 = 0, _acc639 = 0, _acc734 = 0, _acc1246 = 0, _acc930 = 0, _acc485 = 0, _acc1578 = 0, _acc971 = 0, _acc458 = 0, _acc1507 = 0, _acc484 = 0, _acc973 = 0, _acc238 = 0, _acc1341 = 0, _acc483 = 0, _acc970 = 0, _acc621 = 0, _acc1350 = 0, _acc627 = 0, _acc1520 = 0, _acc157 = 0, _acc1164 = 0, _acc819 = 0, _acc113 = 0, _acc1389 = 0, _acc1324 = 0, _acc1443 = 0, _acc1556 = 0, _acc482 = 0, _acc481 = 0, _acc878 = 0, _acc1247 = 0, _acc480 = 0, _acc440 = 0, _acc1240 = 0, _acc1528 = 0, _acc1233 = 0, _acc1532 = 0, _acc100 = 0, _acc605 = 0, _acc1631 = 0, _acc666 = 0, _acc871 = 0, _acc1262 = 0, _acc711 = 0, _acc1288 = 0, _acc199 = 0, _acc1281 = 0, _acc809 = 0, _acc1217 = 0, _acc598 = 0, _acc1025 = 0, _acc671 = 0, _acc1593 = 0, _acc1372 = 0, _acc1253 = 0, _acc383 = 0, _acc55 = 0, _acc1612 = 0, _acc881 = 0, _acc479 = 0, _acc1097 = 0, _acc1386 = 0, _acc680 = 0, _acc1337 = 0, _acc1401 = 0, _acc350 = 0, _acc1601 = 0, _acc1317 = 0, _acc278 = 0, _acc1547 = 0, _acc1347 = 0, _acc1620 = 0, _acc1530 = 0, _acc661 = 0, _acc985 = 0, _acc1260 = 0, _acc1506 = 0, _acc52 = 0, _acc1331 = 0, _acc724 = 0, _acc579 = 0, _acc1555 = 0, _acc323 = 0, _acc1558 = 0, _acc1261 = 0, _acc894 = 0, _acc1222 = 0, _acc710 = 0, _acc607 = 0, _acc1633 = 0, _acc1301 = 0, _acc541 = 0, _acc1452 = 0, _acc1149 = 0, _acc1623 = 0, _acc1580 = 0, _acc1629 = 0, _acc135 = 0, _acc1435 = 0, _acc302 = 0, _acc1232 = 0, _acc178 = 0, _acc1600 = 0, _acc198 = 0, _acc808 = 0, _acc1278 = 0, _acc663 = 0, _acc1109 = 0, _acc469 = 0, _acc785 = 0, _acc107 = 0, _acc1294 = 0, _acc542 = 0, _acc1455 = 0, _acc643 = 0, _acc687 = 0, _acc1236 = 0, _acc1590 = 0, _acc1624 = 0, _acc641 = 0, _acc1234 = 0, _acc929 = 0, _acc1414 = 0, _acc1060 = 0, _acc1598 = 0, _acc719 = 0, _acc1625 = 0, _acc368 = 0, _acc896 = 0, _acc1501 = 0, _acc656 = 0, _acc1588 = 0, _acc1384 = 0, _acc1318 = 0, _acc1616 = 0, _acc1201 = 0, _acc256 = 0, _acc1586 = 0, _acc1316 = 0, _acc1257 = 0, _acc1333 = 0, _acc722 = 0, _acc1251 = 0, _acc999 = 0, _acc1636 = 0, _acc134 = 0, _acc1434 = 0, _acc177 = 0, _acc1599 = 0, _acc720 = 0, _acc1576 = 0, _acc795 = 0, _acc1626 = 0, _acc577 = 0, _acc1205 = 0, _acc341 = 0, _acc1227 = 0, _acc1373 = 0, _acc99 = 0, _acc604 = 0, _acc1630 = 0, _acc1383 = 0, _acc1290 = 0, _acc349 = 0, _acc1482 = 0, _acc1553 = 0, _acc1628 = 0, _acc1613 = 0, _acc1199 = 0, _acc192 = 0, _acc1415 = 0, _acc619 = 0, _acc911 = 0, _acc1634 = 0, _acc1514 = 0, _acc1539 = 0, _acc633 = 0, _acc728 = 0, _acc224 = 0, _acc1396 = 0, _acc1254 = 0, _acc642 = 0, _acc1235 = 0, _acc685 = 0, _acc879 = 0, _acc684 = 0, _acc423 = 0, _acc1346 = 0, _acc873 = 0, _acc1430 = 0, _acc610 = 0, _acc1304 = 0, _acc1077 = 0, _acc792 = 0, _acc442 = 0, _acc1609 = 0, _acc606 = 0, _acc1300 = 0, _acc1632 = 0, _acc1610 = 0, _acc1098 = 0, _acc246 = 0, _acc555 = 0, _acc691 = 0, _acc1014 = 0, _acc807 = 0, _acc1277 = 0, _acc468 = 0, _acc784 = 0, _acc1627 = 0, _acc103 = 0, _acc492 = 0, _acc1432 = 0, _acc1224 = 0, _acc958 = 0, _acc828 = 0, _acc506 = 0, _acc1187 = 0, _acc1478 = 0, _acc882 = 0, _acc293 = 0, _acc1237 = 0, _acc688 = 0, _acc609 = 0, _acc1511 = 0, _acc1303 = 0, _acc1074 = 0, _acc422 = 0, _acc791 = 0, _acc1608 = 0, _acc112 = 0, _acc1391 = 0, _acc774 = 0, _acc883 = 0, _acc247 = 0, _acc1459 = 0, _acc1053 = 0, _acc294 = 0, _acc1238 = 0, _acc689 = 0, _acc1295 = 0, _acc1543 = 0, _acc499 = 0, _acc1296 = 0, _acc248 = 0, _acc1460 = 0, _acc1548 = 0, _acc1239 = 0, _acc690 = 0, _acc1248 = 0, _acc947 = 0, _acc172 = 0, _acc963 = 0, _acc1271 = 0, _acc1272 = 0, _acc325 = 0, _acc4 = 0, _acc1570 = 0, _acc367 = 0, _acc1500 = 0, _acc1618 = 0, _acc425 = 0, _acc744 = 0, _acc1516 = 0, _acc1155 = 0, _acc1571 = 0, _acc657 = 0, _acc1112 = 0, _acc1270 = 0, _acc1635 = 0, _acc1276 = 0, _acc1106 = 0, _acc167 = 0, _acc944 = 0, _acc297 = 0, _acc1387 = 0, _acc992 = 0, _acc1263 = 0, _acc1560 = 0, _acc1476 = 0, _acc916 = 0, _acc416 = 0, _acc1408 = 0, _acc1265 = 0, _acc1010 = 0, _acc1267 = 0, _acc1099 = 0, _acc1266 = 0, _acc1096 = 0, _acc1264 = 0, _acc1614 = 0, _acc1200 = 0, _acc796 = 0, _acc1250 = 0, _acc548 = 0, _acc978 = 0, _acc1369 = 0, _acc1291 = 0, _acc1433 = 0, _acc1515 = 0, _acc1526 = 0, _acc1376 = 0, _acc869 = 0, _acc268 = 0, _acc1591 = 0, _acc1118 = 0, _acc1473 = 0, _acc735 = 0, _acc1525 = 0, _acc1524 = 0, _acc1505 = 0, _acc898 = 0, _acc915 = 0, _acc522 = 0, _acc1226 = 0, _acc1523 = 0, _acc1439 = 0, _acc1181 = 0, _acc966 = 0, _acc477 = 0, _acc88 = 0, _acc1457 = 0, _acc772 = 0, _acc6 = 0, _acc1343 = 0, _acc37 = 0, _acc986 = 0, _acc1349 = 0, _acc1622 = 0, _acc386 = 0, _acc626 = 0, _acc1082 = 0, _acc913 = 0, _acc1518 = 0, _acc1348 = 0, _acc1621 = 0, _acc625 = 0, _acc1517 = 0, _acc637 = 0, _acc1313 = 0, _acc732 = 0, _acc1086 = 0, _acc472 = 0, _acc1344 = 0, _acc211 = 0, _acc578 = 0, _acc1638 = 0, _acc608 = 0, _acc1510 = 0, _acc801 = 0, _acc1562 = 0, _acc242 = 0, _acc94 = 0, _acc1012 = 0, _acc74 = 0, _acc1541 = 0, _acc635 = 0, _acc730 = 0, _acc1611 = 0, _acc1513 = 0, _acc155 = 0, _acc818 = 0, _acc1162 = 0, _acc459 = 0, _acc101 = 0, _acc1508 = 0, _acc154 = 0, _acc817 = 0, _acc1161 = 0, _acc1037 = 0, _acc1568 = 0, _acc1546 = 0, _acc102 = 0, _acc494 = 0, _acc1431 = 0, _acc957 = 0, _acc1360 = 0, _acc827 = 0, _acc1564 = 0, _acc752 = 0, _acc905 = 0, _acc439 = 0, _acc1319 = 0, _acc781 = 0, _acc1382 = 0, _acc988 = 0, _acc214 = 0, _acc280 = 0, _acc1549 = 0, _acc438 = 0, _acc1321 = 0, _acc54 = 0, _acc1186 = 0, _acc1298 = 0, _acc1179 = 0, _acc1551 = 0, _acc1480 = 0, _acc1550 = 0, _acc622 = 0, _acc1370 = 0, _acc1308 = 0, _acc1534 = 0, _acc104 = 0, _acc493 = 0, _acc936 = 0, _acc1424 = 0, _acc1166 = 0, _acc358 = 0, _acc852 = 0, _acc1040 = 0, _acc1497 = 0, _acc860 = 0, _acc495 = 0, _acc939 = 0, _acc938 = 0, _acc1419 = 0, _acc1282 = 0, _acc812 = 0, _acc937 = 0, _acc918 = 0, _acc923 = 0, _acc1146 = 0, _acc1070 = 0, _acc924 = 0, _acc934 = 0, _acc1147 = 0, _acc1068 = 0, _acc925 = 0, _acc1163 = 0, _acc927 = 0, _acc1148 = 0, _acc1069 = 0, _acc922 = 0, _acc620 = 0, _acc912 = 0, _acc1305 = 0, _acc907 = 0, _acc1487 = 0, _acc848 = 0, _acc908 = 0, _acc1342 = 0, _acc777 = 0, _acc353 = 0, _acc847 = 0, _acc906 = 0, _acc846 = 0, _acc1420 = 0, _acc926 = 0, _acc1160 = 0, _acc228 = 0, _acc889 = 0, _acc1537 = 0, _acc950 = 0, _acc1184 = 0, _acc1352 = 0, _acc1159 = 0, _acc1595 = 0, _acc1035 = 0, _acc1468 = 0, _acc1114 = 0, _acc380 = 0, _acc1154 = 0, _acc1297 = 0, _acc1185 = 0, _acc1183 = 0, _acc1151 = 0, _acc1152 = 0, _acc1182 = 0, _acc1027 = 0, _acc1407 = 0, _acc778 = 0, _acc142 = 0, _acc1193 = 0, _acc143 = 0, _acc1194 = 0, _acc51 = 0, _acc1195 = 0, _acc1203 = 0, _acc618 = 0, _acc910 = 0, _acc742 = 0, _acc1202 = 0, _acc1196 = 0, _acc1615 = 0, _acc980 = 0, _acc1198 = 0, _acc22 = 0, _acc1197 = 0, _acc428 = 0, _acc748 = 0, _acc244 = 0, _acc1174 = 0, _acc166 = 0, _acc509 = 0, _acc1190 = 0, _acc508 = 0, _acc1189 = 0, _acc538 = 0, _acc823 = 0, _acc948 = 0, _acc1192 = 0, _acc1180 = 0, _acc987 = 0, _acc259 = 0, _acc867 = 0, _acc1177 = 0, _acc1122 = 0, _acc1120 = 0, _acc1058 = 0, _acc1121 = 0, _acc1116 = 0, _acc1117 = 0, _acc1075 = 0, _acc864 = 0, _acc1108 = 0, _acc1115 = 0, _acc1033 = 0, _acc1111 = 0, _acc1589 = 0, _acc1113 = 0, _acc1411 = 0, _acc790 = 0, _acc1464 = 0, _acc1110 = 0, _acc1105 = 0, _acc47 = 0, _acc1104 = 0, _acc1088 = 0, _acc528 = 0, _acc1229 = 0, _acc1092 = 0, _acc1102 = 0, _acc1101 = 0, _acc1100 = 0, _acc441 = 0, _acc1091 = 0, _acc92 = 0, _acc645 = 0, _acc1094 = 0, _acc116 = 0, _acc824 = 0, _acc1083 = 0, _acc1085 = 0, _acc1081 = 0, _acc617 = 0, _acc1080 = 0, _acc615 = 0, _acc1306 = 0, _acc1079 = 0, _acc1076 = 0, _acc614 = 0, _acc1157 = 0, _acc1078 = 0, _acc378 = 0, _acc1153 = 0, _acc1072 = 0, _acc473 = 0, _acc787 = 0, _acc1509 = 0, _acc1073 = 0, _acc1065 = 0, _acc1061 = 0, _acc681 = 0, _acc1597 = 0, _acc1059 = 0, _acc708 = 0, _acc655 = 0, _acc1592 = 0, _acc1052 = 0, _acc517 = 0, _acc776 = 0, _acc255 = 0, _acc1050 = 0, _acc1020 = 0, _acc1049 = 0, _acc1045 = 0, _acc1048 = 0, _acc1047 = 0, _acc1499 = 0, _acc1046 = 0, _acc1042 = 0, _acc1495 = 0, _acc1043 = 0, _acc880 = 0, _acc1034 = 0, _acc1039 = 0, _acc1594 = 0, _acc1032 = 0, _acc1030 = 0, _acc1031 = 0, _acc1028 = 0, _acc470 = 0, _acc783 = 0, _acc658 = 0, _acc1026 = 0, _acc1024 = 0, _acc1023 = 0, _acc1585 = 0, _acc865 = 0, _acc1021 = 0, _acc1587 = 0, _acc1022 = 0, _acc1015 = 0, _acc15 = 0, _acc825 = 0, _acc1016 = 0, _acc1013 = 0, _acc989 = 0, _acc1474 = 0, _acc990 = 0, _acc1475 = 0, _acc991 = 0, _acc876 = 0, _acc993 = 0, _acc877 = 0, _acc994 = 0, _acc174 = 0, _acc1000 = 0, _acc1001 = 0, _acc1244 = 0, _acc697 = 0, _acc93 = 0, _acc647 = 0, _acc1005 = 0, _acc1007 = 0, _acc539 = 0, _acc1006 = 0, _acc997 = 0, _acc1448 = 0, _acc998 = 0, _acc996 = 0, _acc984 = 0, _acc1441 = 0, _acc956 = 0, _acc160 = 0, _acc822 = 0, _acc677 = 0, _acc171 = 0, _acc10 = 0, _acc965 = 0, _acc26 = 0, _acc962 = 0, _acc964 = 0, _acc961 = 0, _acc169 = 0, _acc960 = 0, _acc976 = 0, _acc723 = 0, _acc547 = 0, _acc977 = 0, _acc969 = 0, _acc974 = 0, _acc972 = 0, _acc1002 = 0, _acc968 = 0, _acc1003 = 0, _acc1230 = 0, _acc348 = 0, _acc64 = 0, _acc527 = 0, _acc1231 = 0, _acc1218 = 0, _acc79 = 0, _acc1465 = 0, _acc868 = 0, _acc673 = 0, _acc875 = 0, _acc258 = 0, _acc866 = 0, _acc874 = 0, _acc1119 = 0, _acc872 = 0, _acc870 = 0, _acc385 = 0, _acc427 = 0, _acc747 = 0, _acc426 = 0, _acc1519 = 0, _acc746 = 0, _acc1496 = 0, _acc1044 = 0, _acc858 = 0, _acc253 = 0, _acc863 = 0, _acc1051 = 0, _acc859 = 0, _acc371 = 0, _acc862 = 0, _acc152 = 0, _acc1285 = 0, _acc814 = 0, _acc669 = 0, _acc745 = 0, _acc857 = 0, _acc856 = 0, _acc855 = 0, _acc850 = 0, _acc1493 = 0, _acc1066 = 0, _acc854 = 0, _acc1492 = 0, _acc1041 = 0, _acc853 = 0, _acc1063 = 0, _acc890 = 0, _acc1488 = 0, _acc851 = 0, _acc1274 = 0, _acc799 = 0, _acc1489 = 0, _acc891 = 0, _acc849 = 0, _acc1375 = 0, _acc826 = 0, _acc151 = 0, _acc1283 = 0, _acc813 = 0, _acc159 = 0, _acc821 = 0, _acc158 = 0, _acc820 = 0, _acc1273 = 0, _acc798 = 0, _acc156 = 0, _acc816 = 0, _acc153 = 0, _acc1354 = 0, _acc1421 = 0, _acc815 = 0, _acc1280 = 0, _acc811 = 0, _acc200 = 0, _acc1279 = 0, _acc810 = 0, _acc659 = 0, _acc803 = 0, _acc1269 = 0, _acc793 = 0, _acc914 = 0, _acc797 = 0, _acc794 = 0, _acc421 = 0, _acc789 = 0, _acc788 = 0, _acc780 = 0, _acc779 = 0, _acc424 = 0, _acc743 = 0, _acc1504 = 0, _acc740 = 0, _acc782 = 0, _acc737 = 0, _acc462 = 0, _acc736 = 0, _acc706 = 0, _acc692 = 0, _acc377 = 0, _acc901 = 0, _acc712 = 0, _acc638 = 0, _acc1314 = 0, _acc733 = 0, _acc715 = 0, _acc721 = 0, _acc717 = 0, _acc696 = 0, _acc303 = 0, _acc700 = 0, _acc701 = 0, _acc718 = 0, _acc301 = 0, _acc699 = 0, _acc716 = 0, _acc714 = 0, _acc902 = 0, _acc713 = 0, _acc698 = 0, _acc703 = 0, _acc1332 = 0, _acc709 = 0, _acc1330 = 0, _acc707 = 0, _acc705 = 0, _acc704 = 0, _acc1107 = 0, _acc686 = 0, _acc683 = 0, _acc432 = 0, _acc682 = 0, _acc292 = 0, _acc5 = 0;
	/* Reverse accumulation */
	_acc1638 = 1.0;
	_t1639 = (float)1.0 / (_t1637);
	_acc1637 += _acc1638 * _t1639;
	_acc1636 += _acc1637;
	_acc1633 += _acc1637;
	_acc1635 += _acc1636;
	_acc1634 += _acc1636;
	_acc1628 += _acc1635 * 0.212671;
	_acc1630 += _acc1634 * 0.715160;
	_acc1632 += _acc1633 * 0.072169;
	_acc1631 += _acc1632 * _t1626;
	_acc1626 += _acc1632 * _t1631;
	_acc1625 += _acc1631 * _t1600;
	_acc1600 += _acc1631 * _t1625;
	_acc1629 += _acc1630 * _t1626;
	_acc1626 += _acc1630 * _t1629;
	_acc1624 += _acc1629 * _t1599;
	_acc1599 += _acc1629 * _t1624;
	_acc1627 += _acc1628 * _t1626;
	_acc1626 += _acc1628 * _t1627;
	_acc1623 += _acc1627 * _t1598;
	_acc1598 += _acc1627 * _t1623;
	_acc1601 += _acc1626 * _t1622;
	_acc1622 += _acc1626 * _t1601;
	_acc470 += _acc1625 * _t881;
	_acc881 += _acc1625 * _t470;
	_acc469 += _acc1624 * _t880;
	_acc880 += _acc1624 * _t469;
	_acc468 += _acc1623 * _t879;
	_acc879 += _acc1623 * _t468;
	_t1640 = _t1622 * _t1622;
	_t1641 = -_t1640;
	_acc1621 += _acc1622 * _t1641;
	_acc1620 += _acc1621;
	_acc1619 += _acc1621;
	_acc1616 += _acc1620;
	_acc1618 += _acc1619 * _t865;
	_acc865 += _acc1619 * _t1618;
	_t1642 = 2.000000 * _t1611;
	_acc1611 += _acc1618 * _t1642;
	_acc1615 += _acc1616 * _t1614;
	_acc1614 += _acc1616 * _t1615;
	_t1643 = 2.000000 * _t1609;
	_acc1609 += _acc1615 * _t1643;
	_acc598 += _acc1614;
	_acc1613 += _acc1614;
	_acc599 += _acc1613 * _t1612;
	_acc1612 += _acc1613 * _t599;
	_t1644 = 2.000000 * _t1240;
	_acc1240 += _acc1612 * _t1644;
	_acc1610 += _acc1611 * _t1601;
	_acc1601 += _acc1611 * _t1610;
	_acc1239 += _acc1610 * _t882;
	_acc882 += _acc1610 * _t1239;
	_acc1608 += _acc1609 * _t1601;
	_acc1601 += _acc1609 * _t1608;
	_acc883 += _acc1608 * _t1238;
	_acc1238 += _acc1608 * _t883;
	_t1645 = _t1601 * _t1601;
	_t1646 = -_t1645;
	_acc873 += _acc1601 * _t1646;
	_acc1237 += _acc1600 * _t1595;
	_acc1595 += _acc1600 * _t1237;
	_acc1236 += _acc1599 * _t1595;
	_acc1595 += _acc1599 * _t1236;
	_acc1235 += _acc1598 * _t1595;
	_acc1595 += _acc1598 * _t1235;
	cif (_t1594 >= 0.000000) {
		_acc1594 = _acc1595;
	}
	else {
		_acc1597 = _acc1595;
		_acc1594 -= _acc1597;
	}
	_t1647 = (float)1.0 / (_t1592);
	_acc1593 += _acc1594 * _t1647;
	_t1648 = -_t1593;
	_t1649 = _t1647 * _t1647;
	_t1650 = _t1648 * _t1649;
	_acc1592 += _acc1594 * _t1650;
	_acc1591 += _acc1593 * _t1588;
	_acc1588 += _acc1593 * _t1591;
	_acc1590 += _acc1592 * _t1589;
	_acc1589 += _acc1592 * _t1590;
	_acc480 += _acc1591 * _t1585;
	_acc481 += _acc1591 * _t1586;
	_acc482 += _acc1591 * _t1587;
	_acc1585 += _acc1591 * _t480;
	_acc1586 += _acc1591 * _t481;
	_acc1587 += _acc1591 * _t482;
	_acc480 += _acc1590 * _t577;
	_acc481 += _acc1590 * _t578;
	_acc482 += _acc1590 * _t579;
	_acc577 += _acc1590 * _t480;
	_acc578 += _acc1590 * _t481;
	_acc579 += _acc1590 * _t482;
	_acc483 += _acc1589 * _t1585;
	_acc484 += _acc1589 * _t1586;
	_acc485 += _acc1589 * _t1587;
	_acc1585 += _acc1589 * _t483;
	_acc1586 += _acc1589 * _t484;
	_acc1587 += _acc1589 * _t485;
	_acc483 += _acc1588 * _t577;
	_acc484 += _acc1588 * _t578;
	_acc485 += _acc1588 * _t579;
	_acc577 += _acc1588 * _t483;
	_acc578 += _acc1588 * _t484;
	_acc579 += _acc1588 * _t485;
	_acc878 -= _acc1587;
	_acc877 -= _acc1586;
	_acc876 -= _acc1585;
	cif (vertParams[108] == 1.000000) {
		_acc1302 = _acc1235;
		_acc1303 = _acc1236;
		_acc1304 = _acc1237;
		_acc1254 = _acc1238;
		_acc1300 = _acc1239;
		_acc1301 = _acc1240;
		_acc1299 += _acc1304 * _t1254;
		_acc1254 += _acc1304 * _t1299;
		_acc1298 += _acc1303 * _t1254;
		_acc1254 += _acc1303 * _t1298;
		_acc1297 += _acc1302 * _t1254;
		_acc1254 += _acc1302 * _t1297;
		_acc1258 += _acc1301;
		_acc1288 += _acc1301;
		_acc1258 += _acc1300;
		_acc1287 += _acc1300;
		_acc1257 += _acc1299;
		_acc1286 += _acc1299;
		_acc1256 += _acc1298;
		_acc1285 += _acc1298;
		_acc1255 += _acc1297;
		_acc1284 += _acc1297;
		cif (vertParams[116] < 1.000000) {
			_acc1290 = _acc1284;
			_acc1291 = _acc1285;
			_acc1292 = _acc1286;
			_acc1295 = _acc1287;
			_acc1296 = _acc1288;
			_acc1294 += _acc1296 * _t1248;
			_acc1248 += _acc1296 * _t1294;
			_acc1294 += _acc1295 * _t1254;
			_acc1254 += _acc1295 * _t1294;
			_acc1293 += _acc1294 * 0.318310;
		}
		else {
		}
		cif (vertParams[116] > 0.000000) {
			_acc1271 = _acc1255;
			_acc1272 = _acc1256;
			_acc1273 = _acc1257;
			_acc1274 = _acc1258;
			cif (_t1270 > 0.000000) {
				_acc1279 = _acc1271;
				_acc1280 = _acc1272;
				_acc1281 = _acc1273;
				_acc1283 = _acc1274;
				_acc1282 += _acc1283 * _t1270;
				_acc1270 += _acc1283 * _t1282;
				_acc1276 += _acc1282 * vertParams[116];
				_acc1278 += _acc1281 * vertParams[114];
				_acc1278 += _acc1280 * vertParams[113];
				_acc1278 += _acc1279 * vertParams[112];
				_acc1277 += _acc1278 * _t1270;
				_acc1270 += _acc1278 * _t1277;
			}
			else {
			}
			_acc1269 += _acc1270 * 0.159155;
			_t1651 = vertParams[115]-1.000000;
			_t1652 = pow(_t1268,_t1651);
			_t1653 = vertParams[115] * _t1652;
			_acc1268 += _acc1269 * _t1653;
			_acc1263 += _acc1268 * _t1232;
			_acc1265 += _acc1268 * _t1233;
			_acc1267 += _acc1268 * _t1234;
			_acc1232 += _acc1268 * _t1263;
			_acc1233 += _acc1268 * _t1265;
			_acc1234 += _acc1268 * _t1267;
			_acc1266 += _acc1267;
			_acc579 -= _acc1267;
			_acc1261 += _acc1266 * _t1247;
			_acc1247 += _acc1266 * _t1261;
			_acc1264 += _acc1265;
			_acc578 -= _acc1265;
			_acc1261 += _acc1264 * _t1246;
			_acc1246 += _acc1264 * _t1261;
			_acc1262 += _acc1263;
			_acc577 -= _acc1263;
			_acc1261 += _acc1262 * _t1245;
			_acc1245 += _acc1262 * _t1261;
			_acc1260 += _acc1261 * 2.000000;
			_acc577 += _acc1260 * _t1245;
			_acc578 += _acc1260 * _t1246;
			_acc579 += _acc1260 * _t1247;
			_acc1245 += _acc1260 * _t577;
			_acc1246 += _acc1260 * _t578;
			_acc1247 += _acc1260 * _t579;
		}
		else {
		}
		_acc1245 += _acc1254 * _t1232;
		_acc1246 += _acc1254 * _t1233;
		_acc1247 += _acc1254 * _t1234;
		_acc1232 += _acc1254 * _t1245;
		_acc1233 += _acc1254 * _t1246;
		_acc1234 += _acc1254 * _t1247;
		cif (_t1244 > 0.000000) {
			_acc483 = _acc1245;
			_acc484 = _acc1246;
			_acc485 = _acc1247;
			_acc1244 = _acc1248;
		}
		else {
			_acc1250 = _acc1245;
			_acc1251 = _acc1246;
			_acc1252 = _acc1247;
			_acc1253 = _acc1248;
			_acc1244 -= _acc1253;
			_acc485 -= _acc1252;
			_acc484 -= _acc1251;
			_acc483 -= _acc1250;
		}
		_acc483 += _acc1244 * _t577;
		_acc484 += _acc1244 * _t578;
		_acc485 += _acc1244 * _t579;
		_acc577 += _acc1244 * _t483;
		_acc578 += _acc1244 * _t484;
		_acc579 += _acc1244 * _t485;
	}
	else cif (vertParams[108] == 2.000000) {
		_acc1502 = _acc1235;
		_acc1503 = _acc1236;
		_acc1504 = _acc1237;
		_acc1306 = _acc1238;
		_acc1505 = _acc1239;
		_acc1506 = _acc1240;
		cif (_t1307 > 0.000000) {
			_acc1514 = _acc1502;
			_acc1515 = _acc1503;
			_acc1516 = _acc1504;
			_acc1520 = _acc1505;
			_acc1526 = _acc1506;
			cif (_t1525 >= 0.000000) {
				_acc1525 = _acc1526;
			}
			else {
				_acc1528 = _acc1526;
				_acc1525 -= _acc1528;
			}
			_t1654 = (float)1.0 / (_t1523);
			_acc1524 += _acc1525 * _t1654;
			_t1655 = -_t1524;
			_t1656 = _t1654 * _t1654;
			_t1657 = _t1655 * _t1656;
			_acc1523 += _acc1525 * _t1657;
			_acc1501 += _acc1524 * _t1391;
			_acc1391 += _acc1524 * _t1501;
			_acc1343 += _acc1523 * 4.000000;
			cif (_t1519 >= 0.000000) {
				_acc1519 = _acc1520;
			}
			else {
				_acc1522 = _acc1520;
				_acc1519 -= _acc1522;
			}
			_t1658 = (float)1.0 / (_t1517);
			_acc1518 += _acc1519 * _t1658;
			_t1659 = -_t1518;
			_t1660 = _t1658 * _t1658;
			_t1661 = _t1659 * _t1660;
			_acc1517 += _acc1519 * _t1661;
			_acc1480 += _acc1518 * _t1391;
			_acc1391 += _acc1518 * _t1480;
			_acc1344 += _acc1517 * 4.000000;
			_acc1511 += _acc1516 * vertParams[111];
			_acc1511 += _acc1515 * vertParams[110];
			_acc1511 += _acc1514 * vertParams[109];
			cif (_t1510 >= 0.000000) {
				_acc1510 = _acc1511;
			}
			else {
				_acc1513 = _acc1511;
				_acc1510 -= _acc1513;
			}
			_t1662 = (float)1.0 / (_t1507);
			_acc1509 += _acc1510 * _t1662;
			_t1663 = -_t1509;
			_t1664 = _t1662 * _t1662;
			_t1665 = _t1663 * _t1664;
			_acc1507 += _acc1510 * _t1665;
			_acc1508 += _acc1509 * _t1459;
			_acc1459 += _acc1509 * _t1508;
			_acc1391 += _acc1508 * _t1383;
			_acc1383 += _acc1508 * _t1391;
			_acc1305 += _acc1507 * 4.000000;
		}
		else {
			_acc1546 = _acc1502;
			_acc1547 = _acc1503;
			_acc1548 = _acc1504;
			_acc1556 = _acc1505;
			_acc1566 = _acc1506;
			cif (_t1565 >= 0.000000) {
				_acc1565 = _acc1566;
			}
			else {
				_acc1568 = _acc1566;
				_acc1565 -= _acc1568;
			}
			_t1666 = (float)1.0 / (_t1559);
			_acc1564 += _acc1565 * _t1666;
			_t1667 = -_t1564;
			_t1668 = _t1666 * _t1666;
			_t1669 = _t1667 * _t1668;
			_acc1559 += _acc1565 * _t1669;
			_acc1563 += _acc1564 * _t1561;
			_acc1561 += _acc1564 * _t1563;
			_acc1501 += _acc1563 * _t1562;
			_acc1562 += _acc1563 * _t1501;
			_acc1391 -= _acc1562;
			_acc1560 += _acc1561 * _t1343;
			_acc1343 += _acc1561 * _t1560;
			_t1670 = 2.000000 * _t1310;
			_acc1310 += _acc1560 * _t1670;
			_t1671 = 2.000000 * _t1532;
			_acc1532 += _acc1559 * _t1671;
			cif (_t1555 >= 0.000000) {
				_acc1555 = _acc1556;
			}
			else {
				_acc1558 = _acc1556;
				_acc1555 -= _acc1558;
			}
			_t1672 = (float)1.0 / (_t1549);
			_acc1554 += _acc1555 * _t1672;
			_t1673 = -_t1554;
			_t1674 = _t1672 * _t1672;
			_t1675 = _t1673 * _t1674;
			_acc1549 += _acc1555 * _t1675;
			_acc1553 += _acc1554 * _t1551;
			_acc1551 += _acc1554 * _t1553;
			_acc1480 += _acc1553 * _t1552;
			_acc1552 += _acc1553 * _t1480;
			_acc1391 -= _acc1552;
			_acc1550 += _acc1551 * _t1344;
			_acc1344 += _acc1551 * _t1550;
			_t1676 = 2.000000 * _t1308;
			_acc1308 += _acc1550 * _t1676;
			_t1677 = 2.000000 * _t1530;
			_acc1530 += _acc1549 * _t1677;
			_acc1543 += _acc1548 * vertParams[114];
			_acc1543 += _acc1547 * vertParams[113];
			_acc1543 += _acc1546 * vertParams[112];
			cif (_t1542 >= 0.000000) {
				_acc1542 = _acc1543;
			}
			else {
				_acc1545 = _acc1543;
				_acc1542 -= _acc1545;
			}
			_t1678 = (float)1.0 / (_t1534);
			_acc1541 += _acc1542 * _t1678;
			_t1679 = -_t1541;
			_t1680 = _t1678 * _t1678;
			_t1681 = _t1679 * _t1680;
			_acc1534 += _acc1542 * _t1681;
			_acc1540 += _acc1541 * _t1344;
			_acc1344 += _acc1541 * _t1540;
			_acc1539 += _acc1540 * _t1343;
			_acc1343 += _acc1540 * _t1539;
			_acc1538 += _acc1539 * _t1535;
			_acc1535 += _acc1539 * _t1538;
			_acc1537 += _acc1538 * _t1459;
			_acc1459 += _acc1538 * _t1537;
			_acc1536 += _acc1537 * _t1383;
			_acc1383 += _acc1537 * _t1536;
			_acc1391 -= _acc1536;
			_t1682 = 2.000000 * _t1308;
			_acc1308 += _acc1535 * _t1682;
			_acc1305 += _acc1534 * _t1533;
			_acc1533 += _acc1534 * _t1305;
			_t1683 = 2.000000 * _t1530;
			_acc1530 += _acc1533 * _t1683;
			_acc1344 += _acc1532;
			_acc1531 += _acc1532;
			_acc1310 += _acc1531 * _t1343;
			_acc1343 += _acc1531 * _t1310;
			_acc1343 += _acc1530;
			_acc1529 += _acc1530;
			_acc1308 += _acc1529 * _t1344;
			_acc1344 += _acc1529 * _t1308;
		}
		_acc1365 += _acc1501 * _t1500;
		_acc1500 += _acc1501 * _t1365;
		_t1684 = (float)1.0 / (_t1497);
		_acc1499 += _acc1500 * _t1684;
		_t1685 = -_t1499;
		_t1686 = _t1684 * _t1684;
		_t1687 = _t1685 * _t1686;
		_acc1497 += _acc1500 * _t1687;
		_acc1498 += _acc1499 * _t1499;
		_acc1493 -= _acc1498;
		_acc1496 += _acc1497 * _t1494;
		_acc1494 += _acc1497 * _t1496;
		_acc1495 += _acc1496 * _t1484;
		_acc1484 += _acc1496 * _t1495;
		_acc1484 += _acc1495 * 3.141593;
		_t1688 = 2.000000 * _t1485;
		_acc1485 += _acc1494 * _t1688;
		_t1689 = (float)1.0 / (_t1485);
		_acc1492 += _acc1493 * _t1689;
		_t1690 = -_t1492;
		_t1691 = _t1689 * _t1689;
		_t1692 = _t1690 * _t1691;
		_acc1485 += _acc1493 * _t1692;
		_acc1491 += _acc1492;
		_acc1488 += _acc1492;
		_t1693 = (float)1.0 / (_t1489);
		_acc1490 += _acc1491 * _t1693;
		_t1694 = -_t1490;
		_t1695 = _t1693 * _t1693;
		_t1696 = _t1694 * _t1695;
		_acc1489 += _acc1491 * _t1696;
		_t1697 = 2.000000 * _t1367;
		_acc1367 += _acc1490 * _t1697;
		_t1698 = 2.000000 * _t1484;
		_acc1484 += _acc1489 * _t1698;
		_t1699 = (float)1.0 / (_t1486);
		_acc1487 += _acc1488 * _t1699;
		_t1700 = -_t1487;
		_t1701 = _t1699 * _t1699;
		_t1702 = _t1700 * _t1701;
		_acc1486 += _acc1488 * _t1702;
		_t1703 = 2.000000 * _t1366;
		_acc1366 += _acc1487 * _t1703;
		_t1704 = 2.000000 * _t1484;
		_acc1484 += _acc1486 * _t1704;
		_t1705 = 2.000000 * _t1365;
		_acc1365 += _acc1485 * _t1705;
		_acc1483 += _acc1484 * vertParams[117];
		_acc1482 -= _acc1483;
		_acc1481 += _acc1482 * 0.200000;
		_t1706 = 2.000000 * _t1481;
		_t1707 = (float)1.0 / (_t1706);
		_acc1412 += _acc1481 * _t1707;
		_acc1365 += _acc1480 * _t1479;
		_acc1479 += _acc1480 * _t1365;
		_t1708 = (float)1.0 / (_t1476);
		_acc1478 += _acc1479 * _t1708;
		_t1709 = -_t1478;
		_t1710 = _t1708 * _t1708;
		_t1711 = _t1709 * _t1710;
		_acc1476 += _acc1479 * _t1711;
		_acc1477 += _acc1478 * _t1478;
		_acc1472 -= _acc1477;
		_acc1475 += _acc1476 * _t1473;
		_acc1473 += _acc1476 * _t1475;
		_acc1474 += _acc1475 * _t1463;
		_acc1463 += _acc1475 * _t1474;
		_acc1463 += _acc1474 * 3.141593;
		_t1712 = 2.000000 * _t1464;
		_acc1464 += _acc1473 * _t1712;
		_t1713 = (float)1.0 / (_t1464);
		_acc1471 += _acc1472 * _t1713;
		_t1714 = -_t1471;
		_t1715 = _t1713 * _t1713;
		_t1716 = _t1714 * _t1715;
		_acc1464 += _acc1472 * _t1716;
		_acc1470 += _acc1471;
		_acc1467 += _acc1471;
		_t1717 = (float)1.0 / (_t1468);
		_acc1469 += _acc1470 * _t1717;
		_t1718 = -_t1469;
		_t1719 = _t1717 * _t1717;
		_t1720 = _t1718 * _t1719;
		_acc1468 += _acc1470 * _t1720;
		_t1721 = 2.000000 * _t1367;
		_acc1367 += _acc1469 * _t1721;
		_t1722 = 2.000000 * _t1463;
		_acc1463 += _acc1468 * _t1722;
		_t1723 = (float)1.0 / (_t1465);
		_acc1466 += _acc1467 * _t1723;
		_t1724 = -_t1466;
		_t1725 = _t1723 * _t1723;
		_t1726 = _t1724 * _t1725;
		_acc1465 += _acc1467 * _t1726;
		_t1727 = 2.000000 * _t1366;
		_acc1366 += _acc1466 * _t1727;
		_t1728 = 2.000000 * _t1463;
		_acc1463 += _acc1465 * _t1728;
		_t1729 = 2.000000 * _t1365;
		_acc1365 += _acc1464 * _t1729;
		_acc1462 += _acc1463 * vertParams[117];
		_acc1461 -= _acc1462;
		_acc1460 += _acc1461 * 0.200000;
		_t1730 = 2.000000 * _t1460;
		_t1731 = (float)1.0 / (_t1730);
		_acc1409 += _acc1460 * _t1731;
		_acc1444 += _acc1459 * _t1422;
		_acc1422 += _acc1459 * _t1444;
		cif (_t1443 <= 0.000000) {
		}
		else {
			_acc1448 = _acc1444;
			cif (_t1447 >= 1.600000) {
			}
			else {
				_acc1458 = _acc1448;
				_t1732 = (float)1.0 / (_t1454);
				_acc1457 += _acc1458 * _t1732;
				_t1733 = -_t1457;
				_t1734 = _t1732 * _t1732;
				_t1735 = _t1733 * _t1734;
				_acc1454 += _acc1458 * _t1735;
				_acc1456 += _acc1457;
				_acc1455 += _acc1457;
				_acc1447 += _acc1456 * 3.535000;
				_acc1450 += _acc1455 * 2.181000;
				_acc1453 += _acc1454;
				_acc1451 += _acc1454;
				_acc1452 += _acc1453;
				_acc1447 += _acc1452 * 2.276000;
				_acc1450 += _acc1451 * 2.577000;
				_t1736 = 2.000000 * _t1447;
				_acc1447 += _acc1450 * _t1736;
			}
			_t1737 = _t1447 * _t1447;
			_t1738 = -_t1737;
			_acc1446 += _acc1447 * _t1738;
			_acc1443 += _acc1446 * vertParams[117];
		}
		_t1739 = (float)1.0 / (_t1409);
		_acc1442 += _acc1443 * _t1739;
		_t1740 = -_t1442;
		_t1741 = _t1739 * _t1739;
		_t1742 = _t1740 * _t1741;
		_acc1409 += _acc1443 * _t1742;
		_t1743 = 2.000000 * _t1442;
		_t1744 = (float)1.0 / (_t1743);
		_acc1439 += _acc1442 * _t1744;
		cif (_t1438 >= 0.000000) {
			_acc1438 = _acc1439;
		}
		else {
			_acc1441 = _acc1439;
			_acc1438 -= _acc1441;
		}
		_acc1437 -= _acc1438;
		_t1745 = 2.000000 * _t1409;
		_acc1409 += _acc1437 * _t1745;
		cif (_t1421 <= 0.000000) {
		}
		else {
			_acc1426 = _acc1422;
			cif (_t1425 >= 1.600000) {
			}
			else {
				_acc1436 = _acc1426;
				_t1746 = (float)1.0 / (_t1432);
				_acc1435 += _acc1436 * _t1746;
				_t1747 = -_t1435;
				_t1748 = _t1746 * _t1746;
				_t1749 = _t1747 * _t1748;
				_acc1432 += _acc1436 * _t1749;
				_acc1434 += _acc1435;
				_acc1433 += _acc1435;
				_acc1425 += _acc1434 * 3.535000;
				_acc1428 += _acc1433 * 2.181000;
				_acc1431 += _acc1432;
				_acc1429 += _acc1432;
				_acc1430 += _acc1431;
				_acc1425 += _acc1430 * 2.276000;
				_acc1428 += _acc1429 * 2.577000;
				_t1750 = 2.000000 * _t1425;
				_acc1425 += _acc1428 * _t1750;
			}
			_t1751 = _t1425 * _t1425;
			_t1752 = -_t1751;
			_acc1424 += _acc1425 * _t1752;
			_acc1421 += _acc1424 * vertParams[117];
		}
		_t1753 = (float)1.0 / (_t1412);
		_acc1420 += _acc1421 * _t1753;
		_t1754 = -_t1420;
		_t1755 = _t1753 * _t1753;
		_t1756 = _t1754 * _t1755;
		_acc1412 += _acc1421 * _t1756;
		_t1757 = 2.000000 * _t1420;
		_t1758 = (float)1.0 / (_t1757);
		_acc1417 += _acc1420 * _t1758;
		cif (_t1416 >= 0.000000) {
			_acc1416 = _acc1417;
		}
		else {
			_acc1419 = _acc1417;
			_acc1416 -= _acc1419;
		}
		_acc1415 -= _acc1416;
		_t1759 = 2.000000 * _t1412;
		_acc1412 += _acc1415 * _t1759;
		cif (_t1306 >= 0.000000) {
			_acc1306 = _acc1412;
		}
		else {
			_acc1414 = _acc1412;
			_acc1306 -= _acc1414;
		}
		cif (_t1305 >= 0.000000) {
			_acc1305 = _acc1409;
		}
		else {
			_acc1411 = _acc1409;
			_acc1305 -= _acc1411;
		}
		cif (_t1390 <= 0.000000) {
		}
		else {
			_acc1408 = _acc1391;
			_acc1407 += _acc1408 * 0.500000;
			_acc1406 += _acc1407;
			_acc1405 += _acc1407;
			_t1760 = 2.000000 * _t1401;
			_acc1401 += _acc1406 * _t1760;
			_t1761 = 2.000000 * _t1404;
			_acc1404 += _acc1405 * _t1761;
			_t1762 = (float)1.0 / (_t1402);
			_acc1403 += _acc1404 * _t1762;
			_t1763 = -_t1403;
			_t1764 = _t1762 * _t1762;
			_t1765 = _t1763 * _t1764;
			_acc1402 += _acc1404 * _t1765;
			_acc1398 += _acc1403;
			_acc1396 -= _acc1403;
			_acc1398 += _acc1402;
			_acc1396 += _acc1402;
			_t1766 = (float)1.0 / (_t1399);
			_acc1400 += _acc1401 * _t1766;
			_t1767 = -_t1400;
			_t1768 = _t1766 * _t1766;
			_t1769 = _t1767 * _t1768;
			_acc1399 += _acc1401 * _t1769;
			_acc1393 += _acc1400;
			_acc1397 -= _acc1400;
			_acc1393 += _acc1399;
			_acc1397 += _acc1399;
			_acc1393 += _acc1398 * vertParams[115];
			_acc1396 += _acc1397 * vertParams[115];
			_t1770 = 2.000000 * _t1396;
			_t1771 = (float)1.0 / (_t1770);
			_acc1390 += _acc1396 * _t1771;
			cif (_t1343 >= 0.000000) {
				_acc1343 = _acc1393;
			}
			else {
				_acc1395 = _acc1393;
				_acc1343 -= _acc1395;
			}
		}
		_acc1389 -= _acc1390;
		_acc1388 += _acc1389 * _t1386;
		_acc1386 += _acc1389 * _t1388;
		_acc1387 -= _acc1388;
		_t1772 = 2.000000 * _t1343;
		_acc1343 += _acc1387 * _t1772;
		_t1773 = 2.000000 * _t1384;
		_acc1384 += _acc1386 * _t1773;
		cif (_t1343 > 0.000000) {
		}
		else {
		}
		_t1774 = (float)1.0 / (_t1380);
		_acc1382 += _acc1383 * _t1774;
		_t1775 = -_t1382;
		_t1776 = _t1774 * _t1774;
		_t1777 = _t1775 * _t1776;
		_acc1380 += _acc1383 * _t1777;
		_acc1381 += _acc1382 * _t1382;
		_acc1376 -= _acc1381;
		_acc1379 += _acc1380 * _t1377;
		_acc1377 += _acc1380 * _t1379;
		_acc1378 += _acc1379 * vertParams[117];
		_t1778 = 2.000000 * _t1368;
		_acc1368 += _acc1377 * _t1778;
		_t1779 = (float)1.0 / (_t1368);
		_acc1375 += _acc1376 * _t1779;
		_t1780 = -_t1375;
		_t1781 = _t1779 * _t1779;
		_t1782 = _t1780 * _t1781;
		_acc1368 += _acc1376 * _t1782;
		_acc1374 += _acc1375;
		_acc1371 += _acc1375;
		_t1783 = (float)1.0 / (_t1372);
		_acc1373 += _acc1374 * _t1783;
		_t1784 = -_t1373;
		_t1785 = _t1783 * _t1783;
		_t1786 = _t1784 * _t1785;
		_acc1372 += _acc1374 * _t1786;
		_t1787 = 2.000000 * _t1367;
		_acc1367 += _acc1373 * _t1787;
		_t1788 = (float)1.0 / (_t1369);
		_acc1370 += _acc1371 * _t1788;
		_t1789 = -_t1370;
		_t1790 = _t1788 * _t1788;
		_t1791 = _t1789 * _t1790;
		_acc1369 += _acc1371 * _t1791;
		_t1792 = 2.000000 * _t1366;
		_acc1366 += _acc1370 * _t1792;
		_t1793 = 2.000000 * _t1365;
		_acc1365 += _acc1368 * _t1793;
		_acc1345 += _acc1367 * _t1336;
		_acc1346 += _acc1367 * _t1337;
		_acc1347 += _acc1367 * _t1338;
		_acc1336 += _acc1367 * _t1345;
		_acc1337 += _acc1367 * _t1346;
		_acc1338 += _acc1367 * _t1347;
		_acc1348 += _acc1366 * _t1336;
		_acc1349 += _acc1366 * _t1337;
		_acc1350 += _acc1366 * _t1338;
		_acc1336 += _acc1366 * _t1348;
		_acc1337 += _acc1366 * _t1349;
		_acc1338 += _acc1366 * _t1350;
		_acc483 += _acc1365 * _t1336;
		_acc484 += _acc1365 * _t1337;
		_acc485 += _acc1365 * _t1338;
		_acc1336 += _acc1365 * _t483;
		_acc1337 += _acc1365 * _t484;
		_acc1338 += _acc1365 * _t485;
		cif (_t485 < -0.999999) {
		}
		else {
			_acc1360 = _acc1345;
			_acc1356 = _acc1346;
			_acc1357 = _acc1347;
			_acc1356 = _acc1348;
			_acc1364 = _acc1349;
			_acc1361 = _acc1350;
			_acc1363 -= _acc1364;
			_acc1362 += _acc1363 * _t1353;
			_acc1353 += _acc1363 * _t1362;
			_t1794 = 2.000000 * _t484;
			_acc484 += _acc1362 * _t1794;
			_acc484 -= _acc1361;
			_acc1359 -= _acc1360;
			_acc1358 += _acc1359 * _t1353;
			_acc1353 += _acc1359 * _t1358;
			_t1795 = 2.000000 * _t483;
			_acc483 += _acc1358 * _t1795;
			_acc483 -= _acc1357;
			_acc1355 += _acc1356 * _t1353;
			_acc1353 += _acc1356 * _t1355;
			_acc1354 += _acc1355 * _t484;
			_acc484 += _acc1355 * _t1354;
			_acc483 -= _acc1354;
			_t1796 = _t1353 * _t1353;
			_t1797 = -_t1796;
			_acc1352 += _acc1353 * _t1797;
			_acc485 += _acc1352;
		}
		_acc1232 += _acc1344 * _t1336;
		_acc1233 += _acc1344 * _t1337;
		_acc1234 += _acc1344 * _t1338;
		_acc1336 += _acc1344 * _t1232;
		_acc1337 += _acc1344 * _t1233;
		_acc1338 += _acc1344 * _t1234;
		_acc577 += _acc1343 * _t1336;
		_acc578 += _acc1343 * _t1337;
		_acc579 += _acc1343 * _t1338;
		_acc1336 += _acc1343 * _t577;
		_acc1337 += _acc1343 * _t578;
		_acc1338 += _acc1343 * _t579;
		cif (_t1335 < 0.000000) {
			_acc1340 = _acc1336;
			_acc1341 = _acc1337;
			_acc1342 = _acc1338;
			_acc1314 -= _acc1342;
			_acc1313 -= _acc1341;
			_acc1312 -= _acc1340;
		}
		else {
			_acc1312 = _acc1336;
			_acc1313 = _acc1337;
			_acc1314 = _acc1338;
		}
		cif (_t1307 > 0.000000) {
			_acc1321 = _acc1312;
			_acc1322 = _acc1313;
			_acc1323 = _acc1314;
			_acc1318 += _acc1323 * _t1320;
			_acc1320 += _acc1323 * _t1318;
			_acc1317 += _acc1322 * _t1320;
			_acc1320 += _acc1322 * _t1317;
			_acc1316 += _acc1321 * _t1320;
			_acc1320 += _acc1321 * _t1316;
			_t1798 = _t1320 * _t1320;
			_t1799 = -_t1798;
			_acc1319 += _acc1320 * _t1799;
			_t1800 = (float)1.0 / (_t1319);
			_t1801 = _t1316 * _t1800;
			_acc1316 += _acc1319 * _t1801;
			_t1802 = _t1317 * _t1800;
			_acc1317 += _acc1319 * _t1802;
			_t1803 = _t1318 * _t1800;
			_acc1318 += _acc1319 * _t1803;
			_acc579 += _acc1318;
			_acc1234 += _acc1318;
			_acc578 += _acc1317;
			_acc1233 += _acc1317;
			_acc577 += _acc1316;
			_acc1232 += _acc1316;
		}
		else {
			_acc1332 = _acc1312;
			_acc1333 = _acc1313;
			_acc1334 = _acc1314;
			_acc1329 += _acc1334 * _t1331;
			_acc1331 += _acc1334 * _t1329;
			_acc1327 += _acc1333 * _t1331;
			_acc1331 += _acc1333 * _t1327;
			_acc1325 += _acc1332 * _t1331;
			_acc1331 += _acc1332 * _t1325;
			_t1804 = _t1331 * _t1331;
			_t1805 = -_t1804;
			_acc1330 += _acc1331 * _t1805;
			_t1806 = (float)1.0 / (_t1330);
			_t1807 = _t1325 * _t1806;
			_acc1325 += _acc1330 * _t1807;
			_t1808 = _t1327 * _t1806;
			_acc1327 += _acc1330 * _t1808;
			_t1809 = _t1329 * _t1806;
			_acc1329 += _acc1330 * _t1809;
			_acc579 += _acc1329;
			_acc1328 += _acc1329;
			_acc1234 += _acc1328 * _t1308;
			_acc1308 += _acc1328 * _t1234;
			_acc578 += _acc1327;
			_acc1326 += _acc1327;
			_acc1233 += _acc1326 * _t1308;
			_acc1308 += _acc1326 * _t1233;
			_acc577 += _acc1325;
			_acc1324 += _acc1325;
			_acc1232 += _acc1324 * _t1308;
			_acc1308 += _acc1324 * _t1232;
		}
		cif (_t1306 > 0.000000) {
		}
		else {
		}
		cif (_t1305 > 0.000000) {
		}
		else {
		}
		_acc1232 += _acc1306 * _t483;
		_acc1233 += _acc1306 * _t484;
		_acc1234 += _acc1306 * _t485;
		_acc483 += _acc1306 * _t1232;
		_acc484 += _acc1306 * _t1233;
		_acc485 += _acc1306 * _t1234;
		_acc577 += _acc1305 * _t483;
		_acc578 += _acc1305 * _t484;
		_acc579 += _acc1305 * _t485;
		_acc483 += _acc1305 * _t577;
		_acc484 += _acc1305 * _t578;
		_acc485 += _acc1305 * _t579;
	}
	else cif (vertParams[108] == 0.000000) {
		_acc1582 = _acc1235;
		_acc1583 = _acc1236;
		_acc1584 = _acc1237;
		_acc1579 = _acc1238;
		_acc1580 = _acc1239;
		_acc1581 = _acc1240;
		_acc1580 += _acc1584 * vertParams[111];
		_acc1580 += _acc1583 * vertParams[110];
		_acc1580 += _acc1582 * vertParams[109];
		_acc1573 += _acc1581 * 0.318310;
		_acc1579 += _acc1580 * 0.318310;
		_acc1570 += _acc1579 * _t1232;
		_acc1571 += _acc1579 * _t1233;
		_acc1572 += _acc1579 * _t1234;
		_acc1232 += _acc1579 * _t1570;
		_acc1233 += _acc1579 * _t1571;
		_acc1234 += _acc1579 * _t1572;
		cif (_t1569 > 0.000000) {
			_acc483 = _acc1570;
			_acc484 = _acc1571;
			_acc485 = _acc1572;
			_acc1569 = _acc1573;
		}
		else {
			_acc1575 = _acc1570;
			_acc1576 = _acc1571;
			_acc1577 = _acc1572;
			_acc1578 = _acc1573;
			_acc1569 -= _acc1578;
			_acc485 -= _acc1577;
			_acc484 -= _acc1576;
			_acc483 -= _acc1575;
		}
		_acc483 += _acc1569 * _t577;
		_acc484 += _acc1569 * _t578;
		_acc485 += _acc1569 * _t579;
		_acc577 += _acc1569 * _t483;
		_acc578 += _acc1569 * _t484;
		_acc579 += _acc1569 * _t485;
	}
	else {
	}
	_acc878 -= _acc1234;
	_acc877 -= _acc1233;
	_acc876 -= _acc1232;
	cif (vertParams[164] == 1.000000) {
		_acc946 = _acc879;
		_acc947 = _acc880;
		_acc948 = _acc881;
		_acc898 = _acc882;
		_acc944 = _acc883;
		_acc943 += _acc948 * _t898;
		_acc898 += _acc948 * _t943;
		_acc942 += _acc947 * _t898;
		_acc898 += _acc947 * _t942;
		_acc941 += _acc946 * _t898;
		_acc898 += _acc946 * _t941;
		_acc902 += _acc944;
		_acc931 += _acc944;
		_acc901 += _acc943;
		_acc930 += _acc943;
		_acc900 += _acc942;
		_acc929 += _acc942;
		_acc899 += _acc941;
		_acc928 += _acc941;
		cif (vertParams[172] < 1.000000) {
			_acc934 = _acc928;
			_acc935 = _acc929;
			_acc936 = _acc930;
			_acc939 = _acc931;
			_acc938 += _acc939 * _t898;
			_acc898 += _acc939 * _t938;
			_acc937 += _acc938 * 0.318310;
		}
		else {
		}
		cif (vertParams[172] > 0.000000) {
			_acc915 = _acc899;
			_acc916 = _acc900;
			_acc917 = _acc901;
			_acc918 = _acc902;
			cif (_t914 > 0.000000) {
				_acc923 = _acc915;
				_acc924 = _acc916;
				_acc925 = _acc917;
				_acc927 = _acc918;
				_acc926 += _acc927 * _t914;
				_acc914 += _acc927 * _t926;
				_acc920 += _acc926 * vertParams[172];
				_acc922 += _acc925 * vertParams[170];
				_acc922 += _acc924 * vertParams[169];
				_acc922 += _acc923 * vertParams[168];
				_acc921 += _acc922 * _t914;
				_acc914 += _acc922 * _t921;
			}
			else {
			}
			_acc913 += _acc914 * 0.159155;
			_t1810 = vertParams[171]-1.000000;
			_t1811 = pow(_t912,_t1810);
			_t1812 = vertParams[171] * _t1811;
			_acc912 += _acc913 * _t1812;
			_acc907 += _acc912 * _t876;
			_acc909 += _acc912 * _t877;
			_acc911 += _acc912 * _t878;
			_acc876 += _acc912 * _t907;
			_acc877 += _acc912 * _t909;
			_acc878 += _acc912 * _t911;
			_acc910 += _acc911;
			_acc848 -= _acc911;
			_acc905 += _acc910 * _t891;
			_acc891 += _acc910 * _t905;
			_acc908 += _acc909;
			_acc847 -= _acc909;
			_acc905 += _acc908 * _t890;
			_acc890 += _acc908 * _t905;
			_acc906 += _acc907;
			_acc846 -= _acc907;
			_acc905 += _acc906 * _t889;
			_acc889 += _acc906 * _t905;
			_acc904 += _acc905 * 2.000000;
			_acc846 += _acc904 * _t889;
			_acc847 += _acc904 * _t890;
			_acc848 += _acc904 * _t891;
			_acc889 += _acc904 * _t846;
			_acc890 += _acc904 * _t847;
			_acc891 += _acc904 * _t848;
		}
		else {
		}
		_acc889 += _acc898 * _t876;
		_acc890 += _acc898 * _t877;
		_acc891 += _acc898 * _t878;
		_acc876 += _acc898 * _t889;
		_acc877 += _acc898 * _t890;
		_acc878 += _acc898 * _t891;
		cif (_t888 > 0.000000) {
			_acc752 = _acc889;
			_acc753 = _acc890;
			_acc754 = _acc891;
		}
		else {
			_acc894 = _acc889;
			_acc895 = _acc890;
			_acc896 = _acc891;
			_acc754 -= _acc896;
			_acc753 -= _acc895;
			_acc752 -= _acc894;
		}
	}
	else cif (vertParams[164] == 2.000000) {
		_acc1146 = _acc879;
		_acc1147 = _acc880;
		_acc1148 = _acc881;
		_acc950 = _acc882;
		_acc1149 = _acc883;
		cif (_t951 > 0.000000) {
			_acc1158 = _acc1146;
			_acc1159 = _acc1147;
			_acc1160 = _acc1148;
			_acc1164 = _acc1149;
			cif (_t1163 >= 0.000000) {
				_acc1163 = _acc1164;
			}
			else {
				_acc1166 = _acc1164;
				_acc1163 -= _acc1166;
			}
			_t1813 = (float)1.0 / (_t1161);
			_acc1162 += _acc1163 * _t1813;
			_t1814 = -_t1162;
			_t1815 = _t1813 * _t1813;
			_t1816 = _t1814 * _t1815;
			_acc1161 += _acc1163 * _t1816;
			_acc1124 += _acc1162 * _t1035;
			_acc1035 += _acc1162 * _t1124;
			_acc988 += _acc1161 * 4.000000;
			_acc1155 += _acc1160 * vertParams[167];
			_acc1155 += _acc1159 * vertParams[166];
			_acc1155 += _acc1158 * vertParams[165];
			cif (_t1154 >= 0.000000) {
				_acc1154 = _acc1155;
			}
			else {
				_acc1157 = _acc1155;
				_acc1154 -= _acc1157;
			}
			_t1817 = (float)1.0 / (_t1151);
			_acc1153 += _acc1154 * _t1817;
			_t1818 = -_t1153;
			_t1819 = _t1817 * _t1817;
			_t1820 = _t1818 * _t1819;
			_acc1151 += _acc1154 * _t1820;
			_acc1152 += _acc1153 * _t1103;
			_acc1103 += _acc1153 * _t1152;
			_acc1035 += _acc1152 * _t1027;
			_acc1027 += _acc1152 * _t1035;
			_acc949 += _acc1151 * 4.000000;
		}
		else {
			_acc1193 = _acc1146;
			_acc1194 = _acc1147;
			_acc1195 = _acc1148;
			_acc1203 = _acc1149;
			cif (_t1202 >= 0.000000) {
				_acc1202 = _acc1203;
			}
			else {
				_acc1205 = _acc1203;
				_acc1202 -= _acc1205;
			}
			_t1821 = (float)1.0 / (_t1196);
			_acc1201 += _acc1202 * _t1821;
			_t1822 = -_t1201;
			_t1823 = _t1821 * _t1821;
			_t1824 = _t1822 * _t1823;
			_acc1196 += _acc1202 * _t1824;
			_acc1200 += _acc1201 * _t1198;
			_acc1198 += _acc1201 * _t1200;
			_acc1124 += _acc1200 * _t1199;
			_acc1199 += _acc1200 * _t1124;
			_acc1035 -= _acc1199;
			_acc1197 += _acc1198 * _t988;
			_acc988 += _acc1198 * _t1197;
			_t1825 = 2.000000 * _t952;
			_acc952 += _acc1197 * _t1825;
			_t1826 = 2.000000 * _t1174;
			_acc1174 += _acc1196 * _t1826;
			_acc1190 += _acc1195 * vertParams[170];
			_acc1190 += _acc1194 * vertParams[169];
			_acc1190 += _acc1193 * vertParams[168];
			cif (_t1189 >= 0.000000) {
				_acc1189 = _acc1190;
			}
			else {
				_acc1192 = _acc1190;
				_acc1189 -= _acc1192;
			}
			_t1827 = (float)1.0 / (_t1180);
			_acc1188 += _acc1189 * _t1827;
			_t1828 = -_t1188;
			_t1829 = _t1827 * _t1827;
			_t1830 = _t1828 * _t1829;
			_acc1180 += _acc1189 * _t1830;
			_acc1178 += _acc1188 * _t1187;
			_acc1187 += _acc1188 * _t1178;
			_acc1186 += _acc1187 * _t988;
			_acc988 += _acc1187 * _t1186;
			_acc1185 += _acc1186 * _t987;
			_acc987 += _acc1186 * _t1185;
			_acc1184 += _acc1185 * _t1181;
			_acc1181 += _acc1185 * _t1184;
			_acc1183 += _acc1184 * _t1103;
			_acc1103 += _acc1184 * _t1183;
			_acc1182 += _acc1183 * _t1027;
			_acc1027 += _acc1183 * _t1182;
			_acc1035 -= _acc1182;
			_t1831 = 2.000000 * _t952;
			_acc952 += _acc1181 * _t1831;
			_acc949 += _acc1180 * _t1179;
			_acc1179 += _acc1180 * _t949;
			_t1832 = 2.000000 * _t1174;
			_acc1174 += _acc1179 * _t1832;
			_t1833 = 2.000000 * _t1177;
			_acc1177 += _acc1178 * _t1833;
			_t1834 = _t1177 * _t1177;
			_t1835 = -_t1834;
			_acc952 += _acc1177 * _t1835;
			_acc987 += _acc1174;
			_acc1173 += _acc1174;
			_acc952 += _acc1173 * _t988;
			_acc988 += _acc1173 * _t952;
		}
		_acc1009 += _acc1124 * _t1123;
		_acc1123 += _acc1124 * _t1009;
		_t1836 = (float)1.0 / (_t1120);
		_acc1122 += _acc1123 * _t1836;
		_t1837 = -_t1122;
		_t1838 = _t1836 * _t1836;
		_t1839 = _t1837 * _t1838;
		_acc1120 += _acc1123 * _t1839;
		_acc1121 += _acc1122 * _t1122;
		_acc1116 -= _acc1121;
		_acc1119 += _acc1120 * _t1117;
		_acc1117 += _acc1120 * _t1119;
		_acc1118 += _acc1119 * _t1107;
		_acc1107 += _acc1119 * _t1118;
		_acc1107 += _acc1118 * 3.141593;
		_t1840 = 2.000000 * _t1108;
		_acc1108 += _acc1117 * _t1840;
		_t1841 = (float)1.0 / (_t1108);
		_acc1115 += _acc1116 * _t1841;
		_t1842 = -_t1115;
		_t1843 = _t1841 * _t1841;
		_t1844 = _t1842 * _t1843;
		_acc1108 += _acc1116 * _t1844;
		_acc1114 += _acc1115;
		_acc1111 += _acc1115;
		_t1845 = (float)1.0 / (_t1112);
		_acc1113 += _acc1114 * _t1845;
		_t1846 = -_t1113;
		_t1847 = _t1845 * _t1845;
		_t1848 = _t1846 * _t1847;
		_acc1112 += _acc1114 * _t1848;
		_t1849 = 2.000000 * _t1011;
		_acc1011 += _acc1113 * _t1849;
		_t1850 = 2.000000 * _t1107;
		_acc1107 += _acc1112 * _t1850;
		_t1851 = (float)1.0 / (_t1109);
		_acc1110 += _acc1111 * _t1851;
		_t1852 = -_t1110;
		_t1853 = _t1851 * _t1851;
		_t1854 = _t1852 * _t1853;
		_acc1109 += _acc1111 * _t1854;
		_t1855 = 2.000000 * _t1010;
		_acc1010 += _acc1110 * _t1855;
		_t1856 = 2.000000 * _t1107;
		_acc1107 += _acc1109 * _t1856;
		_t1857 = 2.000000 * _t1009;
		_acc1009 += _acc1108 * _t1857;
		_acc1106 += _acc1107 * vertParams[173];
		_acc1105 -= _acc1106;
		_acc1104 += _acc1105 * 0.200000;
		_t1858 = 2.000000 * _t1104;
		_t1859 = (float)1.0 / (_t1858);
		_acc1053 += _acc1104 * _t1859;
		_acc1088 += _acc1103 * _t1066;
		_acc1066 += _acc1103 * _t1088;
		cif (_t1087 <= 0.000000) {
		}
		else {
			_acc1092 = _acc1088;
			cif (_t1091 >= 1.600000) {
			}
			else {
				_acc1102 = _acc1092;
				_t1860 = (float)1.0 / (_t1098);
				_acc1101 += _acc1102 * _t1860;
				_t1861 = -_t1101;
				_t1862 = _t1860 * _t1860;
				_t1863 = _t1861 * _t1862;
				_acc1098 += _acc1102 * _t1863;
				_acc1100 += _acc1101;
				_acc1099 += _acc1101;
				_acc1091 += _acc1100 * 3.535000;
				_acc1094 += _acc1099 * 2.181000;
				_acc1097 += _acc1098;
				_acc1095 += _acc1098;
				_acc1096 += _acc1097;
				_acc1091 += _acc1096 * 2.276000;
				_acc1094 += _acc1095 * 2.577000;
				_t1864 = 2.000000 * _t1091;
				_acc1091 += _acc1094 * _t1864;
			}
			_t1865 = _t1091 * _t1091;
			_t1866 = -_t1865;
			_acc1090 += _acc1091 * _t1866;
			_acc1087 += _acc1090 * vertParams[173];
		}
		_t1867 = (float)1.0 / (_t1053);
		_acc1086 += _acc1087 * _t1867;
		_t1868 = -_t1086;
		_t1869 = _t1867 * _t1867;
		_t1870 = _t1868 * _t1869;
		_acc1053 += _acc1087 * _t1870;
		_t1871 = 2.000000 * _t1086;
		_t1872 = (float)1.0 / (_t1871);
		_acc1083 += _acc1086 * _t1872;
		cif (_t1082 >= 0.000000) {
			_acc1082 = _acc1083;
		}
		else {
			_acc1085 = _acc1083;
			_acc1082 -= _acc1085;
		}
		_acc1081 -= _acc1082;
		_t1873 = 2.000000 * _t1053;
		_acc1053 += _acc1081 * _t1873;
		cif (_t1065 <= 0.000000) {
		}
		else {
			_acc1070 = _acc1066;
			cif (_t1069 >= 1.600000) {
			}
			else {
				_acc1080 = _acc1070;
				_t1874 = (float)1.0 / (_t1076);
				_acc1079 += _acc1080 * _t1874;
				_t1875 = -_t1079;
				_t1876 = _t1874 * _t1874;
				_t1877 = _t1875 * _t1876;
				_acc1076 += _acc1080 * _t1877;
				_acc1078 += _acc1079;
				_acc1077 += _acc1079;
				_acc1069 += _acc1078 * 3.535000;
				_acc1072 += _acc1077 * 2.181000;
				_acc1075 += _acc1076;
				_acc1073 += _acc1076;
				_acc1074 += _acc1075;
				_acc1069 += _acc1074 * 2.276000;
				_acc1072 += _acc1073 * 2.577000;
				_t1878 = 2.000000 * _t1069;
				_acc1069 += _acc1072 * _t1878;
			}
			_t1879 = _t1069 * _t1069;
			_t1880 = -_t1879;
			_acc1068 += _acc1069 * _t1880;
			_acc1065 += _acc1068 * vertParams[173];
		}
		_t1881 = (float)1.0 / (_t1056);
		_acc1064 += _acc1065 * _t1881;
		_t1882 = -_t1064;
		_t1883 = _t1881 * _t1881;
		_t1884 = _t1882 * _t1883;
		_acc1056 += _acc1065 * _t1884;
		_t1885 = 2.000000 * _t1064;
		_t1886 = (float)1.0 / (_t1885);
		_acc1061 += _acc1064 * _t1886;
		cif (_t1060 >= 0.000000) {
			_acc1060 = _acc1061;
		}
		else {
			_acc1063 = _acc1061;
			_acc1060 -= _acc1063;
		}
		_acc1059 -= _acc1060;
		_t1887 = 2.000000 * _t1056;
		_acc1056 += _acc1059 * _t1887;
		cif (_t950 >= 0.000000) {
			_acc950 = _acc1056;
		}
		else {
			_acc1058 = _acc1056;
			_acc950 -= _acc1058;
		}
		cif (_t949 >= 0.000000) {
			_acc949 = _acc1053;
		}
		else {
			_acc1055 = _acc1053;
			_acc949 -= _acc1055;
		}
		cif (_t1034 <= 0.000000) {
		}
		else {
			_acc1052 = _acc1035;
			_acc1051 += _acc1052 * 0.500000;
			_acc1050 += _acc1051;
			_acc1049 += _acc1051;
			_t1888 = 2.000000 * _t1045;
			_acc1045 += _acc1050 * _t1888;
			_t1889 = 2.000000 * _t1048;
			_acc1048 += _acc1049 * _t1889;
			_t1890 = (float)1.0 / (_t1046);
			_acc1047 += _acc1048 * _t1890;
			_t1891 = -_t1047;
			_t1892 = _t1890 * _t1890;
			_t1893 = _t1891 * _t1892;
			_acc1046 += _acc1048 * _t1893;
			_acc1042 += _acc1047;
			_acc1040 -= _acc1047;
			_acc1042 += _acc1046;
			_acc1040 += _acc1046;
			_t1894 = (float)1.0 / (_t1043);
			_acc1044 += _acc1045 * _t1894;
			_t1895 = -_t1044;
			_t1896 = _t1894 * _t1894;
			_t1897 = _t1895 * _t1896;
			_acc1043 += _acc1045 * _t1897;
			_acc1037 += _acc1044;
			_acc1041 -= _acc1044;
			_acc1037 += _acc1043;
			_acc1041 += _acc1043;
			_acc1037 += _acc1042 * vertParams[171];
			_acc1040 += _acc1041 * vertParams[171];
			_t1898 = 2.000000 * _t1040;
			_t1899 = (float)1.0 / (_t1898);
			_acc1034 += _acc1040 * _t1899;
			cif (_t987 >= 0.000000) {
				_acc987 = _acc1037;
			}
			else {
				_acc1039 = _acc1037;
				_acc987 -= _acc1039;
			}
		}
		_acc1033 -= _acc1034;
		_acc1032 += _acc1033 * _t1030;
		_acc1030 += _acc1033 * _t1032;
		_acc1031 -= _acc1032;
		_t1900 = 2.000000 * _t987;
		_acc987 += _acc1031 * _t1900;
		_t1901 = 2.000000 * _t1028;
		_acc1028 += _acc1030 * _t1901;
		cif (_t987 > 0.000000) {
		}
		else {
		}
		_t1902 = (float)1.0 / (_t1024);
		_acc1026 += _acc1027 * _t1902;
		_t1903 = -_t1026;
		_t1904 = _t1902 * _t1902;
		_t1905 = _t1903 * _t1904;
		_acc1024 += _acc1027 * _t1905;
		_acc1025 += _acc1026 * _t1026;
		_acc1020 -= _acc1025;
		_acc1023 += _acc1024 * _t1021;
		_acc1021 += _acc1024 * _t1023;
		_acc1022 += _acc1023 * vertParams[173];
		_t1906 = 2.000000 * _t1012;
		_acc1012 += _acc1021 * _t1906;
		_t1907 = (float)1.0 / (_t1012);
		_acc1019 += _acc1020 * _t1907;
		_t1908 = -_t1019;
		_t1909 = _t1907 * _t1907;
		_t1910 = _t1908 * _t1909;
		_acc1012 += _acc1020 * _t1910;
		_acc1018 += _acc1019;
		_acc1015 += _acc1019;
		_t1911 = (float)1.0 / (_t1016);
		_acc1017 += _acc1018 * _t1911;
		_t1912 = -_t1017;
		_t1913 = _t1911 * _t1911;
		_t1914 = _t1912 * _t1913;
		_acc1016 += _acc1018 * _t1914;
		_t1915 = 2.000000 * _t1011;
		_acc1011 += _acc1017 * _t1915;
		_t1916 = (float)1.0 / (_t1013);
		_acc1014 += _acc1015 * _t1916;
		_t1917 = -_t1014;
		_t1918 = _t1916 * _t1916;
		_t1919 = _t1917 * _t1918;
		_acc1013 += _acc1015 * _t1919;
		_t1920 = 2.000000 * _t1010;
		_acc1010 += _acc1014 * _t1920;
		_t1921 = 2.000000 * _t1009;
		_acc1009 += _acc1012 * _t1921;
		_acc989 += _acc1011 * _t980;
		_acc990 += _acc1011 * _t981;
		_acc991 += _acc1011 * _t982;
		_acc980 += _acc1011 * _t989;
		_acc981 += _acc1011 * _t990;
		_acc982 += _acc1011 * _t991;
		_acc992 += _acc1010 * _t980;
		_acc993 += _acc1010 * _t981;
		_acc994 += _acc1010 * _t982;
		_acc980 += _acc1010 * _t992;
		_acc981 += _acc1010 * _t993;
		_acc982 += _acc1010 * _t994;
		_acc752 += _acc1009 * _t980;
		_acc753 += _acc1009 * _t981;
		_acc754 += _acc1009 * _t982;
		_acc980 += _acc1009 * _t752;
		_acc981 += _acc1009 * _t753;
		_acc982 += _acc1009 * _t754;
		cif (_t754 < -0.999999) {
		}
		else {
			_acc1004 = _acc989;
			_acc1000 = _acc990;
			_acc1001 = _acc991;
			_acc1000 = _acc992;
			_acc1008 = _acc993;
			_acc1005 = _acc994;
			_acc1007 -= _acc1008;
			_acc1006 += _acc1007 * _t997;
			_acc997 += _acc1007 * _t1006;
			_t1922 = 2.000000 * _t753;
			_acc753 += _acc1006 * _t1922;
			_acc753 -= _acc1005;
			_acc1003 -= _acc1004;
			_acc1002 += _acc1003 * _t997;
			_acc997 += _acc1003 * _t1002;
			_t1923 = 2.000000 * _t752;
			_acc752 += _acc1002 * _t1923;
			_acc752 -= _acc1001;
			_acc999 += _acc1000 * _t997;
			_acc997 += _acc1000 * _t999;
			_acc998 += _acc999 * _t753;
			_acc753 += _acc999 * _t998;
			_acc752 -= _acc998;
			_t1924 = _t997 * _t997;
			_t1925 = -_t1924;
			_acc996 += _acc997 * _t1925;
			_acc754 += _acc996;
		}
		_acc876 += _acc988 * _t980;
		_acc877 += _acc988 * _t981;
		_acc878 += _acc988 * _t982;
		_acc980 += _acc988 * _t876;
		_acc981 += _acc988 * _t877;
		_acc982 += _acc988 * _t878;
		_acc846 += _acc987 * _t980;
		_acc847 += _acc987 * _t981;
		_acc848 += _acc987 * _t982;
		_acc980 += _acc987 * _t846;
		_acc981 += _acc987 * _t847;
		_acc982 += _acc987 * _t848;
		cif (_t979 < 0.000000) {
			_acc984 = _acc980;
			_acc985 = _acc981;
			_acc986 = _acc982;
			_acc958 -= _acc986;
			_acc957 -= _acc985;
			_acc956 -= _acc984;
		}
		else {
			_acc956 = _acc980;
			_acc957 = _acc981;
			_acc958 = _acc982;
		}
		cif (_t951 > 0.000000) {
			_acc965 = _acc956;
			_acc966 = _acc957;
			_acc967 = _acc958;
			_acc962 += _acc967 * _t964;
			_acc964 += _acc967 * _t962;
			_acc961 += _acc966 * _t964;
			_acc964 += _acc966 * _t961;
			_acc960 += _acc965 * _t964;
			_acc964 += _acc965 * _t960;
			_t1926 = _t964 * _t964;
			_t1927 = -_t1926;
			_acc963 += _acc964 * _t1927;
			_t1928 = (float)1.0 / (_t963);
			_t1929 = _t960 * _t1928;
			_acc960 += _acc963 * _t1929;
			_t1930 = _t961 * _t1928;
			_acc961 += _acc963 * _t1930;
			_t1931 = _t962 * _t1928;
			_acc962 += _acc963 * _t1931;
			_acc848 += _acc962;
			_acc878 += _acc962;
			_acc847 += _acc961;
			_acc877 += _acc961;
			_acc846 += _acc960;
			_acc876 += _acc960;
		}
		else {
			_acc976 = _acc956;
			_acc977 = _acc957;
			_acc978 = _acc958;
			_acc973 += _acc978 * _t975;
			_acc975 += _acc978 * _t973;
			_acc971 += _acc977 * _t975;
			_acc975 += _acc977 * _t971;
			_acc969 += _acc976 * _t975;
			_acc975 += _acc976 * _t969;
			_t1932 = _t975 * _t975;
			_t1933 = -_t1932;
			_acc974 += _acc975 * _t1933;
			_t1934 = (float)1.0 / (_t974);
			_t1935 = _t969 * _t1934;
			_acc969 += _acc974 * _t1935;
			_t1936 = _t971 * _t1934;
			_acc971 += _acc974 * _t1936;
			_t1937 = _t973 * _t1934;
			_acc973 += _acc974 * _t1937;
			_acc848 += _acc973;
			_acc972 += _acc973;
			_acc878 += _acc972 * _t952;
			_acc952 += _acc972 * _t878;
			_acc847 += _acc971;
			_acc970 += _acc971;
			_acc877 += _acc970 * _t952;
			_acc952 += _acc970 * _t877;
			_acc846 += _acc969;
			_acc968 += _acc969;
			_acc876 += _acc968 * _t952;
			_acc952 += _acc968 * _t876;
		}
		cif (_t949 > 0.000000) {
		}
		else {
		}
		_acc876 += _acc950 * _t752;
		_acc877 += _acc950 * _t753;
		_acc878 += _acc950 * _t754;
		_acc752 += _acc950 * _t876;
		_acc753 += _acc950 * _t877;
		_acc754 += _acc950 * _t878;
		_acc846 += _acc949 * _t752;
		_acc847 += _acc949 * _t753;
		_acc848 += _acc949 * _t754;
		_acc752 += _acc949 * _t846;
		_acc753 += _acc949 * _t847;
		_acc754 += _acc949 * _t848;
	}
	else cif (vertParams[164] == 0.000000) {
		_acc1229 = _acc879;
		_acc1230 = _acc880;
		_acc1231 = _acc881;
		_acc1226 = _acc882;
		_acc1227 = _acc883;
		_acc1227 += _acc1231 * vertParams[167];
		_acc1227 += _acc1230 * vertParams[166];
		_acc1227 += _acc1229 * vertParams[165];
		_acc1226 += _acc1227 * 0.318310;
		_acc1217 += _acc1226 * _t876;
		_acc1218 += _acc1226 * _t877;
		_acc1219 += _acc1226 * _t878;
		_acc876 += _acc1226 * _t1217;
		_acc877 += _acc1226 * _t1218;
		_acc878 += _acc1226 * _t1219;
		cif (_t1216 > 0.000000) {
			_acc752 = _acc1217;
			_acc753 = _acc1218;
			_acc754 = _acc1219;
		}
		else {
			_acc1222 = _acc1217;
			_acc1223 = _acc1218;
			_acc1224 = _acc1219;
			_acc754 -= _acc1224;
			_acc753 -= _acc1223;
			_acc752 -= _acc1222;
		}
	}
	else {
	}
	_acc868 += _acc878 * _t875;
	_acc875 += _acc878 * _t868;
	_acc867 += _acc877 * _t875;
	_acc875 += _acc877 * _t867;
	_acc866 += _acc876 * _t875;
	_acc875 += _acc876 * _t866;
	_t1938 = _t875 * _t875;
	_t1939 = -_t1938;
	_acc874 += _acc875 * _t1939;
	_t1940 = 2.000000 * _t874;
	_t1941 = (float)1.0 / (_t1940);
	_acc873 += _acc874 * _t1941;
	_acc872 += _acc873;
	_acc869 += _acc873;
	_acc871 += _acc872;
	_acc870 += _acc872;
	_t1942 = 2.000000 * _t866;
	_acc866 += _acc871 * _t1942;
	_t1943 = 2.000000 * _t867;
	_acc867 += _acc870 * _t1943;
	_t1944 = 2.000000 * _t868;
	_acc868 += _acc869 * _t1944;
	_acc479 += _acc868;
	_acc748 -= _acc868;
	_acc478 += _acc867;
	_acc747 -= _acc867;
	_acc477 += _acc866;
	_acc746 -= _acc866;
	_acc858 += _acc865 * _t864;
	_acc864 += _acc865 * _t858;
	_t1945 = _t864 * _t864;
	_t1946 = -_t1945;
	_acc863 += _acc864 * _t1946;
	_t1947 = 2.000000 * _t860;
	_acc860 += _acc863 * _t1947;
	cif (_t859 >= 0.000000) {
		_acc859 = _acc860;
	}
	else {
		_acc862 = _acc860;
		_acc859 -= _acc862;
	}
	_acc739 += _acc859 * _t752;
	_acc734 += _acc859 * _t753;
	_acc729 += _acc859 * _t754;
	_acc752 += _acc859 * _t739;
	_acc753 += _acc859 * _t734;
	_acc754 += _acc859 * _t729;
	_acc745 += _acc858 * _t857;
	_acc857 += _acc858 * _t745;
	_t1948 = 2.000000 * _t856;
	_acc856 += _acc857 * _t1948;
	_acc855 += _acc856;
	_acc850 += _acc856;
	_acc854 += _acc855;
	_acc852 += _acc855;
	_t1949 = 2.000000 * _t853;
	_acc853 += _acc854 * _t1949;
	_acc746 -= _acc853;
	_t1950 = 2.000000 * _t851;
	_acc851 += _acc852 * _t1950;
	_acc747 -= _acc851;
	_t1951 = 2.000000 * _t849;
	_acc849 += _acc850 * _t1951;
	_acc748 -= _acc849;
	_acc729 -= _acc848;
	_acc734 -= _acc847;
	_acc739 -= _acc846;
	cif (vertParams[118] == 0.000000) {
		_acc804 = _acc746;
		_acc806 = _acc747;
		_acc808 = _acc748;
		_acc826 = _acc752;
		_acc827 = _acc753;
		_acc828 = _acc754;
		_acc823 += _acc828 * _t825;
		_acc825 += _acc828 * _t823;
		_acc818 += _acc827 * _t825;
		_acc825 += _acc827 * _t818;
		_acc813 += _acc826 * _t825;
		_acc825 += _acc826 * _t813;
		_t1952 = _t825 * _t825;
		_t1953 = -_t1952;
		_acc824 += _acc825 * _t1953;
		_t1954 = (float)1.0 / (_t824);
		_t1955 = _t813 * _t1954;
		_acc813 += _acc824 * _t1955;
		_t1956 = _t818 * _t1954;
		_acc818 += _acc824 * _t1956;
		_t1957 = _t823 * _t1954;
		_acc823 += _acc824 * _t1957;
		_acc822 += _acc823;
		_acc819 += _acc823;
		_acc821 += _acc822;
		_acc820 += _acc822;
		_acc802 += _acc821 * vertParams[131];
		_acc787 += _acc820 * vertParams[134];
		_acc798 += _acc819 * vertParams[137];
		_acc817 += _acc818;
		_acc814 += _acc818;
		_acc816 += _acc817;
		_acc815 += _acc817;
		_acc802 += _acc816 * vertParams[130];
		_acc787 += _acc815 * vertParams[133];
		_acc798 += _acc814 * vertParams[136];
		_acc812 += _acc813;
		_acc809 += _acc813;
		_acc811 += _acc812;
		_acc810 += _acc812;
		_acc802 += _acc811 * vertParams[129];
		_acc787 += _acc810 * vertParams[132];
		_acc798 += _acc809 * vertParams[135];
		_acc807 += _acc808;
		_acc800 += _acc807 * _t729;
		_acc729 += _acc807 * _t800;
		_acc805 += _acc806;
		_acc800 += _acc805 * _t734;
		_acc734 += _acc805 * _t800;
		_acc803 += _acc804;
		_acc800 += _acc803 * _t739;
		_acc739 += _acc803 * _t800;
		_acc801 += _acc802;
		_acc798 -= _acc802;
		_acc787 -= _acc801;
		_acc799 += _acc800 * _t782;
		_acc782 += _acc800 * _t799;
		_acc796 += _acc799 * vertParams[126];
		_acc793 += _acc799 * vertParams[127];
		_acc790 += _acc799 * vertParams[128];
		_acc797 += _acc798 * _t782;
		_acc782 += _acc798 * _t797;
		_acc739 += _acc797 * _t796;
		_acc734 += _acc797 * _t793;
		_acc729 += _acc797 * _t790;
		_acc796 += _acc797 * _t739;
		_acc793 += _acc797 * _t734;
		_acc790 += _acc797 * _t729;
		_acc795 += _acc796;
		_acc794 -= _acc796;
		_acc784 += _acc795 * vertParams[125];
		_acc785 += _acc794 * vertParams[124];
		_acc792 += _acc793;
		_acc791 -= _acc793;
		_acc785 += _acc792 * vertParams[123];
		_acc783 += _acc791 * vertParams[125];
		_acc789 += _acc790;
		_acc788 -= _acc790;
		_acc783 += _acc789 * vertParams[124];
		_acc784 += _acc788 * vertParams[123];
		_acc786 += _acc787 * _t782;
		_acc782 += _acc787 * _t786;
		_acc783 += _acc786 * _t780;
		_acc784 += _acc786 * _t777;
		_acc785 += _acc786 * _t774;
		_acc780 += _acc786 * _t783;
		_acc777 += _acc786 * _t784;
		_acc774 += _acc786 * _t785;
		_t1958 = _t782 * _t782;
		_t1959 = -_t1958;
		_acc781 += _acc782 * _t1959;
		_acc780 += _acc781 * vertParams[123];
		_acc777 += _acc781 * vertParams[124];
		_acc774 += _acc781 * vertParams[125];
		_acc779 += _acc780;
		_acc778 -= _acc780;
		_acc734 += _acc779 * vertParams[128];
		_acc729 += _acc778 * vertParams[127];
		_acc776 += _acc777;
		_acc775 -= _acc777;
		_acc729 += _acc776 * vertParams[126];
		_acc739 += _acc775 * vertParams[128];
		_acc773 += _acc774;
		_acc772 -= _acc774;
		_acc739 += _acc773 * vertParams[127];
		_acc734 += _acc772 * vertParams[126];
	}
	else {
	}
	_t1960 = 2.000000 * _t744;
	_acc744 += _acc745 * _t1960;
	_t1961 = -scene[32];
	_t1962 = (float)1.0 / (_t743);
	_t1963 = _t1962 * _t1962;
	_t1964 = _t1961 * _t1963;
	_acc743 += _acc744 * _t1964;
	_t1965 = (float)1.0 / (_t740);
	_acc742 += _acc743 * _t1965;
	_t1966 = -_t742;
	_t1967 = _t1965 * _t1965;
	_t1968 = _t1966 * _t1967;
	_acc740 += _acc743 * _t1968;
	_t1969 = 2.000000 * _t741;
	_acc741 += _acc742 * _t1969;
	_t1970 = -scene[33];
	_t1971 = (float)1.0 / (_t740);
	_t1972 = _t1971 * _t1971;
	_t1973 = _t1970 * _t1972;
	_acc740 += _acc741 * _t1973;
	_acc669 += _acc740 * _t739;
	_acc664 += _acc740 * _t734;
	_acc659 += _acc740 * _t729;
	_acc739 += _acc740 * _t669;
	_acc734 += _acc740 * _t664;
	_acc729 += _acc740 * _t659;
	_acc738 += _acc739;
	_acc735 += _acc739;
	_acc737 += _acc738;
	_acc736 += _acc738;
	_acc706 += _acc737 * _t692;
	_acc692 += _acc737 * _t706;
	_acc712 += _acc736 * _t693;
	_acc693 += _acc736 * _t712;
	_acc719 += _acc735 * _t694;
	_acc694 += _acc735 * _t719;
	_acc733 += _acc734;
	_acc730 += _acc734;
	_acc732 += _acc733;
	_acc731 += _acc733;
	_acc708 += _acc732 * _t692;
	_acc692 += _acc732 * _t708;
	_acc715 += _acc731 * _t693;
	_acc693 += _acc731 * _t715;
	_acc721 += _acc730 * _t694;
	_acc694 += _acc730 * _t721;
	_acc728 += _acc729;
	_acc725 += _acc729;
	_acc727 += _acc728;
	_acc726 += _acc728;
	_acc710 += _acc727 * _t692;
	_acc692 += _acc727 * _t710;
	_acc717 += _acc726 * _t693;
	_acc693 += _acc726 * _t717;
	_acc724 += _acc725 * _t694;
	_acc694 += _acc725 * _t724;
	_acc723 -= _acc724;
	_acc722 += _acc723 * 2.000000;
	_acc695 += _acc722;
	_acc696 += _acc722;
	_acc720 += _acc721 * 2.000000;
	_acc700 += _acc720;
	_acc701 -= _acc720;
	_acc718 += _acc719 * 2.000000;
	_acc699 += _acc718;
	_acc702 += _acc718;
	_acc716 += _acc717 * 2.000000;
	_acc700 += _acc716;
	_acc701 += _acc716;
	_acc714 -= _acc715;
	_acc713 += _acc714 * 2.000000;
	_acc695 += _acc713;
	_acc697 += _acc713;
	_acc711 += _acc712 * 2.000000;
	_acc698 += _acc711;
	_acc703 -= _acc711;
	_acc709 += _acc710 * 2.000000;
	_acc699 += _acc709;
	_acc702 -= _acc709;
	_acc707 += _acc708 * 2.000000;
	_acc698 += _acc707;
	_acc703 += _acc707;
	_acc705 -= _acc706;
	_acc704 += _acc705 * 2.000000;
	_acc696 += _acc704;
	_acc697 += _acc704;
	_acc687 += _acc694 * _t691;
	_acc691 += _acc694 * _t687;
	_acc688 += _acc693 * _t691;
	_acc691 += _acc693 * _t688;
	_acc689 += _acc692 * _t691;
	_acc691 += _acc692 * _t689;
	_t1974 = _t691 * _t691;
	_t1975 = -_t1974;
	_acc690 += _acc691 * _t1975;
	_t1976 = (float)1.0 / (_t690);
	_t1977 = _t689 * _t1976;
	_acc689 += _acc690 * _t1977;
	_t1978 = _t688 * _t1976;
	_acc688 += _acc690 * _t1978;
	_t1979 = _t687 * _t1976;
	_acc687 += _acc690 * _t1979;
	_acc685 += _acc689 * _t686;
	_acc686 += _acc689 * _t685;
	_acc681 += _acc688 * _t686;
	_acc686 += _acc688 * _t681;
	_acc677 += _acc687 * _t686;
	_acc686 += _acc687 * _t677;
	_t1980 = _t686 * _t686;
	_t1981 = -_t1980;
	_acc673 += _acc686 * _t1981;
	_acc684 += _acc685;
	_acc683 += _acc684;
	_acc682 += _acc684;
	_acc4 += _acc683 * scene[1];
	_acc5 += _acc682 * scene[5];
	_acc680 += _acc681;
	_acc679 += _acc680;
	_acc678 += _acc680;
	_acc4 += _acc679 * scene[2];
	_acc5 += _acc678 * scene[6];
	_acc676 += _acc677;
	_acc675 += _acc676;
	_acc674 += _acc676;
	_acc4 += _acc675 * scene[3];
	_acc5 += _acc674 * scene[7];
	_acc672 += _acc673;
	_acc671 += _acc672;
	_acc670 += _acc672;
	_acc4 += _acc671 * scene[4];
	_acc5 += _acc670 * scene[8];
	_acc668 += _acc669;
	_acc665 += _acc669;
	_acc667 += _acc668;
	_acc666 += _acc668;
	_acc636 += _acc667 * _t622;
	_acc622 += _acc667 * _t636;
	_acc642 += _acc666 * _t623;
	_acc623 += _acc666 * _t642;
	_acc649 += _acc665 * _t624;
	_acc624 += _acc665 * _t649;
	_acc663 += _acc664;
	_acc660 += _acc664;
	_acc662 += _acc663;
	_acc661 += _acc663;
	_acc638 += _acc662 * _t622;
	_acc622 += _acc662 * _t638;
	_acc645 += _acc661 * _t623;
	_acc623 += _acc661 * _t645;
	_acc651 += _acc660 * _t624;
	_acc624 += _acc660 * _t651;
	_acc658 += _acc659;
	_acc655 += _acc659;
	_acc657 += _acc658;
	_acc656 += _acc658;
	_acc640 += _acc657 * _t622;
	_acc622 += _acc657 * _t640;
	_acc647 += _acc656 * _t623;
	_acc623 += _acc656 * _t647;
	_acc654 += _acc655 * _t624;
	_acc624 += _acc655 * _t654;
	_acc653 -= _acc654;
	_acc652 += _acc653 * 2.000000;
	_acc625 += _acc652;
	_acc626 += _acc652;
	_acc650 += _acc651 * 2.000000;
	_acc630 += _acc650;
	_acc631 -= _acc650;
	_acc648 += _acc649 * 2.000000;
	_acc629 += _acc648;
	_acc632 += _acc648;
	_acc646 += _acc647 * 2.000000;
	_acc630 += _acc646;
	_acc631 += _acc646;
	_acc644 -= _acc645;
	_acc643 += _acc644 * 2.000000;
	_acc625 += _acc643;
	_acc627 += _acc643;
	_acc641 += _acc642 * 2.000000;
	_acc628 += _acc641;
	_acc633 -= _acc641;
	_acc639 += _acc640 * 2.000000;
	_acc629 += _acc639;
	_acc632 -= _acc639;
	_acc637 += _acc638 * 2.000000;
	_acc628 += _acc637;
	_acc633 += _acc637;
	_acc635 -= _acc636;
	_acc634 += _acc635 * 2.000000;
	_acc626 += _acc634;
	_acc627 += _acc634;
	_acc617 += _acc624 * _t621;
	_acc621 += _acc624 * _t617;
	_acc618 += _acc623 * _t621;
	_acc621 += _acc623 * _t618;
	_acc619 += _acc622 * _t621;
	_acc621 += _acc622 * _t619;
	_t1982 = _t621 * _t621;
	_t1983 = -_t1982;
	_acc620 += _acc621 * _t1983;
	_t1984 = (float)1.0 / (_t620);
	_t1985 = _t619 * _t1984;
	_acc619 += _acc620 * _t1985;
	_t1986 = _t618 * _t1984;
	_acc618 += _acc620 * _t1986;
	_t1987 = _t617 * _t1984;
	_acc617 += _acc620 * _t1987;
	_acc615 += _acc619 * _t616;
	_acc616 += _acc619 * _t615;
	_acc611 += _acc618 * _t616;
	_acc616 += _acc618 * _t611;
	_acc607 += _acc617 * _t616;
	_acc616 += _acc617 * _t607;
	_t1988 = _t616 * _t616;
	_t1989 = -_t1988;
	_acc603 += _acc616 * _t1989;
	_acc614 += _acc615;
	_acc613 += _acc614;
	_acc612 += _acc614;
	_acc610 += _acc611;
	_acc609 += _acc610;
	_acc608 += _acc610;
	_acc606 += _acc607;
	_acc605 += _acc606;
	_acc604 += _acc606;
	_acc602 += _acc603;
	_acc601 += _acc602;
	_acc600 += _acc602;
	_acc473 += _acc599 * _t596;
	_acc596 += _acc599 * _t473;
	_acc472 += _acc598 * _t597;
	_acc597 += _acc598 * _t472;
	_acc596 += _acc597 * _t580;
	_acc580 += _acc597 * _t596;
	_t1990 = _t596 * _t596;
	_t1991 = -_t1990;
	_acc595 += _acc596 * _t1991;
	_t1992 = 2.000000 * _t592;
	_acc592 += _acc595 * _t1992;
	cif (_t591 >= 0.000000) {
		_acc591 = _acc592;
	}
	else {
		_acc594 = _acc592;
		_acc591 -= _acc594;
	}
	_acc9 += _acc591 * _t483;
	_acc10 += _acc591 * _t484;
	_acc11 += _acc591 * _t485;
	_acc483 += _acc591 * _t9;
	_acc484 += _acc591 * _t10;
	_acc485 += _acc591 * _t11;
	cif (vertParams[4] == 2.000000) {
	}
	else {
		_acc590 = _acc580;
		_t1993 = 2.000000 * _t589;
		_acc589 += _acc590 * _t1993;
		_acc588 += _acc589;
		_acc583 += _acc589;
		_acc587 += _acc588;
		_acc585 += _acc588;
		_t1994 = 2.000000 * _t586;
		_acc586 += _acc587 * _t1994;
		_acc6 += _acc586;
		_acc477 -= _acc586;
		_t1995 = 2.000000 * _t584;
		_acc584 += _acc585 * _t1995;
		_acc7 += _acc584;
		_acc478 -= _acc584;
		_t1996 = 2.000000 * _t582;
		_acc582 += _acc583 * _t1996;
		_acc8 += _acc582;
		_acc479 -= _acc582;
	}
	_acc11 -= _acc579;
	_acc10 -= _acc578;
	_acc9 -= _acc577;
	cif (vertParams[60] == 0.000000) {
		_acc535 = _acc477;
		_acc537 = _acc478;
		_acc539 = _acc479;
		_acc500 = _acc480;
		_acc501 = _acc481;
		_acc502 = _acc482;
		_acc557 = _acc483;
		_acc558 = _acc484;
		_acc559 = _acc485;
		_acc554 += _acc559 * _t556;
		_acc556 += _acc559 * _t554;
		_acc549 += _acc558 * _t556;
		_acc556 += _acc558 * _t549;
		_acc544 += _acc557 * _t556;
		_acc556 += _acc557 * _t544;
		_t1997 = _t556 * _t556;
		_t1998 = -_t1997;
		_acc555 += _acc556 * _t1998;
		_t1999 = (float)1.0 / (_t555);
		_t2000 = _t544 * _t1999;
		_acc544 += _acc555 * _t2000;
		_t2001 = _t549 * _t1999;
		_acc549 += _acc555 * _t2001;
		_t2002 = _t554 * _t1999;
		_acc554 += _acc555 * _t2002;
		_acc553 += _acc554;
		_acc550 += _acc554;
		_acc552 += _acc553;
		_acc551 += _acc553;
		_acc533 += _acc552 * vertParams[73];
		_acc518 += _acc551 * vertParams[76];
		_acc529 += _acc550 * vertParams[79];
		_acc548 += _acc549;
		_acc545 += _acc549;
		_acc547 += _acc548;
		_acc546 += _acc548;
		_acc533 += _acc547 * vertParams[72];
		_acc518 += _acc546 * vertParams[75];
		_acc529 += _acc545 * vertParams[78];
		_acc543 += _acc544;
		_acc540 += _acc544;
		_acc542 += _acc543;
		_acc541 += _acc543;
		_acc533 += _acc542 * vertParams[71];
		_acc518 += _acc541 * vertParams[74];
		_acc529 += _acc540 * vertParams[77];
		_acc8 += _acc539;
		_acc538 += _acc539;
		_acc531 += _acc538 * _t11;
		_acc11 += _acc538 * _t531;
		_acc7 += _acc537;
		_acc536 += _acc537;
		_acc531 += _acc536 * _t10;
		_acc10 += _acc536 * _t531;
		_acc6 += _acc535;
		_acc534 += _acc535;
		_acc531 += _acc534 * _t9;
		_acc9 += _acc534 * _t531;
		_acc532 += _acc533;
		_acc529 -= _acc533;
		_acc518 -= _acc532;
		_acc530 += _acc531 * _t513;
		_acc513 += _acc531 * _t530;
		_acc527 += _acc530 * vertParams[68];
		_acc524 += _acc530 * vertParams[69];
		_acc521 += _acc530 * vertParams[70];
		_acc528 += _acc529 * _t513;
		_acc513 += _acc529 * _t528;
		_acc9 += _acc528 * _t527;
		_acc10 += _acc528 * _t524;
		_acc11 += _acc528 * _t521;
		_acc527 += _acc528 * _t9;
		_acc524 += _acc528 * _t10;
		_acc521 += _acc528 * _t11;
		_acc526 += _acc527;
		_acc525 -= _acc527;
		_acc515 += _acc526 * vertParams[67];
		_acc516 += _acc525 * vertParams[66];
		_acc523 += _acc524;
		_acc522 -= _acc524;
		_acc516 += _acc523 * vertParams[65];
		_acc514 += _acc522 * vertParams[67];
		_acc520 += _acc521;
		_acc519 -= _acc521;
		_acc514 += _acc520 * vertParams[66];
		_acc515 += _acc519 * vertParams[65];
		_acc517 += _acc518 * _t513;
		_acc513 += _acc518 * _t517;
		_acc514 += _acc517 * _t511;
		_acc515 += _acc517 * _t508;
		_acc516 += _acc517 * _t505;
		_acc511 += _acc517 * _t514;
		_acc508 += _acc517 * _t515;
		_acc505 += _acc517 * _t516;
		_acc8 += _acc516;
		_acc7 += _acc515;
		_acc6 += _acc514;
		_t2003 = _t513 * _t513;
		_t2004 = -_t2003;
		_acc512 += _acc513 * _t2004;
		_acc511 += _acc512 * vertParams[65];
		_acc508 += _acc512 * vertParams[66];
		_acc505 += _acc512 * vertParams[67];
		_acc510 += _acc511;
		_acc509 -= _acc511;
		_acc10 += _acc510 * vertParams[70];
		_acc11 += _acc509 * vertParams[69];
		_acc507 += _acc508;
		_acc506 -= _acc508;
		_acc11 += _acc507 * vertParams[68];
		_acc9 += _acc506 * vertParams[70];
		_acc504 += _acc505;
		_acc503 -= _acc505;
		_acc9 += _acc504 * vertParams[69];
		_acc10 += _acc503 * vertParams[68];
		_acc491 += _acc502 * _t499;
		_acc499 += _acc502 * _t491;
		_acc494 += _acc501 * _t499;
		_acc499 += _acc501 * _t494;
		_acc497 += _acc500 * _t499;
		_acc499 += _acc500 * _t497;
		_t2005 = _t499 * _t499;
		_t2006 = -_t2005;
		_acc498 += _acc499 * _t2006;
		_t2007 = (float)1.0 / (_t498);
		_t2008 = _t497 * _t2007;
		_acc497 += _acc498 * _t2008;
		_t2009 = _t494 * _t2007;
		_acc494 += _acc498 * _t2009;
		_t2010 = _t491 * _t2007;
		_acc491 += _acc498 * _t2010;
		_acc496 += _acc497;
		_acc495 -= _acc497;
		_acc493 += _acc494;
		_acc492 -= _acc494;
		_acc490 += _acc491;
		_acc489 -= _acc491;
	}
	else {
	}
	cif (vertParams[4] == 0.000000) {
		_acc476 = _acc473;
		_t2011 = 2.000000 * _t475;
		_acc475 += _acc476 * _t2011;
		_t2012 = (float)1.0 / (_t465);
		_acc15 += _acc475 * _t2012;
		_t2013 = -_t15;
		_t2014 = _t2012 * _t2012;
		_t2015 = _t2013 * _t2014;
		_acc465 += _acc475 * _t2015;
	}
	else {
	}
	_t2016 = 2.000000 * _t471;
	_acc471 += _acc472 * _t2016;
	_t2017 = (float)1.0 / (_t465);
	_acc466 += _acc471 * _t2017;
	_t2018 = -_t466;
	_t2019 = _t2017 * _t2017;
	_t2020 = _t2018 * _t2019;
	_acc465 += _acc471 * _t2020;
	_acc14 += _acc470 * _t467;
	_acc467 += _acc470 * _t14;
	_acc13 += _acc469 * _t467;
	_acc467 += _acc469 * _t13;
	_acc12 += _acc468 * _t467;
	_acc467 += _acc468 * _t12;
	_acc17 += _acc466 * vertParams[3];
	_acc16 += _acc465 * vertParams[3];
	cif (vertParams[4] == 0.000000) {
		_acc28 = _acc9;
		_acc26 = _acc10;
		_acc24 = _acc11;
		_acc23 += _acc28 * _t27;
		_acc27 += _acc28 * _t23;
		_t2021 = sin(_t21);
		_t2022 = -_t2021;
		_acc21 += _acc27 * _t2022;
		_acc23 += _acc26 * _t25;
		_acc25 += _acc26 * _t23;
		_t2023 = cos(_t21);
		_acc21 += _acc25 * _t2023;
		_t2024 = sin(_t22);
		_t2025 = -_t2024;
		_acc22 += _acc24 * _t2025;
		_t2026 = cos(_t22);
		_acc22 += _acc23 * _t2026;
		_acc3 += _acc22 * 3.141593;
		_acc2 += _acc21 * 6.283185;
	}
	else cif (vertParams[4] == 1.000000) {
		_acc34 = _acc6;
		_acc35 = _acc7;
		_acc36 = _acc8;
		_acc116 = _acc9;
		_acc121 = _acc10;
		_acc126 = _acc11;
		_acc129 = _acc12;
		_acc130 = _acc13;
		_acc131 = _acc14;
		_acc87 = _acc15;
		_acc133 = _acc16;
		_acc40 = _acc17;
		_acc132 += _acc133 * _t40;
		_acc40 += _acc133 * _t132;
		_acc87 += _acc132 * 0.318310;
		_acc128 += _acc131 * vertParams[53];
		_acc128 += _acc130 * vertParams[52];
		_acc128 += _acc129 * vertParams[51];
		_acc127 += _acc128 * 3.141593;
		_t2027 = _t127 * _t127;
		_t2028 = -_t2027;
		_acc40 += _acc127 * _t2028;
		_acc125 += _acc126;
		_acc122 += _acc126;
		_acc124 += _acc125;
		_acc123 += _acc125;
		_acc91 += _acc124 * _t94;
		_acc94 += _acc124 * _t91;
		_acc89 += _acc123 * _t97;
		_acc97 += _acc123 * _t89;
		_acc87 += _acc122 * _t39;
		_acc39 += _acc122 * _t87;
		_acc120 += _acc121;
		_acc117 += _acc121;
		_acc119 += _acc120;
		_acc118 += _acc120;
		_acc91 += _acc119 * _t93;
		_acc93 += _acc119 * _t91;
		_acc89 += _acc118 * _t96;
		_acc96 += _acc118 * _t89;
		_acc87 += _acc117 * _t38;
		_acc38 += _acc117 * _t87;
		_acc115 += _acc116;
		_acc112 += _acc116;
		_acc114 += _acc115;
		_acc113 += _acc115;
		_acc91 += _acc114 * _t92;
		_acc92 += _acc114 * _t91;
		_acc89 += _acc113 * _t95;
		_acc95 += _acc113 * _t89;
		_acc87 += _acc112 * _t37;
		_acc37 += _acc112 * _t87;
		cif (_t39 < -0.999999) {
		}
		else {
			_acc107 = _acc92;
			_acc103 = _acc93;
			_acc104 = _acc94;
			_acc103 = _acc95;
			_acc111 = _acc96;
			_acc108 = _acc97;
			_acc110 -= _acc111;
			_acc109 += _acc110 * _t100;
			_acc100 += _acc110 * _t109;
			_t2029 = 2.000000 * _t38;
			_acc38 += _acc109 * _t2029;
			_acc38 -= _acc108;
			_acc106 -= _acc107;
			_acc105 += _acc106 * _t100;
			_acc100 += _acc106 * _t105;
			_t2030 = 2.000000 * _t37;
			_acc37 += _acc105 * _t2030;
			_acc37 -= _acc104;
			_acc102 += _acc103 * _t100;
			_acc100 += _acc103 * _t102;
			_acc101 += _acc102 * _t38;
			_acc38 += _acc102 * _t101;
			_acc37 -= _acc101;
			_t2031 = _t100 * _t100;
			_t2032 = -_t2031;
			_acc99 += _acc100 * _t2032;
			_acc39 += _acc99;
		}
		_acc90 += _acc91 * _t84;
		_acc84 += _acc91 * _t90;
		_t2033 = sin(_t80);
		_t2034 = -_t2033;
		_acc80 += _acc90 * _t2034;
		_acc88 += _acc89 * _t84;
		_acc84 += _acc89 * _t88;
		_t2035 = cos(_t80);
		_acc80 += _acc88 * _t2035;
		_t2036 = 2.000000 * _t87;
		_t2037 = (float)1.0 / (_t2036);
		_acc85 += _acc87 * _t2037;
		cif (primary[4] >= 0.000001) {
			_acc3 = _acc85;
		}
		else {
		}
		_t2038 = 2.000000 * _t84;
		_t2039 = (float)1.0 / (_t2038);
		_acc82 += _acc84 * _t2039;
		cif (_t81 >= 0.000001) {
			_acc81 = _acc82;
		}
		else {
		}
		_acc3 -= _acc81;
		_acc2 += _acc80 * 6.283185;
		cif (vertParams[5] == 0.000000) {
			_acc49 = _acc34;
			_acc53 = _acc35;
			_acc57 = _acc36;
			_acc77 = _acc37;
			_acc78 = _acc38;
			_acc79 = _acc39;
			_acc74 += _acc79 * _t76;
			_acc76 += _acc79 * _t74;
			_acc69 += _acc78 * _t76;
			_acc76 += _acc78 * _t69;
			_acc64 += _acc77 * _t76;
			_acc76 += _acc77 * _t64;
			_t2040 = _t76 * _t76;
			_t2041 = -_t2040;
			_acc75 += _acc76 * _t2041;
			_t2042 = (float)1.0 / (_t75);
			_t2043 = _t64 * _t2042;
			_acc64 += _acc75 * _t2043;
			_t2044 = _t69 * _t2042;
			_acc69 += _acc75 * _t2044;
			_t2045 = _t74 * _t2042;
			_acc74 += _acc75 * _t2045;
			_acc73 += _acc74;
			_acc70 += _acc74;
			_acc72 += _acc73;
			_acc71 += _acc73;
			_acc59 += _acc72 * vertParams[18];
			_acc44 += _acc71 * vertParams[21];
			_acc45 += _acc70 * vertParams[24];
			_acc68 += _acc69;
			_acc65 += _acc69;
			_acc67 += _acc68;
			_acc66 += _acc68;
			_acc59 += _acc67 * vertParams[17];
			_acc44 += _acc66 * vertParams[20];
			_acc45 += _acc65 * vertParams[23];
			_acc63 += _acc64;
			_acc60 += _acc64;
			_acc62 += _acc63;
			_acc61 += _acc63;
			_acc59 += _acc62 * vertParams[16];
			_acc44 += _acc61 * vertParams[19];
			_acc45 += _acc60 * vertParams[22];
			_acc58 += _acc59;
			_acc45 -= _acc59;
			_acc44 -= _acc58;
			_acc56 += _acc57;
			_acc54 += _acc57;
			_acc55 += _acc56;
			_acc44 += _acc55 * vertParams[12];
			_acc45 += _acc54 * vertParams[15];
			_acc52 += _acc53;
			_acc50 += _acc53;
			_acc51 += _acc52;
			_acc44 += _acc51 * vertParams[11];
			_acc45 += _acc50 * vertParams[14];
			_acc48 += _acc49;
			_acc46 += _acc49;
			_acc47 += _acc48;
			_acc44 += _acc47 * vertParams[10];
			_acc45 += _acc46 * vertParams[13];
			_acc43 += _acc45 * primary[2];
			_acc1 += _acc45 * _t43;
			_acc43 -= _acc44;
			_t2046 = 2.000000 * _t43;
			_t2047 = (float)1.0 / (_t2046);
			_acc42 += _acc43 * _t2047;
			_acc0 -= _acc42;
		}
		else {
		}
	}
	else cif (vertParams[4] == 2.000000) {
		_acc454 = _acc6;
		_acc457 = _acc7;
		_acc460 = _acc8;
		_acc400 = _acc9;
		_acc401 = _acc10;
		_acc402 = _acc11;
		_acc377 = _acc12;
		_acc378 = _acc13;
		_acc379 = _acc14;
		_acc464 = _acc16;
		_acc399 = _acc17;
		_acc399 += _acc464 * _t463;
		_acc463 += _acc464 * _t399;
		_acc462 += _acc463 * 0.318310;
		_t2048 = _t462 * _t462;
		_t2049 = -_t2048;
		_acc461 += _acc462 * _t2049;
		_acc459 += _acc460;
		_acc458 += _acc459 * scene[37];
		_acc451 += _acc458;
		_acc402 -= _acc458;
		_acc456 += _acc457;
		_acc455 += _acc456 * scene[37];
		_acc448 += _acc455;
		_acc401 -= _acc455;
		_acc453 += _acc454;
		_acc452 += _acc453 * scene[37];
		_acc445 += _acc452;
		_acc400 -= _acc452;
		_acc450 += _acc451;
		_acc449 += _acc451;
		_acc422 += _acc450 * _t425;
		_acc425 += _acc450 * _t422;
		_acc421 += _acc449 * _t428;
		_acc428 += _acc449 * _t421;
		_acc447 += _acc448;
		_acc446 += _acc448;
		_acc422 += _acc447 * _t424;
		_acc424 += _acc447 * _t422;
		_acc421 += _acc446 * _t427;
		_acc427 += _acc446 * _t421;
		_acc444 += _acc445;
		_acc443 += _acc445;
		_acc422 += _acc444 * _t423;
		_acc423 += _acc444 * _t422;
		_acc421 += _acc443 * _t426;
		_acc426 += _acc443 * _t421;
		cif (_t402 < -0.999999) {
		}
		else {
			_acc438 = _acc423;
			_acc434 = _acc424;
			_acc435 = _acc425;
			_acc434 = _acc426;
			_acc442 = _acc427;
			_acc439 = _acc428;
			_acc441 -= _acc442;
			_acc440 += _acc441 * _t431;
			_acc431 += _acc441 * _t440;
			_t2050 = 2.000000 * _t401;
			_acc401 += _acc440 * _t2050;
			_acc401 -= _acc439;
			_acc437 -= _acc438;
			_acc436 += _acc437 * _t431;
			_acc431 += _acc437 * _t436;
			_t2051 = 2.000000 * _t400;
			_acc400 += _acc436 * _t2051;
			_acc400 -= _acc435;
			_acc433 += _acc434 * _t431;
			_acc431 += _acc434 * _t433;
			_acc432 += _acc433 * _t401;
			_acc401 += _acc433 * _t432;
			_acc400 -= _acc432;
			_t2052 = _t431 * _t431;
			_t2053 = -_t2052;
			_acc430 += _acc431 * _t2053;
			_acc402 += _acc430;
		}
		_acc407 += _acc422 * _t420;
		_acc420 += _acc422 * _t407;
		_acc407 += _acc421 * _t419;
		_acc419 += _acc421 * _t407;
		_t2054 = sin(_t408);
		_t2055 = -_t2054;
		_acc408 += _acc420 * _t2055;
		_t2056 = cos(_t408);
		_acc408 += _acc419 * _t2056;
		cif (_t404 == 0.000000) {
		}
		else cif (_t406 == 0.000000) {
		}
		else cif (_t411 > _t412) {
			_acc404 = _acc407;
			_acc415 = _acc408;
			_acc414 += _acc415 * 0.785398;
			_t2057 = (float)1.0 / (_t404);
			_acc406 += _acc414 * _t2057;
			_t2058 = -_t406;
			_t2059 = _t2057 * _t2057;
			_t2060 = _t2058 * _t2059;
			_acc404 += _acc414 * _t2060;
		}
		else {
			_acc406 = _acc407;
			_acc418 = _acc408;
			_acc417 -= _acc418;
			_acc416 += _acc417 * 0.785398;
			_t2061 = (float)1.0 / (_t406);
			_acc404 += _acc416 * _t2061;
			_t2062 = -_t404;
			_t2063 = _t2061 * _t2061;
			_t2064 = _t2062 * _t2063;
			_acc406 += _acc416 * _t2064;
		}
		_acc405 += _acc406;
		_acc1 += _acc405 * 2.000000;
		_acc403 += _acc404;
		_acc0 += _acc403 * 2.000000;
		_acc334 -= _acc402;
		_acc339 -= _acc401;
		_acc344 -= _acc400;
		_t2065 = (float)1.0 / (_t383);
		_acc398 += _acc399 * _t2065;
		_t2066 = -_t398;
		_t2067 = _t2065 * _t2065;
		_t2068 = _t2066 * _t2067;
		_acc383 += _acc399 * _t2068;
		_acc397 += _acc398 * vertParams[57];
		_acc396 += _acc397;
		_acc390 += _acc397;
		_acc395 += _acc396 * vertParams[55];
		_acc394 += _acc395;
		_acc391 += _acc395;
		_acc393 += _acc394;
		_acc392 += _acc394;
		_acc351 += _acc393 * 0.212671;
		_acc356 += _acc392 * 0.715160;
		_acc361 += _acc391 * 0.072169;
		_acc389 += _acc390 * vertParams[56];
		_acc388 += _acc389;
		_acc385 += _acc389;
		_acc387 += _acc388;
		_acc386 += _acc388;
		_acc366 += _acc387 * 0.212671;
		_acc371 += _acc386 * 0.715160;
		_acc376 += _acc385 * 0.072169;
		cif (_t380 >= 0.000000) {
			_acc380 = _acc383;
		}
		else {
		}
		cif (_t325 >= 0.000000) {
			_acc325 = _acc380;
		}
		else {
			_acc382 = _acc380;
			_acc325 -= _acc382;
		}
		_acc361 += _acc379;
		_acc376 += _acc379;
		_acc356 += _acc378;
		_acc371 += _acc378;
		_acc351 += _acc377;
		_acc366 += _acc377;
		_acc375 += _acc376;
		_acc373 += _acc376;
		_acc374 += _acc375 * _t299;
		_acc299 += _acc375 * _t374;
		_acc345 += _acc374 * vertParams[51];
		_acc372 += _acc373 * _t299;
		_acc299 += _acc373 * _t372;
		_acc308 += _acc372 * vertParams[54];
		_acc370 += _acc371;
		_acc368 += _acc371;
		_acc369 += _acc370 * _t299;
		_acc299 += _acc370 * _t369;
		_acc345 += _acc369 * vertParams[50];
		_acc367 += _acc368 * _t299;
		_acc299 += _acc368 * _t367;
		_acc308 += _acc367 * vertParams[53];
		_acc365 += _acc366;
		_acc363 += _acc366;
		_acc364 += _acc365 * _t299;
		_acc299 += _acc365 * _t364;
		_acc345 += _acc364 * vertParams[49];
		_acc362 += _acc363 * _t299;
		_acc299 += _acc363 * _t362;
		_acc308 += _acc362 * vertParams[52];
		_acc360 += _acc361;
		_acc358 += _acc361;
		_acc359 += _acc360 * _t346;
		_acc346 += _acc360 * _t359;
		_acc345 += _acc359 * vertParams[45];
		_acc357 += _acc358 * _t346;
		_acc346 += _acc358 * _t357;
		_acc308 += _acc357 * vertParams[48];
		_acc355 += _acc356;
		_acc353 += _acc356;
		_acc354 += _acc355 * _t346;
		_acc346 += _acc355 * _t354;
		_acc345 += _acc354 * vertParams[44];
		_acc352 += _acc353 * _t346;
		_acc346 += _acc353 * _t352;
		_acc308 += _acc352 * vertParams[47];
		_acc350 += _acc351;
		_acc348 += _acc351;
		_acc349 += _acc350 * _t346;
		_acc346 += _acc350 * _t349;
		_acc345 += _acc349 * vertParams[43];
		_acc347 += _acc348 * _t346;
		_acc346 += _acc348 * _t347;
		_acc308 += _acc347 * vertParams[46];
		_acc299 -= _acc346;
		_acc308 -= _acc345;
		_acc343 += _acc344;
		_acc340 += _acc344;
		_acc342 += _acc343;
		_acc341 += _acc343;
		_acc134 += _acc342 * _t329;
		_acc329 += _acc342 * _t134;
		_acc138 += _acc341 * _t326;
		_acc326 += _acc341 * _t138;
		_acc142 += _acc340 * _t328;
		_acc328 += _acc340 * _t142;
		_acc338 += _acc339;
		_acc335 += _acc339;
		_acc337 += _acc338;
		_acc336 += _acc338;
		_acc135 += _acc337 * _t329;
		_acc329 += _acc337 * _t135;
		_acc139 += _acc336 * _t326;
		_acc326 += _acc336 * _t139;
		_acc143 += _acc335 * _t328;
		_acc328 += _acc335 * _t143;
		_acc333 += _acc334;
		_acc330 += _acc334;
		_acc332 += _acc333;
		_acc331 += _acc333;
		_acc136 += _acc332 * _t329;
		_acc329 += _acc332 * _t136;
		_acc140 += _acc331 * _t326;
		_acc326 += _acc331 * _t140;
		_acc144 += _acc330 * _t328;
		_acc328 += _acc330 * _t144;
		_acc323 += _acc329 * _t325;
		_acc325 += _acc329 * _t323;
		_acc327 += _acc328 * _t325;
		_acc325 += _acc328 * _t327;
		_acc324 -= _acc327;
		_t2069 = sin(_t322);
		_t2070 = -_t2069;
		_acc322 += _acc326 * _t2070;
		_t2071 = cos(_t322);
		_acc322 += _acc325 * _t2071;
		_t2072 = sin(_t320);
		_t2073 = -_t2072;
		_acc320 += _acc324 * _t2073;
		_t2074 = cos(_t320);
		_acc320 += _acc323 * _t2074;
		_acc321 += _acc322 * vertParams[42];
		_acc318 += _acc321;
		_acc319 += _acc320 * vertParams[41];
		_acc317 += _acc319;
		_acc299 += _acc318;
		_acc308 += _acc317;
		cif (_t295 < 0.500000) {
			_acc312 = _acc308;
			_acc311 -= _acc312;
			_t2075 = 2.000000 * _t311;
			_t2076 = (float)1.0 / (_t2075);
			_acc310 += _acc311 * _t2076;
			_acc295 += _acc310 * 2.000000;
		}
		else {
			_acc316 = _acc308;
			_acc315 += _acc316;
			_t2077 = 2.000000 * _t315;
			_t2078 = (float)1.0 / (_t2077);
			_acc314 += _acc315 * _t2078;
			_acc313 += _acc314 * 2.000000;
			_acc295 += _acc313;
		}
		cif (_t298 < 0.500000) {
			_acc303 = _acc299;
			_acc302 -= _acc303;
			_t2079 = 2.000000 * _t302;
			_t2080 = (float)1.0 / (_t2079);
			_acc301 += _acc302 * _t2080;
			_acc298 += _acc301 * 2.000000;
		}
		else {
			_acc307 = _acc299;
			_acc306 += _acc307;
			_t2081 = 2.000000 * _t306;
			_t2082 = (float)1.0 / (_t2081);
			_acc305 += _acc306 * _t2082;
			_acc304 += _acc305 * 2.000000;
			_acc298 += _acc304;
		}
		_t2083 = (float)1.0 / (_t296);
		_acc297 += _acc298 * _t2083;
		_t2084 = -_t297;
		_t2085 = _t2083 * _t2083;
		_t2086 = _t2084 * _t2085;
		_acc296 += _acc298 * _t2086;
		_acc3 += _acc297;
		_t2087 = (float)1.0 / (_t293);
		_acc294 += _acc295 * _t2087;
		_t2088 = -_t294;
		_t2089 = _t2087 * _t2087;
		_t2090 = _t2088 * _t2089;
		_acc293 += _acc295 * _t2090;
		_acc2 += _acc294;
		cif (vertParams[5] == 0.000000) {
			_acc162 = _acc134;
			_acc164 = _acc135;
			_acc166 = _acc136;
			_acc168 = _acc138;
			_acc171 = _acc139;
			_acc173 = _acc140;
			_acc175 = _acc142;
			_acc177 = _acc143;
			_acc180 = _acc144;
			_acc179 -= _acc180;
			_acc178 += _acc179 * 2.000000;
			_acc151 += _acc178;
			_acc152 += _acc178;
			_acc176 += _acc177 * 2.000000;
			_acc156 += _acc176;
			_acc157 -= _acc176;
			_acc174 += _acc175 * 2.000000;
			_acc155 += _acc174;
			_acc158 += _acc174;
			_acc172 += _acc173 * 2.000000;
			_acc156 += _acc172;
			_acc157 += _acc172;
			_acc170 -= _acc171;
			_acc169 += _acc170 * 2.000000;
			_acc151 += _acc169;
			_acc153 += _acc169;
			_acc167 += _acc168 * 2.000000;
			_acc154 += _acc167;
			_acc159 -= _acc167;
			_acc165 += _acc166 * 2.000000;
			_acc155 += _acc165;
			_acc158 -= _acc165;
			_acc163 += _acc164 * 2.000000;
			_acc154 += _acc163;
			_acc159 += _acc163;
			_acc161 -= _acc162;
			_acc160 += _acc161 * 2.000000;
			_acc152 += _acc160;
			_acc153 += _acc160;
		}
		else {
			_acc274 = _acc134;
			_acc276 = _acc135;
			_acc278 = _acc136;
			_acc280 = _acc138;
			_acc283 = _acc139;
			_acc285 = _acc140;
			_acc287 = _acc142;
			_acc289 = _acc143;
			_acc292 = _acc144;
			_acc291 -= _acc292;
			_acc290 += _acc291 * 2.000000;
			_acc263 += _acc290;
			_acc264 += _acc290;
			_acc288 += _acc289 * 2.000000;
			_acc268 += _acc288;
			_acc269 -= _acc288;
			_acc286 += _acc287 * 2.000000;
			_acc267 += _acc286;
			_acc270 += _acc286;
			_acc284 += _acc285 * 2.000000;
			_acc268 += _acc284;
			_acc269 += _acc284;
			_acc282 -= _acc283;
			_acc281 += _acc282 * 2.000000;
			_acc263 += _acc281;
			_acc265 += _acc281;
			_acc279 += _acc280 * 2.000000;
			_acc266 += _acc279;
			_acc271 -= _acc279;
			_acc277 += _acc278 * 2.000000;
			_acc267 += _acc277;
			_acc270 -= _acc277;
			_acc275 += _acc276 * 2.000000;
			_acc266 += _acc275;
			_acc271 += _acc275;
			_acc273 -= _acc274;
			_acc272 += _acc273 * 2.000000;
			_acc264 += _acc272;
			_acc265 += _acc272;
			_acc211 += _acc271 * _t212;
			_acc212 += _acc271 * _t211;
			_acc210 += _acc270 * _t212;
			_acc212 += _acc270 * _t210;
			_acc209 += _acc269 * _t212;
			_acc212 += _acc269 * _t209;
			_acc210 += _acc268 * _t211;
			_acc211 += _acc268 * _t210;
			_acc209 += _acc267 * _t211;
			_acc211 += _acc267 * _t209;
			_acc209 += _acc266 * _t210;
			_acc210 += _acc266 * _t209;
			_acc211 += _acc265 * _t211;
			_acc211 += _acc265 * _t211;
			_acc210 += _acc264 * _t210;
			_acc210 += _acc264 * _t210;
			_acc209 += _acc263 * _t209;
			_acc209 += _acc263 * _t209;
			cif (_t202 > 0.999500) {
				_acc229 = _acc209;
				_acc230 = _acc210;
				_acc231 = _acc211;
				_acc232 = _acc212;
				_acc226 += _acc232 * _t228;
				_acc228 += _acc232 * _t226;
				_acc223 += _acc231 * _t228;
				_acc228 += _acc231 * _t223;
				_acc220 += _acc230 * _t228;
				_acc228 += _acc230 * _t220;
				_acc217 += _acc229 * _t228;
				_acc228 += _acc229 * _t217;
				_t2091 = _t228 * _t228;
				_t2092 = -_t2091;
				_acc227 += _acc228 * _t2092;
				_t2093 = (float)1.0 / (_t227);
				_t2094 = _t217 * _t2093;
				_acc217 += _acc227 * _t2094;
				_t2095 = _t220 * _t2093;
				_acc220 += _acc227 * _t2095;
				_t2096 = _t223 * _t2093;
				_acc223 += _acc227 * _t2096;
				_t2097 = _t226 * _t2093;
				_acc226 += _acc227 * _t2097;
				_acc225 += _acc226;
				_acc224 += _acc226;
				_acc214 += _acc225 * vertParams[15];
				_acc201 += _acc224 * primary[0];
				_acc222 += _acc223;
				_acc221 += _acc223;
				_acc214 += _acc222 * vertParams[14];
				_acc200 += _acc221 * primary[0];
				_acc219 += _acc220;
				_acc218 += _acc220;
				_acc214 += _acc219 * vertParams[13];
				_acc199 += _acc218 * primary[0];
				_acc216 += _acc217;
				_acc215 += _acc217;
				_acc214 += _acc216 * vertParams[12];
				_acc198 += _acc215 * primary[0];
			}
			else {
				_acc253 = _acc209;
				_acc256 = _acc210;
				_acc259 = _acc211;
				_acc262 = _acc212;
				_acc261 += _acc262;
				_acc260 += _acc262;
				_acc250 += _acc261 * vertParams[15];
				_acc248 += _acc260 * _t249;
				_acc249 += _acc260 * _t248;
				_acc258 += _acc259;
				_acc257 += _acc259;
				_acc250 += _acc258 * vertParams[14];
				_acc247 += _acc257 * _t249;
				_acc249 += _acc257 * _t247;
				_acc255 += _acc256;
				_acc254 += _acc256;
				_acc250 += _acc255 * vertParams[13];
				_acc246 += _acc254 * _t249;
				_acc249 += _acc254 * _t246;
				_acc252 += _acc253;
				_acc251 += _acc253;
				_acc250 += _acc252 * vertParams[12];
				_acc245 += _acc251 * _t249;
				_acc249 += _acc251 * _t245;
				_t2098 = sin(_t234);
				_t2099 = -_t2098;
				_acc234 += _acc250 * _t2099;
				_t2100 = cos(_t234);
				_acc234 += _acc249 * _t2100;
				_acc242 += _acc248 * _t244;
				_acc244 += _acc248 * _t242;
				_acc240 += _acc247 * _t244;
				_acc244 += _acc247 * _t240;
				_acc238 += _acc246 * _t244;
				_acc244 += _acc246 * _t238;
				_acc236 += _acc245 * _t244;
				_acc244 += _acc245 * _t236;
				_t2101 = _t244 * _t244;
				_t2102 = -_t2101;
				_acc243 += _acc244 * _t2102;
				_t2103 = (float)1.0 / (_t243);
				_t2104 = _t236 * _t2103;
				_acc236 += _acc243 * _t2104;
				_t2105 = _t238 * _t2103;
				_acc238 += _acc243 * _t2105;
				_t2106 = _t240 * _t2103;
				_acc240 += _acc243 * _t2106;
				_t2107 = _t242 * _t2103;
				_acc242 += _acc243 * _t2107;
				_acc201 += _acc242;
				_acc241 -= _acc242;
				_acc202 += _acc241 * vertParams[15];
				_acc200 += _acc240;
				_acc239 -= _acc240;
				_acc202 += _acc239 * vertParams[14];
				_acc199 += _acc238;
				_acc237 -= _acc238;
				_acc202 += _acc237 * vertParams[13];
				_acc198 += _acc236;
				_acc235 -= _acc236;
				_acc202 += _acc235 * vertParams[12];
				_acc233 += _acc234 * primary[0];
				_t2108 = _t202 * _t202;
				_t2109 = 1.000000-_t2108;
				_t2110 = sqrt(_t2109);
				_t2111 = (float)1.0 / (_t2110);
				_t2112 = -_t2111;
				_acc202 += _acc233 * _t2112;
			}
			cif (_t197 < 0.000000) {
				_acc204 = _acc198;
				_acc205 = _acc199;
				_acc206 = _acc200;
				_acc207 = _acc201;
				_acc208 = _acc202;
				_acc197 -= _acc208;
			}
			else {
				_acc197 = _acc202;
			}
			_acc196 += _acc197;
			_acc191 += _acc197;
			_acc195 += _acc196;
			_acc192 += _acc196;
			_acc194 += _acc195;
			_acc193 += _acc195;
		}
	}
	else {
	}
	grad[0] = _acc0;
	grad[1] = _acc1;
	grad[2] = _acc2;
	grad[3] = _acc3;
	grad[4] = _acc4;
	grad[5] = _acc5;
}
export void evaluate_path_bidir_mala_2_2_static_derv(uniform const float lens[2], uniform const float primary[7], uniform const float scene[38], uniform const float vertParams[297], uniform float grad[]) {
	float g[6] = {0};
	evaluate_path_bidir_mala_2_2_static_derv_kernel(lens, primary, scene, vertParams, g);
	foreach (index = 0 ... 6) {
		grad[index] = g[index];
	}
}
