static void evaluate_path_bidir_mala_2_1_static_derv_kernel(uniform const float lens[2], uniform const float primary[5], uniform const float scene[38], uniform const float vertParams[238], float grad[4]) {
	uniform float _t1020, _t1019, _t1018, _t1017, _t1016, _t1015, _t1013, _t1012, _t1011, _t1010, _t1009, _t1008, _t1007, _t1006, _t1005, _t999, _t1003, _t1002, _t1001, _t998, _t997, _t996, _t995, _t994, _t993, _t992, _t643, _t641, _t639, _t987, _t979, _t978, _t977, _t984, _t983, _t982, _t909, _t907, _t906, _t965, _t952, _t945, _t944, _t943, _t942, _t937, _t934, _t924, _t926, _t922, _t918, _t884, _t882, _t881, _t880, _t879, _t872, _t871, _t870, _t868, _t867, _t866, _t865, _t864, _t863, _t848, _t852, _t862, _t861, _t860, _t859, _t858, _t857, _t856, _t855, _t854, _t850, _t846, _t843, _t842, _t841, _t830, _t840, _t839, _t838, _t836, _t835, _t834, _t832, _t829, _t828, _t824, _t820, _t819, _t816, _t921, _t811, _t914, _t809, _t808, _t913, _t807, _t912, _t806, _t801, _t409, _t59, _t516, _t403, _t402, _t510, _t398, _t397, _t390, _t389, _t22, _t388, _t950, _t566, _t961, _t384, _t563, _t483, _t558, _t664, _t758, _t361, _t359, _t354, _t353, _t325, _t628, _t654, _t301, _t337, _t336, _t335, _t495, _t334, _t333, _t492, _t332, _t491, _t400, _t487, _t490, _t329, _t488, _t327, _t399, _t486, _t324, _t216, _t215, _t322, _t214, _t57, _t321, _t320, _t319, _t318, _t316, _t315, _t314, _t313, _t699, _t312, _t696, _t311, _t310, _t309, _t306, _t299, _t157, _t294, _t948, _t293, _t947, _t292, _t603, _t1021, _t290, _t933, _t150, _t286, _t362, _t542, _t345, _t355, _t269, _t229, _t117, _t267, _t266, _t263, _t685, _t260, _t259, _t963, _t385, _t258, _t962, _t387, _t1014, _t25, _t509, _t564, _t257, _t255, _t50, _t254, _t201, _t344, _t360, _t636, _t252, _t581, _t152, _t151, _t272, _t718, _t105, _t797, _t589, _t300, _t271, _t717, _t256, _t939, _t232, _t270, _t716, _t156, _t298, _t231, _t454, _t70, _t815, _t453, _t189, _t227, _t116, _t919, _t61, _t777, _t792, _t224, _t955, _t113, _t307, _t748, _t223, _t40, _t112, _t813, _t775, _t220, _t219, _t218, _t217, _t575, _t111, _t83, _t137, _t86, _t706, _t401, _t276, _t135, _t410, _t526, _t81, _t588, _t76, _t472, _t87, _t704, _t72, _t198, _t742, _t82, _t69, _t68, _t665, _t339, _t515, _t342, _t62, _t180, _t513, _t261, _t71, _t197, _t741, _t825, _t574, _t85, _t703, _t80, _t79, _t393, _t126, _t32, _t783, _t11, _t253, _t138, _t149, _t60, _t99, _t960, _t383, _t56, _t736, _t350, _t54, _t183, _t356, _t23, _t406, _t338, _t514, _t341, _t959, _t382, _t561, _t17, _t793, _t226, _t956, _t115, _t94, _t953, _t28, _t308, _t546, _t317, _t268, _t394, _t78, _t349, _t738, _t346, _t194, _t991, _t207, _t550, _t84, _t74, _t7, _t77, _t873, _t737, _t45, _t212, _t96, _t347, _t13, _t5, _t466, _t423, _t88, _t14, _t596, _t177, _t949, _t565, _t53, _t723, _t323, _t26, _t590, _t20, _t199, _t30, _t455, _t51, _t522, _t795, _t225, _t958, _t114, _t21, _t911, _t36, _t29, _t837, _t695, _t343, _t821, _t130, _t946, _t291, _t297, _t602, _t31, _t44, _t213, _t127, _t48, _t97, _t330, _t489, _t185, _t358, _t132, _t106, _t203, _t73, _t206, _t697, _t129, _t136, _t42, _t326, _t485, _t39, _t63, _t24, _t613, _t8, _t34, _t103, _t205, _t620, _t75, _t471, _t47, _t744, _t49, _t122, _t101, _t158, _t104, _t33, _t593, _t407, _t544, _t289, _t128, _t673, _t98, _t449, _t119, _t41, _t363, _t15, _t121, _t614, _t303, _t124, _t67, _t304, _t125, _t19, _t772, _t144, _t391, _t131, _t288, _t941, _t591, _t139, _t92, _t140, _t93, _t142, _t957, _t58, _t145, _t12, _t464, _t580, _t147, _t148, _t357, _t210, _t10, _t107, _t756, _t65, _t275, _t108, _t810, _t954, _t481, _t731, _t404, _t250, _t195, _t587, _t505, _t874, _t586, _t732, _t559, _t196, _t740, _t331, _t287, _t594, _t521, _t285, _t392, _t592, _t422, _t524, _t595, _t176, _t424, _t395, _t597, _t920, _t178, _t425, _t396, _t598, _t923, _t179, _t348, _t6, _t554, _t812, _t771, _t181, _t264, _t802, _t675, _t182, _t805, _t676, _t432, _t184, _t102, _t302, _t123, _t642, _t833, _t186, _t875, _t351, _t188, _t328, _t494, _t352, _t143, _t190, _t43, _t191, _t193, _t986, _t200, _t38, _t473, _t726, _t202, _t204, _t989, _t208, _t439, _t553, _t512, _t91, _t990, _t209, _t551, _t851, _t411, _t519, _t578, _t211, _t426, _t228, _t146, _t599, _t295, _t427, _t600, _t133, _t296, _t428, _t601, _t940, _t386, _t436, _t523, _t493, _t437, _t883, _t37, _t788, _t438, _t520, _t429, _t430, _t431, _t433, _t55, _t109, _t445, _t110, _t446, _t447, _t118, _t448, _t340, _t46, _t450, _t120, _t451, _t452, _t459, _t460, _t134, _t461, _t557, _t462, _t818, _t463, _t465, _t467, _t468, _t469, _t470, _t474, _t727, _t475, _t498, _t562, _t482, _t484, _t440, _t528, _t606, _t441, _t530, _t607, _t442, _t608, _t443, _t609, _t282, _t496, _t823, _t571, _t284, _t497, _t573, _t938, _t283, _t499, _t572, _t500, _t869, _t728, _t618, _t501, _t729, _t621, _t502, _t619, _t503, _t504, _t782, _t556, _t89, _t511, _t192, _t517, _t141, _t576, _t18, _t518, _t577, _t747, _t365, _t366, _t367, _t767, _t369, _t16, _t370, _t371, _t476, _t373, _t477, _t374, _t478, _t375, _t479, _t480, _t826, _t525, _t527, _t605, _t529, _t604, _t532, _t262, _t533, _t534, _t535, _t536, _t537, _t538, _t847, _t541, _t90, _t543, _t539, _t548, _t552, _t555, _t560, _t52, _t567, _t568, _t569, _t570, _t579, _t582, _t583, _t435, _t584, _t585, _t27, _t610, _t611, _t616, _t617, _t622, _t753, _t506, _t623, _t507, _t624, _t508, _t625, _t626, _t627, _t629, _t630, _t631, _t632, _t633, _t634, _t187, _t635, _t273, _t701, _t637, _t66, _t9, _t757, _t638, _t845, _t277, _t278, _t720, _t774, _t876, _t649, _t877, _t650, _t651, _t658, _t666, _t667, _t668, _t408, _t545, _t709, _t669, _t670, _t763, _t671, _t759, _t672, _t674, _t680, _t681, _t682, _t683, _t917, _t686, _t687, _t803, _t677, _t804, _t678, _t659, _t660, _t661, _t662, _t640, _t64, _t694, _t698, _t754, _t689, _t690, _t691, _t4, _t274, _t702, _t251, _t707, _t405, _t708, _t100, _t761, _t764, _t710, _t547, _t549, _t712, _t915, _t770, _t721, _t722, _t95, _t724, _t725, _t730, _t733, _t734, _t760, _t799, _t735, _t745, _t364, _t35, _t746, _t222, _t688, _t762, _t765, _t766, _t768, _t656, _t749, _t750, _t751, _t752, _t769, _t684, _t773, _t776, _t456, _t778, _t457, _t779, _t458, _t780, _t781, _t784, _t878, _t785, _t786, _t787, _t655, _t221, _t790, _t791, _t794, _t230, _t908, _t800;
	float _t1319, _t1318, _t1317, _t1312, _t1311, _t1305, _t1304, _t1302, _t1297, _t1294, _t1293, _t1292, _t1288, _t1315, _t1284, _t1282, _t1281, _t1280, _t1278, _t1275, _t1273, _t1272, _t1265, _t1263, _t1254, _t1253, _t1251, _t1250, _t1249, _t1248, _t1247, _t1246, _t1243, _t1241, _t1240, _t1239, _t1238, _t1237, _t1236, _t1232, _t1230, _t1229, _t1228, _t1225, _t1221, _t1220, _t1218, _t1216, _t1215, _t1213, _t1212, _t1279, _t1210, _t1209, _t1208, _t1207, _t1206, _t1205, _t1204, _t1202, _t1200, _t1199, _t1198, _t1196, _t1194, _t1192, _t1191, _t1189, _t1188, _t1186, _t1185, _t1184, _t1183, _t1182, _t1181, _t1178, _t1177, _t1174, _t1170, _t1169, _t1166, _t1164, _t1163, _t1162, _t1161, _t1160, _t1155, _t1154, _t1153, _t1152, _t1151, _t1150, _t1148, _t1144, _t1143, _t1142, _t1141, _t1139, _t1138, _t1137, _t1136, _t1135, _t1134, _t1270, _t1133, _t1129, _t1125, _t1122, _t1168, _t1120, _t1117, _t1157, _t1112, _t1146, _t1106, _t1105, _t1104, _t1103, _t1283, _t1102, _t1101, _t1098, _t1097, _t1096, _t1095, _t1094, _t1093, _t1092, _t1091, _t1090, _t1274, _t1089, _t1086, _t1085, _t1130, _t1083, _t1127, _t1298, _t1175, _t1081, _t1078, _t1077, _t1074, _t1114, _t1072, _t1062, _t1058, _t1055, _t1053, _t1050, _t1047, _t1046, _t1044, _t1042, _t1041, _t1059, _t1038, _t1036, _t1035, _t1068, _t1030, _t1066, _t1029, _t1027, _t1026, _t1025, _t1024, _t1022, _t1172, _t1167, _t1121, _t1004, _t1064, _t1088, _t1131, _t1180, _t644, _t985, _t1075, _t1073, _t976, _t910, _t1252, _t968, _t936, _t1271, _t930, _t1255, _t1067, _t929, _t927, _t903, _t902, _t901, _t900, _t899, _t893, _t892, _t891, _t890, _t1309, _t889, _t1308, _t888, _t885, _t1303, _t1227, _t1295, _t1291, _t1219, _t1314, _t1289, _t1316, _t1211, _t1203, _t928, _t1063, _t1156, _t1158, _t1235, _t1285, _t166, _t1049, _t1065, _t705, _t412, _t241, _t1056, _t1261, _t1084, _t1126, _t1173, _t1171, _t975, _t1052, _t245, _t1043, _t1076, _t1233, _t894, _t1260, _t1214, _t935, _t1193, _t1099, _t1037, _t154, _t234, _t159, _t249, _t1313, _t247, _t246, _t239, _t237, _t238, _t898, _t233, _t1245, _t897, _t1290, _t1223, _t896, _t1159, _t155, _t886, _t1266, _t153, _t1269, _t1222, _t1023, _t236, _t1048, _t1277, _t1234, _t1054, _t1118, _t168, _t1259, _t1268, _t1087, _t967, _t1039, _t1300, _t648, _t1107, _t980, _t1034, _t1079, _t1070, _t248, _t1110, _t1080, _t1267, _t1176, _t1109, _t1296, _t1262, _t1028, _t240, _t1264, _t169, _t971, _t1082, _t1113, _t160, _t1115, _t988, _t1132, _t1123, _t966, _t420, _t1165, _t1119, _t657, _t1057, _t1033, _t418, _t170, _t162, _t163, _t164, _t1111, _t414, _t165, _t739, _t413, _t167, _t171, _t421, _t175, _t172, _t419, _t173, _t174, _t1060, _t969, _t1197, _t1201, _t1149, _t1124, _t1147, _t970, _t1051, _t972, _t973, _t1071, _t1116, _t380, _t242, _t243, _t244, _t417, _t1256, _t1069, _t416, _t1258, _t415, _t1257, _t1031, _t1299, _t1276, _t1187, _t1140, _t368, _t372, _t1100, _t1032, _t376, _t377, _t378, _t1231, _t932, _t379, _t1128, _t1045, _t1286, _t1287, _t1217, _t1040, _t1179, _t1190, _t1145, _t1108, _t1195, _t652, _t904, _t905, _t1244, _t1242, _t1310, _t700, _t692, _t711, _t714, _t1226, _t1301, _t1224, _t1061, _t1306, _t1307, _t887, _t895;
	/* Forward */
	_t4 = scene[8] * 0.500000;
	_t5 = scene[4] * 0.500000;
	_t6 = _t5+_t4;
	_t7 = _t6+scene[16];
	_t8 = scene[7] * 0.500000;
	_t9 = scene[3] * 0.500000;
	_t10 = _t9+_t8;
	_t11 = _t10+scene[15];
	_t12 = scene[6] * 0.500000;
	_t13 = scene[2] * 0.500000;
	_t14 = _t13+_t12;
	_t15 = _t14+scene[14];
	_t16 = scene[5] * 0.500000;
	_t17 = scene[1] * 0.500000;
	_t18 = _t17+_t16;
	_t19 = _t18+scene[13];
	_t20 = (float)1.0 / (_t7);
	_t21 = _t11 * _t20;
	_t22 = _t15 * _t20;
	_t23 = _t19 * _t20;
	_t24 = sqrt(_t23*_t23+_t22*_t22+_t21*_t21);
	_t25 = (float)1.0 / (_t24);
	_t26 = _t23 * _t25;
	_t27 = _t22 * _t25;
	_t28 = _t21 * _t25;
	_t29 = scene[24] * scene[24];
	_t30 = scene[25] * scene[25];
	_t31 = scene[26] * scene[26];
	_t32 = scene[24] * scene[25];
	_t33 = scene[24] * scene[26];
	_t34 = scene[25] * scene[26];
	_t35 = scene[24] * scene[27];
	_t36 = scene[25] * scene[27];
	_t37 = scene[26] * scene[27];
	_t38 = _t30+_t31;
	_t39 = 2.000000 * _t38;
	_t40 = 1.000000-_t39;
	_t41 = _t32+_t37;
	_t42 = 2.000000 * _t41;
	_t43 = _t33-_t36;
	_t44 = 2.000000 * _t43;
	_t45 = _t32-_t37;
	_t46 = 2.000000 * _t45;
	_t47 = _t29+_t31;
	_t48 = 2.000000 * _t47;
	_t49 = 1.000000-_t48;
	_t50 = _t34+_t35;
	_t51 = 2.000000 * _t50;
	_t52 = _t33+_t36;
	_t53 = 2.000000 * _t52;
	_t54 = _t34-_t35;
	_t55 = 2.000000 * _t54;
	_t56 = _t29+_t30;
	_t57 = 2.000000 * _t56;
	_t58 = 1.000000-_t57;
	_t59 = _t58 * _t28;
	_t60 = _t51 * _t27;
	_t61 = _t44 * _t26;
	_t62 = _t61+_t60;
	_t63 = _t62+_t59;
	_t64 = _t55 * _t28;
	_t65 = _t49 * _t27;
	_t66 = _t42 * _t26;
	_t67 = _t66+_t65;
	_t68 = _t67+_t64;
	_t69 = _t53 * _t28;
	_t70 = _t46 * _t27;
	_t71 = _t40 * _t26;
	_t72 = _t71+_t70;
	_t73 = _t72+_t69;
	_t74 = scene[8] * primary[2];
	_t75 = scene[4] * primary[1];
	_t76 = _t75+_t74;
	_t77 = _t76+scene[16];
	_t78 = scene[7] * primary[2];
	_t79 = scene[3] * primary[1];
	_t80 = _t79+_t78;
	_t81 = _t80+scene[15];
	_t82 = scene[6] * primary[2];
	_t83 = scene[2] * primary[1];
	_t84 = _t83+_t82;
	_t85 = _t84+scene[14];
	_t86 = scene[5] * primary[2];
	_t87 = scene[1] * primary[1];
	_t88 = _t87+_t86;
	_t89 = _t88+scene[13];
	_t90 = (float)1.0 / (_t77);
	_t91 = _t81 * _t90;
	_t92 = _t85 * _t90;
	_t93 = _t89 * _t90;
	_t94 = sqrt(_t93*_t93+_t92*_t92+_t91*_t91);
	_t95 = (float)1.0 / (_t94);
	_t96 = _t93 * _t95;
	_t97 = _t92 * _t95;
	_t98 = _t91 * _t95;
	_t99 = scene[24] * scene[24];
	_t100 = scene[25] * scene[25];
	_t101 = scene[26] * scene[26];
	_t102 = scene[24] * scene[25];
	_t103 = scene[24] * scene[26];
	_t104 = scene[25] * scene[26];
	_t105 = scene[24] * scene[27];
	_t106 = scene[25] * scene[27];
	_t107 = scene[26] * scene[27];
	_t108 = _t100+_t101;
	_t109 = 2.000000 * _t108;
	_t110 = 1.000000-_t109;
	_t111 = _t102+_t107;
	_t112 = 2.000000 * _t111;
	_t113 = _t103-_t106;
	_t114 = 2.000000 * _t113;
	_t115 = _t102-_t107;
	_t116 = 2.000000 * _t115;
	_t117 = _t99+_t101;
	_t118 = 2.000000 * _t117;
	_t119 = 1.000000-_t118;
	_t120 = _t104+_t105;
	_t121 = 2.000000 * _t120;
	_t122 = _t103+_t106;
	_t123 = 2.000000 * _t122;
	_t124 = _t104-_t105;
	_t125 = 2.000000 * _t124;
	_t126 = _t99+_t100;
	_t127 = 2.000000 * _t126;
	_t128 = 1.000000-_t127;
	_t129 = _t128 * _t98;
	_t130 = _t121 * _t97;
	_t131 = _t114 * _t96;
	_t132 = _t131+_t130;
	_t133 = _t132+_t129;
	_t134 = _t125 * _t98;
	_t135 = _t119 * _t97;
	_t136 = _t112 * _t96;
	_t137 = _t136+_t135;
	_t138 = _t137+_t134;
	_t139 = _t123 * _t98;
	_t140 = _t116 * _t97;
	_t141 = _t110 * _t96;
	_t142 = _t141+_t140;
	_t143 = _t142+_t139;
	_t144 = _t73 * _t143 + _t68 * _t138 + _t63 * _t133;
	_t145 = scene[33] / _t144;
	_t146 = _t145 * _t145;
	_t147 = _t146 / _t144;
	_t148 = scene[32] / _t147;
	_t149 = _t148 * _t148;
	cif (vertParams[3] == 0.000000) {
		_t162 = vertParams[9] * vertParams[11];
		_t163 = vertParams[8] * vertParams[12];
		_t164 = _t163-_t162;
		_t165 = vertParams[8] * vertParams[13];
		_t166 = vertParams[10] * vertParams[11];
		_t167 = _t166-_t165;
		_t168 = vertParams[10] * vertParams[12];
		_t169 = vertParams[9] * vertParams[13];
		_t170 = _t169-_t168;
		_t171 = sqrt(_t170*_t170+_t167*_t167+_t164*_t164);
		_t172 = (float)1.0 / (_t171);
		_t173 = _t170 * _t172;
		_t174 = _t167 * _t172;
		_t175 = _t164 * _t172;
		_t176 = _t138 * vertParams[11];
		_t177 = _t143 * vertParams[12];
		_t178 = _t177-_t176;
		_t179 = _t143 * vertParams[13];
		_t180 = _t133 * vertParams[11];
		_t181 = _t180-_t179;
		_t182 = _t133 * vertParams[12];
		_t183 = _t138 * vertParams[13];
		_t184 = _t183-_t182;
		_t185 = _t184 * vertParams[8] + _t181 * vertParams[9] + _t178 * vertParams[10];
		_t186 = (float)1.0 / (_t185);
		_t187 = scene[18]-vertParams[5];
		_t188 = scene[19]-vertParams[6];
		_t189 = scene[20]-vertParams[7];
		_t190 = _t187 * _t184 + _t188 * _t181 + _t189 * _t178;
		_t191 = _t190 * _t186;
		_t192 = _t188 * vertParams[8];
		_t193 = _t187 * vertParams[9];
		_t194 = _t193-_t192;
		_t195 = _t187 * vertParams[10];
		_t196 = _t189 * vertParams[8];
		_t197 = _t196-_t195;
		_t198 = _t189 * vertParams[9];
		_t199 = _t188 * vertParams[10];
		_t200 = _t199-_t198;
		_t201 = _t143 * _t200 + _t138 * _t197 + _t133 * _t194;
		_t202 = _t201 * _t186;
		_t203 = vertParams[11] * _t200 + vertParams[12] * _t197 + vertParams[13] * _t194;
		_t204 = _t203 * _t186;
		_t205 = 1.000000-_t191;
		_t206 = _t205-_t202;
		_t207 = _t204 * _t143;
		_t208 = scene[18]+_t207;
		_t209 = _t204 * _t138;
		_t210 = scene[19]+_t209;
		_t211 = _t204 * _t133;
		_t212 = scene[20]+_t211;
		_t213 = _t202 * vertParams[20];
		_t214 = _t191 * vertParams[17];
		_t215 = _t206 * vertParams[14];
		_t216 = _t215+_t214;
		_t217 = _t216+_t213;
		_t218 = _t202 * vertParams[21];
		_t219 = _t191 * vertParams[18];
		_t220 = _t206 * vertParams[15];
		_t221 = _t220+_t219;
		_t222 = _t221+_t218;
		_t223 = _t202 * vertParams[22];
		_t224 = _t191 * vertParams[19];
		_t225 = _t206 * vertParams[16];
		_t226 = _t225+_t224;
		_t227 = _t226+_t223;
		_t228 = sqrt(_t217*_t217+_t222*_t222+_t227*_t227);
		_t229 = (float)1.0 / (_t228);
		_t230 = _t217 * _t229;
		_t231 = _t222 * _t229;
		_t232 = _t227 * _t229;
		cif (vertParams[41] == 0.000000) {
			_t233 = _t191;
			_t234 = _t202;
		}
		else {
			_t236 = _t202 * vertParams[46];
			_t237 = _t191 * vertParams[44];
			_t238 = 1.000000-_t191;
			_t239 = _t238-_t202;
			_t240 = _t239 * vertParams[42];
			_t241 = _t240+_t237;
			_t242 = _t241+_t236;
			_t243 = _t202 * vertParams[47];
			_t244 = _t191 * vertParams[45];
			_t245 = 1.000000-_t191;
			_t246 = _t245-_t202;
			_t247 = _t246 * vertParams[43];
			_t248 = _t247+_t244;
			_t249 = _t248+_t243;
			_t233 = _t242;
			_t234 = _t249;
		}
		_t150 = _t208;
		_t151 = _t210;
		_t152 = _t212;
		_t153 = _t173;
		_t154 = _t174;
		_t155 = _t175;
		_t156 = _t230;
		_t157 = _t231;
		_t158 = _t232;
		_t159 = _t233;
		_t160 = _t234;
	}
	else {
		_t150 = 0.000000;
		_t151 = 0.000000;
		_t152 = 0.000000;
		_t153 = 0.000000;
		_t154 = 0.000000;
		_t155 = 0.000000;
		_t156 = 0.000000;
		_t157 = 0.000000;
		_t158 = 0.000000;
		_t159 = 0.000000;
		_t160 = 0.000000;
	}
	_t250 = -_t143;
	_t251 = -_t138;
	_t252 = -_t133;
	_t253 = scene[20]-_t152;
	_t254 = _t253 * _t253;
	_t255 = scene[19]-_t151;
	_t256 = _t255 * _t255;
	_t257 = scene[18]-_t150;
	_t258 = _t257 * _t257;
	_t259 = _t258+_t256;
	_t260 = _t259+_t254;
	_t261 = _t260 * _t260;
	_t262 = _t149 * _t261;
	_t263 = _t143 * _t156 + _t138 * _t157 + _t133 * _t158;
	cif (_t263 >= 0.000000) {
		_t264 = _t263;
	}
	else {
		_t266 = -_t263;
		_t264 = _t266;
	}
	_t267 = _t264 * _t264;
	_t268 = (float)1.0 / (_t267);
	_t269 = _t262 * _t268;
	cif (vertParams[49] == 0.000000) {
		_t282 = vertParams[50]-_t150;
		_t283 = vertParams[51]-_t151;
		_t284 = vertParams[52]-_t152;
		_t285 = _t284 * _t284;
		_t286 = _t283 * _t283;
		_t287 = _t282 * _t282;
		_t288 = _t287+_t286;
		_t289 = _t288+_t285;
		_t290 = sqrt(_t289);
		_t291 = _t282 / _t290;
		_t292 = _t283 / _t290;
		_t293 = _t284 / _t290;
		_t294 = (float)1.0 / (_t289);
		_t295 = vertParams[53] * _t294;
		_t296 = vertParams[54] * _t294;
		_t297 = vertParams[55] * _t294;
		_t270 = _t291;
		_t271 = _t292;
		_t272 = _t293;
		_t273 = _t295;
		_t274 = _t296;
		_t275 = _t297;
		_t276 = 1.000000;
		_t277 = _t289;
		_t278 = 0.079577;
	}
	else cif (vertParams[49] == 1.000000) {
		cif (vertParams[50] == 0.000000) {
			_t306 = 1.000001-primary[3];
			_t307 = sqrt(_t306);
			_t308 = 1.000000-_t307;
			_t309 = _t307 * primary[4];
			_t310 = vertParams[58] * _t309;
			_t311 = vertParams[55] * _t308;
			_t312 = vertParams[52]+_t311;
			_t313 = _t312+_t310;
			_t314 = vertParams[59] * _t309;
			_t315 = vertParams[56] * _t308;
			_t316 = vertParams[53]+_t315;
			_t317 = _t316+_t314;
			_t318 = vertParams[60] * _t309;
			_t319 = vertParams[57] * _t308;
			_t320 = vertParams[54]+_t319;
			_t321 = _t320+_t318;
			_t322 = 1.000000-_t308;
			_t323 = _t322-_t309;
			_t324 = vertParams[67] * _t309;
			_t325 = vertParams[64] * _t308;
			_t326 = vertParams[61] * _t323;
			_t327 = _t326+_t325;
			_t328 = _t327+_t324;
			_t329 = vertParams[68] * _t309;
			_t330 = vertParams[65] * _t308;
			_t331 = vertParams[62] * _t323;
			_t332 = _t331+_t330;
			_t333 = _t332+_t329;
			_t334 = vertParams[69] * _t309;
			_t335 = vertParams[66] * _t308;
			_t336 = vertParams[63] * _t323;
			_t337 = _t336+_t335;
			_t338 = _t337+_t334;
			_t339 = sqrt(_t328*_t328+_t333*_t333+_t338*_t338);
			_t340 = (float)1.0 / (_t339);
			_t341 = _t328 * _t340;
			_t342 = _t333 * _t340;
			_t343 = _t338 * _t340;
			_t298 = _t313;
			_t299 = _t317;
			_t300 = _t321;
			_t301 = _t341;
			_t302 = _t342;
			_t303 = _t343;
			_t304 = vertParams[95];
		}
		else {
			_t298 = 0.000000;
			_t299 = 0.000000;
			_t300 = 0.000000;
			_t301 = 0.000000;
			_t302 = 0.000000;
			_t303 = 0.000000;
			_t304 = 0.000000;
		}
		_t344 = _t298-_t150;
		_t345 = _t299-_t151;
		_t346 = _t300-_t152;
		_t347 = _t346 * _t346;
		_t348 = _t345 * _t345;
		_t349 = _t344 * _t344;
		_t350 = _t349+_t348;
		_t351 = _t350+_t347;
		_t352 = sqrt(_t351);
		_t353 = _t344 / _t352;
		_t354 = _t345 / _t352;
		_t355 = _t346 / _t352;
		_t356 = _t353 * _t301 + _t354 * _t302 + _t355 * _t303;
		_t357 = -_t356;
		_t358 = _t304 * _t351;
		_t359 = _t358 / _t357;
		_t360 = vertParams[96] / _t359;
		_t361 = vertParams[97] / _t359;
		_t362 = vertParams[98] / _t359;
		_t363 = _t304 * _t357;
		_t364 = _t363 * 0.318310;
		_t270 = _t353;
		_t271 = _t354;
		_t272 = _t355;
		_t273 = _t360;
		_t274 = _t361;
		_t275 = _t362;
		_t276 = _t357;
		_t277 = _t359;
		_t278 = _t364;
	}
	else cif (vertParams[49] == 2.000000) {
		cif (vertParams[50] == 0.000000) {
			_t382 = vertParams[57] * vertParams[57];
			_t383 = vertParams[58] * vertParams[58];
			_t384 = vertParams[59] * vertParams[59];
			_t385 = vertParams[57] * vertParams[58];
			_t386 = vertParams[57] * vertParams[59];
			_t387 = vertParams[58] * vertParams[59];
			_t388 = vertParams[57] * vertParams[60];
			_t389 = vertParams[58] * vertParams[60];
			_t390 = vertParams[59] * vertParams[60];
			_t391 = _t383+_t384;
			_t392 = 2.000000 * _t391;
			_t393 = 1.000000-_t392;
			_t394 = _t385+_t390;
			_t395 = 2.000000 * _t394;
			_t396 = _t386-_t389;
			_t397 = 2.000000 * _t396;
			_t398 = _t385-_t390;
			_t399 = 2.000000 * _t398;
			_t400 = _t382+_t384;
			_t401 = 2.000000 * _t400;
			_t402 = 1.000000-_t401;
			_t403 = _t387+_t388;
			_t404 = 2.000000 * _t403;
			_t405 = _t386+_t389;
			_t406 = 2.000000 * _t405;
			_t407 = _t387-_t388;
			_t408 = 2.000000 * _t407;
			_t409 = _t382+_t383;
			_t410 = 2.000000 * _t409;
			_t411 = 1.000000-_t410;
			_t365 = _t393;
			_t366 = _t395;
			_t367 = _t397;
			_t368 = 0.000000;
			_t369 = _t399;
			_t370 = _t402;
			_t371 = _t404;
			_t372 = 0.000000;
			_t373 = _t406;
			_t374 = _t408;
			_t375 = _t411;
			_t376 = 0.000000;
			_t377 = vertParams[51];
			_t378 = vertParams[52];
			_t379 = vertParams[53];
			_t380 = 1.000000;
		}
		else {
			_t412 = 1.000000-primary[0];
			_t413 = primary[0] * vertParams[54];
			_t414 = _t412 * vertParams[51];
			_t415 = _t414+_t413;
			_t416 = primary[0] * vertParams[55];
			_t417 = _t412 * vertParams[52];
			_t418 = _t417+_t416;
			_t419 = primary[0] * vertParams[56];
			_t420 = _t412 * vertParams[53];
			_t421 = _t420+_t419;
			_t422 = vertParams[60] * vertParams[64];
			_t423 = vertParams[59] * vertParams[63];
			_t424 = vertParams[58] * vertParams[62];
			_t425 = vertParams[57] * vertParams[61];
			_t426 = _t425+_t424;
			_t427 = _t426+_t423;
			_t428 = _t427+_t422;
			cif (_t428 < 0.000000) {
				_t435 = -vertParams[61];
				_t436 = -vertParams[62];
				_t437 = -vertParams[63];
				_t438 = -vertParams[64];
				_t439 = -_t428;
				_t429 = _t435;
				_t430 = _t436;
				_t431 = _t437;
				_t432 = _t438;
				_t433 = _t439;
			}
			else {
				_t429 = vertParams[61];
				_t430 = vertParams[62];
				_t431 = vertParams[63];
				_t432 = vertParams[64];
				_t433 = _t428;
			}
			cif (_t433 > 0.999500) {
				_t445 = 1.000000-primary[0];
				_t446 = primary[0] * _t429;
				_t447 = _t445 * vertParams[57];
				_t448 = _t447+_t446;
				_t449 = primary[0] * _t430;
				_t450 = _t445 * vertParams[58];
				_t451 = _t450+_t449;
				_t452 = primary[0] * _t431;
				_t453 = _t445 * vertParams[59];
				_t454 = _t453+_t452;
				_t455 = primary[0] * _t432;
				_t456 = _t445 * vertParams[60];
				_t457 = _t456+_t455;
				_t458 = sqrt(_t448*_t448+_t451*_t451+_t454*_t454+_t457*_t457);
				_t459 = (float)1.0 / (_t458);
				_t460 = _t448 * _t459;
				_t461 = _t451 * _t459;
				_t462 = _t454 * _t459;
				_t463 = _t457 * _t459;
				_t440 = _t460;
				_t441 = _t461;
				_t442 = _t462;
				_t443 = _t463;
			}
			else {
				_t464 = acos(_t433);
				_t465 = _t464 * primary[0];
				_t466 = vertParams[57] * _t433;
				_t467 = _t429-_t466;
				_t468 = vertParams[58] * _t433;
				_t469 = _t430-_t468;
				_t470 = vertParams[59] * _t433;
				_t471 = _t431-_t470;
				_t472 = vertParams[60] * _t433;
				_t473 = _t432-_t472;
				_t474 = sqrt(_t467*_t467+_t469*_t469+_t471*_t471+_t473*_t473);
				_t475 = (float)1.0 / (_t474);
				_t476 = _t467 * _t475;
				_t477 = _t469 * _t475;
				_t478 = _t471 * _t475;
				_t479 = _t473 * _t475;
				_t480 = sin(_t465);
				_t481 = cos(_t465);
				_t482 = _t476 * _t480;
				_t483 = vertParams[57] * _t481;
				_t484 = _t483+_t482;
				_t485 = _t477 * _t480;
				_t486 = vertParams[58] * _t481;
				_t487 = _t486+_t485;
				_t488 = _t478 * _t480;
				_t489 = vertParams[59] * _t481;
				_t490 = _t489+_t488;
				_t491 = _t479 * _t480;
				_t492 = vertParams[60] * _t481;
				_t493 = _t492+_t491;
				_t440 = _t484;
				_t441 = _t487;
				_t442 = _t490;
				_t443 = _t493;
			}
			_t494 = _t440 * _t440;
			_t495 = _t441 * _t441;
			_t496 = _t442 * _t442;
			_t497 = _t440 * _t441;
			_t498 = _t440 * _t442;
			_t499 = _t441 * _t442;
			_t500 = _t440 * _t443;
			_t501 = _t441 * _t443;
			_t502 = _t442 * _t443;
			_t503 = _t495+_t496;
			_t504 = 2.000000 * _t503;
			_t505 = 1.000000-_t504;
			_t506 = _t497+_t502;
			_t507 = 2.000000 * _t506;
			_t508 = _t498-_t501;
			_t509 = 2.000000 * _t508;
			_t510 = _t497-_t502;
			_t511 = 2.000000 * _t510;
			_t512 = _t494+_t496;
			_t513 = 2.000000 * _t512;
			_t514 = 1.000000-_t513;
			_t515 = _t499+_t500;
			_t516 = 2.000000 * _t515;
			_t517 = _t498+_t501;
			_t518 = 2.000000 * _t517;
			_t519 = _t499-_t500;
			_t520 = 2.000000 * _t519;
			_t521 = _t494+_t495;
			_t522 = 2.000000 * _t521;
			_t523 = 1.000000-_t522;
			_t365 = _t505;
			_t366 = _t507;
			_t367 = _t509;
			_t368 = 0.000000;
			_t369 = _t511;
			_t370 = _t514;
			_t371 = _t516;
			_t372 = 0.000000;
			_t373 = _t518;
			_t374 = _t520;
			_t375 = _t523;
			_t376 = 0.000000;
			_t377 = _t415;
			_t378 = _t418;
			_t379 = _t421;
			_t380 = 1.000000;
		}
		_t524 = vertParams[81]-vertParams[80];
		_t525 = primary[3]-vertParams[80];
		_t526 = _t525 / _t524;
		_t527 = vertParams[83]-vertParams[82];
		_t528 = primary[4]-vertParams[82];
		_t529 = _t528 / _t527;
		cif (_t529 < 0.500000) {
			_t532 = 2.000000 * _t529;
			_t533 = sqrt(_t532);
			_t534 = 1.000000-_t533;
			_t530 = _t534;
		}
		else {
			_t535 = _t529-0.500000;
			_t536 = 2.000000 * _t535;
			_t537 = sqrt(_t536);
			_t538 = _t537-1.000000;
			_t530 = _t538;
		}
		cif (_t526 < 0.500000) {
			_t541 = 2.000000 * _t526;
			_t542 = sqrt(_t541);
			_t543 = 1.000000-_t542;
			_t539 = _t543;
		}
		else {
			_t544 = _t526-0.500000;
			_t545 = 2.000000 * _t544;
			_t546 = sqrt(_t545);
			_t547 = _t546-1.000000;
			_t539 = _t547;
		}
		_t548 = vertParams[84]+_t539;
		_t549 = vertParams[85]+_t530;
		_t550 = _t548+0.500000;
		_t551 = _t550 * vertParams[86];
		_t552 = _t549+0.500000;
		_t553 = _t552 * vertParams[87];
		_t554 = sin(_t551);
		_t555 = cos(_t551);
		_t556 = sin(_t553);
		_t557 = cos(_t553);
		_t558 = -_t555;
		_t559 = _t558 * _t556;
		_t560 = _t554 * _t556;
		_t561 = _t375 * _t559;
		_t562 = _t371 * _t557;
		_t563 = _t367 * _t560;
		_t564 = _t563+_t562;
		_t565 = _t564+_t561;
		_t566 = _t374 * _t559;
		_t567 = _t370 * _t557;
		_t568 = _t366 * _t560;
		_t569 = _t568+_t567;
		_t570 = _t569+_t566;
		_t571 = _t373 * _t559;
		_t572 = _t369 * _t557;
		_t573 = _t365 * _t560;
		_t574 = _t573+_t572;
		_t575 = _t574+_t571;
		_t576 = 1.000000-_t539;
		_t577 = 1.000000-_t530;
		_t578 = vertParams[91] * _t539;
		_t579 = _t578 * _t577;
		_t580 = vertParams[88] * _t576;
		_t581 = _t580 * _t577;
		_t582 = _t581+_t579;
		_t583 = vertParams[92] * _t539;
		_t584 = _t583 * _t577;
		_t585 = vertParams[89] * _t576;
		_t586 = _t585 * _t577;
		_t587 = _t586+_t584;
		_t588 = vertParams[93] * _t539;
		_t589 = _t588 * _t577;
		_t590 = vertParams[90] * _t576;
		_t591 = _t590 * _t577;
		_t592 = _t591+_t589;
		_t593 = vertParams[97] * _t539;
		_t594 = _t593 * _t530;
		_t595 = vertParams[94] * _t576;
		_t596 = _t595 * _t530;
		_t597 = _t596+_t594;
		_t598 = vertParams[98] * _t539;
		_t599 = _t598 * _t530;
		_t600 = vertParams[95] * _t576;
		_t601 = _t600 * _t530;
		_t602 = _t601+_t599;
		_t603 = vertParams[99] * _t539;
		_t604 = _t603 * _t530;
		_t605 = vertParams[96] * _t576;
		_t606 = _t605 * _t530;
		_t607 = _t606+_t604;
		_t608 = _t582+_t597;
		_t609 = _t587+_t602;
		_t610 = _t592+_t607;
		cif (_t556 >= 0.000000) {
			_t611 = _t556;
		}
		else {
			_t613 = -_t556;
			_t611 = _t613;
		}
		cif (_t611 >= 0.000000) {
			_t614 = _t611;
		}
		else {
			_t614 = 0.000000;
		}
		_t616 = _t607 * 0.072169;
		_t617 = _t602 * 0.715160;
		_t618 = _t597 * 0.212671;
		_t619 = _t618+_t617;
		_t620 = _t619+_t616;
		_t621 = _t620 * vertParams[101];
		_t622 = _t592 * 0.072169;
		_t623 = _t587 * 0.715160;
		_t624 = _t582 * 0.212671;
		_t625 = _t624+_t623;
		_t626 = _t625+_t622;
		_t627 = _t626 * vertParams[100];
		_t628 = _t627+_t621;
		_t629 = _t628 * vertParams[102];
		_t630 = _t629 / _t614;
		_t631 = (float)1.0 / (_t630);
		_t632 = _t608 * _t631;
		_t633 = _t609 * _t631;
		_t634 = _t610 * _t631;
		_t635 = scene[37] * scene[37];
		_t636 = (float)1.0 / (_t635);
		_t637 = 0.318310 * _t636;
		_t638 = _t630 * _t637;
		_t270 = _t575;
		_t271 = _t570;
		_t272 = _t565;
		_t273 = _t632;
		_t274 = _t633;
		_t275 = _t634;
		_t276 = 1.000000;
		_t277 = _t630;
		_t278 = _t638;
	}
	else {
		_t270 = 0.000000;
		_t271 = 0.000000;
		_t272 = 0.000000;
		_t273 = 0.000000;
		_t274 = 0.000000;
		_t275 = 0.000000;
		_t276 = 0.000000;
		_t277 = 0.000000;
		_t278 = 0.000000;
	}
	cif (vertParams[105] == 1.000000) {
		_t648 = _t156 * _t250 + _t157 * _t251 + _t158 * _t252;
		cif (_t648 > 0.000000) {
			_t649 = _t156;
			_t650 = _t157;
			_t651 = _t158;
			_t652 = _t648;
		}
		else {
			_t654 = -_t156;
			_t655 = -_t157;
			_t656 = -_t158;
			_t657 = -_t648;
			_t649 = _t654;
			_t650 = _t655;
			_t651 = _t656;
			_t652 = _t657;
		}
		_t658 = _t649 * _t270 + _t650 * _t271 + _t651 * _t272;
		cif (vertParams[113] > 0.000000) {
			_t664 = _t250 * _t649 + _t251 * _t650 + _t252 * _t651;
			_t665 = 2.000000 * _t664;
			_t666 = _t665 * _t649;
			_t667 = _t666-_t250;
			_t668 = _t665 * _t650;
			_t669 = _t668-_t251;
			_t670 = _t665 * _t651;
			_t671 = _t670-_t252;
			_t672 = _t667 * _t270 + _t669 * _t271 + _t671 * _t272;
			_t673 = pow(_t672,vertParams[112]);
			_t674 = _t673 * 0.159155;
			cif (_t674 > 0.000000) {
				_t680 = vertParams[112]+1.000000;
				_t681 = vertParams[112]+2.000000;
				_t682 = _t681 * _t674;
				_t683 = vertParams[109] * _t682;
				_t684 = vertParams[110] * _t682;
				_t685 = vertParams[111] * _t682;
				_t686 = vertParams[113] * _t680;
				_t687 = _t686 * _t674;
				_t675 = _t683;
				_t676 = _t684;
				_t677 = _t685;
				_t678 = _t687;
			}
			else {
				_t675 = 0.000000;
				_t676 = 0.000000;
				_t677 = 0.000000;
				_t678 = 0.000000;
			}
			_t659 = _t675;
			_t660 = _t676;
			_t661 = _t677;
			_t662 = _t678;
		}
		else {
			_t659 = 0.000000;
			_t660 = 0.000000;
			_t661 = 0.000000;
			_t662 = 0.000000;
		}
		cif (vertParams[113] < 1.000000) {
			_t694 = vertParams[106] * 0.318310;
			_t695 = vertParams[107] * 0.318310;
			_t696 = vertParams[108] * 0.318310;
			_t697 = 1.000000-vertParams[113];
			_t698 = _t697 * 0.318310;
			_t699 = _t698 * _t658;
			_t700 = _t698 * _t652;
			_t688 = _t694;
			_t689 = _t695;
			_t690 = _t696;
			_t691 = _t699;
			_t692 = _t700;
		}
		else {
			_t688 = 0.000000;
			_t689 = 0.000000;
			_t690 = 0.000000;
			_t691 = 0.000000;
			_t692 = 0.000000;
		}
		_t701 = _t659+_t688;
		_t702 = _t660+_t689;
		_t703 = _t661+_t690;
		_t704 = _t662+_t691;
		_t705 = _t662+_t692;
		_t706 = _t701 * _t658;
		_t707 = _t702 * _t658;
		_t708 = _t703 * _t658;
		_t639 = _t706;
		_t640 = _t707;
		_t641 = _t708;
		_t642 = _t658;
		_t643 = _t704;
		_t644 = _t705;
	}
	else cif (vertParams[105] == 2.000000) {
		_t709 = _t250 * _t156 + _t251 * _t157 + _t252 * _t158;
		_t710 = _t270 * _t156 + _t271 * _t157 + _t272 * _t158;
		_t711 = _t709 * _t710;
		cif (_t709 > 0.000000) {
			_t712 = vertParams[112];
		}
		else {
			_t712 = vertParams[113];
		}
		cif (_t710 > 0.000000) {
			_t714 = vertParams[112];
		}
		else {
			_t714 = vertParams[113];
		}
		cif (_t711 > 0.000000) {
			_t720 = _t250+_t270;
			_t721 = _t251+_t271;
			_t722 = _t252+_t272;
			_t723 = sqrt(_t720*_t720+_t721*_t721+_t722*_t722);
			_t724 = (float)1.0 / (_t723);
			_t725 = _t720 * _t724;
			_t726 = _t721 * _t724;
			_t727 = _t722 * _t724;
			_t716 = _t725;
			_t717 = _t726;
			_t718 = _t727;
		}
		else {
			_t728 = _t270 * _t712;
			_t729 = _t250+_t728;
			_t730 = _t271 * _t712;
			_t731 = _t251+_t730;
			_t732 = _t272 * _t712;
			_t733 = _t252+_t732;
			_t734 = sqrt(_t729*_t729+_t731*_t731+_t733*_t733);
			_t735 = (float)1.0 / (_t734);
			_t736 = _t729 * _t735;
			_t737 = _t731 * _t735;
			_t738 = _t733 * _t735;
			_t716 = _t736;
			_t717 = _t737;
			_t718 = _t738;
		}
		_t739 = _t716 * _t156 + _t717 * _t157 + _t718 * _t158;
		cif (_t739 < 0.000000) {
			_t744 = -_t716;
			_t745 = -_t717;
			_t746 = -_t718;
			_t740 = _t744;
			_t741 = _t745;
			_t742 = _t746;
		}
		else {
			_t740 = _t716;
			_t741 = _t717;
			_t742 = _t718;
		}
		_t747 = _t250 * _t740 + _t251 * _t741 + _t252 * _t742;
		_t748 = _t270 * _t740 + _t271 * _t741 + _t272 * _t742;
		cif (_t158 < -0.999999) {
			_t749 = 0.000000;
			_t750 = -1.000000;
			_t751 = 0.000000;
			_t752 = -1.000000;
			_t753 = 0.000000;
			_t754 = 0.000000;
		}
		else {
			_t756 = 1.000000+_t158;
			_t757 = (float)1.0 / (_t756);
			_t758 = -_t156;
			_t759 = _t758 * _t157;
			_t760 = _t759 * _t757;
			_t761 = -_t156;
			_t762 = _t156 * _t156;
			_t763 = _t762 * _t757;
			_t764 = 1.000000-_t763;
			_t765 = -_t157;
			_t766 = _t157 * _t157;
			_t767 = _t766 * _t757;
			_t768 = 1.000000-_t767;
			_t749 = _t764;
			_t750 = _t760;
			_t751 = _t761;
			_t752 = _t760;
			_t753 = _t768;
			_t754 = _t765;
		}
		_t769 = _t156 * _t740 + _t157 * _t741 + _t158 * _t742;
		_t770 = _t752 * _t740 + _t753 * _t741 + _t754 * _t742;
		_t771 = _t749 * _t740 + _t750 * _t741 + _t751 * _t742;
		_t772 = _t769 * _t769;
		_t773 = vertParams[114] * vertParams[114];
		_t774 = _t770 * _t770;
		_t775 = _t774 / _t773;
		_t776 = vertParams[114] * vertParams[114];
		_t777 = _t771 * _t771;
		_t778 = _t777 / _t776;
		_t779 = _t778+_t775;
		_t780 = _t779 / _t772;
		_t781 = _t772 * _t772;
		_t782 = 3.141593 * vertParams[114];
		_t783 = _t782 * vertParams[114];
		_t784 = _t783 * _t781;
		_t785 = -_t780;
		_t786 = exp(_t785);
		_t787 = _t786 / _t784;
		cif (_t747 > 0.000000) {
			_t788 = vertParams[113];
		}
		else {
			_t788 = vertParams[112];
		}
		_t790 = _t788 * _t788;
		_t791 = _t747 * _t747;
		_t792 = 1.000000-_t791;
		_t793 = _t792 * _t790;
		_t794 = 1.000000-_t793;
		cif (_t794 <= 0.000000) {
			_t795 = 1.000000;
		}
		else {
			cif (_t747 >= 0.000000) {
				_t797 = _t747;
			}
			else {
				_t799 = -_t747;
				_t797 = _t799;
			}
			_t800 = sqrt(_t794);
			_t801 = vertParams[112] * _t800;
			_t802 = vertParams[112] * _t797;
			_t803 = _t797+_t801;
			_t804 = _t797-_t801;
			_t805 = _t804 / _t803;
			_t806 = _t802+_t800;
			_t807 = _t802-_t800;
			_t808 = _t807 / _t806;
			_t809 = _t808 * _t808;
			_t810 = _t805 * _t805;
			_t811 = _t810+_t809;
			_t812 = 0.500000 * _t811;
			_t795 = _t812;
		}
		cif (_t709 >= 0.000000) {
			_t813 = _t709;
		}
		else {
			_t815 = -_t709;
			_t813 = _t815;
		}
		cif (_t710 >= 0.000000) {
			_t816 = _t710;
		}
		else {
			_t818 = -_t710;
			_t816 = _t818;
		}
		_t819 = _t816 * _t816;
		_t820 = 1.000001-_t819;
		cif (_t820 >= 0.000000) {
			_t821 = _t820;
		}
		else {
			_t823 = -_t820;
			_t821 = _t823;
		}
		_t824 = sqrt(_t821);
		_t825 = _t824 / _t816;
		cif (_t825 <= 0.000000) {
			_t826 = 1.000000;
		}
		else {
			_t828 = vertParams[114] * _t825;
			_t829 = (float)1.0 / (_t828);
			cif (_t829 >= 1.600000) {
				_t830 = 1.000000;
			}
			else {
				_t832 = _t829 * _t829;
				_t833 = 2.577000 * _t832;
				_t834 = 2.276000 * _t829;
				_t835 = 1.000000+_t834;
				_t836 = _t835+_t833;
				_t837 = 2.181000 * _t832;
				_t838 = 3.535000 * _t829;
				_t839 = _t838+_t837;
				_t840 = _t839 / _t836;
				_t830 = _t840;
			}
			_t826 = _t830;
		}
		_t841 = _t813 * _t813;
		_t842 = 1.000001-_t841;
		cif (_t842 >= 0.000000) {
			_t843 = _t842;
		}
		else {
			_t845 = -_t842;
			_t843 = _t845;
		}
		_t846 = sqrt(_t843);
		_t847 = _t846 / _t813;
		cif (_t847 <= 0.000000) {
			_t848 = 1.000000;
		}
		else {
			_t850 = vertParams[114] * _t847;
			_t851 = (float)1.0 / (_t850);
			cif (_t851 >= 1.600000) {
				_t852 = 1.000000;
			}
			else {
				_t854 = _t851 * _t851;
				_t855 = 2.577000 * _t854;
				_t856 = 2.276000 * _t851;
				_t857 = 1.000000+_t856;
				_t858 = _t857+_t855;
				_t859 = 2.181000 * _t854;
				_t860 = 3.535000 * _t851;
				_t861 = _t860+_t859;
				_t862 = _t861 / _t858;
				_t852 = _t862;
			}
			_t848 = _t852;
		}
		_t863 = _t848 * _t826;
		_t864 = sqrt(_t813);
		_t865 = 0.200000 * _t864;
		_t866 = 1.200000-_t865;
		_t867 = vertParams[114] * _t866;
		_t868 = _t769 * _t769;
		_t869 = _t867 * _t867;
		_t870 = _t770 * _t770;
		_t871 = _t870 / _t869;
		_t872 = _t867 * _t867;
		_t873 = _t771 * _t771;
		_t874 = _t873 / _t872;
		_t875 = _t874+_t871;
		_t876 = _t875 / _t868;
		_t877 = _t868 * _t868;
		_t878 = 3.141593 * _t867;
		_t879 = _t878 * _t867;
		_t880 = _t879 * _t877;
		_t881 = -_t876;
		_t882 = exp(_t881);
		_t883 = _t882 / _t880;
		_t884 = _t769 * _t883;
		_t885 = sqrt(_t816);
		_t886 = 0.200000 * _t885;
		_t887 = 1.200000-_t886;
		_t888 = vertParams[114] * _t887;
		_t889 = _t769 * _t769;
		_t890 = _t888 * _t888;
		_t891 = _t770 * _t770;
		_t892 = _t891 / _t890;
		_t893 = _t888 * _t888;
		_t894 = _t771 * _t771;
		_t895 = _t894 / _t893;
		_t896 = _t895+_t892;
		_t897 = _t896 / _t889;
		_t898 = _t889 * _t889;
		_t899 = 3.141593 * _t888;
		_t900 = _t899 * _t888;
		_t901 = _t900 * _t898;
		_t902 = -_t897;
		_t903 = exp(_t902);
		_t904 = _t903 / _t901;
		_t905 = _t769 * _t904;
		cif (_t711 > 0.000000) {
			_t911 = 4.000000 * _t709;
			_t912 = _t795 * _t787;
			_t913 = _t912 * _t863;
			_t914 = _t913 / _t911;
			cif (_t914 >= 0.000000) {
				_t915 = _t914;
			}
			else {
				_t917 = -_t914;
				_t915 = _t917;
			}
			_t918 = vertParams[106] * _t915;
			_t919 = vertParams[107] * _t915;
			_t920 = vertParams[108] * _t915;
			_t921 = 4.000000 * _t748;
			_t922 = _t884 * _t795;
			_t923 = _t922 / _t921;
			cif (_t923 >= 0.000000) {
				_t924 = _t923;
			}
			else {
				_t926 = -_t923;
				_t924 = _t926;
			}
			_t927 = 4.000000 * _t747;
			_t928 = _t905 * _t795;
			_t929 = _t928 / _t927;
			cif (_t929 >= 0.000000) {
				_t930 = _t929;
			}
			else {
				_t932 = -_t929;
				_t930 = _t932;
			}
			_t906 = _t918;
			_t907 = _t919;
			_t908 = _t920;
			_t909 = _t924;
			_t910 = _t930;
		}
		else {
			_t933 = _t712 * _t748;
			_t934 = _t747+_t933;
			_t935 = _t714 * _t747;
			_t936 = _t748+_t935;
			_t937 = (float)1.0 / (_t712);
			_t938 = _t937 * _t937;
			_t939 = _t934 * _t934;
			_t940 = _t709 * _t939;
			_t941 = _t712 * _t712;
			_t942 = 1.000000-_t795;
			_t943 = _t942 * _t787;
			_t944 = _t943 * _t863;
			_t945 = _t944 * _t941;
			_t946 = _t945 * _t747;
			_t947 = _t946 * _t748;
			_t948 = _t938 * _t947;
			_t949 = _t948 / _t940;
			cif (_t949 >= 0.000000) {
				_t950 = _t949;
			}
			else {
				_t952 = -_t949;
				_t950 = _t952;
			}
			_t953 = vertParams[109] * _t950;
			_t954 = vertParams[110] * _t950;
			_t955 = vertParams[111] * _t950;
			_t956 = _t934 * _t934;
			_t957 = _t712 * _t712;
			_t958 = _t957 * _t748;
			_t959 = 1.000000-_t795;
			_t960 = _t884 * _t959;
			_t961 = _t960 * _t958;
			_t962 = _t961 / _t956;
			cif (_t962 >= 0.000000) {
				_t963 = _t962;
			}
			else {
				_t965 = -_t962;
				_t963 = _t965;
			}
			_t966 = _t936 * _t936;
			_t967 = _t714 * _t714;
			_t968 = _t967 * _t747;
			_t969 = 1.000000-_t795;
			_t970 = _t905 * _t969;
			_t971 = _t970 * _t968;
			_t972 = _t971 / _t966;
			cif (_t972 >= 0.000000) {
				_t973 = _t972;
			}
			else {
				_t975 = -_t972;
				_t973 = _t975;
			}
			_t906 = _t953;
			_t907 = _t954;
			_t908 = _t955;
			_t909 = _t963;
			_t910 = _t973;
		}
		_t639 = _t906;
		_t640 = _t907;
		_t641 = _t908;
		_t642 = _t710;
		_t643 = _t909;
		_t644 = _t910;
	}
	else cif (vertParams[105] == 0.000000) {
		_t976 = _t156 * _t250 + _t157 * _t251 + _t158 * _t252;
		cif (_t976 > 0.000000) {
			_t977 = _t156;
			_t978 = _t157;
			_t979 = _t158;
			_t980 = _t976;
		}
		else {
			_t982 = -_t156;
			_t983 = -_t157;
			_t984 = -_t158;
			_t985 = -_t976;
			_t977 = _t982;
			_t978 = _t983;
			_t979 = _t984;
			_t980 = _t985;
		}
		_t986 = _t977 * _t270 + _t978 * _t271 + _t979 * _t272;
		_t987 = _t986 * 0.318310;
		_t988 = _t980 * 0.318310;
		_t989 = _t987 * vertParams[106];
		_t990 = _t987 * vertParams[107];
		_t991 = _t987 * vertParams[108];
		_t639 = _t989;
		_t640 = _t990;
		_t641 = _t991;
		_t642 = _t986;
		_t643 = _t987;
		_t644 = _t988;
	}
	else {
		_t639 = 0.000000;
		_t640 = 0.000000;
		_t641 = 0.000000;
		_t642 = 0.000000;
		_t643 = 0.000000;
		_t644 = 0.000000;
	}
	_t992 = (float)1.0 / (vertParams[115]);
	_t993 = _t639 * _t273;
	_t994 = _t993 * _t992;
	_t995 = _t640 * _t274;
	_t996 = _t995 * _t992;
	_t997 = _t641 * _t275;
	_t998 = _t997 * _t992;
	cif (vertParams[49] == 0.000000) {
		_t999 = 0.000000;
	}
	else {
		_t1001 = vertParams[115] * _t277;
		_t1002 = _t643 / _t1001;
		_t1003 = _t1002 * _t1002;
		_t999 = _t1003;
	}
	_t1004 = _t644 * _t644;
	_t1005 = _t277 * _t276;
	_t1006 = _t278 * _t642;
	_t1007 = _t1006 / _t1005;
	_t1008 = _t1007 * _t1007;
	_t1009 = _t1008 * _t269;
	_t1010 = _t999+1.000000;
	_t1011 = _t1010+_t1009;
	_t1012 = (float)1.0 / (_t1011);
	_t1013 = _t994 * _t1012;
	_t1014 = _t996 * _t1012;
	_t1015 = _t998 * _t1012;
	_t1016 = _t1015 * 0.072169;
	_t1017 = _t1014 * 0.715160;
	_t1018 = _t1013 * 0.212671;
	_t1019 = _t1018+_t1017;
	_t1020 = _t1019+_t1016;
	_t1021 = log(_t1020);
	float _acc4 = 0, _acc5 = 0, _acc8 = 0, _acc12 = 0, _acc13 = 0, _acc17 = 0, _acc7 = 0, _acc11 = 0, _acc19 = 0, _acc23 = 0, _acc22 = 0, _acc21 = 0, _acc38 = 0, _acc39 = 0, _acc41 = 0, _acc43 = 0, _acc45 = 0, _acc31 = 0, _acc47 = 0, _acc50 = 0, _acc36 = 0, _acc33 = 0, _acc34 = 0, _acc54 = 0, _acc30 = 0, _acc29 = 0, _acc56 = 0, _acc57 = 0, _acc44 = 0, _acc60 = 0, _acc59 = 0, _acc634 = 0, _acc921 = 0, _acc633 = 0, _acc632 = 0, _acc570 = 0, _acc505 = 0, _acc312 = 0, _acc696 = 0, _acc315 = 0, _acc314 = 0, _acc320 = 0, _acc322 = 0, _acc214 = 0, _acc326 = 0, _acc485 = 0, _acc324 = 0, _acc216 = 0, _acc327 = 0, _acc399 = 0, _acc486 = 0, _acc0 = 0, _acc215 = 0, _acc334 = 0, _acc863 = 0, _acc400 = 0, _acc487 = 0, _acc342 = 0, _acc868 = 0, _acc321 = 0, _acc313 = 0, _acc699 = 0, _acc300 = 0, _acc348 = 0, _acc6 = 0, _acc554 = 0, _acc654 = 0, _acc628 = 0, _acc346 = 0, _acc106 = 0, _acc655 = 0, _acc358 = 0, _acc185 = 0, _acc2 = 0, _acc482 = 0, _acc298 = 0, _acc156 = 0, _acc10 = 0, _acc107 = 0, _acc353 = 0, _acc325 = 0, _acc288 = 0, _acc93 = 0, _acc92 = 0, _acc983 = 0, _acc3 = 0, _acc982 = 0, _acc977 = 0, _acc816 = 0, _acc630 = 0, _acc987 = 0, _acc507 = 0, _acc624 = 0, _acc338 = 0, _acc406 = 0, _acc514 = 0, _acc355 = 0, _acc339 = 0, _acc515 = 0, _acc357 = 0, _acc729 = 0, _acc349 = 0, _acc738 = 0, _acc78 = 0, _acc801 = 0, _acc77 = 0, _acc95 = 0, _acc724 = 0, _acc881 = 0, _acc603 = 0, _acc727 = 0, _acc474 = 0, _acc880 = 0, _acc602 = 0, _acc726 = 0, _acc473 = 0, _acc354 = 0, _acc758 = 0, _acc834 = 0, _acc15 = 0, _acc363 = 0, _acc767 = 0, _acc725 = 0, _acc765 = 0, _acc768 = 0, _acc754 = 0, _acc698 = 0, _acc753 = 0, _acc622 = 0, _acc656 = 0, _acc749 = 0, _acc776 = 0, _acc227 = 0, _acc116 = 0, _acc152 = 0, _acc275 = 0, _acc756 = 0, _acc65 = 0, _acc781 = 0, _acc32 = 0, _acc783 = 0, _acc285 = 0, _acc392 = 0, _acc784 = 0, _acc786 = 0, _acc493 = 0, _acc437 = 0, _acc791 = 0, _acc752 = 0, _acc734 = 0, _acc797 = 0, _acc550 = 0, _acc991 = 0, _acc207 = 0, _acc978 = 0, _acc744 = 0, _acc811 = 0, _acc820 = 0, _acc552 = 0, _acc105 = 0, _acc824 = 0, _acc832 = 0, _acc359 = 0, _acc723 = 0, _acc838 = 0, _acc790 = 0, _acc221 = 0, _acc839 = 0, _acc735 = 0, _acc841 = 0, _acc741 = 0, _acc197 = 0, _acc157 = 0, _acc299 = 0, _acc674 = 0, _acc999 = 0, _acc740 = 0, _acc196 = 0, _acc828 = 0, _acc626 = 0, _acc742 = 0, _acc198 = 0, _acc72 = 0, _acc762 = 0, _acc688 = 0, _acc812 = 0, _acc771 = 0, _acc664 = 0, _acc979 = 0, _acc547 = 0, _acc316 = 0, _acc998 = 0, _acc609 = 0, _acc443 = 0, _acc829 = 0, _acc627 = 0, _acc129 = 0, _acc665 = 0, _acc68 = 0, _acc332 = 0, _acc491 = 0, _acc361 = 0, _acc272 = 0, _acc718 = 0, _acc779 = 0, _acc457 = 0, _acc751 = 0, _acc225 = 0, _acc795 = 0, _acc270 = 0, _acc716 = 0, _acc51 = 0, _acc455 = 0, _acc232 = 0, _acc731 = 0, _acc954 = 0, _acc481 = 0, _acc943 = 0, _acc732 = 0, _acc687 = 0, _acc944 = 0, _acc733 = 0, _acc773 = 0, _acc684 = 0, _acc942 = 0, _acc730 = 0, _acc683 = 0, _acc685 = 0, _acc263 = 0, _acc317 = 0, _acc690 = 0, _acc360 = 0, _acc636 = 0, _acc271 = 0, _acc717 = 0, _acc778 = 0, _acc456 = 0, _acc252 = 0, _acc581 = 0, _acc318 = 0, _acc819 = 0, _acc691 = 0, _acc343 = 0, _acc686 = 0, _acc917 = 0, _acc500 = 0, _acc836 = 0, _acc926 = 0, _acc769 = 0, _acc682 = 0, _acc750 = 0, _acc658 = 0, _acc672 = 0, _acc759 = 0, _acc35 = 0, _acc746 = 0, _acc364 = 0, _acc14 = 0, _acc88 = 0, _acc641 = 0, _acc945 = 0, _acc689 = 0, _acc810 = 0, _acc538 = 0, _acc870 = 0, _acc410 = 0, _acc135 = 0, _acc848 = 0, _acc1001 = 0, _acc222 = 0, _acc840 = 0, _acc150 = 0, _acc933 = 0, _acc1020 = 0, _acc449 = 0, _acc119 = 0, _acc660 = 0, _acc924 = 0, _acc808 = 0, _acc1017 = 0, _acc1009 = 0, _acc311 = 0, _acc1010 = 0, _acc984 = 0, _acc668 = 0, _acc290 = 0, _acc1021 = 0, _acc336 = 0, _acc770 = 0, _acc915 = 0, _acc882 = 0, _acc697 = 0, _acc206 = 0, _acc794 = 0, _acc661 = 0, _acc1019 = 0, _acc613 = 0, _acc666 = 0, _acc333 = 0, _acc492 = 0, _acc1013 = 0, _acc860 = 0, _acc662 = 0, _acc826 = 0, _acc669 = 0, _acc25 = 0, _acc1014 = 0, _acc861 = 0, _acc745 = 0, _acc1018 = 0, _acc307 = 0, _acc748 = 0, _acc1007 = 0, _acc918 = 0, _acc9 = 0, _acc66 = 0, _acc757 = 0, _acc637 = 0, _acc269 = 0, _acc229 = 0, _acc117 = 0, _acc867 = 0, _acc341 = 0, _acc774 = 0, _acc1005 = 0, _acc278 = 0, _acc720 = 0, _acc1002 = 0, _acc223 = 0, _acc112 = 0, _acc40 = 0, _acc667 = 0, _acc335 = 0, _acc864 = 0, _acc495 = 0, _acc809 = 0, _acc914 = 0, _acc712 = 0, _acc549 = 0, _acc858 = 0, _acc1015 = 0, _acc912 = 0, _acc806 = 0, _acc862 = 0, _acc736 = 0, _acc1008 = 0, _acc525 = 0, _acc855 = 0, _acc498 = 0, _acc475 = 0, _acc659 = 0, _acc922 = 0, _acc721 = 0, _acc913 = 0, _acc807 = 0, _acc1016 = 0, _acc1006 = 0, _acc286 = 0, _acc1003 = 0, _acc792 = 0, _acc224 = 0, _acc310 = 0, _acc1012 = 0, _acc291 = 0, _acc946 = 0, _acc803 = 0, _acc677 = 0, _acc292 = 0, _acc947 = 0, _acc356 = 0, _acc722 = 0, _acc764 = 0, _acc804 = 0, _acc678 = 0, _acc799 = 0, _acc760 = 0, _acc835 = 0, _acc865 = 0, _acc309 = 0, _acc1011 = 0, _acc264 = 0, _acc787 = 0, _acc702 = 0, _acc274 = 0, _acc259 = 0, _acc872 = 0, _acc952 = 0, _acc522 = 0, _acc670 = 0, _acc294 = 0, _acc681 = 0, _acc671 = 0, _acc763 = 0, _acc704 = 0, _acc87 = 0, _acc996 = 0, _acc640 = 0, _acc362 = 0, _acc701 = 0, _acc273 = 0, _acc780 = 0, _acc458 = 0, _acc909 = 0, _acc706 = 0, _acc86 = 0, _acc385 = 0, _acc963 = 0, _acc337 = 0, _acc710 = 0, _acc845 = 0, _acc277 = 0, _acc728 = 0, _acc869 = 0, _acc992 = 0, _acc565 = 0, _acc53 = 0, _acc949 = 0, _acc906 = 0, _acc695 = 0, _acc837 = 0, _acc680 = 0, _acc937 = 0, _acc874 = 0, _acc582 = 0, _acc83 = 0, _acc651 = 0, _acc907 = 0, _acc351 = 0, _acc875 = 0, _acc583 = 0, _acc703 = 0, _acc85 = 0, _acc800 = 0, _acc908 = 0, _acc857 = 0, _acc61 = 0, _acc777 = 0, _acc919 = 0, _acc675 = 0, _acc802 = 0, _acc607 = 0, _acc530 = 0, _acc441 = 0, _acc830 = 0, _acc508 = 0, _acc625 = 0, _acc846 = 0, _acc268 = 0, _acc631 = 0, _acc884 = 0, _acc181 = 0, _acc251 = 0, _acc707 = 0, _acc331 = 0, _acc490 = 0, _acc911 = 0, _acc345 = 0, _acc854 = 0, _acc350 = 0, _acc113 = 0, _acc955 = 0, _acc995 = 0, _acc639 = 0, _acc997 = 0, _acc994 = 0, _acc74 = 0, _acc993 = 0, _acc347 = 0, _acc344 = 0, _acc254 = 0, _acc201 = 0, _acc114 = 0, _acc958 = 0, _acc73 = 0, _acc111 = 0, _acc575 = 0, _acc545 = 0, _acc709 = 0, _acc408 = 0, _acc516 = 0, _acc352 = 0, _acc650 = 0, _acc877 = 0, _acc131 = 0, _acc934 = 0, _acc330 = 0, _acc489 = 0, _acc850 = 0, _acc293 = 0, _acc948 = 0, _acc151 = 0, _acc842 = 0, _acc49 = 0, _acc775 = 0, _acc813 = 0, _acc308 = 0, _acc546 = 0, _acc939 = 0, _acc301 = 0, _acc319 = 0, _acc643 = 0, _acc871 = 0, _acc37 = 0, _acc788 = 0, _acc883 = 0, _acc537 = 0, _acc843 = 0, _acc649 = 0, _acc876 = 0, _acc766 = 0, _acc879 = 0, _acc965 = 0, _acc429 = 0, _acc785 = 0, _acc878 = 0, _acc737 = 0, _acc873 = 0, _acc821 = 0, _acc130 = 0, _acc297 = 0, _acc96 = 0, _acc866 = 0, _acc676 = 0, _acc805 = 0, _acc608 = 0, _acc442 = 0, _acc329 = 0, _acc488 = 0, _acc852 = 0, _acc859 = 0, _acc856 = 0, _acc638 = 0, _acc629 = 0, _acc614 = 0, _acc121 = 0, _acc202 = 0, _acc587 = 0, _acc592 = 0, _acc620 = 0, _acc205 = 0, _acc204 = 0, _acc616 = 0, _acc501 = 0, _acc618 = 0, _acc986 = 0, _acc200 = 0, _acc617 = 0, _acc424 = 0, _acc611 = 0, _acc782 = 0, _acc556 = 0, _acc504 = 0, _acc606 = 0, _acc528 = 0, _acc440 = 0, _acc604 = 0, _acc529 = 0, _acc605 = 0, _acc527 = 0, _acc539 = 0, _acc601 = 0, _acc426 = 0, _acc600 = 0, _acc295 = 0, _acc427 = 0, _acc425 = 0, _acc596 = 0, _acc423 = 0, _acc287 = 0, _acc594 = 0, _acc595 = 0, _acc524 = 0, _acc422 = 0, _acc593 = 0, _acc941 = 0, _acc591 = 0, _acc589 = 0, _acc590 = 0, _acc323 = 0, _acc26 = 0, _acc577 = 0, _acc18 = 0, _acc518 = 0, _acc588 = 0, _acc586 = 0, _acc585 = 0, _acc579 = 0, _acc580 = 0, _acc578 = 0, _acc851 = 0, _acc411 = 0, _acc519 = 0, _acc825 = 0, _acc574 = 0, _acc823 = 0, _acc571 = 0, _acc282 = 0, _acc496 = 0, _acc573 = 0, _acc284 = 0, _acc497 = 0, _acc572 = 0, _acc283 = 0, _acc938 = 0, _acc499 = 0, _acc747 = 0, _acc365 = 0, _acc560 = 0, _acc369 = 0, _acc559 = 0, _acc569 = 0, _acc950 = 0, _acc566 = 0, _acc568 = 0, _acc52 = 0, _acc567 = 0, _acc366 = 0, _acc16 = 0, _acc370 = 0, _acc564 = 0, _acc962 = 0, _acc387 = 0, _acc276 = 0, _acc401 = 0, _acc509 = 0, _acc561 = 0, _acc959 = 0, _acc382 = 0, _acc563 = 0, _acc961 = 0, _acc384 = 0, _acc562 = 0, _acc960 = 0, _acc383 = 0, _acc367 = 0, _acc371 = 0, _acc558 = 0, _acc483 = 0, _acc555 = 0, _acc439 = 0, _acc553 = 0, _acc989 = 0, _acc208 = 0, _acc551 = 0, _acc990 = 0, _acc209 = 0, _acc548 = 0, _acc90 = 0, _acc543 = 0, _acc542 = 0, _acc847 = 0, _acc541 = 0, _acc526 = 0, _acc407 = 0, _acc544 = 0, _acc534 = 0, _acc262 = 0, _acc533 = 0, _acc532 = 0, _acc536 = 0, _acc535 = 0, _acc393 = 0, _acc126 = 0, _acc597 = 0, _acc395 = 0, _acc397 = 0, _acc402 = 0, _acc510 = 0, _acc250 = 0, _acc404 = 0, _acc409 = 0, _acc388 = 0, _acc708 = 0, _acc405 = 0, _acc513 = 0, _acc180 = 0, _acc389 = 0, _acc403 = 0, _acc398 = 0, _acc623 = 0, _acc506 = 0, _acc390 = 0, _acc598 = 0, _acc396 = 0, _acc394 = 0, _acc48 = 0, _acc127 = 0, _acc391 = 0, _acc89 = 0, _acc511 = 0, _acc520 = 0, _acc438 = 0, _acc523 = 0, _acc940 = 0, _acc386 = 0, _acc436 = 0, _acc521 = 0, _acc328 = 0, _acc494 = 0, _acc188 = 0, _acc621 = 0, _acc502 = 0, _acc619 = 0, _acc503 = 0, _acc460 = 0, _acc134 = 0, _acc461 = 0, _acc557 = 0, _acc462 = 0, _acc818 = 0, _acc463 = 0, _acc459 = 0, _acc454 = 0, _acc231 = 0, _acc118 = 0, _acc448 = 0, _acc109 = 0, _acc55 = 0, _acc445 = 0, _acc432 = 0, _acc815 = 0, _acc453 = 0, _acc230 = 0, _acc452 = 0, _acc431 = 0, _acc430 = 0, _acc447 = 0, _acc110 = 0, _acc446 = 0, _acc484 = 0, _acc479 = 0, _acc480 = 0, _acc375 = 0, _acc478 = 0, _acc374 = 0, _acc477 = 0, _acc373 = 0, _acc476 = 0, _acc465 = 0, _acc471 = 0, _acc75 = 0, _acc469 = 0, _acc467 = 0, _acc472 = 0, _acc76 = 0, _acc433 = 0, _acc470 = 0, _acc468 = 0, _acc466 = 0, _acc464 = 0, _acc584 = 0, _acc435 = 0, _acc267 = 0, _acc266 = 0, _acc143 = 0, _acc138 = 0, _acc149 = 0, _acc296 = 0, _acc428 = 0, _acc133 = 0, _acc71 = 0, _acc261 = 0, _acc260 = 0, _acc258 = 0, _acc256 = 0, _acc257 = 0, _acc255 = 0, _acc253 = 0, _acc210 = 0, _acc212 = 0, _acc217 = 0, _acc599 = 0, _acc146 = 0, _acc228 = 0, _acc189 = 0, _acc793 = 0, _acc226 = 0, _acc956 = 0, _acc115 = 0, _acc191 = 0, _acc218 = 0, _acc220 = 0, _acc219 = 0, _acc213 = 0, _acc211 = 0, _acc203 = 0, _acc833 = 0, _acc642 = 0, _acc186 = 0, _acc194 = 0, _acc20 = 0, _acc199 = 0, _acc195 = 0, _acc635 = 0, _acc187 = 0, _acc193 = 0, _acc517 = 0, _acc192 = 0, _acc190 = 0, _acc184 = 0, _acc920 = 0, _acc178 = 0, _acc183 = 0, _acc182 = 0, _acc923 = 0, _acc179 = 0, _acc177 = 0, _acc176 = 0, _acc148 = 0, _acc147 = 0, _acc772 = 0, _acc144 = 0, _acc58 = 0, _acc957 = 0, _acc145 = 0, _acc24 = 0, _acc63 = 0, _acc142 = 0, _acc139 = 0, _acc576 = 0, _acc141 = 0, _acc140 = 0, _acc97 = 0, _acc302 = 0, _acc123 = 0, _acc673 = 0, _acc98 = 0, _acc137 = 0, _acc136 = 0, _acc304 = 0, _acc125 = 0, _acc132 = 0, _acc289 = 0, _acc128 = 0, _acc99 = 0, _acc761 = 0, _acc100 = 0, _acc303 = 0, _acc124 = 0, _acc158 = 0, _acc104 = 0, _acc122 = 0, _acc103 = 0, _acc451 = 0, _acc120 = 0, _acc101 = 0, _acc102 = 0, _acc108 = 0, _acc512 = 0, _acc91 = 0, _acc94 = 0, _acc340 = 0, _acc450 = 0, _acc46 = 0, _acc953 = 0, _acc28 = 0, _acc81 = 0, _acc306 = 0, _acc1 = 0, _acc84 = 0, _acc82 = 0, _acc610 = 0, _acc27 = 0, _acc80 = 0, _acc79 = 0, _acc69 = 0, _acc70 = 0, _acc67 = 0, _acc694 = 0, _acc64 = 0, _acc42 = 0, _acc62 = 0;
	/* Reverse accumulation */
	_acc1021 = 1.0;
	_t1022 = (float)1.0 / (_t1020);
	_acc1020 += _acc1021 * _t1022;
	_acc1019 += _acc1020;
	_acc1016 += _acc1020;
	_acc1018 += _acc1019;
	_acc1017 += _acc1019;
	_acc1013 += _acc1018 * 0.212671;
	_acc1014 += _acc1017 * 0.715160;
	_acc1015 += _acc1016 * 0.072169;
	_acc998 += _acc1015 * _t1012;
	_acc1012 += _acc1015 * _t998;
	_acc996 += _acc1014 * _t1012;
	_acc1012 += _acc1014 * _t996;
	_acc994 += _acc1013 * _t1012;
	_acc1012 += _acc1013 * _t994;
	_t1023 = _t1012 * _t1012;
	_t1024 = -_t1023;
	_acc1011 += _acc1012 * _t1024;
	_acc1010 += _acc1011;
	_acc1009 += _acc1011;
	_acc999 += _acc1010;
	_acc1008 += _acc1009 * _t269;
	_acc269 += _acc1009 * _t1008;
	_t1025 = 2.000000 * _t1007;
	_acc1007 += _acc1008 * _t1025;
	_t1026 = (float)1.0 / (_t1005);
	_acc1006 += _acc1007 * _t1026;
	_t1027 = -_t1006;
	_t1028 = _t1026 * _t1026;
	_t1029 = _t1027 * _t1028;
	_acc1005 += _acc1007 * _t1029;
	_acc278 += _acc1006 * _t642;
	_acc642 += _acc1006 * _t278;
	_acc277 += _acc1005 * _t276;
	_acc276 += _acc1005 * _t277;
	cif (vertParams[49] == 0.000000) {
	}
	else {
		_acc1003 = _acc999;
		_t1030 = 2.000000 * _t1002;
		_acc1002 += _acc1003 * _t1030;
		_t1031 = (float)1.0 / (_t1001);
		_acc643 += _acc1002 * _t1031;
		_t1032 = -_t643;
		_t1033 = _t1031 * _t1031;
		_t1034 = _t1032 * _t1033;
		_acc1001 += _acc1002 * _t1034;
		_acc277 += _acc1001 * vertParams[115];
	}
	_acc997 += _acc998 * _t992;
	_acc992 += _acc998 * _t997;
	_acc641 += _acc997 * _t275;
	_acc275 += _acc997 * _t641;
	_acc995 += _acc996 * _t992;
	_acc992 += _acc996 * _t995;
	_acc640 += _acc995 * _t274;
	_acc274 += _acc995 * _t640;
	_acc993 += _acc994 * _t992;
	_acc992 += _acc994 * _t993;
	_acc639 += _acc993 * _t273;
	_acc273 += _acc993 * _t639;
	cif (vertParams[105] == 1.000000) {
		_acc706 = _acc639;
		_acc707 = _acc640;
		_acc708 = _acc641;
		_acc658 = _acc642;
		_acc704 = _acc643;
		_acc703 += _acc708 * _t658;
		_acc658 += _acc708 * _t703;
		_acc702 += _acc707 * _t658;
		_acc658 += _acc707 * _t702;
		_acc701 += _acc706 * _t658;
		_acc658 += _acc706 * _t701;
		_acc662 += _acc704;
		_acc691 += _acc704;
		_acc661 += _acc703;
		_acc690 += _acc703;
		_acc660 += _acc702;
		_acc689 += _acc702;
		_acc659 += _acc701;
		_acc688 += _acc701;
		cif (vertParams[113] < 1.000000) {
			_acc694 = _acc688;
			_acc695 = _acc689;
			_acc696 = _acc690;
			_acc699 = _acc691;
			_acc698 += _acc699 * _t658;
			_acc658 += _acc699 * _t698;
			_acc697 += _acc698 * 0.318310;
		}
		else {
		}
		cif (vertParams[113] > 0.000000) {
			_acc675 = _acc659;
			_acc676 = _acc660;
			_acc677 = _acc661;
			_acc678 = _acc662;
			cif (_t674 > 0.000000) {
				_acc683 = _acc675;
				_acc684 = _acc676;
				_acc685 = _acc677;
				_acc687 = _acc678;
				_acc686 += _acc687 * _t674;
				_acc674 += _acc687 * _t686;
				_acc680 += _acc686 * vertParams[113];
				_acc682 += _acc685 * vertParams[111];
				_acc682 += _acc684 * vertParams[110];
				_acc682 += _acc683 * vertParams[109];
				_acc681 += _acc682 * _t674;
				_acc674 += _acc682 * _t681;
			}
			else {
			}
			_acc673 += _acc674 * 0.159155;
			_t1035 = vertParams[112]-1.000000;
			_t1036 = pow(_t672,_t1035);
			_t1037 = vertParams[112] * _t1036;
			_acc672 += _acc673 * _t1037;
			_acc667 += _acc672 * _t270;
			_acc669 += _acc672 * _t271;
			_acc671 += _acc672 * _t272;
			_acc270 += _acc672 * _t667;
			_acc271 += _acc672 * _t669;
			_acc272 += _acc672 * _t671;
			_acc670 += _acc671;
			_acc252 -= _acc671;
			_acc665 += _acc670 * _t651;
			_acc651 += _acc670 * _t665;
			_acc668 += _acc669;
			_acc251 -= _acc669;
			_acc665 += _acc668 * _t650;
			_acc650 += _acc668 * _t665;
			_acc666 += _acc667;
			_acc250 -= _acc667;
			_acc665 += _acc666 * _t649;
			_acc649 += _acc666 * _t665;
			_acc664 += _acc665 * 2.000000;
			_acc250 += _acc664 * _t649;
			_acc251 += _acc664 * _t650;
			_acc252 += _acc664 * _t651;
			_acc649 += _acc664 * _t250;
			_acc650 += _acc664 * _t251;
			_acc651 += _acc664 * _t252;
		}
		else {
		}
		_acc649 += _acc658 * _t270;
		_acc650 += _acc658 * _t271;
		_acc651 += _acc658 * _t272;
		_acc270 += _acc658 * _t649;
		_acc271 += _acc658 * _t650;
		_acc272 += _acc658 * _t651;
		cif (_t648 > 0.000000) {
			_acc156 = _acc649;
			_acc157 = _acc650;
			_acc158 = _acc651;
		}
		else {
			_acc654 = _acc649;
			_acc655 = _acc650;
			_acc656 = _acc651;
			_acc158 -= _acc656;
			_acc157 -= _acc655;
			_acc156 -= _acc654;
		}
	}
	else cif (vertParams[105] == 2.000000) {
		_acc906 = _acc639;
		_acc907 = _acc640;
		_acc908 = _acc641;
		_acc710 = _acc642;
		_acc909 = _acc643;
		cif (_t711 > 0.000000) {
			_acc918 = _acc906;
			_acc919 = _acc907;
			_acc920 = _acc908;
			_acc924 = _acc909;
			cif (_t923 >= 0.000000) {
				_acc923 = _acc924;
			}
			else {
				_acc926 = _acc924;
				_acc923 -= _acc926;
			}
			_t1038 = (float)1.0 / (_t921);
			_acc922 += _acc923 * _t1038;
			_t1039 = -_t922;
			_t1040 = _t1038 * _t1038;
			_t1041 = _t1039 * _t1040;
			_acc921 += _acc923 * _t1041;
			_acc884 += _acc922 * _t795;
			_acc795 += _acc922 * _t884;
			_acc748 += _acc921 * 4.000000;
			_acc915 += _acc920 * vertParams[108];
			_acc915 += _acc919 * vertParams[107];
			_acc915 += _acc918 * vertParams[106];
			cif (_t914 >= 0.000000) {
				_acc914 = _acc915;
			}
			else {
				_acc917 = _acc915;
				_acc914 -= _acc917;
			}
			_t1042 = (float)1.0 / (_t911);
			_acc913 += _acc914 * _t1042;
			_t1043 = -_t913;
			_t1044 = _t1042 * _t1042;
			_t1045 = _t1043 * _t1044;
			_acc911 += _acc914 * _t1045;
			_acc912 += _acc913 * _t863;
			_acc863 += _acc913 * _t912;
			_acc795 += _acc912 * _t787;
			_acc787 += _acc912 * _t795;
			_acc709 += _acc911 * 4.000000;
		}
		else {
			_acc953 = _acc906;
			_acc954 = _acc907;
			_acc955 = _acc908;
			_acc963 = _acc909;
			cif (_t962 >= 0.000000) {
				_acc962 = _acc963;
			}
			else {
				_acc965 = _acc963;
				_acc962 -= _acc965;
			}
			_t1046 = (float)1.0 / (_t956);
			_acc961 += _acc962 * _t1046;
			_t1047 = -_t961;
			_t1048 = _t1046 * _t1046;
			_t1049 = _t1047 * _t1048;
			_acc956 += _acc962 * _t1049;
			_acc960 += _acc961 * _t958;
			_acc958 += _acc961 * _t960;
			_acc884 += _acc960 * _t959;
			_acc959 += _acc960 * _t884;
			_acc795 -= _acc959;
			_acc957 += _acc958 * _t748;
			_acc748 += _acc958 * _t957;
			_t1050 = 2.000000 * _t712;
			_acc712 += _acc957 * _t1050;
			_t1051 = 2.000000 * _t934;
			_acc934 += _acc956 * _t1051;
			_acc950 += _acc955 * vertParams[111];
			_acc950 += _acc954 * vertParams[110];
			_acc950 += _acc953 * vertParams[109];
			cif (_t949 >= 0.000000) {
				_acc949 = _acc950;
			}
			else {
				_acc952 = _acc950;
				_acc949 -= _acc952;
			}
			_t1052 = (float)1.0 / (_t940);
			_acc948 += _acc949 * _t1052;
			_t1053 = -_t948;
			_t1054 = _t1052 * _t1052;
			_t1055 = _t1053 * _t1054;
			_acc940 += _acc949 * _t1055;
			_acc938 += _acc948 * _t947;
			_acc947 += _acc948 * _t938;
			_acc946 += _acc947 * _t748;
			_acc748 += _acc947 * _t946;
			_acc945 += _acc946 * _t747;
			_acc747 += _acc946 * _t945;
			_acc944 += _acc945 * _t941;
			_acc941 += _acc945 * _t944;
			_acc943 += _acc944 * _t863;
			_acc863 += _acc944 * _t943;
			_acc942 += _acc943 * _t787;
			_acc787 += _acc943 * _t942;
			_acc795 -= _acc942;
			_t1056 = 2.000000 * _t712;
			_acc712 += _acc941 * _t1056;
			_acc709 += _acc940 * _t939;
			_acc939 += _acc940 * _t709;
			_t1057 = 2.000000 * _t934;
			_acc934 += _acc939 * _t1057;
			_t1058 = 2.000000 * _t937;
			_acc937 += _acc938 * _t1058;
			_t1059 = _t937 * _t937;
			_t1060 = -_t1059;
			_acc712 += _acc937 * _t1060;
			_acc747 += _acc934;
			_acc933 += _acc934;
			_acc712 += _acc933 * _t748;
			_acc748 += _acc933 * _t712;
		}
		_acc769 += _acc884 * _t883;
		_acc883 += _acc884 * _t769;
		_t1061 = (float)1.0 / (_t880);
		_acc882 += _acc883 * _t1061;
		_t1062 = -_t882;
		_t1063 = _t1061 * _t1061;
		_t1064 = _t1062 * _t1063;
		_acc880 += _acc883 * _t1064;
		_acc881 += _acc882 * _t882;
		_acc876 -= _acc881;
		_acc879 += _acc880 * _t877;
		_acc877 += _acc880 * _t879;
		_acc878 += _acc879 * _t867;
		_acc867 += _acc879 * _t878;
		_acc867 += _acc878 * 3.141593;
		_t1065 = 2.000000 * _t868;
		_acc868 += _acc877 * _t1065;
		_t1066 = (float)1.0 / (_t868);
		_acc875 += _acc876 * _t1066;
		_t1067 = -_t875;
		_t1068 = _t1066 * _t1066;
		_t1069 = _t1067 * _t1068;
		_acc868 += _acc876 * _t1069;
		_acc874 += _acc875;
		_acc871 += _acc875;
		_t1070 = (float)1.0 / (_t872);
		_acc873 += _acc874 * _t1070;
		_t1071 = -_t873;
		_t1072 = _t1070 * _t1070;
		_t1073 = _t1071 * _t1072;
		_acc872 += _acc874 * _t1073;
		_t1074 = 2.000000 * _t771;
		_acc771 += _acc873 * _t1074;
		_t1075 = 2.000000 * _t867;
		_acc867 += _acc872 * _t1075;
		_t1076 = (float)1.0 / (_t869);
		_acc870 += _acc871 * _t1076;
		_t1077 = -_t870;
		_t1078 = _t1076 * _t1076;
		_t1079 = _t1077 * _t1078;
		_acc869 += _acc871 * _t1079;
		_t1080 = 2.000000 * _t770;
		_acc770 += _acc870 * _t1080;
		_t1081 = 2.000000 * _t867;
		_acc867 += _acc869 * _t1081;
		_t1082 = 2.000000 * _t769;
		_acc769 += _acc868 * _t1082;
		_acc866 += _acc867 * vertParams[114];
		_acc865 -= _acc866;
		_acc864 += _acc865 * 0.200000;
		_t1083 = 2.000000 * _t864;
		_t1084 = (float)1.0 / (_t1083);
		_acc813 += _acc864 * _t1084;
		_acc848 += _acc863 * _t826;
		_acc826 += _acc863 * _t848;
		cif (_t847 <= 0.000000) {
		}
		else {
			_acc852 = _acc848;
			cif (_t851 >= 1.600000) {
			}
			else {
				_acc862 = _acc852;
				_t1085 = (float)1.0 / (_t858);
				_acc861 += _acc862 * _t1085;
				_t1086 = -_t861;
				_t1087 = _t1085 * _t1085;
				_t1088 = _t1086 * _t1087;
				_acc858 += _acc862 * _t1088;
				_acc860 += _acc861;
				_acc859 += _acc861;
				_acc851 += _acc860 * 3.535000;
				_acc854 += _acc859 * 2.181000;
				_acc857 += _acc858;
				_acc855 += _acc858;
				_acc856 += _acc857;
				_acc851 += _acc856 * 2.276000;
				_acc854 += _acc855 * 2.577000;
				_t1089 = 2.000000 * _t851;
				_acc851 += _acc854 * _t1089;
			}
			_t1090 = _t851 * _t851;
			_t1091 = -_t1090;
			_acc850 += _acc851 * _t1091;
			_acc847 += _acc850 * vertParams[114];
		}
		_t1092 = (float)1.0 / (_t813);
		_acc846 += _acc847 * _t1092;
		_t1093 = -_t846;
		_t1094 = _t1092 * _t1092;
		_t1095 = _t1093 * _t1094;
		_acc813 += _acc847 * _t1095;
		_t1096 = 2.000000 * _t846;
		_t1097 = (float)1.0 / (_t1096);
		_acc843 += _acc846 * _t1097;
		cif (_t842 >= 0.000000) {
			_acc842 = _acc843;
		}
		else {
			_acc845 = _acc843;
			_acc842 -= _acc845;
		}
		_acc841 -= _acc842;
		_t1098 = 2.000000 * _t813;
		_acc813 += _acc841 * _t1098;
		cif (_t825 <= 0.000000) {
		}
		else {
			_acc830 = _acc826;
			cif (_t829 >= 1.600000) {
			}
			else {
				_acc840 = _acc830;
				_t1099 = (float)1.0 / (_t836);
				_acc839 += _acc840 * _t1099;
				_t1100 = -_t839;
				_t1101 = _t1099 * _t1099;
				_t1102 = _t1100 * _t1101;
				_acc836 += _acc840 * _t1102;
				_acc838 += _acc839;
				_acc837 += _acc839;
				_acc829 += _acc838 * 3.535000;
				_acc832 += _acc837 * 2.181000;
				_acc835 += _acc836;
				_acc833 += _acc836;
				_acc834 += _acc835;
				_acc829 += _acc834 * 2.276000;
				_acc832 += _acc833 * 2.577000;
				_t1103 = 2.000000 * _t829;
				_acc829 += _acc832 * _t1103;
			}
			_t1104 = _t829 * _t829;
			_t1105 = -_t1104;
			_acc828 += _acc829 * _t1105;
			_acc825 += _acc828 * vertParams[114];
		}
		_t1106 = (float)1.0 / (_t816);
		_acc824 += _acc825 * _t1106;
		_t1107 = -_t824;
		_t1108 = _t1106 * _t1106;
		_t1109 = _t1107 * _t1108;
		_acc816 += _acc825 * _t1109;
		_t1110 = 2.000000 * _t824;
		_t1111 = (float)1.0 / (_t1110);
		_acc821 += _acc824 * _t1111;
		cif (_t820 >= 0.000000) {
			_acc820 = _acc821;
		}
		else {
			_acc823 = _acc821;
			_acc820 -= _acc823;
		}
		_acc819 -= _acc820;
		_t1112 = 2.000000 * _t816;
		_acc816 += _acc819 * _t1112;
		cif (_t710 >= 0.000000) {
			_acc710 = _acc816;
		}
		else {
			_acc818 = _acc816;
			_acc710 -= _acc818;
		}
		cif (_t709 >= 0.000000) {
			_acc709 = _acc813;
		}
		else {
			_acc815 = _acc813;
			_acc709 -= _acc815;
		}
		cif (_t794 <= 0.000000) {
		}
		else {
			_acc812 = _acc795;
			_acc811 += _acc812 * 0.500000;
			_acc810 += _acc811;
			_acc809 += _acc811;
			_t1113 = 2.000000 * _t805;
			_acc805 += _acc810 * _t1113;
			_t1114 = 2.000000 * _t808;
			_acc808 += _acc809 * _t1114;
			_t1115 = (float)1.0 / (_t806);
			_acc807 += _acc808 * _t1115;
			_t1116 = -_t807;
			_t1117 = _t1115 * _t1115;
			_t1118 = _t1116 * _t1117;
			_acc806 += _acc808 * _t1118;
			_acc802 += _acc807;
			_acc800 -= _acc807;
			_acc802 += _acc806;
			_acc800 += _acc806;
			_t1119 = (float)1.0 / (_t803);
			_acc804 += _acc805 * _t1119;
			_t1120 = -_t804;
			_t1121 = _t1119 * _t1119;
			_t1122 = _t1120 * _t1121;
			_acc803 += _acc805 * _t1122;
			_acc797 += _acc804;
			_acc801 -= _acc804;
			_acc797 += _acc803;
			_acc801 += _acc803;
			_acc797 += _acc802 * vertParams[112];
			_acc800 += _acc801 * vertParams[112];
			_t1123 = 2.000000 * _t800;
			_t1124 = (float)1.0 / (_t1123);
			_acc794 += _acc800 * _t1124;
			cif (_t747 >= 0.000000) {
				_acc747 = _acc797;
			}
			else {
				_acc799 = _acc797;
				_acc747 -= _acc799;
			}
		}
		_acc793 -= _acc794;
		_acc792 += _acc793 * _t790;
		_acc790 += _acc793 * _t792;
		_acc791 -= _acc792;
		_t1125 = 2.000000 * _t747;
		_acc747 += _acc791 * _t1125;
		_t1126 = 2.000000 * _t788;
		_acc788 += _acc790 * _t1126;
		cif (_t747 > 0.000000) {
		}
		else {
		}
		_t1127 = (float)1.0 / (_t784);
		_acc786 += _acc787 * _t1127;
		_t1128 = -_t786;
		_t1129 = _t1127 * _t1127;
		_t1130 = _t1128 * _t1129;
		_acc784 += _acc787 * _t1130;
		_acc785 += _acc786 * _t786;
		_acc780 -= _acc785;
		_acc783 += _acc784 * _t781;
		_acc781 += _acc784 * _t783;
		_acc782 += _acc783 * vertParams[114];
		_t1131 = 2.000000 * _t772;
		_acc772 += _acc781 * _t1131;
		_t1132 = (float)1.0 / (_t772);
		_acc779 += _acc780 * _t1132;
		_t1133 = -_t779;
		_t1134 = _t1132 * _t1132;
		_t1135 = _t1133 * _t1134;
		_acc772 += _acc780 * _t1135;
		_acc778 += _acc779;
		_acc775 += _acc779;
		_t1136 = (float)1.0 / (_t776);
		_acc777 += _acc778 * _t1136;
		_t1137 = -_t777;
		_t1138 = _t1136 * _t1136;
		_t1139 = _t1137 * _t1138;
		_acc776 += _acc778 * _t1139;
		_t1140 = 2.000000 * _t771;
		_acc771 += _acc777 * _t1140;
		_t1141 = (float)1.0 / (_t773);
		_acc774 += _acc775 * _t1141;
		_t1142 = -_t774;
		_t1143 = _t1141 * _t1141;
		_t1144 = _t1142 * _t1143;
		_acc773 += _acc775 * _t1144;
		_t1145 = 2.000000 * _t770;
		_acc770 += _acc774 * _t1145;
		_t1146 = 2.000000 * _t769;
		_acc769 += _acc772 * _t1146;
		_acc749 += _acc771 * _t740;
		_acc750 += _acc771 * _t741;
		_acc751 += _acc771 * _t742;
		_acc740 += _acc771 * _t749;
		_acc741 += _acc771 * _t750;
		_acc742 += _acc771 * _t751;
		_acc752 += _acc770 * _t740;
		_acc753 += _acc770 * _t741;
		_acc754 += _acc770 * _t742;
		_acc740 += _acc770 * _t752;
		_acc741 += _acc770 * _t753;
		_acc742 += _acc770 * _t754;
		_acc156 += _acc769 * _t740;
		_acc157 += _acc769 * _t741;
		_acc158 += _acc769 * _t742;
		_acc740 += _acc769 * _t156;
		_acc741 += _acc769 * _t157;
		_acc742 += _acc769 * _t158;
		cif (_t158 < -0.999999) {
		}
		else {
			_acc764 = _acc749;
			_acc760 = _acc750;
			_acc761 = _acc751;
			_acc760 = _acc752;
			_acc768 = _acc753;
			_acc765 = _acc754;
			_acc767 -= _acc768;
			_acc766 += _acc767 * _t757;
			_acc757 += _acc767 * _t766;
			_t1147 = 2.000000 * _t157;
			_acc157 += _acc766 * _t1147;
			_acc157 -= _acc765;
			_acc763 -= _acc764;
			_acc762 += _acc763 * _t757;
			_acc757 += _acc763 * _t762;
			_t1148 = 2.000000 * _t156;
			_acc156 += _acc762 * _t1148;
			_acc156 -= _acc761;
			_acc759 += _acc760 * _t757;
			_acc757 += _acc760 * _t759;
			_acc758 += _acc759 * _t157;
			_acc157 += _acc759 * _t758;
			_acc156 -= _acc758;
			_t1149 = _t757 * _t757;
			_t1150 = -_t1149;
			_acc756 += _acc757 * _t1150;
			_acc158 += _acc756;
		}
		_acc270 += _acc748 * _t740;
		_acc271 += _acc748 * _t741;
		_acc272 += _acc748 * _t742;
		_acc740 += _acc748 * _t270;
		_acc741 += _acc748 * _t271;
		_acc742 += _acc748 * _t272;
		_acc250 += _acc747 * _t740;
		_acc251 += _acc747 * _t741;
		_acc252 += _acc747 * _t742;
		_acc740 += _acc747 * _t250;
		_acc741 += _acc747 * _t251;
		_acc742 += _acc747 * _t252;
		cif (_t739 < 0.000000) {
			_acc744 = _acc740;
			_acc745 = _acc741;
			_acc746 = _acc742;
			_acc718 -= _acc746;
			_acc717 -= _acc745;
			_acc716 -= _acc744;
		}
		else {
			_acc716 = _acc740;
			_acc717 = _acc741;
			_acc718 = _acc742;
		}
		cif (_t711 > 0.000000) {
			_acc725 = _acc716;
			_acc726 = _acc717;
			_acc727 = _acc718;
			_acc722 += _acc727 * _t724;
			_acc724 += _acc727 * _t722;
			_acc721 += _acc726 * _t724;
			_acc724 += _acc726 * _t721;
			_acc720 += _acc725 * _t724;
			_acc724 += _acc725 * _t720;
			_t1151 = _t724 * _t724;
			_t1152 = -_t1151;
			_acc723 += _acc724 * _t1152;
			_t1153 = (float)1.0 / (_t723);
			_t1154 = _t720 * _t1153;
			_acc720 += _acc723 * _t1154;
			_t1155 = _t721 * _t1153;
			_acc721 += _acc723 * _t1155;
			_t1156 = _t722 * _t1153;
			_acc722 += _acc723 * _t1156;
			_acc252 += _acc722;
			_acc272 += _acc722;
			_acc251 += _acc721;
			_acc271 += _acc721;
			_acc250 += _acc720;
			_acc270 += _acc720;
		}
		else {
			_acc736 = _acc716;
			_acc737 = _acc717;
			_acc738 = _acc718;
			_acc733 += _acc738 * _t735;
			_acc735 += _acc738 * _t733;
			_acc731 += _acc737 * _t735;
			_acc735 += _acc737 * _t731;
			_acc729 += _acc736 * _t735;
			_acc735 += _acc736 * _t729;
			_t1157 = _t735 * _t735;
			_t1158 = -_t1157;
			_acc734 += _acc735 * _t1158;
			_t1159 = (float)1.0 / (_t734);
			_t1160 = _t729 * _t1159;
			_acc729 += _acc734 * _t1160;
			_t1161 = _t731 * _t1159;
			_acc731 += _acc734 * _t1161;
			_t1162 = _t733 * _t1159;
			_acc733 += _acc734 * _t1162;
			_acc252 += _acc733;
			_acc732 += _acc733;
			_acc272 += _acc732 * _t712;
			_acc712 += _acc732 * _t272;
			_acc251 += _acc731;
			_acc730 += _acc731;
			_acc271 += _acc730 * _t712;
			_acc712 += _acc730 * _t271;
			_acc250 += _acc729;
			_acc728 += _acc729;
			_acc270 += _acc728 * _t712;
			_acc712 += _acc728 * _t270;
		}
		cif (_t709 > 0.000000) {
		}
		else {
		}
		_acc270 += _acc710 * _t156;
		_acc271 += _acc710 * _t157;
		_acc272 += _acc710 * _t158;
		_acc156 += _acc710 * _t270;
		_acc157 += _acc710 * _t271;
		_acc158 += _acc710 * _t272;
		_acc250 += _acc709 * _t156;
		_acc251 += _acc709 * _t157;
		_acc252 += _acc709 * _t158;
		_acc156 += _acc709 * _t250;
		_acc157 += _acc709 * _t251;
		_acc158 += _acc709 * _t252;
	}
	else cif (vertParams[105] == 0.000000) {
		_acc989 = _acc639;
		_acc990 = _acc640;
		_acc991 = _acc641;
		_acc986 = _acc642;
		_acc987 = _acc643;
		_acc987 += _acc991 * vertParams[108];
		_acc987 += _acc990 * vertParams[107];
		_acc987 += _acc989 * vertParams[106];
		_acc986 += _acc987 * 0.318310;
		_acc977 += _acc986 * _t270;
		_acc978 += _acc986 * _t271;
		_acc979 += _acc986 * _t272;
		_acc270 += _acc986 * _t977;
		_acc271 += _acc986 * _t978;
		_acc272 += _acc986 * _t979;
		cif (_t976 > 0.000000) {
			_acc156 = _acc977;
			_acc157 = _acc978;
			_acc158 = _acc979;
		}
		else {
			_acc982 = _acc977;
			_acc983 = _acc978;
			_acc984 = _acc979;
			_acc158 -= _acc984;
			_acc157 -= _acc983;
			_acc156 -= _acc982;
		}
	}
	else {
	}
	cif (vertParams[49] == 0.000000) {
		_acc291 = _acc270;
		_acc292 = _acc271;
		_acc293 = _acc272;
		_acc295 = _acc273;
		_acc296 = _acc274;
		_acc297 = _acc275;
		_acc289 = _acc277;
		_acc294 += _acc297 * vertParams[55];
		_acc294 += _acc296 * vertParams[54];
		_acc294 += _acc295 * vertParams[53];
		_t1163 = _t294 * _t294;
		_t1164 = -_t1163;
		_acc289 += _acc294 * _t1164;
		_t1165 = (float)1.0 / (_t290);
		_acc284 += _acc293 * _t1165;
		_t1166 = -_t284;
		_t1167 = _t1165 * _t1165;
		_t1168 = _t1166 * _t1167;
		_acc290 += _acc293 * _t1168;
		_t1169 = (float)1.0 / (_t290);
		_acc283 += _acc292 * _t1169;
		_t1170 = -_t283;
		_t1171 = _t1169 * _t1169;
		_t1172 = _t1170 * _t1171;
		_acc290 += _acc292 * _t1172;
		_t1173 = (float)1.0 / (_t290);
		_acc282 += _acc291 * _t1173;
		_t1174 = -_t282;
		_t1175 = _t1173 * _t1173;
		_t1176 = _t1174 * _t1175;
		_acc290 += _acc291 * _t1176;
		_t1177 = 2.000000 * _t290;
		_t1178 = (float)1.0 / (_t1177);
		_acc289 += _acc290 * _t1178;
		_acc288 += _acc289;
		_acc285 += _acc289;
		_acc287 += _acc288;
		_acc286 += _acc288;
		_t1179 = 2.000000 * _t282;
		_acc282 += _acc287 * _t1179;
		_t1180 = 2.000000 * _t283;
		_acc283 += _acc286 * _t1180;
		_t1181 = 2.000000 * _t284;
		_acc284 += _acc285 * _t1181;
		_acc152 -= _acc284;
		_acc151 -= _acc283;
		_acc150 -= _acc282;
	}
	else cif (vertParams[49] == 1.000000) {
		_acc353 = _acc270;
		_acc354 = _acc271;
		_acc355 = _acc272;
		_acc360 = _acc273;
		_acc361 = _acc274;
		_acc362 = _acc275;
		_acc357 = _acc276;
		_acc359 = _acc277;
		_acc364 = _acc278;
		_acc363 += _acc364 * 0.318310;
		_acc304 += _acc363 * _t357;
		_acc357 += _acc363 * _t304;
		_t1182 = -vertParams[98];
		_t1183 = (float)1.0 / (_t359);
		_t1184 = _t1183 * _t1183;
		_t1185 = _t1182 * _t1184;
		_acc359 += _acc362 * _t1185;
		_t1186 = -vertParams[97];
		_t1187 = (float)1.0 / (_t359);
		_t1188 = _t1187 * _t1187;
		_t1189 = _t1186 * _t1188;
		_acc359 += _acc361 * _t1189;
		_t1190 = -vertParams[96];
		_t1191 = (float)1.0 / (_t359);
		_t1192 = _t1191 * _t1191;
		_t1193 = _t1190 * _t1192;
		_acc359 += _acc360 * _t1193;
		_t1194 = (float)1.0 / (_t357);
		_acc358 += _acc359 * _t1194;
		_t1195 = -_t358;
		_t1196 = _t1194 * _t1194;
		_t1197 = _t1195 * _t1196;
		_acc357 += _acc359 * _t1197;
		_acc304 += _acc358 * _t351;
		_acc351 += _acc358 * _t304;
		_acc356 -= _acc357;
		_acc353 += _acc356 * _t301;
		_acc354 += _acc356 * _t302;
		_acc355 += _acc356 * _t303;
		_acc301 += _acc356 * _t353;
		_acc302 += _acc356 * _t354;
		_acc303 += _acc356 * _t355;
		_t1198 = (float)1.0 / (_t352);
		_acc346 += _acc355 * _t1198;
		_t1199 = -_t346;
		_t1200 = _t1198 * _t1198;
		_t1201 = _t1199 * _t1200;
		_acc352 += _acc355 * _t1201;
		_t1202 = (float)1.0 / (_t352);
		_acc345 += _acc354 * _t1202;
		_t1203 = -_t345;
		_t1204 = _t1202 * _t1202;
		_t1205 = _t1203 * _t1204;
		_acc352 += _acc354 * _t1205;
		_t1206 = (float)1.0 / (_t352);
		_acc344 += _acc353 * _t1206;
		_t1207 = -_t344;
		_t1208 = _t1206 * _t1206;
		_t1209 = _t1207 * _t1208;
		_acc352 += _acc353 * _t1209;
		_t1210 = 2.000000 * _t352;
		_t1211 = (float)1.0 / (_t1210);
		_acc351 += _acc352 * _t1211;
		_acc350 += _acc351;
		_acc347 += _acc351;
		_acc349 += _acc350;
		_acc348 += _acc350;
		_t1212 = 2.000000 * _t344;
		_acc344 += _acc349 * _t1212;
		_t1213 = 2.000000 * _t345;
		_acc345 += _acc348 * _t1213;
		_t1214 = 2.000000 * _t346;
		_acc346 += _acc347 * _t1214;
		_acc300 += _acc346;
		_acc152 -= _acc346;
		_acc299 += _acc345;
		_acc151 -= _acc345;
		_acc298 += _acc344;
		_acc150 -= _acc344;
		cif (vertParams[50] == 0.000000) {
			_acc313 = _acc298;
			_acc317 = _acc299;
			_acc321 = _acc300;
			_acc341 = _acc301;
			_acc342 = _acc302;
			_acc343 = _acc303;
			_acc338 += _acc343 * _t340;
			_acc340 += _acc343 * _t338;
			_acc333 += _acc342 * _t340;
			_acc340 += _acc342 * _t333;
			_acc328 += _acc341 * _t340;
			_acc340 += _acc341 * _t328;
			_t1215 = _t340 * _t340;
			_t1216 = -_t1215;
			_acc339 += _acc340 * _t1216;
			_t1217 = (float)1.0 / (_t339);
			_t1218 = _t328 * _t1217;
			_acc328 += _acc339 * _t1218;
			_t1219 = _t333 * _t1217;
			_acc333 += _acc339 * _t1219;
			_t1220 = _t338 * _t1217;
			_acc338 += _acc339 * _t1220;
			_acc337 += _acc338;
			_acc334 += _acc338;
			_acc336 += _acc337;
			_acc335 += _acc337;
			_acc323 += _acc336 * vertParams[63];
			_acc308 += _acc335 * vertParams[66];
			_acc309 += _acc334 * vertParams[69];
			_acc332 += _acc333;
			_acc329 += _acc333;
			_acc331 += _acc332;
			_acc330 += _acc332;
			_acc323 += _acc331 * vertParams[62];
			_acc308 += _acc330 * vertParams[65];
			_acc309 += _acc329 * vertParams[68];
			_acc327 += _acc328;
			_acc324 += _acc328;
			_acc326 += _acc327;
			_acc325 += _acc327;
			_acc323 += _acc326 * vertParams[61];
			_acc308 += _acc325 * vertParams[64];
			_acc309 += _acc324 * vertParams[67];
			_acc322 += _acc323;
			_acc309 -= _acc323;
			_acc308 -= _acc322;
			_acc320 += _acc321;
			_acc318 += _acc321;
			_acc319 += _acc320;
			_acc308 += _acc319 * vertParams[57];
			_acc309 += _acc318 * vertParams[60];
			_acc316 += _acc317;
			_acc314 += _acc317;
			_acc315 += _acc316;
			_acc308 += _acc315 * vertParams[56];
			_acc309 += _acc314 * vertParams[59];
			_acc312 += _acc313;
			_acc310 += _acc313;
			_acc311 += _acc312;
			_acc308 += _acc311 * vertParams[55];
			_acc309 += _acc310 * vertParams[58];
			_acc307 += _acc309 * primary[4];
			_acc3 += _acc309 * _t307;
			_acc307 -= _acc308;
			_t1221 = 2.000000 * _t307;
			_t1222 = (float)1.0 / (_t1221);
			_acc306 += _acc307 * _t1222;
			_acc2 -= _acc306;
		}
		else {
		}
	}
	else cif (vertParams[49] == 2.000000) {
		_acc575 = _acc270;
		_acc570 = _acc271;
		_acc565 = _acc272;
		_acc632 = _acc273;
		_acc633 = _acc274;
		_acc634 = _acc275;
		_acc630 = _acc277;
		_acc638 = _acc278;
		_acc630 += _acc638 * _t637;
		_acc637 += _acc638 * _t630;
		_acc636 += _acc637 * 0.318310;
		_t1223 = _t636 * _t636;
		_t1224 = -_t1223;
		_acc635 += _acc636 * _t1224;
		_acc610 += _acc634 * _t631;
		_acc631 += _acc634 * _t610;
		_acc609 += _acc633 * _t631;
		_acc631 += _acc633 * _t609;
		_acc608 += _acc632 * _t631;
		_acc631 += _acc632 * _t608;
		_t1225 = _t631 * _t631;
		_t1226 = -_t1225;
		_acc630 += _acc631 * _t1226;
		_t1227 = (float)1.0 / (_t614);
		_acc629 += _acc630 * _t1227;
		_t1228 = -_t629;
		_t1229 = _t1227 * _t1227;
		_t1230 = _t1228 * _t1229;
		_acc614 += _acc630 * _t1230;
		_acc628 += _acc629 * vertParams[102];
		_acc627 += _acc628;
		_acc621 += _acc628;
		_acc626 += _acc627 * vertParams[100];
		_acc625 += _acc626;
		_acc622 += _acc626;
		_acc624 += _acc625;
		_acc623 += _acc625;
		_acc582 += _acc624 * 0.212671;
		_acc587 += _acc623 * 0.715160;
		_acc592 += _acc622 * 0.072169;
		_acc620 += _acc621 * vertParams[101];
		_acc619 += _acc620;
		_acc616 += _acc620;
		_acc618 += _acc619;
		_acc617 += _acc619;
		_acc597 += _acc618 * 0.212671;
		_acc602 += _acc617 * 0.715160;
		_acc607 += _acc616 * 0.072169;
		cif (_t611 >= 0.000000) {
			_acc611 = _acc614;
		}
		else {
		}
		cif (_t556 >= 0.000000) {
			_acc556 = _acc611;
		}
		else {
			_acc613 = _acc611;
			_acc556 -= _acc613;
		}
		_acc592 += _acc610;
		_acc607 += _acc610;
		_acc587 += _acc609;
		_acc602 += _acc609;
		_acc582 += _acc608;
		_acc597 += _acc608;
		_acc606 += _acc607;
		_acc604 += _acc607;
		_acc605 += _acc606 * _t530;
		_acc530 += _acc606 * _t605;
		_acc576 += _acc605 * vertParams[96];
		_acc603 += _acc604 * _t530;
		_acc530 += _acc604 * _t603;
		_acc539 += _acc603 * vertParams[99];
		_acc601 += _acc602;
		_acc599 += _acc602;
		_acc600 += _acc601 * _t530;
		_acc530 += _acc601 * _t600;
		_acc576 += _acc600 * vertParams[95];
		_acc598 += _acc599 * _t530;
		_acc530 += _acc599 * _t598;
		_acc539 += _acc598 * vertParams[98];
		_acc596 += _acc597;
		_acc594 += _acc597;
		_acc595 += _acc596 * _t530;
		_acc530 += _acc596 * _t595;
		_acc576 += _acc595 * vertParams[94];
		_acc593 += _acc594 * _t530;
		_acc530 += _acc594 * _t593;
		_acc539 += _acc593 * vertParams[97];
		_acc591 += _acc592;
		_acc589 += _acc592;
		_acc590 += _acc591 * _t577;
		_acc577 += _acc591 * _t590;
		_acc576 += _acc590 * vertParams[90];
		_acc588 += _acc589 * _t577;
		_acc577 += _acc589 * _t588;
		_acc539 += _acc588 * vertParams[93];
		_acc586 += _acc587;
		_acc584 += _acc587;
		_acc585 += _acc586 * _t577;
		_acc577 += _acc586 * _t585;
		_acc576 += _acc585 * vertParams[89];
		_acc583 += _acc584 * _t577;
		_acc577 += _acc584 * _t583;
		_acc539 += _acc583 * vertParams[92];
		_acc581 += _acc582;
		_acc579 += _acc582;
		_acc580 += _acc581 * _t577;
		_acc577 += _acc581 * _t580;
		_acc576 += _acc580 * vertParams[88];
		_acc578 += _acc579 * _t577;
		_acc577 += _acc579 * _t578;
		_acc539 += _acc578 * vertParams[91];
		_acc530 -= _acc577;
		_acc539 -= _acc576;
		_acc574 += _acc575;
		_acc571 += _acc575;
		_acc573 += _acc574;
		_acc572 += _acc574;
		_acc365 += _acc573 * _t560;
		_acc560 += _acc573 * _t365;
		_acc369 += _acc572 * _t557;
		_acc557 += _acc572 * _t369;
		_acc373 += _acc571 * _t559;
		_acc559 += _acc571 * _t373;
		_acc569 += _acc570;
		_acc566 += _acc570;
		_acc568 += _acc569;
		_acc567 += _acc569;
		_acc366 += _acc568 * _t560;
		_acc560 += _acc568 * _t366;
		_acc370 += _acc567 * _t557;
		_acc557 += _acc567 * _t370;
		_acc374 += _acc566 * _t559;
		_acc559 += _acc566 * _t374;
		_acc564 += _acc565;
		_acc561 += _acc565;
		_acc563 += _acc564;
		_acc562 += _acc564;
		_acc367 += _acc563 * _t560;
		_acc560 += _acc563 * _t367;
		_acc371 += _acc562 * _t557;
		_acc557 += _acc562 * _t371;
		_acc375 += _acc561 * _t559;
		_acc559 += _acc561 * _t375;
		_acc554 += _acc560 * _t556;
		_acc556 += _acc560 * _t554;
		_acc558 += _acc559 * _t556;
		_acc556 += _acc559 * _t558;
		_acc555 -= _acc558;
		_t1231 = sin(_t553);
		_t1232 = -_t1231;
		_acc553 += _acc557 * _t1232;
		_t1233 = cos(_t553);
		_acc553 += _acc556 * _t1233;
		_t1234 = sin(_t551);
		_t1235 = -_t1234;
		_acc551 += _acc555 * _t1235;
		_t1236 = cos(_t551);
		_acc551 += _acc554 * _t1236;
		_acc552 += _acc553 * vertParams[87];
		_acc549 += _acc552;
		_acc550 += _acc551 * vertParams[86];
		_acc548 += _acc550;
		_acc530 += _acc549;
		_acc539 += _acc548;
		cif (_t526 < 0.500000) {
			_acc543 = _acc539;
			_acc542 -= _acc543;
			_t1237 = 2.000000 * _t542;
			_t1238 = (float)1.0 / (_t1237);
			_acc541 += _acc542 * _t1238;
			_acc526 += _acc541 * 2.000000;
		}
		else {
			_acc547 = _acc539;
			_acc546 += _acc547;
			_t1239 = 2.000000 * _t546;
			_t1240 = (float)1.0 / (_t1239);
			_acc545 += _acc546 * _t1240;
			_acc544 += _acc545 * 2.000000;
			_acc526 += _acc544;
		}
		cif (_t529 < 0.500000) {
			_acc534 = _acc530;
			_acc533 -= _acc534;
			_t1241 = 2.000000 * _t533;
			_t1242 = (float)1.0 / (_t1241);
			_acc532 += _acc533 * _t1242;
			_acc529 += _acc532 * 2.000000;
		}
		else {
			_acc538 = _acc530;
			_acc537 += _acc538;
			_t1243 = 2.000000 * _t537;
			_t1244 = (float)1.0 / (_t1243);
			_acc536 += _acc537 * _t1244;
			_acc535 += _acc536 * 2.000000;
			_acc529 += _acc535;
		}
		_t1245 = (float)1.0 / (_t527);
		_acc528 += _acc529 * _t1245;
		_t1246 = -_t528;
		_t1247 = _t1245 * _t1245;
		_t1248 = _t1246 * _t1247;
		_acc527 += _acc529 * _t1248;
		_acc3 += _acc528;
		_t1249 = (float)1.0 / (_t524);
		_acc525 += _acc526 * _t1249;
		_t1250 = -_t525;
		_t1251 = _t1249 * _t1249;
		_t1252 = _t1250 * _t1251;
		_acc524 += _acc526 * _t1252;
		_acc2 += _acc525;
		cif (vertParams[50] == 0.000000) {
			_acc393 = _acc365;
			_acc395 = _acc366;
			_acc397 = _acc367;
			_acc399 = _acc369;
			_acc402 = _acc370;
			_acc404 = _acc371;
			_acc406 = _acc373;
			_acc408 = _acc374;
			_acc411 = _acc375;
			_acc410 -= _acc411;
			_acc409 += _acc410 * 2.000000;
			_acc382 += _acc409;
			_acc383 += _acc409;
			_acc407 += _acc408 * 2.000000;
			_acc387 += _acc407;
			_acc388 -= _acc407;
			_acc405 += _acc406 * 2.000000;
			_acc386 += _acc405;
			_acc389 += _acc405;
			_acc403 += _acc404 * 2.000000;
			_acc387 += _acc403;
			_acc388 += _acc403;
			_acc401 -= _acc402;
			_acc400 += _acc401 * 2.000000;
			_acc382 += _acc400;
			_acc384 += _acc400;
			_acc398 += _acc399 * 2.000000;
			_acc385 += _acc398;
			_acc390 -= _acc398;
			_acc396 += _acc397 * 2.000000;
			_acc386 += _acc396;
			_acc389 -= _acc396;
			_acc394 += _acc395 * 2.000000;
			_acc385 += _acc394;
			_acc390 += _acc394;
			_acc392 -= _acc393;
			_acc391 += _acc392 * 2.000000;
			_acc383 += _acc391;
			_acc384 += _acc391;
		}
		else {
			_acc505 = _acc365;
			_acc507 = _acc366;
			_acc509 = _acc367;
			_acc511 = _acc369;
			_acc514 = _acc370;
			_acc516 = _acc371;
			_acc518 = _acc373;
			_acc520 = _acc374;
			_acc523 = _acc375;
			_acc522 -= _acc523;
			_acc521 += _acc522 * 2.000000;
			_acc494 += _acc521;
			_acc495 += _acc521;
			_acc519 += _acc520 * 2.000000;
			_acc499 += _acc519;
			_acc500 -= _acc519;
			_acc517 += _acc518 * 2.000000;
			_acc498 += _acc517;
			_acc501 += _acc517;
			_acc515 += _acc516 * 2.000000;
			_acc499 += _acc515;
			_acc500 += _acc515;
			_acc513 -= _acc514;
			_acc512 += _acc513 * 2.000000;
			_acc494 += _acc512;
			_acc496 += _acc512;
			_acc510 += _acc511 * 2.000000;
			_acc497 += _acc510;
			_acc502 -= _acc510;
			_acc508 += _acc509 * 2.000000;
			_acc498 += _acc508;
			_acc501 -= _acc508;
			_acc506 += _acc507 * 2.000000;
			_acc497 += _acc506;
			_acc502 += _acc506;
			_acc504 -= _acc505;
			_acc503 += _acc504 * 2.000000;
			_acc495 += _acc503;
			_acc496 += _acc503;
			_acc442 += _acc502 * _t443;
			_acc443 += _acc502 * _t442;
			_acc441 += _acc501 * _t443;
			_acc443 += _acc501 * _t441;
			_acc440 += _acc500 * _t443;
			_acc443 += _acc500 * _t440;
			_acc441 += _acc499 * _t442;
			_acc442 += _acc499 * _t441;
			_acc440 += _acc498 * _t442;
			_acc442 += _acc498 * _t440;
			_acc440 += _acc497 * _t441;
			_acc441 += _acc497 * _t440;
			_acc442 += _acc496 * _t442;
			_acc442 += _acc496 * _t442;
			_acc441 += _acc495 * _t441;
			_acc441 += _acc495 * _t441;
			_acc440 += _acc494 * _t440;
			_acc440 += _acc494 * _t440;
			cif (_t433 > 0.999500) {
				_acc460 = _acc440;
				_acc461 = _acc441;
				_acc462 = _acc442;
				_acc463 = _acc443;
				_acc457 += _acc463 * _t459;
				_acc459 += _acc463 * _t457;
				_acc454 += _acc462 * _t459;
				_acc459 += _acc462 * _t454;
				_acc451 += _acc461 * _t459;
				_acc459 += _acc461 * _t451;
				_acc448 += _acc460 * _t459;
				_acc459 += _acc460 * _t448;
				_t1253 = _t459 * _t459;
				_t1254 = -_t1253;
				_acc458 += _acc459 * _t1254;
				_t1255 = (float)1.0 / (_t458);
				_t1256 = _t448 * _t1255;
				_acc448 += _acc458 * _t1256;
				_t1257 = _t451 * _t1255;
				_acc451 += _acc458 * _t1257;
				_t1258 = _t454 * _t1255;
				_acc454 += _acc458 * _t1258;
				_t1259 = _t457 * _t1255;
				_acc457 += _acc458 * _t1259;
				_acc456 += _acc457;
				_acc455 += _acc457;
				_acc445 += _acc456 * vertParams[60];
				_acc432 += _acc455 * primary[0];
				_acc453 += _acc454;
				_acc452 += _acc454;
				_acc445 += _acc453 * vertParams[59];
				_acc431 += _acc452 * primary[0];
				_acc450 += _acc451;
				_acc449 += _acc451;
				_acc445 += _acc450 * vertParams[58];
				_acc430 += _acc449 * primary[0];
				_acc447 += _acc448;
				_acc446 += _acc448;
				_acc445 += _acc447 * vertParams[57];
				_acc429 += _acc446 * primary[0];
			}
			else {
				_acc484 = _acc440;
				_acc487 = _acc441;
				_acc490 = _acc442;
				_acc493 = _acc443;
				_acc492 += _acc493;
				_acc491 += _acc493;
				_acc481 += _acc492 * vertParams[60];
				_acc479 += _acc491 * _t480;
				_acc480 += _acc491 * _t479;
				_acc489 += _acc490;
				_acc488 += _acc490;
				_acc481 += _acc489 * vertParams[59];
				_acc478 += _acc488 * _t480;
				_acc480 += _acc488 * _t478;
				_acc486 += _acc487;
				_acc485 += _acc487;
				_acc481 += _acc486 * vertParams[58];
				_acc477 += _acc485 * _t480;
				_acc480 += _acc485 * _t477;
				_acc483 += _acc484;
				_acc482 += _acc484;
				_acc481 += _acc483 * vertParams[57];
				_acc476 += _acc482 * _t480;
				_acc480 += _acc482 * _t476;
				_t1260 = sin(_t465);
				_t1261 = -_t1260;
				_acc465 += _acc481 * _t1261;
				_t1262 = cos(_t465);
				_acc465 += _acc480 * _t1262;
				_acc473 += _acc479 * _t475;
				_acc475 += _acc479 * _t473;
				_acc471 += _acc478 * _t475;
				_acc475 += _acc478 * _t471;
				_acc469 += _acc477 * _t475;
				_acc475 += _acc477 * _t469;
				_acc467 += _acc476 * _t475;
				_acc475 += _acc476 * _t467;
				_t1263 = _t475 * _t475;
				_t1264 = -_t1263;
				_acc474 += _acc475 * _t1264;
				_t1265 = (float)1.0 / (_t474);
				_t1266 = _t467 * _t1265;
				_acc467 += _acc474 * _t1266;
				_t1267 = _t469 * _t1265;
				_acc469 += _acc474 * _t1267;
				_t1268 = _t471 * _t1265;
				_acc471 += _acc474 * _t1268;
				_t1269 = _t473 * _t1265;
				_acc473 += _acc474 * _t1269;
				_acc432 += _acc473;
				_acc472 -= _acc473;
				_acc433 += _acc472 * vertParams[60];
				_acc431 += _acc471;
				_acc470 -= _acc471;
				_acc433 += _acc470 * vertParams[59];
				_acc430 += _acc469;
				_acc468 -= _acc469;
				_acc433 += _acc468 * vertParams[58];
				_acc429 += _acc467;
				_acc466 -= _acc467;
				_acc433 += _acc466 * vertParams[57];
				_acc464 += _acc465 * primary[0];
				_t1270 = _t433 * _t433;
				_t1271 = 1.000000-_t1270;
				_t1272 = sqrt(_t1271);
				_t1273 = (float)1.0 / (_t1272);
				_t1274 = -_t1273;
				_acc433 += _acc464 * _t1274;
			}
			cif (_t428 < 0.000000) {
				_acc435 = _acc429;
				_acc436 = _acc430;
				_acc437 = _acc431;
				_acc438 = _acc432;
				_acc439 = _acc433;
				_acc428 -= _acc439;
			}
			else {
				_acc428 = _acc433;
			}
			_acc427 += _acc428;
			_acc422 += _acc428;
			_acc426 += _acc427;
			_acc423 += _acc427;
			_acc425 += _acc426;
			_acc424 += _acc426;
		}
	}
	else {
	}
	_acc262 += _acc269 * _t268;
	_acc268 += _acc269 * _t262;
	_t1275 = _t268 * _t268;
	_t1276 = -_t1275;
	_acc267 += _acc268 * _t1276;
	_t1277 = 2.000000 * _t264;
	_acc264 += _acc267 * _t1277;
	cif (_t263 >= 0.000000) {
		_acc263 = _acc264;
	}
	else {
		_acc266 = _acc264;
		_acc263 -= _acc266;
	}
	_acc143 += _acc263 * _t156;
	_acc138 += _acc263 * _t157;
	_acc133 += _acc263 * _t158;
	_acc156 += _acc263 * _t143;
	_acc157 += _acc263 * _t138;
	_acc158 += _acc263 * _t133;
	_acc149 += _acc262 * _t261;
	_acc261 += _acc262 * _t149;
	_t1278 = 2.000000 * _t260;
	_acc260 += _acc261 * _t1278;
	_acc259 += _acc260;
	_acc254 += _acc260;
	_acc258 += _acc259;
	_acc256 += _acc259;
	_t1279 = 2.000000 * _t257;
	_acc257 += _acc258 * _t1279;
	_acc150 -= _acc257;
	_t1280 = 2.000000 * _t255;
	_acc255 += _acc256 * _t1280;
	_acc151 -= _acc255;
	_t1281 = 2.000000 * _t253;
	_acc253 += _acc254 * _t1281;
	_acc152 -= _acc253;
	_acc133 -= _acc252;
	_acc138 -= _acc251;
	_acc143 -= _acc250;
	cif (vertParams[3] == 0.000000) {
		_acc208 = _acc150;
		_acc210 = _acc151;
		_acc212 = _acc152;
		_acc230 = _acc156;
		_acc231 = _acc157;
		_acc232 = _acc158;
		_acc227 += _acc232 * _t229;
		_acc229 += _acc232 * _t227;
		_acc222 += _acc231 * _t229;
		_acc229 += _acc231 * _t222;
		_acc217 += _acc230 * _t229;
		_acc229 += _acc230 * _t217;
		_t1282 = _t229 * _t229;
		_t1283 = -_t1282;
		_acc228 += _acc229 * _t1283;
		_t1284 = (float)1.0 / (_t228);
		_t1285 = _t217 * _t1284;
		_acc217 += _acc228 * _t1285;
		_t1286 = _t222 * _t1284;
		_acc222 += _acc228 * _t1286;
		_t1287 = _t227 * _t1284;
		_acc227 += _acc228 * _t1287;
		_acc226 += _acc227;
		_acc223 += _acc227;
		_acc225 += _acc226;
		_acc224 += _acc226;
		_acc206 += _acc225 * vertParams[16];
		_acc191 += _acc224 * vertParams[19];
		_acc202 += _acc223 * vertParams[22];
		_acc221 += _acc222;
		_acc218 += _acc222;
		_acc220 += _acc221;
		_acc219 += _acc221;
		_acc206 += _acc220 * vertParams[15];
		_acc191 += _acc219 * vertParams[18];
		_acc202 += _acc218 * vertParams[21];
		_acc216 += _acc217;
		_acc213 += _acc217;
		_acc215 += _acc216;
		_acc214 += _acc216;
		_acc206 += _acc215 * vertParams[14];
		_acc191 += _acc214 * vertParams[17];
		_acc202 += _acc213 * vertParams[20];
		_acc211 += _acc212;
		_acc204 += _acc211 * _t133;
		_acc133 += _acc211 * _t204;
		_acc209 += _acc210;
		_acc204 += _acc209 * _t138;
		_acc138 += _acc209 * _t204;
		_acc207 += _acc208;
		_acc204 += _acc207 * _t143;
		_acc143 += _acc207 * _t204;
		_acc205 += _acc206;
		_acc202 -= _acc206;
		_acc191 -= _acc205;
		_acc203 += _acc204 * _t186;
		_acc186 += _acc204 * _t203;
		_acc200 += _acc203 * vertParams[11];
		_acc197 += _acc203 * vertParams[12];
		_acc194 += _acc203 * vertParams[13];
		_acc201 += _acc202 * _t186;
		_acc186 += _acc202 * _t201;
		_acc143 += _acc201 * _t200;
		_acc138 += _acc201 * _t197;
		_acc133 += _acc201 * _t194;
		_acc200 += _acc201 * _t143;
		_acc197 += _acc201 * _t138;
		_acc194 += _acc201 * _t133;
		_acc199 += _acc200;
		_acc198 -= _acc200;
		_acc188 += _acc199 * vertParams[10];
		_acc189 += _acc198 * vertParams[9];
		_acc196 += _acc197;
		_acc195 -= _acc197;
		_acc189 += _acc196 * vertParams[8];
		_acc187 += _acc195 * vertParams[10];
		_acc193 += _acc194;
		_acc192 -= _acc194;
		_acc187 += _acc193 * vertParams[9];
		_acc188 += _acc192 * vertParams[8];
		_acc190 += _acc191 * _t186;
		_acc186 += _acc191 * _t190;
		_acc187 += _acc190 * _t184;
		_acc188 += _acc190 * _t181;
		_acc189 += _acc190 * _t178;
		_acc184 += _acc190 * _t187;
		_acc181 += _acc190 * _t188;
		_acc178 += _acc190 * _t189;
		_t1288 = _t186 * _t186;
		_t1289 = -_t1288;
		_acc185 += _acc186 * _t1289;
		_acc184 += _acc185 * vertParams[8];
		_acc181 += _acc185 * vertParams[9];
		_acc178 += _acc185 * vertParams[10];
		_acc183 += _acc184;
		_acc182 -= _acc184;
		_acc138 += _acc183 * vertParams[13];
		_acc133 += _acc182 * vertParams[12];
		_acc180 += _acc181;
		_acc179 -= _acc181;
		_acc133 += _acc180 * vertParams[11];
		_acc143 += _acc179 * vertParams[13];
		_acc177 += _acc178;
		_acc176 -= _acc178;
		_acc143 += _acc177 * vertParams[12];
		_acc138 += _acc176 * vertParams[11];
	}
	else {
	}
	_t1290 = 2.000000 * _t148;
	_acc148 += _acc149 * _t1290;
	_t1291 = -scene[32];
	_t1292 = (float)1.0 / (_t147);
	_t1293 = _t1292 * _t1292;
	_t1294 = _t1291 * _t1293;
	_acc147 += _acc148 * _t1294;
	_t1295 = (float)1.0 / (_t144);
	_acc146 += _acc147 * _t1295;
	_t1296 = -_t146;
	_t1297 = _t1295 * _t1295;
	_t1298 = _t1296 * _t1297;
	_acc144 += _acc147 * _t1298;
	_t1299 = 2.000000 * _t145;
	_acc145 += _acc146 * _t1299;
	_t1300 = -scene[33];
	_t1301 = (float)1.0 / (_t144);
	_t1302 = _t1301 * _t1301;
	_t1303 = _t1300 * _t1302;
	_acc144 += _acc145 * _t1303;
	_acc73 += _acc144 * _t143;
	_acc68 += _acc144 * _t138;
	_acc63 += _acc144 * _t133;
	_acc143 += _acc144 * _t73;
	_acc138 += _acc144 * _t68;
	_acc133 += _acc144 * _t63;
	_acc142 += _acc143;
	_acc139 += _acc143;
	_acc141 += _acc142;
	_acc140 += _acc142;
	_acc110 += _acc141 * _t96;
	_acc96 += _acc141 * _t110;
	_acc116 += _acc140 * _t97;
	_acc97 += _acc140 * _t116;
	_acc123 += _acc139 * _t98;
	_acc98 += _acc139 * _t123;
	_acc137 += _acc138;
	_acc134 += _acc138;
	_acc136 += _acc137;
	_acc135 += _acc137;
	_acc112 += _acc136 * _t96;
	_acc96 += _acc136 * _t112;
	_acc119 += _acc135 * _t97;
	_acc97 += _acc135 * _t119;
	_acc125 += _acc134 * _t98;
	_acc98 += _acc134 * _t125;
	_acc132 += _acc133;
	_acc129 += _acc133;
	_acc131 += _acc132;
	_acc130 += _acc132;
	_acc114 += _acc131 * _t96;
	_acc96 += _acc131 * _t114;
	_acc121 += _acc130 * _t97;
	_acc97 += _acc130 * _t121;
	_acc128 += _acc129 * _t98;
	_acc98 += _acc129 * _t128;
	_acc127 -= _acc128;
	_acc126 += _acc127 * 2.000000;
	_acc99 += _acc126;
	_acc100 += _acc126;
	_acc124 += _acc125 * 2.000000;
	_acc104 += _acc124;
	_acc105 -= _acc124;
	_acc122 += _acc123 * 2.000000;
	_acc103 += _acc122;
	_acc106 += _acc122;
	_acc120 += _acc121 * 2.000000;
	_acc104 += _acc120;
	_acc105 += _acc120;
	_acc118 -= _acc119;
	_acc117 += _acc118 * 2.000000;
	_acc99 += _acc117;
	_acc101 += _acc117;
	_acc115 += _acc116 * 2.000000;
	_acc102 += _acc115;
	_acc107 -= _acc115;
	_acc113 += _acc114 * 2.000000;
	_acc103 += _acc113;
	_acc106 -= _acc113;
	_acc111 += _acc112 * 2.000000;
	_acc102 += _acc111;
	_acc107 += _acc111;
	_acc109 -= _acc110;
	_acc108 += _acc109 * 2.000000;
	_acc100 += _acc108;
	_acc101 += _acc108;
	_acc91 += _acc98 * _t95;
	_acc95 += _acc98 * _t91;
	_acc92 += _acc97 * _t95;
	_acc95 += _acc97 * _t92;
	_acc93 += _acc96 * _t95;
	_acc95 += _acc96 * _t93;
	_t1304 = _t95 * _t95;
	_t1305 = -_t1304;
	_acc94 += _acc95 * _t1305;
	_t1306 = (float)1.0 / (_t94);
	_t1307 = _t93 * _t1306;
	_acc93 += _acc94 * _t1307;
	_t1308 = _t92 * _t1306;
	_acc92 += _acc94 * _t1308;
	_t1309 = _t91 * _t1306;
	_acc91 += _acc94 * _t1309;
	_acc89 += _acc93 * _t90;
	_acc90 += _acc93 * _t89;
	_acc85 += _acc92 * _t90;
	_acc90 += _acc92 * _t85;
	_acc81 += _acc91 * _t90;
	_acc90 += _acc91 * _t81;
	_t1310 = _t90 * _t90;
	_t1311 = -_t1310;
	_acc77 += _acc90 * _t1311;
	_acc88 += _acc89;
	_acc87 += _acc88;
	_acc86 += _acc88;
	_acc0 += _acc87 * scene[1];
	_acc1 += _acc86 * scene[5];
	_acc84 += _acc85;
	_acc83 += _acc84;
	_acc82 += _acc84;
	_acc0 += _acc83 * scene[2];
	_acc1 += _acc82 * scene[6];
	_acc80 += _acc81;
	_acc79 += _acc80;
	_acc78 += _acc80;
	_acc0 += _acc79 * scene[3];
	_acc1 += _acc78 * scene[7];
	_acc76 += _acc77;
	_acc75 += _acc76;
	_acc74 += _acc76;
	_acc0 += _acc75 * scene[4];
	_acc1 += _acc74 * scene[8];
	_acc72 += _acc73;
	_acc69 += _acc73;
	_acc71 += _acc72;
	_acc70 += _acc72;
	_acc40 += _acc71 * _t26;
	_acc26 += _acc71 * _t40;
	_acc46 += _acc70 * _t27;
	_acc27 += _acc70 * _t46;
	_acc53 += _acc69 * _t28;
	_acc28 += _acc69 * _t53;
	_acc67 += _acc68;
	_acc64 += _acc68;
	_acc66 += _acc67;
	_acc65 += _acc67;
	_acc42 += _acc66 * _t26;
	_acc26 += _acc66 * _t42;
	_acc49 += _acc65 * _t27;
	_acc27 += _acc65 * _t49;
	_acc55 += _acc64 * _t28;
	_acc28 += _acc64 * _t55;
	_acc62 += _acc63;
	_acc59 += _acc63;
	_acc61 += _acc62;
	_acc60 += _acc62;
	_acc44 += _acc61 * _t26;
	_acc26 += _acc61 * _t44;
	_acc51 += _acc60 * _t27;
	_acc27 += _acc60 * _t51;
	_acc58 += _acc59 * _t28;
	_acc28 += _acc59 * _t58;
	_acc57 -= _acc58;
	_acc56 += _acc57 * 2.000000;
	_acc29 += _acc56;
	_acc30 += _acc56;
	_acc54 += _acc55 * 2.000000;
	_acc34 += _acc54;
	_acc35 -= _acc54;
	_acc52 += _acc53 * 2.000000;
	_acc33 += _acc52;
	_acc36 += _acc52;
	_acc50 += _acc51 * 2.000000;
	_acc34 += _acc50;
	_acc35 += _acc50;
	_acc48 -= _acc49;
	_acc47 += _acc48 * 2.000000;
	_acc29 += _acc47;
	_acc31 += _acc47;
	_acc45 += _acc46 * 2.000000;
	_acc32 += _acc45;
	_acc37 -= _acc45;
	_acc43 += _acc44 * 2.000000;
	_acc33 += _acc43;
	_acc36 -= _acc43;
	_acc41 += _acc42 * 2.000000;
	_acc32 += _acc41;
	_acc37 += _acc41;
	_acc39 -= _acc40;
	_acc38 += _acc39 * 2.000000;
	_acc30 += _acc38;
	_acc31 += _acc38;
	_acc21 += _acc28 * _t25;
	_acc25 += _acc28 * _t21;
	_acc22 += _acc27 * _t25;
	_acc25 += _acc27 * _t22;
	_acc23 += _acc26 * _t25;
	_acc25 += _acc26 * _t23;
	_t1312 = _t25 * _t25;
	_t1313 = -_t1312;
	_acc24 += _acc25 * _t1313;
	_t1314 = (float)1.0 / (_t24);
	_t1315 = _t23 * _t1314;
	_acc23 += _acc24 * _t1315;
	_t1316 = _t22 * _t1314;
	_acc22 += _acc24 * _t1316;
	_t1317 = _t21 * _t1314;
	_acc21 += _acc24 * _t1317;
	_acc19 += _acc23 * _t20;
	_acc20 += _acc23 * _t19;
	_acc15 += _acc22 * _t20;
	_acc20 += _acc22 * _t15;
	_acc11 += _acc21 * _t20;
	_acc20 += _acc21 * _t11;
	_t1318 = _t20 * _t20;
	_t1319 = -_t1318;
	_acc7 += _acc20 * _t1319;
	_acc18 += _acc19;
	_acc17 += _acc18;
	_acc16 += _acc18;
	_acc14 += _acc15;
	_acc13 += _acc14;
	_acc12 += _acc14;
	_acc10 += _acc11;
	_acc9 += _acc10;
	_acc8 += _acc10;
	_acc6 += _acc7;
	_acc5 += _acc6;
	_acc4 += _acc6;
	grad[0] = _acc0;
	grad[1] = _acc1;
	grad[2] = _acc2;
	grad[3] = _acc3;
}
export void evaluate_path_bidir_mala_2_1_static_derv(uniform const float lens[2], uniform const float primary[5], uniform const float scene[38], uniform const float vertParams[238], uniform float grad[]) {
	float g[4] = {0};
	evaluate_path_bidir_mala_2_1_static_derv_kernel(lens, primary, scene, vertParams, g);
	foreach (index = 0 ... 4) {
		grad[index] = g[index];
	}
}
