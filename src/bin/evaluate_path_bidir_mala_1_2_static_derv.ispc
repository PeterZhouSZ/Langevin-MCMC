static void evaluate_path_bidir_mala_1_2_static_derv_kernel(uniform const float lens[2], uniform const float primary[5], uniform const float scene[38], uniform const float vertParams[238], float grad[4]) {
	uniform float _t789, _t594, _t788, _t760, _t759, _t67, _t758, _t66, _t82, _t767, _t412, _t765, _t762, _t69, _t57, _t400, _t752, _t751, _t749, _t748, _t747, _t745, _t744, _t734, _t540, _t539, _t520, _t887, _t1416, _t740, _t902, _t729, _t1415, _t876, _t711, _t709, _t708, _t872, _t700, _t321, _t693, _t698, _t677, _t673, _t287, _t669, _t668, _t662, _t661, _t659, _t158, _t657, _t656, _t655, _t654, _t163, _t653, _t162, _t641, _t640, _t637, _t636, _t619, _t618, _t617, _t616, _t800, _t615, _t606, _t604, _t590, _t94, _t592, _t589, _t692, _t588, _t215, _t691, _t587, _t585, _t960, _t580, _t210, _t83, _t418, _t416, _t482, _t481, _t305, _t578, _t773, _t954, _t479, _t160, _t478, _t675, _t477, _t672, _t674, _t476, _t575, _t475, _t64, _t63, _t62, _t743, _t554, _t551, _t932, _t550, _t548, _t547, _t898, _t545, _t798, _t543, _t896, _t537, _t532, _t531, _t530, _t612, _t525, _t611, _t610, _t523, _t1417, _t466, _t516, _t882, _t783, _t597, _t730, _t782, _t731, _t596, _t971, _t598, _t901, _t512, _t340, _t225, _t704, _t644, _t511, _t715, _t510, _t643, _t780, _t508, _t506, _t505, _t504, _t499, _t496, _t845, _t495, _t1023, _t503, _t494, _t168, _t844, _t87, _t502, _t493, _t1015, _t471, _t474, _t152, _t473, _t154, _t1012, _t150, _t1009, _t517, _t467, _t513, _t463, _t536, _t15, _t626, _t417, _t774, _t480, _t161, _t13, _t259, _t9, _t991, _t4, _t458, _t256, _t989, _t452, _t451, _t450, _t449, _t448, _t447, _t446, _t1429, _t445, _t443, _t442, _t769, _t639, _t441, _t601, _t768, _t422, _t421, _t546, _t440, _t423, _t438, _t434, _t728, _t602, _t420, _t419, _t406, _t928, _t405, _t413, _t949, _t944, _t936, _t599, _t216, _t89, _t100, _t707, _t214, _t645, _t260, _t126, _t489, _t294, _t854, _t648, _t1028, _t642, _t444, _t108, _t206, _t205, _t542, _t6, _t202, _t93, _t46, _t317, _t316, _t213, _t92, _t600, _t218, _t212, _t91, _t315, _t694, _t658, _t461, _t191, _t189, _t646, _t514, _t464, _t320, _t192, _t500, _t172, _t384, _t290, _t717, _t376, _t737, _t879, _t159, _t632, _t229, _t414, _t151, _t829, _t1011, _t763, _t149, _t651, _t1008, _t501, _t129, _t41, _t726, _t125, _t177, _t38, _t166, _t387, _t37, _t766, _t204, _t386, _t576, _t261, _t724, _t122, _t811, _t35, _t491, _t723, _t121, _t802, _t34, _t1031, _t385, _t521, _t120, _t801, _t119, _t805, _t32, _t113, _t241, _t112, _t980, _t285, _t519, _t470, _t825, _t240, _t111, _t203, _t581, _t518, _t469, _t424, _t323, _t365, _t95, _t309, _t118, _t623, _t889, _t459, _t117, _t622, _t167, _t116, _t778, _t90, _t961, _t306, _t47, _t777, _t621, _t652, _t165, _t60, _t156, _t284, _t275, _t140, _t613, _t25, _t756, _t281, _t603, _t319, _t620, _t535, _t227, _t607, _t375, _t509, _t54, _t404, _t345, _t52, _t173, _t97, _t313, _t722, _t884, _t61, _t324, _t633, _t437, _t230, _t174, _t634, _t155, _t274, _t432, _t338, _t245, _t138, _t88, _t55, _t22, _t110, _t239, _t528, _t356, _t283, _t370, _t522, _t164, _t209, _t268, _t790, _t970, _t228, _t355, _t527, _t584, _t670, _t295, _t1029, _t130, _t630, _t808, _t992, _t226, _t23, _t720, _t660, _t533, _t786, _t328, _t393, _t727, _t123, _t36, _t388, _t10, _t515, _t465, _t834, _t131, _t631, _t993, _t291, _t292, _t544, _t343, _t881, _t394, _t318, _t867, _t102, _t237, _t795, _t115, _t978, _t792, _t190, _t19, _t397, _t104, _t614, _t153, _t830, _t72, _t627, _t78, _t628, _t70, _t732, _t538, _t5, _t1408, _t128, _t247, _t433, _t595, _t339, _t390, _t483, _t258, _t804, _t44, _t344, _t59, _t714, _t235, _t794, _t264, _t629, _t663, _t73, _t549, _t716, _t178, _t389, _t710, _t103, _t974, _t635, _t455, _t350, _t1418, _t124, _t725, _t171, _t296, _t647, _t1030, _t431, _t337, _t244, _t1424, _t74, _t79, _t750, _t398, _t26, _t488, _t696, _t262, _t127, _t197, _t286, _t134, _t638, _t487, _t1027, _t114, _t776, _t276, _t366, _t702, _t223, _t101, _t105, _t236, _t712, _t378, _t109, _t7, _t703, _t224, _t329, _t254, _t987, _t56, _t330, _t233, _t791, _t713, _t234, _t793, _t8, _t238, _t796, _t435, _t300, _t170, _t336, _t243, _t169, _t1024, _t335, _t248, _t249, _t982, _t582, _t983, _t251, _t586, _t984, _t252, _t583, _t985, _t253, _t986, _t255, _t988, _t976, _t43, _t257, _t821, _t207, _t85, _t208, _t649, _t1007, _t456, _t981, _t351, _t219, _t1419, _t263, _t265, _t266, _t862, _t1034, _t267, _t269, _t770, _t270, _t272, _t671, _t273, _t14, _t354, _t277, _t278, _t742, _t279, _t754, _t289, _t132, _t347, _t399, _t196, _t929, _t133, _t198, _t772, _t199, _t136, _t775, _t953, _t200, _t137, _t699, _t1042, _t818, _t299, _t348, _t820, _t301, _t454, _t349, _t1420, _t303, _t304, _t861, _t490, _t297, _t779, _t222, _t701, _t250, _t507, _t308, _t310, _t322, _t784, _t690, _t972, _t312, _t877, _t377, _t325, _t609, _t979, _t326, _t719, _t327, _t232, _t331, _t332, _t333, _t334, _t875, _t33, _t346, _t650, _t1010, _t352, _t220, _t738, _t803, _t353, _t221, _t899, _t357, _t358, _t359, _t360, _t361, _t362, _t676, _t955, _t552, _t363, _t99, _t553, _t364, _t20, _t556, _t367, _t557, _t812, _t368, _t369, _t371, _t372, _t106, _t380, _t381, _t391, _t396, _t231, _t764, _t945, _t401, _t402, _t799, _t807, _t809, _t810, _t994, _t814, _t816, _t819, _t822, _t823, _t847, _t826, _t827, _t828, _t49, _t832, _t833, _t1014, _t835, _t836, _t841, _t395, _t839, _t403, _t842, _t813, _t843, _t846, _t848, _t849, _t850, _t851, _t852, _t853, _t857, _t430, _t855, _t860, _t684, _t858, _t426, _t865, _t863, _t866, _t1041, _t428, _t870, _t874, _t878, _t880, _t868, _t453, _t883, _t885, _t1412, _t888, _t892, _t75, _t1425, _t893, _t193, _t76, _t1426, _t897, _t900, _t903, _t904, _t894, _t890, _t905, _t526, _t529, _t541, _t497, _t927, _t930, _t931, _t933, _t739, _t935, _t938, _t940, _t942, _t943, _t282, _t946, _t947, _t956, _t959, _t555, _t957, _t21, _t962, _t11, _t969, _t1005, _t42, _t50, _t948, _t950, _t952, _t1021, _t1022, _t1016, _t1017, _t593, _t1018, _t1019, _t24, _t1025, _t1026, _t681, _t682, _t683, _t837, _t1033, _t686, _t1032, _t1035, _t1036, _t625, _t1037, _t1040, _t1038, _t1043, _t71, _t80, _t462, _t664, _t665, _t666, _t425, _t271, _t141, _t718, _t142, _t288, _t176, _t175, _t293, _t939, _t302, _t242, _t314, _t771, _t311, _t341, _t342, _t977, _t787, _t806, _t817, _t373, _t815, _t374, _t415, _t68, _t1422, _t439, _t12, _t524, _t534, _t492, _t934, _t937, _t941, _t577, _t975, _t45, _t40, _t48, _t51, _t53, _t605, _t1006, _t697, _t1406, _t1407, _t1409, _t1410, _t1411, _t58, _t1414, _t1421, _t1423, _t194, _t77, _t1427, _t195, _t1428, _t1430, _t1431, _t678, _t1432, _t679, _t1433, _t680, _t1434, _t1435, _t1436, _t1437, _t1438, _t1439, _t1440, _t1441, _t392, _t65, _t107, _t429, _t871, _t824, _t246, _t667, _t608, _t624, _t383, _t498, _t86, _t217, _t736, _t468, _t706, _t98, _t436, _t457, _t460, _t280, _t157;
	float _t1737, _t1736, _t1734, _t1732, _t1730, _t1729, _t1728, _t1727, _t1726, _t1725, _t1724, _t1723, _t1722, _t1720, _t1718, _t1717, _t1716, _t1715, _t1714, _t1711, _t1710, _t1709, _t1708, _t1707, _t1705, _t1703, _t1702, _t1701, _t1700, _t1699, _t1697, _t1696, _t1693, _t1691, _t1690, _t1685, _t1682, _t1678, _t1673, _t1672, _t1671, _t1667, _t1666, _t1665, _t1660, _t1658, _t1657, _t1656, _t1654, _t1653, _t1651, _t1650, _t1649, _t1647, _t1646, _t1645, _t1644, _t1643, _t1642, _t1640, _t1637, _t1636, _t1635, _t1634, _t1633, _t1631, _t1629, _t1683, _t1688, _t1627, _t1626, _t1625, _t1624, _t1623, _t1622, _t1621, _t1620, _t1617, _t1615, _t1612, _t1611, _t1609, _t1608, _t1603, _t1602, _t1600, _t1599, _t1598, _t1597, _t1596, _t1594, _t1616, _t1131, _t1605, _t1275, _t1101, _t746, _t733, _t1072, _t1444, _t1074, _t1583, _t1395, _t1380, _t1542, _t1174, _t1001, _t998, _t1326, _t1061, _t1712, _t1474, _t1442, _t1471, _t1503, _t573, _t570, _t569, _t1107, _t568, _t1106, _t567, _t1664, _t1676, _t1663, _t1088, _t1090, _t1086, _t1238, _t1674, _t1073, _t1125, _t1512, _t1091, _t1584, _t1579, _t1704, _t1618, _t1394, _t1576, _t1221, _t1396, _t1610, _t1648, _t1662, _t1053, _t1731, _t1652, _t1170, _t1713, _t1346, _t1525, _t1689, _t1251, _t1143, _t1142, _t1463, _t1121, _t1087, _t1461, _t1136, _t1071, _t1133, _t1473, _t1669, _t1269, _t1282, _t409, _t145, _t1514, _t1613, _t1215, _t1484, _t1154, _t1216, _t1560, _t1112, _t1390, _t1115, _t1155, _t1092, _t1149, _t561, _t1193, _t1735, _t1541, _t1207, _t1097, _t1557, _t1659, _t911, _t1095, _t1360, _t1256, _t1393, _t1478, _t1698, _t1123, _t1220, _t1083, _t1324, _t1151, _t1322, _t1472, _t179, _t1347, _t143, _t1489, _t1318, _t564, _t1592, _t1595, _t31, _t1354, _t1668, _t1268, _t1619, _t1352, _t563, _t1383, _t1588, _t1210, _t139, _t1518, _t1586, _t1508, _t923, _t1694, _t1630, _t1198, _t485, _t918, _t1480, _t996, _t1309, _t1226, _t1328, _t1695, _t566, _t1483, _t1405, _t1585, _t1297, _t1677, _t1096, _t1458, _t1196, _t1248, _t1476, _t1355, _t1315, _t1140, _t1213, _t27, _t1200, _t1278, _t180, _t1466, _t1517, _t951, _t1528, _t916, _t1260, _t1063, _t1494, _t1446, _t1089, _t1114, _t1371, _t410, _t1450, _t1119, _t1197, _t1545, _t146, _t1116, _t1264, _t1384, _t1580, _t1153, _t1141, _t1314, _t1375, _t29, _t1477, _t1575, _t559, _t1323, _t135, _t1581, _t1486, _t1385, _t1487, _t1075, _t1159, _t181, _t182, _t1561, _t1103, _t183, _t1454, _t1532, _t565, _t1535, _t1601, _t1506, _t1100, _t1493, _t1524, _t147, _t1607, _t571, _t30, _t1497, _t781, _t1469, _t1122, _t753, _t1443, _t1546, _t1300, _t1577, _t184, _t1206, _t1126, _t562, _t1578, _t1076, _t1077, _t741, _t1179, _t1079, _t1093, _t1243, _t1080, _t1244, _t1081, _t1245, _t1692, _t558, _t1085, _t1452, _t1530, _t1344, _t1202, _t1445, _t1171, _t1349, _t1177, _t1357, _t1639, _t1218, _t1189, _t1373, _t1195, _t1376, _t1004, _t1374, _t1176, _t1504, _t1555, _t1632, _t1211, _t1391, _t1733, _t1060, _t1229, _t1069, _t1566, _t1641, _t906, _t907, _t908, _t909, _t910, _t912, _t913, _t914, _t1259, _t484, _t917, _t919, _t1675, _t921, _t922, _t924, _t925, _t926, _t1108, _t1306, _t1277, _t1279, _t1280, _t1681, _t1593, _t1281, _t1283, _t1284, _t963, _t964, _t965, _t1331, _t966, _t995, _t997, _t999, _t1706, _t1467, _t1002, _t1341, _t1350, _t1614, _t1684, _t1311, _t1184, _t1365, _t1185, _t1366, _t1544, _t1186, _t1367, _t1368, _t1205, _t685, _t1404, _t1559, _t1382, _t1381, _t1062, _t1054, _t1569, _t1055, _t1224, _t1056, _t1057, _t1589, _t1070, _t1078, _t1064, _t1065, _t1511, _t1066, _t1067, _t1099, _t1102, _t1104, _t1262, _t1105, _t1482, _t1094, _t1109, _t1110, _t1113, _t1117, _t1127, _t1515, _t1128, _t1129, _t1130, _t1604, _t1132, _t1134, _t1606, _t1135, _t1680, _t1307, _t1137, _t1138, _t1139, _t1312, _t1144, _t188, _t1687, _t1150, _t185, _t1145, _t186, _t1146, _t1686, _t1319, _t187, _t1147, _t1320, _t1152, _t1333, _t1161, _t1162, _t1163, _t1164, _t1165, _t1166, _t1167, _t1168, _t1339, _t1169, _t1343, _t1172, _t1173, _t1537, _t1156, _t1157, _t1158, _t1175, _t1628, _t1178, _t1180, _t1181, _t1719, _t1540, _t1182, _t1183, _t1364, _t1187, _t1188, _t1190, _t1191, _t1192, _t1199, _t1204, _t1558, _t1208, _t1638, _t1209, _t1212, _t1214, _t1217, _t1223, _t1082, _t1225, _t1228, _t1400, _t1230, _t1233, _t1234, _t1237, _t1239, _t1499, _t1240, _t1552, _t1241, _t1551, _t1242, _t1231, _t1246, _t1247, _t1250, _t1252, _t1255, _t1261, _t1263, _t1266, _t1267, _t1257, _t1253, _t1270, _t1271, _t1272, _t1273, _t1274, _t1276, _t1285, _t1286, _t1287, _t1288, _t1289, _t915, _t1290, _t1291, _t1292, _t1293, _t1655, _t920, _t1294, _t1295, _t1296, _t1298, _t1299, _t1301, _t1302, _t1303, _t1304, _t1305, _t1679, _t1308, _t1310, _t1460, _t1316, _t1317, _t1325, _t1327, _t1329, _t1332, _t572, _t968, _t1334, _t1337, _t574, _t1335, _t1492, _t1338, _t1340, _t1342, _t1500, _t1345, _t1348, _t1351, _t1353, _t1358, _t1359, _t1509, _t1361, _t1362, _t1363, _t1000, _t1520, _t1372, _t1377, _t1378, _t1313, _t1387, _t1475, _t1388, _t1389, _t1562, _t1481, _t1392, _t1044, _t1564, _t1045, _t1046, _t1048, _t1049, _t1397, _t1573, _t1398, _t1399, _t1401, _t1491, _t1402, _t144, _t1403, _t1539, _t1047, _t1059, _t1490, _t1670, _t1510, _t1447, _t1448, _t1449, _t1529, _t1451, _t1531, _t1453, _t1455, _t1456, _t1721, _t1457, _t1459, _t1462, _t1464, _t1370, _t1465, _t1468, _t1498, _t1470, _t1111, _t1479, _t1553, _t1485, _t1488, _t1495, _t1496, _t1501, _t1502, _t1505, _t1507, _t1513, _t1516, _t1519, _t1661, _t1521, _t1522, _t1549, _t1523, _t1526, _t1527, _t1533, _t1534, _t1536, _t1538, _t1543, _t1235, _t1547, _t1548, _t1550, _t1554, _t1556, _t1563, _t1565, _t1567, _t1568, _t1570, _t1571, _t1572, _t1265, _t1574, _t1582, _t1587, _t1590, _t1591;
	/* Forward */
	cif (vertParams[4] == 0.000000) {
		_t19 = 6.283185 * primary[3];
		_t20 = 3.141593 * primary[4];
		_t21 = sin(_t20);
		_t22 = cos(_t20);
		_t23 = sin(_t19);
		_t24 = _t21 * _t23;
		_t25 = cos(_t19);
		_t26 = _t21 * _t25;
		cif (_t21 >= 0.000000) {
			_t27 = _t21;
		}
		else {
			_t29 = -_t21;
			_t27 = _t29;
		}
		_t30 = _t27 * 6.283185;
		_t31 = _t30 * 3.141593;
		_t4 = vertParams[5];
		_t5 = vertParams[6];
		_t6 = vertParams[7];
		_t7 = _t26;
		_t8 = _t24;
		_t9 = _t22;
		_t10 = vertParams[8];
		_t11 = vertParams[9];
		_t12 = vertParams[10];
		_t13 = 1.000000;
		_t14 = 0.079577;
		_t15 = 1.000000;
	}
	else cif (vertParams[4] == 1.000000) {
		cif (vertParams[5] == 0.000000) {
			_t40 = 1.000001-primary[1];
			_t41 = sqrt(_t40);
			_t42 = 1.000000-_t41;
			_t43 = _t41 * primary[2];
			_t44 = vertParams[13] * _t43;
			_t45 = vertParams[10] * _t42;
			_t46 = vertParams[7]+_t45;
			_t47 = _t46+_t44;
			_t48 = vertParams[14] * _t43;
			_t49 = vertParams[11] * _t42;
			_t50 = vertParams[8]+_t49;
			_t51 = _t50+_t48;
			_t52 = vertParams[15] * _t43;
			_t53 = vertParams[12] * _t42;
			_t54 = vertParams[9]+_t53;
			_t55 = _t54+_t52;
			_t56 = 1.000000-_t42;
			_t57 = _t56-_t43;
			_t58 = vertParams[22] * _t43;
			_t59 = vertParams[19] * _t42;
			_t60 = vertParams[16] * _t57;
			_t61 = _t60+_t59;
			_t62 = _t61+_t58;
			_t63 = vertParams[23] * _t43;
			_t64 = vertParams[20] * _t42;
			_t65 = vertParams[17] * _t57;
			_t66 = _t65+_t64;
			_t67 = _t66+_t63;
			_t68 = vertParams[24] * _t43;
			_t69 = vertParams[21] * _t42;
			_t70 = vertParams[18] * _t57;
			_t71 = _t70+_t69;
			_t72 = _t71+_t68;
			_t73 = sqrt(_t62*_t62+_t67*_t67+_t72*_t72);
			_t74 = (float)1.0 / (_t73);
			_t75 = _t62 * _t74;
			_t76 = _t67 * _t74;
			_t77 = _t72 * _t74;
			_t32 = _t47;
			_t33 = _t51;
			_t34 = _t55;
			_t35 = _t75;
			_t36 = _t76;
			_t37 = _t77;
			_t38 = vertParams[50];
		}
		else {
			_t32 = 0.000000;
			_t33 = 0.000000;
			_t34 = 0.000000;
			_t35 = 0.000000;
			_t36 = 0.000000;
			_t37 = 0.000000;
			_t38 = 0.000000;
		}
		_t78 = 6.283185 * primary[3];
		_t79 = 1.000000-primary[4];
		cif (_t79 >= 0.000001) {
			_t80 = _t79;
		}
		else {
			_t80 = 0.000001;
		}
		_t82 = sqrt(_t80);
		cif (primary[4] >= 0.000001) {
			_t83 = primary[4];
		}
		else {
			_t83 = 0.000001;
		}
		_t85 = sqrt(_t83);
		_t86 = sin(_t78);
		_t87 = _t86 * _t82;
		_t88 = cos(_t78);
		_t89 = _t88 * _t82;
		cif (_t37 < -0.999999) {
			_t90 = 0.000000;
			_t91 = -1.000000;
			_t92 = 0.000000;
			_t93 = -1.000000;
			_t94 = 0.000000;
			_t95 = 0.000000;
		}
		else {
			_t97 = 1.000000+_t37;
			_t98 = (float)1.0 / (_t97);
			_t99 = -_t35;
			_t100 = _t99 * _t36;
			_t101 = _t100 * _t98;
			_t102 = -_t35;
			_t103 = _t35 * _t35;
			_t104 = _t103 * _t98;
			_t105 = 1.000000-_t104;
			_t106 = -_t36;
			_t107 = _t36 * _t36;
			_t108 = _t107 * _t98;
			_t109 = 1.000000-_t108;
			_t90 = _t105;
			_t91 = _t101;
			_t92 = _t102;
			_t93 = _t101;
			_t94 = _t109;
			_t95 = _t106;
		}
		_t110 = _t85 * _t35;
		_t111 = _t87 * _t93;
		_t112 = _t89 * _t90;
		_t113 = _t112+_t111;
		_t114 = _t113+_t110;
		_t115 = _t85 * _t36;
		_t116 = _t87 * _t94;
		_t117 = _t89 * _t91;
		_t118 = _t117+_t116;
		_t119 = _t118+_t115;
		_t120 = _t85 * _t37;
		_t121 = _t87 * _t95;
		_t122 = _t89 * _t92;
		_t123 = _t122+_t121;
		_t124 = _t123+_t120;
		_t125 = (float)1.0 / (_t38);
		_t126 = 3.141593 * _t125;
		_t127 = vertParams[51] * _t126;
		_t128 = vertParams[52] * _t126;
		_t129 = vertParams[53] * _t126;
		_t130 = _t85 * 0.318310;
		_t131 = _t130 * _t38;
		_t4 = _t32;
		_t5 = _t33;
		_t6 = _t34;
		_t7 = _t114;
		_t8 = _t119;
		_t9 = _t124;
		_t10 = _t127;
		_t11 = _t128;
		_t12 = _t129;
		_t13 = _t85;
		_t14 = _t131;
		_t15 = _t38;
	}
	else cif (vertParams[4] == 2.000000) {
		cif (vertParams[5] == 0.000000) {
			_t149 = vertParams[12] * vertParams[12];
			_t150 = vertParams[13] * vertParams[13];
			_t151 = vertParams[14] * vertParams[14];
			_t152 = vertParams[12] * vertParams[13];
			_t153 = vertParams[12] * vertParams[14];
			_t154 = vertParams[13] * vertParams[14];
			_t155 = vertParams[12] * vertParams[15];
			_t156 = vertParams[13] * vertParams[15];
			_t157 = vertParams[14] * vertParams[15];
			_t158 = _t150+_t151;
			_t159 = 2.000000 * _t158;
			_t160 = 1.000000-_t159;
			_t161 = _t152+_t157;
			_t162 = 2.000000 * _t161;
			_t163 = _t153-_t156;
			_t164 = 2.000000 * _t163;
			_t165 = _t152-_t157;
			_t166 = 2.000000 * _t165;
			_t167 = _t149+_t151;
			_t168 = 2.000000 * _t167;
			_t169 = 1.000000-_t168;
			_t170 = _t154+_t155;
			_t171 = 2.000000 * _t170;
			_t172 = _t153+_t156;
			_t173 = 2.000000 * _t172;
			_t174 = _t154-_t155;
			_t175 = 2.000000 * _t174;
			_t176 = _t149+_t150;
			_t177 = 2.000000 * _t176;
			_t178 = 1.000000-_t177;
			_t132 = _t160;
			_t133 = _t162;
			_t134 = _t164;
			_t135 = 0.000000;
			_t136 = _t166;
			_t137 = _t169;
			_t138 = _t171;
			_t139 = 0.000000;
			_t140 = _t173;
			_t141 = _t175;
			_t142 = _t178;
			_t143 = 0.000000;
			_t144 = vertParams[6];
			_t145 = vertParams[7];
			_t146 = vertParams[8];
			_t147 = 1.000000;
		}
		else {
			_t179 = 1.000000-primary[0];
			_t180 = primary[0] * vertParams[9];
			_t181 = _t179 * vertParams[6];
			_t182 = _t181+_t180;
			_t183 = primary[0] * vertParams[10];
			_t184 = _t179 * vertParams[7];
			_t185 = _t184+_t183;
			_t186 = primary[0] * vertParams[11];
			_t187 = _t179 * vertParams[8];
			_t188 = _t187+_t186;
			_t189 = vertParams[15] * vertParams[19];
			_t190 = vertParams[14] * vertParams[18];
			_t191 = vertParams[13] * vertParams[17];
			_t192 = vertParams[12] * vertParams[16];
			_t193 = _t192+_t191;
			_t194 = _t193+_t190;
			_t195 = _t194+_t189;
			cif (_t195 < 0.000000) {
				_t202 = -vertParams[16];
				_t203 = -vertParams[17];
				_t204 = -vertParams[18];
				_t205 = -vertParams[19];
				_t206 = -_t195;
				_t196 = _t202;
				_t197 = _t203;
				_t198 = _t204;
				_t199 = _t205;
				_t200 = _t206;
			}
			else {
				_t196 = vertParams[16];
				_t197 = vertParams[17];
				_t198 = vertParams[18];
				_t199 = vertParams[19];
				_t200 = _t195;
			}
			cif (_t200 > 0.999500) {
				_t212 = 1.000000-primary[0];
				_t213 = primary[0] * _t196;
				_t214 = _t212 * vertParams[12];
				_t215 = _t214+_t213;
				_t216 = primary[0] * _t197;
				_t217 = _t212 * vertParams[13];
				_t218 = _t217+_t216;
				_t219 = primary[0] * _t198;
				_t220 = _t212 * vertParams[14];
				_t221 = _t220+_t219;
				_t222 = primary[0] * _t199;
				_t223 = _t212 * vertParams[15];
				_t224 = _t223+_t222;
				_t225 = sqrt(_t215*_t215+_t218*_t218+_t221*_t221+_t224*_t224);
				_t226 = (float)1.0 / (_t225);
				_t227 = _t215 * _t226;
				_t228 = _t218 * _t226;
				_t229 = _t221 * _t226;
				_t230 = _t224 * _t226;
				_t207 = _t227;
				_t208 = _t228;
				_t209 = _t229;
				_t210 = _t230;
			}
			else {
				_t231 = acos(_t200);
				_t232 = _t231 * primary[0];
				_t233 = vertParams[12] * _t200;
				_t234 = _t196-_t233;
				_t235 = vertParams[13] * _t200;
				_t236 = _t197-_t235;
				_t237 = vertParams[14] * _t200;
				_t238 = _t198-_t237;
				_t239 = vertParams[15] * _t200;
				_t240 = _t199-_t239;
				_t241 = sqrt(_t234*_t234+_t236*_t236+_t238*_t238+_t240*_t240);
				_t242 = (float)1.0 / (_t241);
				_t243 = _t234 * _t242;
				_t244 = _t236 * _t242;
				_t245 = _t238 * _t242;
				_t246 = _t240 * _t242;
				_t247 = sin(_t232);
				_t248 = cos(_t232);
				_t249 = _t243 * _t247;
				_t250 = vertParams[12] * _t248;
				_t251 = _t250+_t249;
				_t252 = _t244 * _t247;
				_t253 = vertParams[13] * _t248;
				_t254 = _t253+_t252;
				_t255 = _t245 * _t247;
				_t256 = vertParams[14] * _t248;
				_t257 = _t256+_t255;
				_t258 = _t246 * _t247;
				_t259 = vertParams[15] * _t248;
				_t260 = _t259+_t258;
				_t207 = _t251;
				_t208 = _t254;
				_t209 = _t257;
				_t210 = _t260;
			}
			_t261 = _t207 * _t207;
			_t262 = _t208 * _t208;
			_t263 = _t209 * _t209;
			_t264 = _t207 * _t208;
			_t265 = _t207 * _t209;
			_t266 = _t208 * _t209;
			_t267 = _t207 * _t210;
			_t268 = _t208 * _t210;
			_t269 = _t209 * _t210;
			_t270 = _t262+_t263;
			_t271 = 2.000000 * _t270;
			_t272 = 1.000000-_t271;
			_t273 = _t264+_t269;
			_t274 = 2.000000 * _t273;
			_t275 = _t265-_t268;
			_t276 = 2.000000 * _t275;
			_t277 = _t264-_t269;
			_t278 = 2.000000 * _t277;
			_t279 = _t261+_t263;
			_t280 = 2.000000 * _t279;
			_t281 = 1.000000-_t280;
			_t282 = _t266+_t267;
			_t283 = 2.000000 * _t282;
			_t284 = _t265+_t268;
			_t285 = 2.000000 * _t284;
			_t286 = _t266-_t267;
			_t287 = 2.000000 * _t286;
			_t288 = _t261+_t262;
			_t289 = 2.000000 * _t288;
			_t290 = 1.000000-_t289;
			_t132 = _t272;
			_t133 = _t274;
			_t134 = _t276;
			_t135 = 0.000000;
			_t136 = _t278;
			_t137 = _t281;
			_t138 = _t283;
			_t139 = 0.000000;
			_t140 = _t285;
			_t141 = _t287;
			_t142 = _t290;
			_t143 = 0.000000;
			_t144 = _t182;
			_t145 = _t185;
			_t146 = _t188;
			_t147 = 1.000000;
		}
		_t291 = vertParams[36]-vertParams[35];
		_t292 = primary[3]-vertParams[35];
		_t293 = _t292 / _t291;
		_t294 = vertParams[38]-vertParams[37];
		_t295 = primary[4]-vertParams[37];
		_t296 = _t295 / _t294;
		cif (_t296 < 0.500000) {
			_t299 = 2.000000 * _t296;
			_t300 = sqrt(_t299);
			_t301 = 1.000000-_t300;
			_t297 = _t301;
		}
		else {
			_t302 = _t296-0.500000;
			_t303 = 2.000000 * _t302;
			_t304 = sqrt(_t303);
			_t305 = _t304-1.000000;
			_t297 = _t305;
		}
		cif (_t293 < 0.500000) {
			_t308 = 2.000000 * _t293;
			_t309 = sqrt(_t308);
			_t310 = 1.000000-_t309;
			_t306 = _t310;
		}
		else {
			_t311 = _t293-0.500000;
			_t312 = 2.000000 * _t311;
			_t313 = sqrt(_t312);
			_t314 = _t313-1.000000;
			_t306 = _t314;
		}
		_t315 = vertParams[39]+_t306;
		_t316 = vertParams[40]+_t297;
		_t317 = _t315+0.500000;
		_t318 = _t317 * vertParams[41];
		_t319 = _t316+0.500000;
		_t320 = _t319 * vertParams[42];
		_t321 = sin(_t318);
		_t322 = cos(_t318);
		_t323 = sin(_t320);
		_t324 = cos(_t320);
		_t325 = -_t322;
		_t326 = _t325 * _t323;
		_t327 = _t321 * _t323;
		_t328 = _t142 * _t326;
		_t329 = _t138 * _t324;
		_t330 = _t134 * _t327;
		_t331 = _t330+_t329;
		_t332 = _t331+_t328;
		_t333 = _t141 * _t326;
		_t334 = _t137 * _t324;
		_t335 = _t133 * _t327;
		_t336 = _t335+_t334;
		_t337 = _t336+_t333;
		_t338 = _t140 * _t326;
		_t339 = _t136 * _t324;
		_t340 = _t132 * _t327;
		_t341 = _t340+_t339;
		_t342 = _t341+_t338;
		_t343 = 1.000000-_t306;
		_t344 = 1.000000-_t297;
		_t345 = vertParams[46] * _t306;
		_t346 = _t345 * _t344;
		_t347 = vertParams[43] * _t343;
		_t348 = _t347 * _t344;
		_t349 = _t348+_t346;
		_t350 = vertParams[47] * _t306;
		_t351 = _t350 * _t344;
		_t352 = vertParams[44] * _t343;
		_t353 = _t352 * _t344;
		_t354 = _t353+_t351;
		_t355 = vertParams[48] * _t306;
		_t356 = _t355 * _t344;
		_t357 = vertParams[45] * _t343;
		_t358 = _t357 * _t344;
		_t359 = _t358+_t356;
		_t360 = vertParams[52] * _t306;
		_t361 = _t360 * _t297;
		_t362 = vertParams[49] * _t343;
		_t363 = _t362 * _t297;
		_t364 = _t363+_t361;
		_t365 = vertParams[53] * _t306;
		_t366 = _t365 * _t297;
		_t367 = vertParams[50] * _t343;
		_t368 = _t367 * _t297;
		_t369 = _t368+_t366;
		_t370 = vertParams[54] * _t306;
		_t371 = _t370 * _t297;
		_t372 = vertParams[51] * _t343;
		_t373 = _t372 * _t297;
		_t374 = _t373+_t371;
		_t375 = _t349+_t364;
		_t376 = _t354+_t369;
		_t377 = _t359+_t374;
		cif (_t323 >= 0.000000) {
			_t378 = _t323;
		}
		else {
			_t380 = -_t323;
			_t378 = _t380;
		}
		cif (_t378 >= 0.000000) {
			_t381 = _t378;
		}
		else {
			_t381 = 0.000000;
		}
		_t383 = _t374 * 0.072169;
		_t384 = _t369 * 0.715160;
		_t385 = _t364 * 0.212671;
		_t386 = _t385+_t384;
		_t387 = _t386+_t383;
		_t388 = _t387 * vertParams[56];
		_t389 = _t359 * 0.072169;
		_t390 = _t354 * 0.715160;
		_t391 = _t349 * 0.212671;
		_t392 = _t391+_t390;
		_t393 = _t392+_t389;
		_t394 = _t393 * vertParams[55];
		_t395 = _t394+_t388;
		_t396 = _t395 * vertParams[57];
		_t397 = _t396 / _t381;
		_t398 = -_t342;
		_t399 = -_t337;
		_t400 = -_t332;
		_t401 = 2.000000 * primary[1];
		_t402 = _t401-1.000000;
		_t403 = 2.000000 * primary[2];
		_t404 = _t403-1.000000;
		cif (_t402 == 0.000000) {
			_t405 = 0.000000;
			_t406 = 0.000000;
		}
		else cif (_t404 == 0.000000) {
			_t410 = _t404 * _t404;
			_t409 = _t402 * _t402;
			_t405 = 0.000000;
			_t406 = 0.000000;
		}
		else cif (_t409 > _t410) {
			_t412 = _t404 / _t402;
			_t413 = 0.785398 * _t412;
			_t405 = _t402;
			_t406 = _t413;
		}
		else {
			_t414 = _t402 / _t404;
			_t415 = _t414 * 0.785398;
			_t416 = 1.570796-_t415;
			_t405 = _t404;
			_t406 = _t416;
		}
		_t417 = sin(_t406);
		_t418 = cos(_t406);
		_t419 = _t405 * _t417;
		_t420 = _t405 * _t418;
		cif (_t400 < -0.999999) {
			_t421 = 0.000000;
			_t422 = -1.000000;
			_t423 = 0.000000;
			_t424 = -1.000000;
			_t425 = 0.000000;
			_t426 = 0.000000;
		}
		else {
			_t428 = 1.000000+_t400;
			_t429 = (float)1.0 / (_t428);
			_t430 = -_t398;
			_t431 = _t430 * _t399;
			_t432 = _t431 * _t429;
			_t433 = -_t398;
			_t434 = _t398 * _t398;
			_t435 = _t434 * _t429;
			_t436 = 1.000000-_t435;
			_t437 = -_t399;
			_t438 = _t399 * _t399;
			_t439 = _t438 * _t429;
			_t440 = 1.000000-_t439;
			_t421 = _t436;
			_t422 = _t432;
			_t423 = _t433;
			_t424 = _t432;
			_t425 = _t440;
			_t426 = _t437;
		}
		_t441 = _t419 * _t424;
		_t442 = _t420 * _t421;
		_t443 = _t442+_t441;
		_t444 = _t419 * _t425;
		_t445 = _t420 * _t422;
		_t446 = _t445+_t444;
		_t447 = _t419 * _t426;
		_t448 = _t420 * _t423;
		_t449 = _t448+_t447;
		_t450 = _t443-_t398;
		_t451 = _t450 * scene[37];
		_t452 = scene[34]+_t451;
		_t453 = _t446-_t399;
		_t454 = _t453 * scene[37];
		_t455 = scene[35]+_t454;
		_t456 = _t449-_t400;
		_t457 = _t456 * scene[37];
		_t458 = scene[36]+_t457;
		_t459 = scene[37] * scene[37];
		_t460 = (float)1.0 / (_t459);
		_t461 = 0.318310 * _t460;
		_t462 = _t397 * _t461;
		_t4 = _t452;
		_t5 = _t455;
		_t6 = _t458;
		_t7 = _t398;
		_t8 = _t399;
		_t9 = _t400;
		_t10 = _t375;
		_t11 = _t376;
		_t12 = _t377;
		_t13 = 1.000000;
		_t14 = _t462;
		_t15 = _t397;
	}
	else {
		_t4 = 0.000000;
		_t5 = 0.000000;
		_t6 = 0.000000;
		_t7 = 0.000000;
		_t8 = 0.000000;
		_t9 = 0.000000;
		_t10 = 0.000000;
		_t11 = 0.000000;
		_t12 = 0.000000;
		_t13 = 0.000000;
		_t14 = 0.000000;
		_t15 = 0.000000;
	}
	_t463 = _t14 * vertParams[3];
	_t464 = _t15 * vertParams[3];
	_t465 = (float)1.0 / (vertParams[3]);
	_t466 = _t10 * _t465;
	_t467 = _t11 * _t465;
	_t468 = _t12 * _t465;
	_t469 = _t464 / _t463;
	_t470 = _t469 * _t469;
	cif (vertParams[4] == 0.000000) {
		_t473 = _t13 / _t463;
		_t474 = _t473 * _t473;
		_t471 = _t474;
	}
	else {
		_t471 = 0.000000;
	}
	cif (vertParams[60] == 0.000000) {
		_t487 = vertParams[66] * vertParams[68];
		_t488 = vertParams[65] * vertParams[69];
		_t489 = _t488-_t487;
		_t490 = vertParams[65] * vertParams[70];
		_t491 = vertParams[67] * vertParams[68];
		_t492 = _t491-_t490;
		_t493 = vertParams[67] * vertParams[69];
		_t494 = vertParams[66] * vertParams[70];
		_t495 = _t494-_t493;
		_t496 = sqrt(_t495*_t495+_t492*_t492+_t489*_t489);
		_t497 = (float)1.0 / (_t496);
		_t498 = _t495 * _t497;
		_t499 = _t492 * _t497;
		_t500 = _t489 * _t497;
		_t501 = _t8 * vertParams[68];
		_t502 = _t7 * vertParams[69];
		_t503 = _t502-_t501;
		_t504 = _t7 * vertParams[70];
		_t505 = _t9 * vertParams[68];
		_t506 = _t505-_t504;
		_t507 = _t9 * vertParams[69];
		_t508 = _t8 * vertParams[70];
		_t509 = _t508-_t507;
		_t510 = _t509 * vertParams[65] + _t506 * vertParams[66] + _t503 * vertParams[67];
		_t511 = (float)1.0 / (_t510);
		_t512 = _t4-vertParams[62];
		_t513 = _t5-vertParams[63];
		_t514 = _t6-vertParams[64];
		_t515 = _t512 * _t509 + _t513 * _t506 + _t514 * _t503;
		_t516 = _t515 * _t511;
		_t517 = _t513 * vertParams[65];
		_t518 = _t512 * vertParams[66];
		_t519 = _t518-_t517;
		_t520 = _t512 * vertParams[67];
		_t521 = _t514 * vertParams[65];
		_t522 = _t521-_t520;
		_t523 = _t514 * vertParams[66];
		_t524 = _t513 * vertParams[67];
		_t525 = _t524-_t523;
		_t526 = _t7 * _t525 + _t8 * _t522 + _t9 * _t519;
		_t527 = _t526 * _t511;
		_t528 = vertParams[68] * _t525 + vertParams[69] * _t522 + vertParams[70] * _t519;
		_t529 = _t528 * _t511;
		_t530 = 1.000000-_t516;
		_t531 = _t530-_t527;
		_t532 = _t529 * _t7;
		_t533 = _t4+_t532;
		_t534 = _t529 * _t8;
		_t535 = _t5+_t534;
		_t536 = _t529 * _t9;
		_t537 = _t6+_t536;
		_t538 = _t527 * vertParams[77];
		_t539 = _t516 * vertParams[74];
		_t540 = _t531 * vertParams[71];
		_t541 = _t540+_t539;
		_t542 = _t541+_t538;
		_t543 = _t527 * vertParams[78];
		_t544 = _t516 * vertParams[75];
		_t545 = _t531 * vertParams[72];
		_t546 = _t545+_t544;
		_t547 = _t546+_t543;
		_t548 = _t527 * vertParams[79];
		_t549 = _t516 * vertParams[76];
		_t550 = _t531 * vertParams[73];
		_t551 = _t550+_t549;
		_t552 = _t551+_t548;
		_t553 = sqrt(_t542*_t542+_t547*_t547+_t552*_t552);
		_t554 = (float)1.0 / (_t553);
		_t555 = _t542 * _t554;
		_t556 = _t547 * _t554;
		_t557 = _t552 * _t554;
		cif (vertParams[98] == 0.000000) {
			_t558 = _t516;
			_t559 = _t527;
		}
		else {
			_t561 = _t527 * vertParams[103];
			_t562 = _t516 * vertParams[101];
			_t563 = 1.000000-_t516;
			_t564 = _t563-_t527;
			_t565 = _t564 * vertParams[99];
			_t566 = _t565+_t562;
			_t567 = _t566+_t561;
			_t568 = _t527 * vertParams[104];
			_t569 = _t516 * vertParams[102];
			_t570 = 1.000000-_t516;
			_t571 = _t570-_t527;
			_t572 = _t571 * vertParams[100];
			_t573 = _t572+_t569;
			_t574 = _t573+_t568;
			_t558 = _t567;
			_t559 = _t574;
		}
		_t475 = _t533;
		_t476 = _t535;
		_t477 = _t537;
		_t478 = _t498;
		_t479 = _t499;
		_t480 = _t500;
		_t481 = _t555;
		_t482 = _t556;
		_t483 = _t557;
		_t484 = _t558;
		_t485 = _t559;
	}
	else {
		_t475 = 0.000000;
		_t476 = 0.000000;
		_t477 = 0.000000;
		_t478 = 0.000000;
		_t479 = 0.000000;
		_t480 = 0.000000;
		_t481 = 0.000000;
		_t482 = 0.000000;
		_t483 = 0.000000;
		_t484 = 0.000000;
		_t485 = 0.000000;
	}
	_t575 = -_t7;
	_t576 = -_t8;
	_t577 = -_t9;
	cif (vertParams[4] == 2.000000) {
		_t578 = 1.000000;
	}
	else {
		_t580 = _t6-_t477;
		_t581 = _t580 * _t580;
		_t582 = _t5-_t476;
		_t583 = _t582 * _t582;
		_t584 = _t4-_t475;
		_t585 = _t584 * _t584;
		_t586 = _t585+_t583;
		_t587 = _t586+_t581;
		_t588 = _t587 * _t587;
		_t578 = _t588;
	}
	_t589 = _t7 * _t481 + _t8 * _t482 + _t9 * _t483;
	cif (_t589 >= 0.000000) {
		_t590 = _t589;
	}
	else {
		_t592 = -_t589;
		_t590 = _t592;
	}
	_t593 = _t590 * _t590;
	_t594 = (float)1.0 / (_t593);
	_t595 = _t594 * _t578;
	_t596 = _t470 * _t595;
	_t597 = _t471 * _t594;
	_t598 = scene[8] * 0.500000;
	_t599 = scene[4] * 0.500000;
	_t600 = _t599+_t598;
	_t601 = _t600+scene[16];
	_t602 = scene[7] * 0.500000;
	_t603 = scene[3] * 0.500000;
	_t604 = _t603+_t602;
	_t605 = _t604+scene[15];
	_t606 = scene[6] * 0.500000;
	_t607 = scene[2] * 0.500000;
	_t608 = _t607+_t606;
	_t609 = _t608+scene[14];
	_t610 = scene[5] * 0.500000;
	_t611 = scene[1] * 0.500000;
	_t612 = _t611+_t610;
	_t613 = _t612+scene[13];
	_t614 = (float)1.0 / (_t601);
	_t615 = _t605 * _t614;
	_t616 = _t609 * _t614;
	_t617 = _t613 * _t614;
	_t618 = sqrt(_t617*_t617+_t616*_t616+_t615*_t615);
	_t619 = (float)1.0 / (_t618);
	_t620 = _t617 * _t619;
	_t621 = _t616 * _t619;
	_t622 = _t615 * _t619;
	_t623 = scene[24] * scene[24];
	_t624 = scene[25] * scene[25];
	_t625 = scene[26] * scene[26];
	_t626 = scene[24] * scene[25];
	_t627 = scene[24] * scene[26];
	_t628 = scene[25] * scene[26];
	_t629 = scene[24] * scene[27];
	_t630 = scene[25] * scene[27];
	_t631 = scene[26] * scene[27];
	_t632 = _t624+_t625;
	_t633 = 2.000000 * _t632;
	_t634 = 1.000000-_t633;
	_t635 = _t626+_t631;
	_t636 = 2.000000 * _t635;
	_t637 = _t627-_t630;
	_t638 = 2.000000 * _t637;
	_t639 = _t626-_t631;
	_t640 = 2.000000 * _t639;
	_t641 = _t623+_t625;
	_t642 = 2.000000 * _t641;
	_t643 = 1.000000-_t642;
	_t644 = _t628+_t629;
	_t645 = 2.000000 * _t644;
	_t646 = _t627+_t630;
	_t647 = 2.000000 * _t646;
	_t648 = _t628-_t629;
	_t649 = 2.000000 * _t648;
	_t650 = _t623+_t624;
	_t651 = 2.000000 * _t650;
	_t652 = 1.000000-_t651;
	_t653 = _t652 * _t622;
	_t654 = _t645 * _t621;
	_t655 = _t638 * _t620;
	_t656 = _t655+_t654;
	_t657 = _t656+_t653;
	_t658 = _t649 * _t622;
	_t659 = _t643 * _t621;
	_t660 = _t636 * _t620;
	_t661 = _t660+_t659;
	_t662 = _t661+_t658;
	_t663 = _t647 * _t622;
	_t664 = _t640 * _t621;
	_t665 = _t634 * _t620;
	_t666 = _t665+_t664;
	_t667 = _t666+_t663;
	_t668 = scene[18]-_t475;
	_t669 = scene[19]-_t476;
	_t670 = scene[20]-_t477;
	_t671 = _t670 * _t670;
	_t672 = _t669 * _t669;
	_t673 = _t668 * _t668;
	_t674 = _t673+_t672;
	_t675 = _t674+_t671;
	_t676 = sqrt(_t675);
	_t677 = (float)1.0 / (_t676);
	_t678 = _t668 * _t677;
	_t679 = _t669 * _t677;
	_t680 = _t670 * _t677;
	cif (vertParams[108] == 1.000000) {
		_t690 = _t481 * _t575 + _t482 * _t576 + _t483 * _t577;
		cif (_t690 > 0.000000) {
			_t691 = _t481;
			_t692 = _t482;
			_t693 = _t483;
			_t694 = _t690;
		}
		else {
			_t696 = -_t481;
			_t697 = -_t482;
			_t698 = -_t483;
			_t699 = -_t690;
			_t691 = _t696;
			_t692 = _t697;
			_t693 = _t698;
			_t694 = _t699;
		}
		_t700 = _t691 * _t678 + _t692 * _t679 + _t693 * _t680;
		cif (vertParams[116] > 0.000000) {
			_t706 = _t575 * _t691 + _t576 * _t692 + _t577 * _t693;
			_t707 = 2.000000 * _t706;
			_t708 = _t707 * _t691;
			_t709 = _t708-_t575;
			_t710 = _t707 * _t692;
			_t711 = _t710-_t576;
			_t712 = _t707 * _t693;
			_t713 = _t712-_t577;
			_t714 = _t709 * _t678 + _t711 * _t679 + _t713 * _t680;
			_t715 = pow(_t714,vertParams[115]);
			_t716 = _t715 * 0.159155;
			cif (_t716 > 0.000000) {
				_t722 = vertParams[115]+1.000000;
				_t723 = vertParams[115]+2.000000;
				_t724 = _t723 * _t716;
				_t725 = vertParams[112] * _t724;
				_t726 = vertParams[113] * _t724;
				_t727 = vertParams[114] * _t724;
				_t728 = vertParams[116] * _t722;
				_t729 = _t728 * _t716;
				_t717 = _t725;
				_t718 = _t726;
				_t719 = _t727;
				_t720 = _t729;
			}
			else {
				_t717 = 0.000000;
				_t718 = 0.000000;
				_t719 = 0.000000;
				_t720 = 0.000000;
			}
			_t701 = _t717;
			_t702 = _t718;
			_t703 = _t719;
			_t704 = _t720;
		}
		else {
			_t701 = 0.000000;
			_t702 = 0.000000;
			_t703 = 0.000000;
			_t704 = 0.000000;
		}
		cif (vertParams[116] < 1.000000) {
			_t736 = vertParams[109] * 0.318310;
			_t737 = vertParams[110] * 0.318310;
			_t738 = vertParams[111] * 0.318310;
			_t739 = 1.000000-vertParams[116];
			_t740 = _t739 * 0.318310;
			_t741 = _t740 * _t700;
			_t742 = _t740 * _t694;
			_t730 = _t736;
			_t731 = _t737;
			_t732 = _t738;
			_t733 = _t741;
			_t734 = _t742;
		}
		else {
			_t730 = 0.000000;
			_t731 = 0.000000;
			_t732 = 0.000000;
			_t733 = 0.000000;
			_t734 = 0.000000;
		}
		_t743 = _t701+_t730;
		_t744 = _t702+_t731;
		_t745 = _t703+_t732;
		_t746 = _t704+_t733;
		_t747 = _t704+_t734;
		_t748 = _t743 * _t700;
		_t749 = _t744 * _t700;
		_t750 = _t745 * _t700;
		_t681 = _t748;
		_t682 = _t749;
		_t683 = _t750;
		_t684 = _t700;
		_t685 = _t746;
		_t686 = _t747;
	}
	else cif (vertParams[108] == 2.000000) {
		_t751 = _t575 * _t481 + _t576 * _t482 + _t577 * _t483;
		_t752 = _t678 * _t481 + _t679 * _t482 + _t680 * _t483;
		_t753 = _t751 * _t752;
		cif (_t751 > 0.000000) {
			_t754 = vertParams[115];
		}
		else {
			_t754 = vertParams[116];
		}
		cif (_t752 > 0.000000) {
			_t756 = vertParams[115];
		}
		else {
			_t756 = vertParams[116];
		}
		cif (_t753 > 0.000000) {
			_t762 = _t575+_t678;
			_t763 = _t576+_t679;
			_t764 = _t577+_t680;
			_t765 = sqrt(_t762*_t762+_t763*_t763+_t764*_t764);
			_t766 = (float)1.0 / (_t765);
			_t767 = _t762 * _t766;
			_t768 = _t763 * _t766;
			_t769 = _t764 * _t766;
			_t758 = _t767;
			_t759 = _t768;
			_t760 = _t769;
		}
		else {
			_t770 = _t678 * _t754;
			_t771 = _t575+_t770;
			_t772 = _t679 * _t754;
			_t773 = _t576+_t772;
			_t774 = _t680 * _t754;
			_t775 = _t577+_t774;
			_t776 = sqrt(_t771*_t771+_t773*_t773+_t775*_t775);
			_t777 = (float)1.0 / (_t776);
			_t778 = _t771 * _t777;
			_t779 = _t773 * _t777;
			_t780 = _t775 * _t777;
			_t758 = _t778;
			_t759 = _t779;
			_t760 = _t780;
		}
		_t781 = _t758 * _t481 + _t759 * _t482 + _t760 * _t483;
		cif (_t781 < 0.000000) {
			_t786 = -_t758;
			_t787 = -_t759;
			_t788 = -_t760;
			_t782 = _t786;
			_t783 = _t787;
			_t784 = _t788;
		}
		else {
			_t782 = _t758;
			_t783 = _t759;
			_t784 = _t760;
		}
		_t789 = _t575 * _t782 + _t576 * _t783 + _t577 * _t784;
		_t790 = _t678 * _t782 + _t679 * _t783 + _t680 * _t784;
		cif (_t483 < -0.999999) {
			_t791 = 0.000000;
			_t792 = -1.000000;
			_t793 = 0.000000;
			_t794 = -1.000000;
			_t795 = 0.000000;
			_t796 = 0.000000;
		}
		else {
			_t798 = 1.000000+_t483;
			_t799 = (float)1.0 / (_t798);
			_t800 = -_t481;
			_t801 = _t800 * _t482;
			_t802 = _t801 * _t799;
			_t803 = -_t481;
			_t804 = _t481 * _t481;
			_t805 = _t804 * _t799;
			_t806 = 1.000000-_t805;
			_t807 = -_t482;
			_t808 = _t482 * _t482;
			_t809 = _t808 * _t799;
			_t810 = 1.000000-_t809;
			_t791 = _t806;
			_t792 = _t802;
			_t793 = _t803;
			_t794 = _t802;
			_t795 = _t810;
			_t796 = _t807;
		}
		_t811 = _t481 * _t782 + _t482 * _t783 + _t483 * _t784;
		_t812 = _t794 * _t782 + _t795 * _t783 + _t796 * _t784;
		_t813 = _t791 * _t782 + _t792 * _t783 + _t793 * _t784;
		_t814 = _t811 * _t811;
		_t815 = vertParams[117] * vertParams[117];
		_t816 = _t812 * _t812;
		_t817 = _t816 / _t815;
		_t818 = vertParams[117] * vertParams[117];
		_t819 = _t813 * _t813;
		_t820 = _t819 / _t818;
		_t821 = _t820+_t817;
		_t822 = _t821 / _t814;
		_t823 = _t814 * _t814;
		_t824 = 3.141593 * vertParams[117];
		_t825 = _t824 * vertParams[117];
		_t826 = _t825 * _t823;
		_t827 = -_t822;
		_t828 = exp(_t827);
		_t829 = _t828 / _t826;
		cif (_t789 > 0.000000) {
			_t830 = vertParams[116];
		}
		else {
			_t830 = vertParams[115];
		}
		_t832 = _t830 * _t830;
		_t833 = _t789 * _t789;
		_t834 = 1.000000-_t833;
		_t835 = _t834 * _t832;
		_t836 = 1.000000-_t835;
		cif (_t836 <= 0.000000) {
			_t837 = 1.000000;
		}
		else {
			cif (_t789 >= 0.000000) {
				_t839 = _t789;
			}
			else {
				_t841 = -_t789;
				_t839 = _t841;
			}
			_t842 = sqrt(_t836);
			_t843 = vertParams[115] * _t842;
			_t844 = vertParams[115] * _t839;
			_t845 = _t839+_t843;
			_t846 = _t839-_t843;
			_t847 = _t846 / _t845;
			_t848 = _t844+_t842;
			_t849 = _t844-_t842;
			_t850 = _t849 / _t848;
			_t851 = _t850 * _t850;
			_t852 = _t847 * _t847;
			_t853 = _t852+_t851;
			_t854 = 0.500000 * _t853;
			_t837 = _t854;
		}
		cif (_t751 >= 0.000000) {
			_t855 = _t751;
		}
		else {
			_t857 = -_t751;
			_t855 = _t857;
		}
		cif (_t752 >= 0.000000) {
			_t858 = _t752;
		}
		else {
			_t860 = -_t752;
			_t858 = _t860;
		}
		_t861 = _t858 * _t858;
		_t862 = 1.000001-_t861;
		cif (_t862 >= 0.000000) {
			_t863 = _t862;
		}
		else {
			_t865 = -_t862;
			_t863 = _t865;
		}
		_t866 = sqrt(_t863);
		_t867 = _t866 / _t858;
		cif (_t867 <= 0.000000) {
			_t868 = 1.000000;
		}
		else {
			_t870 = vertParams[117] * _t867;
			_t871 = (float)1.0 / (_t870);
			cif (_t871 >= 1.600000) {
				_t872 = 1.000000;
			}
			else {
				_t874 = _t871 * _t871;
				_t875 = 2.577000 * _t874;
				_t876 = 2.276000 * _t871;
				_t877 = 1.000000+_t876;
				_t878 = _t877+_t875;
				_t879 = 2.181000 * _t874;
				_t880 = 3.535000 * _t871;
				_t881 = _t880+_t879;
				_t882 = _t881 / _t878;
				_t872 = _t882;
			}
			_t868 = _t872;
		}
		_t883 = _t855 * _t855;
		_t884 = 1.000001-_t883;
		cif (_t884 >= 0.000000) {
			_t885 = _t884;
		}
		else {
			_t887 = -_t884;
			_t885 = _t887;
		}
		_t888 = sqrt(_t885);
		_t889 = _t888 / _t855;
		cif (_t889 <= 0.000000) {
			_t890 = 1.000000;
		}
		else {
			_t892 = vertParams[117] * _t889;
			_t893 = (float)1.0 / (_t892);
			cif (_t893 >= 1.600000) {
				_t894 = 1.000000;
			}
			else {
				_t896 = _t893 * _t893;
				_t897 = 2.577000 * _t896;
				_t898 = 2.276000 * _t893;
				_t899 = 1.000000+_t898;
				_t900 = _t899+_t897;
				_t901 = 2.181000 * _t896;
				_t902 = 3.535000 * _t893;
				_t903 = _t902+_t901;
				_t904 = _t903 / _t900;
				_t894 = _t904;
			}
			_t890 = _t894;
		}
		_t905 = _t890 * _t868;
		_t906 = sqrt(_t855);
		_t907 = 0.200000 * _t906;
		_t908 = 1.200000-_t907;
		_t909 = vertParams[117] * _t908;
		_t910 = _t811 * _t811;
		_t911 = _t909 * _t909;
		_t912 = _t812 * _t812;
		_t913 = _t912 / _t911;
		_t914 = _t909 * _t909;
		_t915 = _t813 * _t813;
		_t916 = _t915 / _t914;
		_t917 = _t916+_t913;
		_t918 = _t917 / _t910;
		_t919 = _t910 * _t910;
		_t920 = 3.141593 * _t909;
		_t921 = _t920 * _t909;
		_t922 = _t921 * _t919;
		_t923 = -_t918;
		_t924 = exp(_t923);
		_t925 = _t924 / _t922;
		_t926 = _t811 * _t925;
		_t927 = sqrt(_t858);
		_t928 = 0.200000 * _t927;
		_t929 = 1.200000-_t928;
		_t930 = vertParams[117] * _t929;
		_t931 = _t811 * _t811;
		_t932 = _t930 * _t930;
		_t933 = _t812 * _t812;
		_t934 = _t933 / _t932;
		_t935 = _t930 * _t930;
		_t936 = _t813 * _t813;
		_t937 = _t936 / _t935;
		_t938 = _t937+_t934;
		_t939 = _t938 / _t931;
		_t940 = _t931 * _t931;
		_t941 = 3.141593 * _t930;
		_t942 = _t941 * _t930;
		_t943 = _t942 * _t940;
		_t944 = -_t939;
		_t945 = exp(_t944);
		_t946 = _t945 / _t943;
		_t947 = _t811 * _t946;
		cif (_t753 > 0.000000) {
			_t953 = 4.000000 * _t751;
			_t954 = _t837 * _t829;
			_t955 = _t954 * _t905;
			_t956 = _t955 / _t953;
			cif (_t956 >= 0.000000) {
				_t957 = _t956;
			}
			else {
				_t959 = -_t956;
				_t957 = _t959;
			}
			_t960 = vertParams[109] * _t957;
			_t961 = vertParams[110] * _t957;
			_t962 = vertParams[111] * _t957;
			_t963 = 4.000000 * _t790;
			_t964 = _t926 * _t837;
			_t965 = _t964 / _t963;
			cif (_t965 >= 0.000000) {
				_t966 = _t965;
			}
			else {
				_t968 = -_t965;
				_t966 = _t968;
			}
			_t969 = 4.000000 * _t789;
			_t970 = _t947 * _t837;
			_t971 = _t970 / _t969;
			cif (_t971 >= 0.000000) {
				_t972 = _t971;
			}
			else {
				_t974 = -_t971;
				_t972 = _t974;
			}
			_t948 = _t960;
			_t949 = _t961;
			_t950 = _t962;
			_t951 = _t966;
			_t952 = _t972;
		}
		else {
			_t975 = _t754 * _t790;
			_t976 = _t789+_t975;
			_t977 = _t756 * _t789;
			_t978 = _t790+_t977;
			_t979 = _t976 * _t976;
			_t980 = _t751 * _t979;
			_t981 = _t754 * _t754;
			_t982 = 1.000000-_t837;
			_t983 = _t982 * _t829;
			_t984 = _t983 * _t905;
			_t985 = _t984 * _t981;
			_t986 = _t985 * _t789;
			_t987 = _t986 * _t790;
			_t988 = _t987 / _t980;
			cif (_t988 >= 0.000000) {
				_t989 = _t988;
			}
			else {
				_t991 = -_t988;
				_t989 = _t991;
			}
			_t992 = vertParams[112] * _t989;
			_t993 = vertParams[113] * _t989;
			_t994 = vertParams[114] * _t989;
			_t995 = _t976 * _t976;
			_t996 = _t754 * _t754;
			_t997 = _t996 * _t790;
			_t998 = 1.000000-_t837;
			_t999 = _t926 * _t998;
			_t1000 = _t999 * _t997;
			_t1001 = _t1000 / _t995;
			cif (_t1001 >= 0.000000) {
				_t1002 = _t1001;
			}
			else {
				_t1004 = -_t1001;
				_t1002 = _t1004;
			}
			_t1005 = _t978 * _t978;
			_t1006 = _t756 * _t756;
			_t1007 = _t1006 * _t789;
			_t1008 = 1.000000-_t837;
			_t1009 = _t947 * _t1008;
			_t1010 = _t1009 * _t1007;
			_t1011 = _t1010 / _t1005;
			cif (_t1011 >= 0.000000) {
				_t1012 = _t1011;
			}
			else {
				_t1014 = -_t1011;
				_t1012 = _t1014;
			}
			_t948 = _t992;
			_t949 = _t993;
			_t950 = _t994;
			_t951 = _t1002;
			_t952 = _t1012;
		}
		_t681 = _t948;
		_t682 = _t949;
		_t683 = _t950;
		_t684 = _t752;
		_t685 = _t951;
		_t686 = _t952;
	}
	else cif (vertParams[108] == 0.000000) {
		_t1015 = _t481 * _t575 + _t482 * _t576 + _t483 * _t577;
		cif (_t1015 > 0.000000) {
			_t1016 = _t481;
			_t1017 = _t482;
			_t1018 = _t483;
			_t1019 = _t1015;
		}
		else {
			_t1021 = -_t481;
			_t1022 = -_t482;
			_t1023 = -_t483;
			_t1024 = -_t1015;
			_t1016 = _t1021;
			_t1017 = _t1022;
			_t1018 = _t1023;
			_t1019 = _t1024;
		}
		_t1025 = _t1016 * _t678 + _t1017 * _t679 + _t1018 * _t680;
		_t1026 = _t1025 * 0.318310;
		_t1027 = _t1019 * 0.318310;
		_t1028 = _t1026 * vertParams[109];
		_t1029 = _t1026 * vertParams[110];
		_t1030 = _t1026 * vertParams[111];
		_t681 = _t1028;
		_t682 = _t1029;
		_t683 = _t1030;
		_t684 = _t1025;
		_t685 = _t1026;
		_t686 = _t1027;
	}
	else {
		_t681 = 0.000000;
		_t682 = 0.000000;
		_t683 = 0.000000;
		_t684 = 0.000000;
		_t685 = 0.000000;
		_t686 = 0.000000;
	}
	_t1031 = _t481 * _t575 + _t482 * _t576 + _t483 * _t577;
	_t1032 = _t481 * _t678 + _t482 * _t679 + _t483 * _t680;
	_t1033 = _t478 * _t575 + _t479 * _t576 + _t480 * _t577;
	_t1034 = _t478 * _t678 + _t479 * _t679 + _t480 * _t680;
	_t1035 = _t1033 * _t1032;
	_t1036 = _t1034 * _t1031;
	_t1037 = _t1036 / _t1035;
	cif (_t1037 >= 0.000000) {
		_t1038 = _t1037;
	}
	else {
		_t1040 = -_t1037;
		_t1038 = _t1040;
	}
	_t1041 = _t681 * _t1038;
	_t1042 = _t682 * _t1038;
	_t1043 = _t683 * _t1038;
	cif (vertParams[108] == 1.000000) {
		_t1053 = _t481 * _t678 + _t482 * _t679 + _t483 * _t680;
		cif (_t1053 > 0.000000) {
			_t1054 = _t481;
			_t1055 = _t482;
			_t1056 = _t483;
			_t1057 = _t1053;
		}
		else {
			_t1059 = -_t481;
			_t1060 = -_t482;
			_t1061 = -_t483;
			_t1062 = -_t1053;
			_t1054 = _t1059;
			_t1055 = _t1060;
			_t1056 = _t1061;
			_t1057 = _t1062;
		}
		_t1063 = _t1054 * _t575 + _t1055 * _t576 + _t1056 * _t577;
		cif (vertParams[116] > 0.000000) {
			_t1069 = _t678 * _t1054 + _t679 * _t1055 + _t680 * _t1056;
			_t1070 = 2.000000 * _t1069;
			_t1071 = _t1070 * _t1054;
			_t1072 = _t1071-_t678;
			_t1073 = _t1070 * _t1055;
			_t1074 = _t1073-_t679;
			_t1075 = _t1070 * _t1056;
			_t1076 = _t1075-_t680;
			_t1077 = _t1072 * _t575 + _t1074 * _t576 + _t1076 * _t577;
			_t1078 = pow(_t1077,vertParams[115]);
			_t1079 = _t1078 * 0.159155;
			cif (_t1079 > 0.000000) {
				_t1085 = vertParams[115]+1.000000;
				_t1086 = vertParams[115]+2.000000;
				_t1087 = _t1086 * _t1079;
				_t1088 = vertParams[112] * _t1087;
				_t1089 = vertParams[113] * _t1087;
				_t1090 = vertParams[114] * _t1087;
				_t1091 = vertParams[116] * _t1085;
				_t1092 = _t1091 * _t1079;
				_t1080 = _t1088;
				_t1081 = _t1089;
				_t1082 = _t1090;
				_t1083 = _t1092;
			}
			else {
				_t1080 = 0.000000;
				_t1081 = 0.000000;
				_t1082 = 0.000000;
				_t1083 = 0.000000;
			}
			_t1064 = _t1080;
			_t1065 = _t1081;
			_t1066 = _t1082;
			_t1067 = _t1083;
		}
		else {
			_t1064 = 0.000000;
			_t1065 = 0.000000;
			_t1066 = 0.000000;
			_t1067 = 0.000000;
		}
		cif (vertParams[116] < 1.000000) {
			_t1099 = vertParams[109] * 0.318310;
			_t1100 = vertParams[110] * 0.318310;
			_t1101 = vertParams[111] * 0.318310;
			_t1102 = 1.000000-vertParams[116];
			_t1103 = _t1102 * 0.318310;
			_t1104 = _t1103 * _t1063;
			_t1105 = _t1103 * _t1057;
			_t1093 = _t1099;
			_t1094 = _t1100;
			_t1095 = _t1101;
			_t1096 = _t1104;
			_t1097 = _t1105;
		}
		else {
			_t1093 = 0.000000;
			_t1094 = 0.000000;
			_t1095 = 0.000000;
			_t1096 = 0.000000;
			_t1097 = 0.000000;
		}
		_t1106 = _t1064+_t1093;
		_t1107 = _t1065+_t1094;
		_t1108 = _t1066+_t1095;
		_t1109 = _t1067+_t1096;
		_t1110 = _t1067+_t1097;
		_t1111 = _t1106 * _t1063;
		_t1112 = _t1107 * _t1063;
		_t1113 = _t1108 * _t1063;
		_t1044 = _t1111;
		_t1045 = _t1112;
		_t1046 = _t1113;
		_t1047 = _t1063;
		_t1048 = _t1109;
		_t1049 = _t1110;
	}
	else cif (vertParams[108] == 2.000000) {
		_t1114 = _t678 * _t481 + _t679 * _t482 + _t680 * _t483;
		_t1115 = _t575 * _t481 + _t576 * _t482 + _t577 * _t483;
		_t1116 = _t1114 * _t1115;
		cif (_t1114 > 0.000000) {
			_t1117 = vertParams[115];
		}
		else {
			_t1117 = vertParams[116];
		}
		cif (_t1115 > 0.000000) {
			_t1119 = vertParams[115];
		}
		else {
			_t1119 = vertParams[116];
		}
		cif (_t1116 > 0.000000) {
			_t1125 = _t678+_t575;
			_t1126 = _t679+_t576;
			_t1127 = _t680+_t577;
			_t1128 = sqrt(_t1125*_t1125+_t1126*_t1126+_t1127*_t1127);
			_t1129 = (float)1.0 / (_t1128);
			_t1130 = _t1125 * _t1129;
			_t1131 = _t1126 * _t1129;
			_t1132 = _t1127 * _t1129;
			_t1121 = _t1130;
			_t1122 = _t1131;
			_t1123 = _t1132;
		}
		else {
			_t1133 = _t575 * _t1117;
			_t1134 = _t678+_t1133;
			_t1135 = _t576 * _t1117;
			_t1136 = _t679+_t1135;
			_t1137 = _t577 * _t1117;
			_t1138 = _t680+_t1137;
			_t1139 = sqrt(_t1134*_t1134+_t1136*_t1136+_t1138*_t1138);
			_t1140 = (float)1.0 / (_t1139);
			_t1141 = _t1134 * _t1140;
			_t1142 = _t1136 * _t1140;
			_t1143 = _t1138 * _t1140;
			_t1121 = _t1141;
			_t1122 = _t1142;
			_t1123 = _t1143;
		}
		_t1144 = _t1121 * _t481 + _t1122 * _t482 + _t1123 * _t483;
		cif (_t1144 < 0.000000) {
			_t1149 = -_t1121;
			_t1150 = -_t1122;
			_t1151 = -_t1123;
			_t1145 = _t1149;
			_t1146 = _t1150;
			_t1147 = _t1151;
		}
		else {
			_t1145 = _t1121;
			_t1146 = _t1122;
			_t1147 = _t1123;
		}
		_t1152 = _t678 * _t1145 + _t679 * _t1146 + _t680 * _t1147;
		_t1153 = _t575 * _t1145 + _t576 * _t1146 + _t577 * _t1147;
		cif (_t483 < -0.999999) {
			_t1154 = 0.000000;
			_t1155 = -1.000000;
			_t1156 = 0.000000;
			_t1157 = -1.000000;
			_t1158 = 0.000000;
			_t1159 = 0.000000;
		}
		else {
			_t1161 = 1.000000+_t483;
			_t1162 = (float)1.0 / (_t1161);
			_t1163 = -_t481;
			_t1164 = _t1163 * _t482;
			_t1165 = _t1164 * _t1162;
			_t1166 = -_t481;
			_t1167 = _t481 * _t481;
			_t1168 = _t1167 * _t1162;
			_t1169 = 1.000000-_t1168;
			_t1170 = -_t482;
			_t1171 = _t482 * _t482;
			_t1172 = _t1171 * _t1162;
			_t1173 = 1.000000-_t1172;
			_t1154 = _t1169;
			_t1155 = _t1165;
			_t1156 = _t1166;
			_t1157 = _t1165;
			_t1158 = _t1173;
			_t1159 = _t1170;
		}
		_t1174 = _t481 * _t1145 + _t482 * _t1146 + _t483 * _t1147;
		_t1175 = _t1157 * _t1145 + _t1158 * _t1146 + _t1159 * _t1147;
		_t1176 = _t1154 * _t1145 + _t1155 * _t1146 + _t1156 * _t1147;
		_t1177 = _t1174 * _t1174;
		_t1178 = vertParams[117] * vertParams[117];
		_t1179 = _t1175 * _t1175;
		_t1180 = _t1179 / _t1178;
		_t1181 = vertParams[117] * vertParams[117];
		_t1182 = _t1176 * _t1176;
		_t1183 = _t1182 / _t1181;
		_t1184 = _t1183+_t1180;
		_t1185 = _t1184 / _t1177;
		_t1186 = _t1177 * _t1177;
		_t1187 = 3.141593 * vertParams[117];
		_t1188 = _t1187 * vertParams[117];
		_t1189 = _t1188 * _t1186;
		_t1190 = -_t1185;
		_t1191 = exp(_t1190);
		_t1192 = _t1191 / _t1189;
		cif (_t1152 > 0.000000) {
			_t1193 = vertParams[116];
		}
		else {
			_t1193 = vertParams[115];
		}
		_t1195 = _t1193 * _t1193;
		_t1196 = _t1152 * _t1152;
		_t1197 = 1.000000-_t1196;
		_t1198 = _t1197 * _t1195;
		_t1199 = 1.000000-_t1198;
		cif (_t1199 <= 0.000000) {
			_t1200 = 1.000000;
		}
		else {
			cif (_t1152 >= 0.000000) {
				_t1202 = _t1152;
			}
			else {
				_t1204 = -_t1152;
				_t1202 = _t1204;
			}
			_t1205 = sqrt(_t1199);
			_t1206 = vertParams[115] * _t1205;
			_t1207 = vertParams[115] * _t1202;
			_t1208 = _t1202+_t1206;
			_t1209 = _t1202-_t1206;
			_t1210 = _t1209 / _t1208;
			_t1211 = _t1207+_t1205;
			_t1212 = _t1207-_t1205;
			_t1213 = _t1212 / _t1211;
			_t1214 = _t1213 * _t1213;
			_t1215 = _t1210 * _t1210;
			_t1216 = _t1215+_t1214;
			_t1217 = 0.500000 * _t1216;
			_t1200 = _t1217;
		}
		cif (_t1114 >= 0.000000) {
			_t1218 = _t1114;
		}
		else {
			_t1220 = -_t1114;
			_t1218 = _t1220;
		}
		cif (_t1115 >= 0.000000) {
			_t1221 = _t1115;
		}
		else {
			_t1223 = -_t1115;
			_t1221 = _t1223;
		}
		_t1224 = _t1221 * _t1221;
		_t1225 = 1.000001-_t1224;
		cif (_t1225 >= 0.000000) {
			_t1226 = _t1225;
		}
		else {
			_t1228 = -_t1225;
			_t1226 = _t1228;
		}
		_t1229 = sqrt(_t1226);
		_t1230 = _t1229 / _t1221;
		cif (_t1230 <= 0.000000) {
			_t1231 = 1.000000;
		}
		else {
			_t1233 = vertParams[117] * _t1230;
			_t1234 = (float)1.0 / (_t1233);
			cif (_t1234 >= 1.600000) {
				_t1235 = 1.000000;
			}
			else {
				_t1237 = _t1234 * _t1234;
				_t1238 = 2.577000 * _t1237;
				_t1239 = 2.276000 * _t1234;
				_t1240 = 1.000000+_t1239;
				_t1241 = _t1240+_t1238;
				_t1242 = 2.181000 * _t1237;
				_t1243 = 3.535000 * _t1234;
				_t1244 = _t1243+_t1242;
				_t1245 = _t1244 / _t1241;
				_t1235 = _t1245;
			}
			_t1231 = _t1235;
		}
		_t1246 = _t1218 * _t1218;
		_t1247 = 1.000001-_t1246;
		cif (_t1247 >= 0.000000) {
			_t1248 = _t1247;
		}
		else {
			_t1250 = -_t1247;
			_t1248 = _t1250;
		}
		_t1251 = sqrt(_t1248);
		_t1252 = _t1251 / _t1218;
		cif (_t1252 <= 0.000000) {
			_t1253 = 1.000000;
		}
		else {
			_t1255 = vertParams[117] * _t1252;
			_t1256 = (float)1.0 / (_t1255);
			cif (_t1256 >= 1.600000) {
				_t1257 = 1.000000;
			}
			else {
				_t1259 = _t1256 * _t1256;
				_t1260 = 2.577000 * _t1259;
				_t1261 = 2.276000 * _t1256;
				_t1262 = 1.000000+_t1261;
				_t1263 = _t1262+_t1260;
				_t1264 = 2.181000 * _t1259;
				_t1265 = 3.535000 * _t1256;
				_t1266 = _t1265+_t1264;
				_t1267 = _t1266 / _t1263;
				_t1257 = _t1267;
			}
			_t1253 = _t1257;
		}
		_t1268 = _t1253 * _t1231;
		_t1269 = sqrt(_t1218);
		_t1270 = 0.200000 * _t1269;
		_t1271 = 1.200000-_t1270;
		_t1272 = vertParams[117] * _t1271;
		_t1273 = _t1174 * _t1174;
		_t1274 = _t1272 * _t1272;
		_t1275 = _t1175 * _t1175;
		_t1276 = _t1275 / _t1274;
		_t1277 = _t1272 * _t1272;
		_t1278 = _t1176 * _t1176;
		_t1279 = _t1278 / _t1277;
		_t1280 = _t1279+_t1276;
		_t1281 = _t1280 / _t1273;
		_t1282 = _t1273 * _t1273;
		_t1283 = 3.141593 * _t1272;
		_t1284 = _t1283 * _t1272;
		_t1285 = _t1284 * _t1282;
		_t1286 = -_t1281;
		_t1287 = exp(_t1286);
		_t1288 = _t1287 / _t1285;
		_t1289 = _t1174 * _t1288;
		_t1290 = sqrt(_t1221);
		_t1291 = 0.200000 * _t1290;
		_t1292 = 1.200000-_t1291;
		_t1293 = vertParams[117] * _t1292;
		_t1294 = _t1174 * _t1174;
		_t1295 = _t1293 * _t1293;
		_t1296 = _t1175 * _t1175;
		_t1297 = _t1296 / _t1295;
		_t1298 = _t1293 * _t1293;
		_t1299 = _t1176 * _t1176;
		_t1300 = _t1299 / _t1298;
		_t1301 = _t1300+_t1297;
		_t1302 = _t1301 / _t1294;
		_t1303 = _t1294 * _t1294;
		_t1304 = 3.141593 * _t1293;
		_t1305 = _t1304 * _t1293;
		_t1306 = _t1305 * _t1303;
		_t1307 = -_t1302;
		_t1308 = exp(_t1307);
		_t1309 = _t1308 / _t1306;
		_t1310 = _t1174 * _t1309;
		cif (_t1116 > 0.000000) {
			_t1316 = 4.000000 * _t1114;
			_t1317 = _t1200 * _t1192;
			_t1318 = _t1317 * _t1268;
			_t1319 = _t1318 / _t1316;
			cif (_t1319 >= 0.000000) {
				_t1320 = _t1319;
			}
			else {
				_t1322 = -_t1319;
				_t1320 = _t1322;
			}
			_t1323 = vertParams[109] * _t1320;
			_t1324 = vertParams[110] * _t1320;
			_t1325 = vertParams[111] * _t1320;
			_t1326 = 4.000000 * _t1153;
			_t1327 = _t1289 * _t1200;
			_t1328 = _t1327 / _t1326;
			cif (_t1328 >= 0.000000) {
				_t1329 = _t1328;
			}
			else {
				_t1331 = -_t1328;
				_t1329 = _t1331;
			}
			_t1332 = 4.000000 * _t1152;
			_t1333 = _t1310 * _t1200;
			_t1334 = _t1333 / _t1332;
			cif (_t1334 >= 0.000000) {
				_t1335 = _t1334;
			}
			else {
				_t1337 = -_t1334;
				_t1335 = _t1337;
			}
			_t1311 = _t1323;
			_t1312 = _t1324;
			_t1313 = _t1325;
			_t1314 = _t1329;
			_t1315 = _t1335;
		}
		else {
			_t1338 = _t1117 * _t1153;
			_t1339 = _t1152+_t1338;
			_t1340 = _t1119 * _t1152;
			_t1341 = _t1153+_t1340;
			_t1342 = (float)1.0 / (_t1117);
			_t1343 = _t1342 * _t1342;
			_t1344 = _t1339 * _t1339;
			_t1345 = _t1114 * _t1344;
			_t1346 = _t1117 * _t1117;
			_t1347 = 1.000000-_t1200;
			_t1348 = _t1347 * _t1192;
			_t1349 = _t1348 * _t1268;
			_t1350 = _t1349 * _t1346;
			_t1351 = _t1350 * _t1152;
			_t1352 = _t1351 * _t1153;
			_t1353 = _t1343 * _t1352;
			_t1354 = _t1353 / _t1345;
			cif (_t1354 >= 0.000000) {
				_t1355 = _t1354;
			}
			else {
				_t1357 = -_t1354;
				_t1355 = _t1357;
			}
			_t1358 = vertParams[112] * _t1355;
			_t1359 = vertParams[113] * _t1355;
			_t1360 = vertParams[114] * _t1355;
			_t1361 = _t1339 * _t1339;
			_t1362 = _t1117 * _t1117;
			_t1363 = _t1362 * _t1153;
			_t1364 = 1.000000-_t1200;
			_t1365 = _t1289 * _t1364;
			_t1366 = _t1365 * _t1363;
			_t1367 = _t1366 / _t1361;
			cif (_t1367 >= 0.000000) {
				_t1368 = _t1367;
			}
			else {
				_t1370 = -_t1367;
				_t1368 = _t1370;
			}
			_t1371 = _t1341 * _t1341;
			_t1372 = _t1119 * _t1119;
			_t1373 = _t1372 * _t1152;
			_t1374 = 1.000000-_t1200;
			_t1375 = _t1310 * _t1374;
			_t1376 = _t1375 * _t1373;
			_t1377 = _t1376 / _t1371;
			cif (_t1377 >= 0.000000) {
				_t1378 = _t1377;
			}
			else {
				_t1380 = -_t1377;
				_t1378 = _t1380;
			}
			_t1311 = _t1358;
			_t1312 = _t1359;
			_t1313 = _t1360;
			_t1314 = _t1368;
			_t1315 = _t1378;
		}
		_t1044 = _t1311;
		_t1045 = _t1312;
		_t1046 = _t1313;
		_t1047 = _t1115;
		_t1048 = _t1314;
		_t1049 = _t1315;
	}
	else cif (vertParams[108] == 0.000000) {
		_t1381 = _t481 * _t678 + _t482 * _t679 + _t483 * _t680;
		cif (_t1381 > 0.000000) {
			_t1382 = _t481;
			_t1383 = _t482;
			_t1384 = _t483;
			_t1385 = _t1381;
		}
		else {
			_t1387 = -_t481;
			_t1388 = -_t482;
			_t1389 = -_t483;
			_t1390 = -_t1381;
			_t1382 = _t1387;
			_t1383 = _t1388;
			_t1384 = _t1389;
			_t1385 = _t1390;
		}
		_t1391 = _t1382 * _t575 + _t1383 * _t576 + _t1384 * _t577;
		_t1392 = _t1391 * 0.318310;
		_t1393 = _t1385 * 0.318310;
		_t1394 = _t1392 * vertParams[109];
		_t1395 = _t1392 * vertParams[110];
		_t1396 = _t1392 * vertParams[111];
		_t1044 = _t1394;
		_t1045 = _t1395;
		_t1046 = _t1396;
		_t1047 = _t1391;
		_t1048 = _t1392;
		_t1049 = _t1393;
	}
	else {
		_t1044 = 0.000000;
		_t1045 = 0.000000;
		_t1046 = 0.000000;
		_t1047 = 0.000000;
		_t1048 = 0.000000;
		_t1049 = 0.000000;
	}
	_t1397 = _t477-_t6;
	_t1398 = _t1397 * _t1397;
	_t1399 = _t476-_t5;
	_t1400 = _t1399 * _t1399;
	_t1401 = _t475-_t4;
	_t1402 = _t1401 * _t1401;
	_t1403 = _t1402+_t1400;
	_t1404 = _t1403+_t1398;
	_t1405 = (float)1.0 / (_t1404);
	_t1406 = _t667 * _t678 + _t662 * _t679 + _t657 * _t680;
	_t1407 = (float)1.0 / (_t1406);
	_t1408 = -_t1407;
	_t1409 = scene[33] * _t1408;
	_t1410 = _t1409 * _t1409;
	_t1411 = _t1410 * _t1408;
	cif (_t684 >= 0.000000) {
		_t1412 = _t684;
	}
	else {
		_t1414 = -_t684;
		_t1412 = _t1414;
	}
	_t1415 = _t1411 * _t1412;
	_t1416 = _t1415 / _t675;
	_t1417 = _t686 * _t686;
	_t1418 = _t597 * _t1417;
	_t1419 = _t596+_t1418;
	_t1420 = _t1416 / scene[32];
	_t1421 = _t1420 * _t1420;
	_t1422 = _t1421 * _t1419;
	_t1423 = _t1422+1.000000;
	_t1424 = (float)1.0 / (_t1423);
	_t1425 = _t684 / _t1416;
	_t1426 = scene[32] * _t1425;
	_t1427 = _t1424 * _t1041;
	_t1428 = _t1427 / _t1426;
	_t1429 = _t1424 * _t1042;
	_t1430 = _t1429 / _t1426;
	_t1431 = _t1424 * _t1043;
	_t1432 = _t1431 / _t1426;
	_t1433 = _t1428 * _t466;
	_t1434 = _t1430 * _t467;
	_t1435 = _t1432 * _t468;
	_t1436 = _t1435 * 0.072169;
	_t1437 = _t1434 * 0.715160;
	_t1438 = _t1433 * 0.212671;
	_t1439 = _t1438+_t1437;
	_t1440 = _t1439+_t1436;
	_t1441 = log(_t1440);
	float _acc191 = 0, _acc192 = 0, _acc190 = 0, _acc193 = 0, _acc189 = 0, _acc194 = 0, _acc195 = 0, _acc205 = 0, _acc203 = 0, _acc202 = 0, _acc231 = 0, _acc200 = 0, _acc239 = 0, _acc242 = 0, _acc232 = 0, _acc243 = 0, _acc244 = 0, _acc245 = 0, _acc247 = 0, _acc246 = 0, _acc248 = 0, _acc257 = 0, _acc196 = 0, _acc214 = 0, _acc197 = 0, _acc198 = 0, _acc199 = 0, _acc223 = 0, _acc226 = 0, _acc224 = 0, _acc228 = 0, _acc227 = 0, _acc207 = 0, _acc208 = 0, _acc209 = 0, _acc271 = 0, _acc273 = 0, _acc269 = 0, _acc264 = 0, _acc277 = 0, _acc263 = 0, _acc279 = 0, _acc280 = 0, _acc282 = 0, _acc268 = 0, _acc265 = 0, _acc267 = 0, _acc266 = 0, _acc286 = 0, _acc289 = 0, _acc290 = 0, _acc285 = 0, _acc283 = 0, _acc281 = 0, _acc278 = 0, _acc276 = 0, _acc274 = 0, _acc272 = 0, _acc159 = 0, _acc165 = 0, _acc167 = 0, _acc170 = 0, _acc284 = 0, _acc156 = 0, _acc172 = 0, _acc155 = 0, _acc613 = 0, _acc526 = 0, _acc25 = 0, _acc618 = 0, _acc617 = 0, _acc619 = 0, _acc615 = 0, _acc635 = 0, _acc77 = 0, _acc637 = 0, _acc625 = 0, _acc1441 = 0, _acc429 = 0, _acc644 = 0, _acc627 = 0, _acc69 = 0, _acc629 = 0, _acc71 = 0, _acc628 = 0, _acc70 = 0, _acc624 = 0, _acc428 = 0, _acc65 = 0, _acc643 = 0, _acc636 = 0, _acc158 = 0, _acc659 = 0, _acc675 = 0, _acc287 = 0, _acc673 = 0, _acc810 = 0, _acc994 = 0, _acc676 = 0, _acc552 = 0, _acc220 = 0, _acc93 = 0, _acc677 = 0, _acc1022 = 0, _acc584 = 0, _acc1015 = 0, _acc762 = 0, _acc1018 = 0, _acc1019 = 0, _acc855 = 0, _acc1026 = 0, _acc133 = 0, _acc772 = 0, _acc136 = 0, _acc941 = 0, _acc138 = 0, _acc137 = 0, _acc767 = 0, _acc633 = 0, _acc230 = 0, _acc437 = 0, _acc67 = 0, _acc759 = 0, _acc798 = 0, _acc896 = 0, _acc543 = 0, _acc258 = 0, _acc804 = 0, _acc41 = 0, _acc799 = 0, _acc544 = 0, _acc551 = 0, _acc1016 = 0, _acc927 = 0, _acc806 = 0, _acc40 = 0, _acc238 = 0, _acc796 = 0, _acc26 = 0, _acc235 = 0, _acc794 = 0, _acc234 = 0, _acc793 = 0, _acc233 = 0, _acc791 = 0, _acc783 = 0, _acc597 = 0, _acc820 = 0, _acc660 = 0, _acc784 = 0, _acc972 = 0, _acc690 = 0, _acc312 = 0, _acc821 = 0, _acc661 = 0, _acc822 = 0, _acc153 = 0, _acc830 = 0, _acc832 = 0, _acc288 = 0, _acc834 = 0, _acc236 = 0, _acc792 = 0, _acc836 = 0, _acc843 = 0, _acc839 = 0, _acc842 = 0, _acc204 = 0, _acc37 = 0, _acc848 = 0, _acc125 = 0, _acc38 = 0, _acc177 = 0, _acc849 = 0, _acc639 = 0, _acc850 = 0, _acc640 = 0, _acc852 = 0, _acc1429 = 0, _acc857 = 0, _acc1434 = 0, _acc861 = 0, _acc592 = 0, _acc865 = 0, _acc517 = 0, _acc655 = 0, _acc787 = 0, _acc957 = 0, _acc600 = 0, _acc956 = 0, _acc599 = 0, _acc531 = 0, _acc874 = 0, _acc871 = 0, _acc962 = 0, _acc668 = 0, _acc880 = 0, _acc841 = 0, _acc118 = 0, _acc309 = 0, _acc878 = 0, _acc872 = 0, _acc645 = 0, _acc809 = 0, _acc43 = 0, _acc75 = 0, _acc763 = 0, _acc400 = 0, _acc401 = 0, _acc1017 = 0, _acc897 = 0, _acc477 = 0, _acc672 = 0, _acc475 = 0, _acc575 = 0, _acc670 = 0, _acc225 = 0, _acc788 = 0, _acc868 = 0, _acc828 = 0, _acc900 = 0, _acc374 = 0, _acc899 = 0, _acc373 = 0, _acc357 = 0, _acc657 = 0, _acc903 = 0, _acc904 = 0, _acc476 = 0, _acc846 = 0, _acc674 = 0, _acc270 = 0, _acc812 = 0, _acc888 = 0, _acc79 = 0, _acc405 = 0, _acc933 = 0, _acc515 = 0, _acc717 = 0, _acc608 = 0, _acc52 = 0, _acc1025 = 0, _acc1440 = 0, _acc1433 = 0, _acc701 = 0, _acc779 = 0, _acc507 = 0, _acc308 = 0, _acc902 = 0, _acc740 = 0, _acc666 = 0, _acc157 = 0, _acc1408 = 0, _acc504 = 0, _acc816 = 0, _acc702 = 0, _acc780 = 0, _acc508 = 0, _acc482 = 0, _acc703 = 0, _acc509 = 0, _acc261 = 0, _acc576 = 0, _acc811 = 0, _acc122 = 0, _acc745 = 0, _acc863 = 0, _acc310 = 0, _acc950 = 0, _acc593 = 0, _acc747 = 0, _acc750 = 0, _acc749 = 0, _acc748 = 0, _acc671 = 0, _acc819 = 0, _acc623 = 0, _acc459 = 0, _acc742 = 0, _acc664 = 0, _acc728 = 0, _acc430 = 0, _acc669 = 0, _acc343 = 0, _acc881 = 0, _acc1032 = 0, _acc709 = 0, _acc634 = 0, _acc76 = 0, _acc68 = 0, _acc760 = 0, _acc416 = 0, _acc577 = 0, _acc862 = 0, _acc1034 = 0, _acc602 = 0, _acc420 = 0, _acc754 = 0, _acc150 = 0, _acc1009 = 0, _acc725 = 0, _acc935 = 0, _acc490 = 0, _acc297 = 0, _acc607 = 0, _acc1035 = 0, _acc423 = 0, _acc1021 = 0, _acc213 = 0, _acc583 = 0, _acc489 = 0, _acc854 = 0, _acc1028 = 0, _acc294 = 0, _acc934 = 0, _acc492 = 0, _acc1029 = 0, _acc295 = 0, _acc658 = 0, _acc461 = 0, _acc704 = 0, _acc835 = 0, _acc1038 = 0, _acc823 = 0, _acc1006 = 0, _acc752 = 0, _acc683 = 0, _acc616 = 0, _acc800 = 0, _acc176 = 0, _acc161 = 0, _acc480 = 0, _acc259 = 0, _acc13 = 0, _acc255 = 0, _acc988 = 0, _acc738 = 0, _acc353 = 0, _acc641 = 0, _acc815 = 0, _acc946 = 0, _acc500 = 0, _acc305 = 0, _acc679 = 0, _acc647 = 0, _acc468 = 0, _acc254 = 0, _acc987 = 0, _acc457 = 0, _acc352 = 0, _acc678 = 0, _acc478 = 0, _acc253 = 0, _acc986 = 0, _acc154 = 0, _acc473 = 0, _acc1012 = 0, _acc824 = 0, _acc469 = 0, _acc1427 = 0, _acc398 = 0, _acc833 = 0, _acc1014 = 0, _acc866 = 0, _acc1041 = 0, _acc174 = 0, _acc23 = 0, _acc56 = 0, _acc330 = 0, _acc1407 = 0, _acc947 = 0, _acc501 = 0, _acc680 = 0, _acc306 = 0, _acc151 = 0, _acc829 = 0, _acc1011 = 0, _acc894 = 0, _acc527 = 0, _acc355 = 0, _acc14 = 0, _acc354 = 0, _acc662 = 0, _acc940 = 0, _acc301 = 0, _acc251 = 0, _acc984 = 0, _acc454 = 0, _acc1420 = 0, _acc349 = 0, _acc786 = 0, _acc744 = 0, _acc402 = 0, _acc893 = 0, _acc1426 = 0, _acc397 = 0, _acc422 = 0, _acc768 = 0, _acc1428 = 0, _acc1036 = 0, _acc877 = 0, _acc511 = 0, _acc715 = 0, _acc110 = 0, _acc605 = 0, _acc479 = 0, _acc160 = 0, _acc851 = 0, _acc1438 = 0, _acc892 = 0, _acc1425 = 0, _acc396 = 0, _acc642 = 0, _acc686 = 0, _acc929 = 0, _acc581 = 0, _acc403 = 0, _acc708 = 0, _acc726 = 0, _acc739 = 0, _acc1435 = 0, _acc152 = 0, _acc474 = 0, _acc1439 = 0, _acc723 = 0, _acc765 = 0, _acc532 = 0, _acc1424 = 0, _acc124 = 0, _acc712 = 0, _acc1432 = 0, _acc1437 = 0, _acc451 = 0, _acc817 = 0, _acc698 = 0, _acc1037 = 0, _acc322 = 0, _acc1436 = 0, _acc421 = 0, _acc837 = 0, _acc743 = 0, _acc853 = 0, _acc682 = 0, _acc129 = 0, _acc860 = 0, _acc684 = 0, _acc1422 = 0, _acc1421 = 0, _acc481 = 0, _acc1431 = 0, _acc691 = 0, _acc770 = 0, _acc217 = 0, _acc587 = 0, _acc162 = 0, _acc653 = 0, _acc773 = 0, _acc578 = 0, _acc954 = 0, _acc1005 = 0, _acc381 = 0, _acc858 = 0, _acc315 = 0, _acc694 = 0, _acc939 = 0, _acc299 = 0, _acc938 = 0, _acc693 = 0, _acc249 = 0, _acc982 = 0, _acc452 = 0, _acc769 = 0, _acc667 = 0, _acc656 = 0, _acc351 = 0, _acc1419 = 0, _acc252 = 0, _acc985 = 0, _acc455 = 0, _acc1418 = 0, _acc350 = 0, _acc1423 = 0, _acc681 = 0, _acc128 = 0, _acc724 = 0, _acc1411 = 0, _acc107 = 0, _acc776 = 0, _acc764 = 0, _acc945 = 0, _acc727 = 0, _acc885 = 0, _acc1412 = 0, _acc621 = 0, _acc63 = 0, _acc1409 = 0, _acc105 = 0, _acc1043 = 0, _acc58 = 0, _acc826 = 0, _acc711 = 0, _acc622 = 0, _acc932 = 0, _acc64 = 0, _acc884 = 0, _acc722 = 0, _acc61 = 0, _acc1410 = 0, _acc10 = 0, _acc106 = 0, _acc696 = 0, _acc1430 = 0, _acc73 = 0, _acc718 = 0, _acc979 = 0, _acc609 = 0, _acc326 = 0, _acc720 = 0, _acc328 = 0, _acc665 = 0, _acc389 = 0, _acc606 = 0, _acc620 = 0, _acc62 = 0, _acc0 = 0, _acc57 = 0, _acc331 = 0, _acc1033 = 0, _acc418 = 0, _acc879 = 0, _acc714 = 0, _acc959 = 0, _acc827 = 0, _acc876 = 0, _acc713 = 0, _acc130 = 0, _acc808 = 0, _acc992 = 0, _acc630 = 0, _acc72 = 0, _acc729 = 0, _acc1415 = 0, _acc971 = 0, _acc596 = 0, _acc782 = 0, _acc663 = 0, _acc775 = 0, _acc953 = 0, _acc707 = 0, _acc814 = 0, _acc86 = 0, _acc415 = 0, _acc771 = 0, _acc692 = 0, _acc937 = 0, _acc215 = 0, _acc588 = 0, _acc710 = 0, _acc20 = 0, _acc163 = 0, _acc654 = 0, _acc774 = 0, _acc417 = 0, _acc955 = 0, _acc706 = 0, _acc697 = 0, _acc460 = 0, _acc948 = 0, _acc1 = 0, _acc719 = 0, _acc327 = 0, _acc952 = 0, _acc632 = 0, _acc229 = 0, _acc436 = 0, _acc173 = 0, _acc66 = 0, _acc758 = 0, _acc385 = 0, _acc883 = 0, _acc546 = 0, _acc100 = 0, _acc440 = 0, _acc545 = 0, _acc1414 = 0, _acc534 = 0, _acc969 = 0, _acc533 = 0, _acc1406 = 0, _acc905 = 0, _acc930 = 0, _acc870 = 0, _acc751 = 0, _acc1040 = 0, _acc650 = 0, _acc1010 = 0, _acc646 = 0, _acc464 = 0, _acc649 = 0, _acc1007 = 0, _acc463 = 0, _acc756 = 0, _acc114 = 0, _acc807 = 0, _acc803 = 0, _acc11 = 0, _acc976 = 0, _acc448 = 0, _acc931 = 0, _acc445 = 0, _acc483 = 0, _acc970 = 0, _acc790 = 0, _acc456 = 0, _acc981 = 0, _acc317 = 0, _acc46 = 0, _acc241 = 0, _acc446 = 0, _acc442 = 0, _acc777 = 0, _acc943 = 0, _acc141 = 0, _acc303 = 0, _acc944 = 0, _acc1042 = 0, _acc699 = 0, _acc818 = 0, _acc142 = 0, _acc250 = 0, _acc983 = 0, _acc453 = 0, _acc348 = 0, _acc652 = 0, _acc813 = 0, _acc942 = 0, _acc275 = 0, _acc140 = 0, _acc206 = 0, _acc302 = 0, _acc466 = 0, _acc648 = 0, _acc890 = 0, _acc936 = 0, _acc614 = 0, _acc314 = 0, _acc441 = 0, _acc601 = 0, _acc316 = 0, _acc612 = 0, _acc611 = 0, _acc524 = 0, _acc610 = 0, _acc889 = 0, _acc523 = 0, _acc604 = 0, _acc603 = 0, _acc319 = 0, _acc598 = 0, _acc471 = 0, _acc789 = 0, _acc594 = 0, _acc825 = 0, _acc470 = 0, _acc977 = 0, _acc111 = 0, _acc589 = 0, _acc7 = 0, _acc8 = 0, _acc991 = 0, _acc9 = 0, _acc212 = 0, _acc586 = 0, _acc488 = 0, _acc87 = 0, _acc960 = 0, _acc585 = 0, _acc4 = 0, _acc582 = 0, _acc487 = 0, _acc1027 = 0, _acc293 = 0, _acc5 = 0, _acc210 = 0, _acc83 = 0, _acc580 = 0, _acc961 = 0, _acc90 = 0, _acc535 = 0, _acc537 = 0, _acc498 = 0, _acc499 = 0, _acc555 = 0, _acc366 = 0, _acc556 = 0, _acc367 = 0, _acc557 = 0, _acc368 = 0, _acc554 = 0, _acc898 = 0, _acc547 = 0, _acc542 = 0, _acc553 = 0, _acc221 = 0, _acc590 = 0, _acc94 = 0, _acc364 = 0, _acc901 = 0, _acc548 = 0, _acc550 = 0, _acc549 = 0, _acc178 = 0, _acc882 = 0, _acc516 = 0, _acc541 = 0, _acc732 = 0, _acc538 = 0, _acc1030 = 0, _acc296 = 0, _acc24 = 0, _acc171 = 0, _acc734 = 0, _acc540 = 0, _acc434 = 0, _acc539 = 0, _acc536 = 0, _acc626 = 0, _acc15 = 0, _acc529 = 0, _acc530 = 0, _acc356 = 0, _acc528 = 0, _acc522 = 0, _acc164 = 0, _acc519 = 0, _acc1417 = 0, _acc521 = 0, _acc731 = 0, _acc887 = 0, _acc1416 = 0, _acc520 = 0, _acc518 = 0, _acc506 = 0, _acc503 = 0, _acc168 = 0, _acc844 = 0, _acc494 = 0, _acc166 = 0, _acc510 = 0, _acc505 = 0, _acc502 = 0, _acc493 = 0, _acc497 = 0, _acc1023 = 0, _acc847 = 0, _acc495 = 0, _acc845 = 0, _acc496 = 0, _acc525 = 0, _acc12 = 0, _acc465 = 0, _acc22 = 0, _acc19 = 0, _acc467 = 0, _acc3 = 0, _acc59 = 0, _acc363 = 0, _acc2 = 0, _acc32 = 0, _acc716 = 0, _acc513 = 0, _acc341 = 0, _acc33 = 0, _acc514 = 0, _acc730 = 0, _acc342 = 0, _acc1031 = 0, _acc34 = 0, _acc805 = 0, _acc119 = 0, _acc262 = 0, _acc127 = 0, _acc399 = 0, _acc993 = 0, _acc631 = 0, _acc131 = 0, _acc21 = 0, _acc291 = 0, _acc260 = 0, _acc126 = 0, _acc123 = 0, _acc801 = 0, _acc120 = 0, _acc802 = 0, _acc121 = 0, _acc491 = 0, _acc300 = 0, _acc216 = 0, _acc89 = 0, _acc360 = 0, _acc219 = 0, _acc92 = 0, _acc362 = 0, _acc222 = 0, _acc95 = 0, _acc365 = 0, _acc978 = 0, _acc115 = 0, _acc117 = 0, _acc116 = 0, _acc218 = 0, _acc91 = 0, _acc361 = 0, _acc36 = 0, _acc113 = 0, _acc980 = 0, _acc112 = 0, _acc35 = 0, _acc101 = 0, _acc237 = 0, _acc795 = 0, _acc102 = 0, _acc109 = 0, _acc444 = 0, _acc108 = 0, _acc104 = 0, _acc974 = 0, _acc103 = 0, _acc439 = 0, _acc99 = 0, _acc97 = 0, _acc88 = 0, _acc778 = 0, _acc82 = 0, _acc50 = 0, _acc78 = 0, _acc80 = 0, _acc51 = 0, _acc55 = 0, _acc74 = 0, _acc42 = 0, _acc60 = 0, _acc54 = 0, _acc6 = 0, _acc53 = 0, _acc867 = 0, _acc318 = 0, _acc48 = 0, _acc736 = 0, _acc49 = 0, _acc44 = 0, _acc45 = 0, _acc256 = 0, _acc989 = 0, _acc458 = 0, _acc375 = 0, _acc737 = 0, _acc376 = 0, _acc377 = 0, _acc462 = 0, _acc449 = 0, _acc450 = 0, _acc240 = 0, _acc443 = 0, _acc975 = 0, _acc447 = 0, _acc419 = 0, _acc85 = 0, _acc426 = 0, _acc425 = 0, _acc424 = 0, _acc323 = 0, _acc432 = 0, _acc338 = 0, _acc595 = 0, _acc433 = 0, _acc339 = 0, _acc98 = 0, _acc438 = 0, _acc435 = 0, _acc336 = 0, _acc431 = 0, _acc337 = 0, _acc928 = 0, _acc406 = 0, _acc949 = 0, _acc413 = 0, _acc766 = 0, _acc412 = 0, _acc404 = 0, _acc414 = 0, _acc332 = 0, _acc395 = 0, _acc394 = 0, _acc388 = 0, _acc393 = 0, _acc392 = 0, _acc391 = 0, _acc390 = 0, _acc359 = 0, _acc387 = 0, _acc386 = 0, _acc383 = 0, _acc384 = 0, _acc369 = 0, _acc378 = 0, _acc380 = 0, _acc371 = 0, _acc372 = 0, _acc370 = 0, _acc358 = 0, _acc344 = 0, _acc346 = 0, _acc347 = 0, _acc345 = 0, _acc512 = 0, _acc340 = 0, _acc132 = 0, _acc324 = 0, _acc333 = 0, _acc335 = 0, _acc1024 = 0, _acc169 = 0, _acc875 = 0, _acc334 = 0, _acc329 = 0, _acc638 = 0, _acc134 = 0, _acc700 = 0, _acc321 = 0, _acc325 = 0, _acc47 = 0, _acc320 = 0, _acc313 = 0, _acc311 = 0, _acc304 = 0, _acc292 = 0, _acc175 = 0, _acc1008 = 0, _acc651 = 0, _acc149 = 0;
	/* Reverse accumulation */
	_acc1441 = 1.0;
	_t1442 = (float)1.0 / (_t1440);
	_acc1440 += _acc1441 * _t1442;
	_acc1439 += _acc1440;
	_acc1436 += _acc1440;
	_acc1438 += _acc1439;
	_acc1437 += _acc1439;
	_acc1433 += _acc1438 * 0.212671;
	_acc1434 += _acc1437 * 0.715160;
	_acc1435 += _acc1436 * 0.072169;
	_acc1432 += _acc1435 * _t468;
	_acc468 += _acc1435 * _t1432;
	_acc1430 += _acc1434 * _t467;
	_acc467 += _acc1434 * _t1430;
	_acc1428 += _acc1433 * _t466;
	_acc466 += _acc1433 * _t1428;
	_t1443 = (float)1.0 / (_t1426);
	_acc1431 += _acc1432 * _t1443;
	_t1444 = -_t1431;
	_t1445 = _t1443 * _t1443;
	_t1446 = _t1444 * _t1445;
	_acc1426 += _acc1432 * _t1446;
	_acc1424 += _acc1431 * _t1043;
	_acc1043 += _acc1431 * _t1424;
	_t1447 = (float)1.0 / (_t1426);
	_acc1429 += _acc1430 * _t1447;
	_t1448 = -_t1429;
	_t1449 = _t1447 * _t1447;
	_t1450 = _t1448 * _t1449;
	_acc1426 += _acc1430 * _t1450;
	_acc1424 += _acc1429 * _t1042;
	_acc1042 += _acc1429 * _t1424;
	_t1451 = (float)1.0 / (_t1426);
	_acc1427 += _acc1428 * _t1451;
	_t1452 = -_t1427;
	_t1453 = _t1451 * _t1451;
	_t1454 = _t1452 * _t1453;
	_acc1426 += _acc1428 * _t1454;
	_acc1424 += _acc1427 * _t1041;
	_acc1041 += _acc1427 * _t1424;
	_acc1425 += _acc1426 * scene[32];
	_t1455 = (float)1.0 / (_t1416);
	_acc684 += _acc1425 * _t1455;
	_t1456 = -_t684;
	_t1457 = _t1455 * _t1455;
	_t1458 = _t1456 * _t1457;
	_acc1416 += _acc1425 * _t1458;
	_t1459 = _t1424 * _t1424;
	_t1460 = -_t1459;
	_acc1423 += _acc1424 * _t1460;
	_acc1422 += _acc1423;
	_acc1421 += _acc1422 * _t1419;
	_acc1419 += _acc1422 * _t1421;
	_t1461 = 2.000000 * _t1420;
	_acc1420 += _acc1421 * _t1461;
	_t1462 = (float)1.0 / (scene[32]);
	_acc1416 += _acc1420 * _t1462;
	_acc596 += _acc1419;
	_acc1418 += _acc1419;
	_acc597 += _acc1418 * _t1417;
	_acc1417 += _acc1418 * _t597;
	_t1463 = 2.000000 * _t686;
	_acc686 += _acc1417 * _t1463;
	_t1464 = (float)1.0 / (_t675);
	_acc1415 += _acc1416 * _t1464;
	_t1465 = -_t1415;
	_t1466 = _t1464 * _t1464;
	_t1467 = _t1465 * _t1466;
	_acc675 += _acc1416 * _t1467;
	_acc1411 += _acc1415 * _t1412;
	_acc1412 += _acc1415 * _t1411;
	cif (_t684 >= 0.000000) {
		_acc684 = _acc1412;
	}
	else {
		_acc1414 = _acc1412;
		_acc684 -= _acc1414;
	}
	_acc1410 += _acc1411 * _t1408;
	_acc1408 += _acc1411 * _t1410;
	_t1468 = 2.000000 * _t1409;
	_acc1409 += _acc1410 * _t1468;
	_acc1408 += _acc1409 * scene[33];
	_acc1407 -= _acc1408;
	_t1469 = _t1407 * _t1407;
	_t1470 = -_t1469;
	_acc1406 += _acc1407 * _t1470;
	_acc667 += _acc1406 * _t678;
	_acc662 += _acc1406 * _t679;
	_acc657 += _acc1406 * _t680;
	_acc678 += _acc1406 * _t667;
	_acc679 += _acc1406 * _t662;
	_acc680 += _acc1406 * _t657;
	_acc683 += _acc1043 * _t1038;
	_acc1038 += _acc1043 * _t683;
	_acc682 += _acc1042 * _t1038;
	_acc1038 += _acc1042 * _t682;
	_acc681 += _acc1041 * _t1038;
	_acc1038 += _acc1041 * _t681;
	cif (_t1037 >= 0.000000) {
		_acc1037 = _acc1038;
	}
	else {
		_acc1040 = _acc1038;
		_acc1037 -= _acc1040;
	}
	_t1471 = (float)1.0 / (_t1035);
	_acc1036 += _acc1037 * _t1471;
	_t1472 = -_t1036;
	_t1473 = _t1471 * _t1471;
	_t1474 = _t1472 * _t1473;
	_acc1035 += _acc1037 * _t1474;
	_acc1034 += _acc1036 * _t1031;
	_acc1031 += _acc1036 * _t1034;
	_acc1033 += _acc1035 * _t1032;
	_acc1032 += _acc1035 * _t1033;
	_acc478 += _acc1034 * _t678;
	_acc479 += _acc1034 * _t679;
	_acc480 += _acc1034 * _t680;
	_acc678 += _acc1034 * _t478;
	_acc679 += _acc1034 * _t479;
	_acc680 += _acc1034 * _t480;
	_acc478 += _acc1033 * _t575;
	_acc479 += _acc1033 * _t576;
	_acc480 += _acc1033 * _t577;
	_acc575 += _acc1033 * _t478;
	_acc576 += _acc1033 * _t479;
	_acc577 += _acc1033 * _t480;
	_acc481 += _acc1032 * _t678;
	_acc482 += _acc1032 * _t679;
	_acc483 += _acc1032 * _t680;
	_acc678 += _acc1032 * _t481;
	_acc679 += _acc1032 * _t482;
	_acc680 += _acc1032 * _t483;
	_acc481 += _acc1031 * _t575;
	_acc482 += _acc1031 * _t576;
	_acc483 += _acc1031 * _t577;
	_acc575 += _acc1031 * _t481;
	_acc576 += _acc1031 * _t482;
	_acc577 += _acc1031 * _t483;
	cif (vertParams[108] == 1.000000) {
		_acc748 = _acc681;
		_acc749 = _acc682;
		_acc750 = _acc683;
		_acc700 = _acc684;
		_acc747 = _acc686;
		_acc745 += _acc750 * _t700;
		_acc700 += _acc750 * _t745;
		_acc744 += _acc749 * _t700;
		_acc700 += _acc749 * _t744;
		_acc743 += _acc748 * _t700;
		_acc700 += _acc748 * _t743;
		_acc704 += _acc747;
		_acc734 += _acc747;
		_acc703 += _acc745;
		_acc732 += _acc745;
		_acc702 += _acc744;
		_acc731 += _acc744;
		_acc701 += _acc743;
		_acc730 += _acc743;
		cif (vertParams[116] < 1.000000) {
			_acc736 = _acc730;
			_acc737 = _acc731;
			_acc738 = _acc732;
			_acc742 = _acc734;
			_acc740 += _acc742 * _t694;
			_acc694 += _acc742 * _t740;
			_acc739 += _acc740 * 0.318310;
		}
		else {
		}
		cif (vertParams[116] > 0.000000) {
			_acc717 = _acc701;
			_acc718 = _acc702;
			_acc719 = _acc703;
			_acc720 = _acc704;
			cif (_t716 > 0.000000) {
				_acc725 = _acc717;
				_acc726 = _acc718;
				_acc727 = _acc719;
				_acc729 = _acc720;
				_acc728 += _acc729 * _t716;
				_acc716 += _acc729 * _t728;
				_acc722 += _acc728 * vertParams[116];
				_acc724 += _acc727 * vertParams[114];
				_acc724 += _acc726 * vertParams[113];
				_acc724 += _acc725 * vertParams[112];
				_acc723 += _acc724 * _t716;
				_acc716 += _acc724 * _t723;
			}
			else {
			}
			_acc715 += _acc716 * 0.159155;
			_t1475 = vertParams[115]-1.000000;
			_t1476 = pow(_t714,_t1475);
			_t1477 = vertParams[115] * _t1476;
			_acc714 += _acc715 * _t1477;
			_acc709 += _acc714 * _t678;
			_acc711 += _acc714 * _t679;
			_acc713 += _acc714 * _t680;
			_acc678 += _acc714 * _t709;
			_acc679 += _acc714 * _t711;
			_acc680 += _acc714 * _t713;
			_acc712 += _acc713;
			_acc577 -= _acc713;
			_acc707 += _acc712 * _t693;
			_acc693 += _acc712 * _t707;
			_acc710 += _acc711;
			_acc576 -= _acc711;
			_acc707 += _acc710 * _t692;
			_acc692 += _acc710 * _t707;
			_acc708 += _acc709;
			_acc575 -= _acc709;
			_acc707 += _acc708 * _t691;
			_acc691 += _acc708 * _t707;
			_acc706 += _acc707 * 2.000000;
			_acc575 += _acc706 * _t691;
			_acc576 += _acc706 * _t692;
			_acc577 += _acc706 * _t693;
			_acc691 += _acc706 * _t575;
			_acc692 += _acc706 * _t576;
			_acc693 += _acc706 * _t577;
		}
		else {
		}
		_acc691 += _acc700 * _t678;
		_acc692 += _acc700 * _t679;
		_acc693 += _acc700 * _t680;
		_acc678 += _acc700 * _t691;
		_acc679 += _acc700 * _t692;
		_acc680 += _acc700 * _t693;
		cif (_t690 > 0.000000) {
			_acc481 = _acc691;
			_acc482 = _acc692;
			_acc483 = _acc693;
			_acc690 = _acc694;
		}
		else {
			_acc696 = _acc691;
			_acc697 = _acc692;
			_acc698 = _acc693;
			_acc699 = _acc694;
			_acc690 -= _acc699;
			_acc483 -= _acc698;
			_acc482 -= _acc697;
			_acc481 -= _acc696;
		}
		_acc481 += _acc690 * _t575;
		_acc482 += _acc690 * _t576;
		_acc483 += _acc690 * _t577;
		_acc575 += _acc690 * _t481;
		_acc576 += _acc690 * _t482;
		_acc577 += _acc690 * _t483;
	}
	else cif (vertParams[108] == 2.000000) {
		_acc948 = _acc681;
		_acc949 = _acc682;
		_acc950 = _acc683;
		_acc752 = _acc684;
		_acc952 = _acc686;
		cif (_t753 > 0.000000) {
			_acc960 = _acc948;
			_acc961 = _acc949;
			_acc962 = _acc950;
			_acc972 = _acc952;
			cif (_t971 >= 0.000000) {
				_acc971 = _acc972;
			}
			else {
				_acc974 = _acc972;
				_acc971 -= _acc974;
			}
			_t1478 = (float)1.0 / (_t969);
			_acc970 += _acc971 * _t1478;
			_t1479 = -_t970;
			_t1480 = _t1478 * _t1478;
			_t1481 = _t1479 * _t1480;
			_acc969 += _acc971 * _t1481;
			_acc947 += _acc970 * _t837;
			_acc837 += _acc970 * _t947;
			_acc789 += _acc969 * 4.000000;
			_acc957 += _acc962 * vertParams[111];
			_acc957 += _acc961 * vertParams[110];
			_acc957 += _acc960 * vertParams[109];
			cif (_t956 >= 0.000000) {
				_acc956 = _acc957;
			}
			else {
				_acc959 = _acc957;
				_acc956 -= _acc959;
			}
			_t1482 = (float)1.0 / (_t953);
			_acc955 += _acc956 * _t1482;
			_t1483 = -_t955;
			_t1484 = _t1482 * _t1482;
			_t1485 = _t1483 * _t1484;
			_acc953 += _acc956 * _t1485;
			_acc954 += _acc955 * _t905;
			_acc905 += _acc955 * _t954;
			_acc837 += _acc954 * _t829;
			_acc829 += _acc954 * _t837;
			_acc751 += _acc953 * 4.000000;
		}
		else {
			_acc992 = _acc948;
			_acc993 = _acc949;
			_acc994 = _acc950;
			_acc1012 = _acc952;
			cif (_t1011 >= 0.000000) {
				_acc1011 = _acc1012;
			}
			else {
				_acc1014 = _acc1012;
				_acc1011 -= _acc1014;
			}
			_t1486 = (float)1.0 / (_t1005);
			_acc1010 += _acc1011 * _t1486;
			_t1487 = -_t1010;
			_t1488 = _t1486 * _t1486;
			_t1489 = _t1487 * _t1488;
			_acc1005 += _acc1011 * _t1489;
			_acc1009 += _acc1010 * _t1007;
			_acc1007 += _acc1010 * _t1009;
			_acc947 += _acc1009 * _t1008;
			_acc1008 += _acc1009 * _t947;
			_acc837 -= _acc1008;
			_acc1006 += _acc1007 * _t789;
			_acc789 += _acc1007 * _t1006;
			_t1490 = 2.000000 * _t756;
			_acc756 += _acc1006 * _t1490;
			_t1491 = 2.000000 * _t978;
			_acc978 += _acc1005 * _t1491;
			_acc989 += _acc994 * vertParams[114];
			_acc989 += _acc993 * vertParams[113];
			_acc989 += _acc992 * vertParams[112];
			cif (_t988 >= 0.000000) {
				_acc988 = _acc989;
			}
			else {
				_acc991 = _acc989;
				_acc988 -= _acc991;
			}
			_t1492 = (float)1.0 / (_t980);
			_acc987 += _acc988 * _t1492;
			_t1493 = -_t987;
			_t1494 = _t1492 * _t1492;
			_t1495 = _t1493 * _t1494;
			_acc980 += _acc988 * _t1495;
			_acc986 += _acc987 * _t790;
			_acc790 += _acc987 * _t986;
			_acc985 += _acc986 * _t789;
			_acc789 += _acc986 * _t985;
			_acc984 += _acc985 * _t981;
			_acc981 += _acc985 * _t984;
			_acc983 += _acc984 * _t905;
			_acc905 += _acc984 * _t983;
			_acc982 += _acc983 * _t829;
			_acc829 += _acc983 * _t982;
			_acc837 -= _acc982;
			_t1496 = 2.000000 * _t754;
			_acc754 += _acc981 * _t1496;
			_acc751 += _acc980 * _t979;
			_acc979 += _acc980 * _t751;
			_t1497 = 2.000000 * _t976;
			_acc976 += _acc979 * _t1497;
			_acc790 += _acc978;
			_acc977 += _acc978;
			_acc756 += _acc977 * _t789;
			_acc789 += _acc977 * _t756;
			_acc789 += _acc976;
			_acc975 += _acc976;
			_acc754 += _acc975 * _t790;
			_acc790 += _acc975 * _t754;
		}
		_acc811 += _acc947 * _t946;
		_acc946 += _acc947 * _t811;
		_t1498 = (float)1.0 / (_t943);
		_acc945 += _acc946 * _t1498;
		_t1499 = -_t945;
		_t1500 = _t1498 * _t1498;
		_t1501 = _t1499 * _t1500;
		_acc943 += _acc946 * _t1501;
		_acc944 += _acc945 * _t945;
		_acc939 -= _acc944;
		_acc942 += _acc943 * _t940;
		_acc940 += _acc943 * _t942;
		_acc941 += _acc942 * _t930;
		_acc930 += _acc942 * _t941;
		_acc930 += _acc941 * 3.141593;
		_t1502 = 2.000000 * _t931;
		_acc931 += _acc940 * _t1502;
		_t1503 = (float)1.0 / (_t931);
		_acc938 += _acc939 * _t1503;
		_t1504 = -_t938;
		_t1505 = _t1503 * _t1503;
		_t1506 = _t1504 * _t1505;
		_acc931 += _acc939 * _t1506;
		_acc937 += _acc938;
		_acc934 += _acc938;
		_t1507 = (float)1.0 / (_t935);
		_acc936 += _acc937 * _t1507;
		_t1508 = -_t936;
		_t1509 = _t1507 * _t1507;
		_t1510 = _t1508 * _t1509;
		_acc935 += _acc937 * _t1510;
		_t1511 = 2.000000 * _t813;
		_acc813 += _acc936 * _t1511;
		_t1512 = 2.000000 * _t930;
		_acc930 += _acc935 * _t1512;
		_t1513 = (float)1.0 / (_t932);
		_acc933 += _acc934 * _t1513;
		_t1514 = -_t933;
		_t1515 = _t1513 * _t1513;
		_t1516 = _t1514 * _t1515;
		_acc932 += _acc934 * _t1516;
		_t1517 = 2.000000 * _t812;
		_acc812 += _acc933 * _t1517;
		_t1518 = 2.000000 * _t930;
		_acc930 += _acc932 * _t1518;
		_t1519 = 2.000000 * _t811;
		_acc811 += _acc931 * _t1519;
		_acc929 += _acc930 * vertParams[117];
		_acc928 -= _acc929;
		_acc927 += _acc928 * 0.200000;
		_t1520 = 2.000000 * _t927;
		_t1521 = (float)1.0 / (_t1520);
		_acc858 += _acc927 * _t1521;
		_acc890 += _acc905 * _t868;
		_acc868 += _acc905 * _t890;
		cif (_t889 <= 0.000000) {
		}
		else {
			_acc894 = _acc890;
			cif (_t893 >= 1.600000) {
			}
			else {
				_acc904 = _acc894;
				_t1522 = (float)1.0 / (_t900);
				_acc903 += _acc904 * _t1522;
				_t1523 = -_t903;
				_t1524 = _t1522 * _t1522;
				_t1525 = _t1523 * _t1524;
				_acc900 += _acc904 * _t1525;
				_acc902 += _acc903;
				_acc901 += _acc903;
				_acc893 += _acc902 * 3.535000;
				_acc896 += _acc901 * 2.181000;
				_acc899 += _acc900;
				_acc897 += _acc900;
				_acc898 += _acc899;
				_acc893 += _acc898 * 2.276000;
				_acc896 += _acc897 * 2.577000;
				_t1526 = 2.000000 * _t893;
				_acc893 += _acc896 * _t1526;
			}
			_t1527 = _t893 * _t893;
			_t1528 = -_t1527;
			_acc892 += _acc893 * _t1528;
			_acc889 += _acc892 * vertParams[117];
		}
		_t1529 = (float)1.0 / (_t855);
		_acc888 += _acc889 * _t1529;
		_t1530 = -_t888;
		_t1531 = _t1529 * _t1529;
		_t1532 = _t1530 * _t1531;
		_acc855 += _acc889 * _t1532;
		_t1533 = 2.000000 * _t888;
		_t1534 = (float)1.0 / (_t1533);
		_acc885 += _acc888 * _t1534;
		cif (_t884 >= 0.000000) {
			_acc884 = _acc885;
		}
		else {
			_acc887 = _acc885;
			_acc884 -= _acc887;
		}
		_acc883 -= _acc884;
		_t1535 = 2.000000 * _t855;
		_acc855 += _acc883 * _t1535;
		cif (_t867 <= 0.000000) {
		}
		else {
			_acc872 = _acc868;
			cif (_t871 >= 1.600000) {
			}
			else {
				_acc882 = _acc872;
				_t1536 = (float)1.0 / (_t878);
				_acc881 += _acc882 * _t1536;
				_t1537 = -_t881;
				_t1538 = _t1536 * _t1536;
				_t1539 = _t1537 * _t1538;
				_acc878 += _acc882 * _t1539;
				_acc880 += _acc881;
				_acc879 += _acc881;
				_acc871 += _acc880 * 3.535000;
				_acc874 += _acc879 * 2.181000;
				_acc877 += _acc878;
				_acc875 += _acc878;
				_acc876 += _acc877;
				_acc871 += _acc876 * 2.276000;
				_acc874 += _acc875 * 2.577000;
				_t1540 = 2.000000 * _t871;
				_acc871 += _acc874 * _t1540;
			}
			_t1541 = _t871 * _t871;
			_t1542 = -_t1541;
			_acc870 += _acc871 * _t1542;
			_acc867 += _acc870 * vertParams[117];
		}
		_t1543 = (float)1.0 / (_t858);
		_acc866 += _acc867 * _t1543;
		_t1544 = -_t866;
		_t1545 = _t1543 * _t1543;
		_t1546 = _t1544 * _t1545;
		_acc858 += _acc867 * _t1546;
		_t1547 = 2.000000 * _t866;
		_t1548 = (float)1.0 / (_t1547);
		_acc863 += _acc866 * _t1548;
		cif (_t862 >= 0.000000) {
			_acc862 = _acc863;
		}
		else {
			_acc865 = _acc863;
			_acc862 -= _acc865;
		}
		_acc861 -= _acc862;
		_t1549 = 2.000000 * _t858;
		_acc858 += _acc861 * _t1549;
		cif (_t752 >= 0.000000) {
			_acc752 = _acc858;
		}
		else {
			_acc860 = _acc858;
			_acc752 -= _acc860;
		}
		cif (_t751 >= 0.000000) {
			_acc751 = _acc855;
		}
		else {
			_acc857 = _acc855;
			_acc751 -= _acc857;
		}
		cif (_t836 <= 0.000000) {
		}
		else {
			_acc854 = _acc837;
			_acc853 += _acc854 * 0.500000;
			_acc852 += _acc853;
			_acc851 += _acc853;
			_t1550 = 2.000000 * _t847;
			_acc847 += _acc852 * _t1550;
			_t1551 = 2.000000 * _t850;
			_acc850 += _acc851 * _t1551;
			_t1552 = (float)1.0 / (_t848);
			_acc849 += _acc850 * _t1552;
			_t1553 = -_t849;
			_t1554 = _t1552 * _t1552;
			_t1555 = _t1553 * _t1554;
			_acc848 += _acc850 * _t1555;
			_acc844 += _acc849;
			_acc842 -= _acc849;
			_acc844 += _acc848;
			_acc842 += _acc848;
			_t1556 = (float)1.0 / (_t845);
			_acc846 += _acc847 * _t1556;
			_t1557 = -_t846;
			_t1558 = _t1556 * _t1556;
			_t1559 = _t1557 * _t1558;
			_acc845 += _acc847 * _t1559;
			_acc839 += _acc846;
			_acc843 -= _acc846;
			_acc839 += _acc845;
			_acc843 += _acc845;
			_acc839 += _acc844 * vertParams[115];
			_acc842 += _acc843 * vertParams[115];
			_t1560 = 2.000000 * _t842;
			_t1561 = (float)1.0 / (_t1560);
			_acc836 += _acc842 * _t1561;
			cif (_t789 >= 0.000000) {
				_acc789 = _acc839;
			}
			else {
				_acc841 = _acc839;
				_acc789 -= _acc841;
			}
		}
		_acc835 -= _acc836;
		_acc834 += _acc835 * _t832;
		_acc832 += _acc835 * _t834;
		_acc833 -= _acc834;
		_t1562 = 2.000000 * _t789;
		_acc789 += _acc833 * _t1562;
		_t1563 = 2.000000 * _t830;
		_acc830 += _acc832 * _t1563;
		cif (_t789 > 0.000000) {
		}
		else {
		}
		_t1564 = (float)1.0 / (_t826);
		_acc828 += _acc829 * _t1564;
		_t1565 = -_t828;
		_t1566 = _t1564 * _t1564;
		_t1567 = _t1565 * _t1566;
		_acc826 += _acc829 * _t1567;
		_acc827 += _acc828 * _t828;
		_acc822 -= _acc827;
		_acc825 += _acc826 * _t823;
		_acc823 += _acc826 * _t825;
		_acc824 += _acc825 * vertParams[117];
		_t1568 = 2.000000 * _t814;
		_acc814 += _acc823 * _t1568;
		_t1569 = (float)1.0 / (_t814);
		_acc821 += _acc822 * _t1569;
		_t1570 = -_t821;
		_t1571 = _t1569 * _t1569;
		_t1572 = _t1570 * _t1571;
		_acc814 += _acc822 * _t1572;
		_acc820 += _acc821;
		_acc817 += _acc821;
		_t1573 = (float)1.0 / (_t818);
		_acc819 += _acc820 * _t1573;
		_t1574 = -_t819;
		_t1575 = _t1573 * _t1573;
		_t1576 = _t1574 * _t1575;
		_acc818 += _acc820 * _t1576;
		_t1577 = 2.000000 * _t813;
		_acc813 += _acc819 * _t1577;
		_t1578 = (float)1.0 / (_t815);
		_acc816 += _acc817 * _t1578;
		_t1579 = -_t816;
		_t1580 = _t1578 * _t1578;
		_t1581 = _t1579 * _t1580;
		_acc815 += _acc817 * _t1581;
		_t1582 = 2.000000 * _t812;
		_acc812 += _acc816 * _t1582;
		_t1583 = 2.000000 * _t811;
		_acc811 += _acc814 * _t1583;
		_acc791 += _acc813 * _t782;
		_acc792 += _acc813 * _t783;
		_acc793 += _acc813 * _t784;
		_acc782 += _acc813 * _t791;
		_acc783 += _acc813 * _t792;
		_acc784 += _acc813 * _t793;
		_acc794 += _acc812 * _t782;
		_acc795 += _acc812 * _t783;
		_acc796 += _acc812 * _t784;
		_acc782 += _acc812 * _t794;
		_acc783 += _acc812 * _t795;
		_acc784 += _acc812 * _t796;
		_acc481 += _acc811 * _t782;
		_acc482 += _acc811 * _t783;
		_acc483 += _acc811 * _t784;
		_acc782 += _acc811 * _t481;
		_acc783 += _acc811 * _t482;
		_acc784 += _acc811 * _t483;
		cif (_t483 < -0.999999) {
		}
		else {
			_acc806 = _acc791;
			_acc802 = _acc792;
			_acc803 = _acc793;
			_acc802 = _acc794;
			_acc810 = _acc795;
			_acc807 = _acc796;
			_acc809 -= _acc810;
			_acc808 += _acc809 * _t799;
			_acc799 += _acc809 * _t808;
			_t1584 = 2.000000 * _t482;
			_acc482 += _acc808 * _t1584;
			_acc482 -= _acc807;
			_acc805 -= _acc806;
			_acc804 += _acc805 * _t799;
			_acc799 += _acc805 * _t804;
			_t1585 = 2.000000 * _t481;
			_acc481 += _acc804 * _t1585;
			_acc481 -= _acc803;
			_acc801 += _acc802 * _t799;
			_acc799 += _acc802 * _t801;
			_acc800 += _acc801 * _t482;
			_acc482 += _acc801 * _t800;
			_acc481 -= _acc800;
			_t1586 = _t799 * _t799;
			_t1587 = -_t1586;
			_acc798 += _acc799 * _t1587;
			_acc483 += _acc798;
		}
		_acc678 += _acc790 * _t782;
		_acc679 += _acc790 * _t783;
		_acc680 += _acc790 * _t784;
		_acc782 += _acc790 * _t678;
		_acc783 += _acc790 * _t679;
		_acc784 += _acc790 * _t680;
		_acc575 += _acc789 * _t782;
		_acc576 += _acc789 * _t783;
		_acc577 += _acc789 * _t784;
		_acc782 += _acc789 * _t575;
		_acc783 += _acc789 * _t576;
		_acc784 += _acc789 * _t577;
		cif (_t781 < 0.000000) {
			_acc786 = _acc782;
			_acc787 = _acc783;
			_acc788 = _acc784;
			_acc760 -= _acc788;
			_acc759 -= _acc787;
			_acc758 -= _acc786;
		}
		else {
			_acc758 = _acc782;
			_acc759 = _acc783;
			_acc760 = _acc784;
		}
		cif (_t753 > 0.000000) {
			_acc767 = _acc758;
			_acc768 = _acc759;
			_acc769 = _acc760;
			_acc764 += _acc769 * _t766;
			_acc766 += _acc769 * _t764;
			_acc763 += _acc768 * _t766;
			_acc766 += _acc768 * _t763;
			_acc762 += _acc767 * _t766;
			_acc766 += _acc767 * _t762;
			_t1588 = _t766 * _t766;
			_t1589 = -_t1588;
			_acc765 += _acc766 * _t1589;
			_t1590 = (float)1.0 / (_t765);
			_t1591 = _t762 * _t1590;
			_acc762 += _acc765 * _t1591;
			_t1592 = _t763 * _t1590;
			_acc763 += _acc765 * _t1592;
			_t1593 = _t764 * _t1590;
			_acc764 += _acc765 * _t1593;
			_acc577 += _acc764;
			_acc680 += _acc764;
			_acc576 += _acc763;
			_acc679 += _acc763;
			_acc575 += _acc762;
			_acc678 += _acc762;
		}
		else {
			_acc778 = _acc758;
			_acc779 = _acc759;
			_acc780 = _acc760;
			_acc775 += _acc780 * _t777;
			_acc777 += _acc780 * _t775;
			_acc773 += _acc779 * _t777;
			_acc777 += _acc779 * _t773;
			_acc771 += _acc778 * _t777;
			_acc777 += _acc778 * _t771;
			_t1594 = _t777 * _t777;
			_t1595 = -_t1594;
			_acc776 += _acc777 * _t1595;
			_t1596 = (float)1.0 / (_t776);
			_t1597 = _t771 * _t1596;
			_acc771 += _acc776 * _t1597;
			_t1598 = _t773 * _t1596;
			_acc773 += _acc776 * _t1598;
			_t1599 = _t775 * _t1596;
			_acc775 += _acc776 * _t1599;
			_acc577 += _acc775;
			_acc774 += _acc775;
			_acc680 += _acc774 * _t754;
			_acc754 += _acc774 * _t680;
			_acc576 += _acc773;
			_acc772 += _acc773;
			_acc679 += _acc772 * _t754;
			_acc754 += _acc772 * _t679;
			_acc575 += _acc771;
			_acc770 += _acc771;
			_acc678 += _acc770 * _t754;
			_acc754 += _acc770 * _t678;
		}
		cif (_t752 > 0.000000) {
		}
		else {
		}
		cif (_t751 > 0.000000) {
		}
		else {
		}
		_acc678 += _acc752 * _t481;
		_acc679 += _acc752 * _t482;
		_acc680 += _acc752 * _t483;
		_acc481 += _acc752 * _t678;
		_acc482 += _acc752 * _t679;
		_acc483 += _acc752 * _t680;
		_acc575 += _acc751 * _t481;
		_acc576 += _acc751 * _t482;
		_acc577 += _acc751 * _t483;
		_acc481 += _acc751 * _t575;
		_acc482 += _acc751 * _t576;
		_acc483 += _acc751 * _t577;
	}
	else cif (vertParams[108] == 0.000000) {
		_acc1028 = _acc681;
		_acc1029 = _acc682;
		_acc1030 = _acc683;
		_acc1025 = _acc684;
		_acc1027 = _acc686;
		_acc1026 += _acc1030 * vertParams[111];
		_acc1026 += _acc1029 * vertParams[110];
		_acc1026 += _acc1028 * vertParams[109];
		_acc1019 += _acc1027 * 0.318310;
		_acc1025 += _acc1026 * 0.318310;
		_acc1016 += _acc1025 * _t678;
		_acc1017 += _acc1025 * _t679;
		_acc1018 += _acc1025 * _t680;
		_acc678 += _acc1025 * _t1016;
		_acc679 += _acc1025 * _t1017;
		_acc680 += _acc1025 * _t1018;
		cif (_t1015 > 0.000000) {
			_acc481 = _acc1016;
			_acc482 = _acc1017;
			_acc483 = _acc1018;
			_acc1015 = _acc1019;
		}
		else {
			_acc1021 = _acc1016;
			_acc1022 = _acc1017;
			_acc1023 = _acc1018;
			_acc1024 = _acc1019;
			_acc1015 -= _acc1024;
			_acc483 -= _acc1023;
			_acc482 -= _acc1022;
			_acc481 -= _acc1021;
		}
		_acc481 += _acc1015 * _t575;
		_acc482 += _acc1015 * _t576;
		_acc483 += _acc1015 * _t577;
		_acc575 += _acc1015 * _t481;
		_acc576 += _acc1015 * _t482;
		_acc577 += _acc1015 * _t483;
	}
	else {
	}
	_acc670 += _acc680 * _t677;
	_acc677 += _acc680 * _t670;
	_acc669 += _acc679 * _t677;
	_acc677 += _acc679 * _t669;
	_acc668 += _acc678 * _t677;
	_acc677 += _acc678 * _t668;
	_t1600 = _t677 * _t677;
	_t1601 = -_t1600;
	_acc676 += _acc677 * _t1601;
	_t1602 = 2.000000 * _t676;
	_t1603 = (float)1.0 / (_t1602);
	_acc675 += _acc676 * _t1603;
	_acc674 += _acc675;
	_acc671 += _acc675;
	_acc673 += _acc674;
	_acc672 += _acc674;
	_t1604 = 2.000000 * _t668;
	_acc668 += _acc673 * _t1604;
	_t1605 = 2.000000 * _t669;
	_acc669 += _acc672 * _t1605;
	_t1606 = 2.000000 * _t670;
	_acc670 += _acc671 * _t1606;
	_acc477 -= _acc670;
	_acc476 -= _acc669;
	_acc475 -= _acc668;
	_acc666 += _acc667;
	_acc663 += _acc667;
	_acc665 += _acc666;
	_acc664 += _acc666;
	_acc634 += _acc665 * _t620;
	_acc620 += _acc665 * _t634;
	_acc640 += _acc664 * _t621;
	_acc621 += _acc664 * _t640;
	_acc647 += _acc663 * _t622;
	_acc622 += _acc663 * _t647;
	_acc661 += _acc662;
	_acc658 += _acc662;
	_acc660 += _acc661;
	_acc659 += _acc661;
	_acc636 += _acc660 * _t620;
	_acc620 += _acc660 * _t636;
	_acc643 += _acc659 * _t621;
	_acc621 += _acc659 * _t643;
	_acc649 += _acc658 * _t622;
	_acc622 += _acc658 * _t649;
	_acc656 += _acc657;
	_acc653 += _acc657;
	_acc655 += _acc656;
	_acc654 += _acc656;
	_acc638 += _acc655 * _t620;
	_acc620 += _acc655 * _t638;
	_acc645 += _acc654 * _t621;
	_acc621 += _acc654 * _t645;
	_acc652 += _acc653 * _t622;
	_acc622 += _acc653 * _t652;
	_acc651 -= _acc652;
	_acc650 += _acc651 * 2.000000;
	_acc623 += _acc650;
	_acc624 += _acc650;
	_acc648 += _acc649 * 2.000000;
	_acc628 += _acc648;
	_acc629 -= _acc648;
	_acc646 += _acc647 * 2.000000;
	_acc627 += _acc646;
	_acc630 += _acc646;
	_acc644 += _acc645 * 2.000000;
	_acc628 += _acc644;
	_acc629 += _acc644;
	_acc642 -= _acc643;
	_acc641 += _acc642 * 2.000000;
	_acc623 += _acc641;
	_acc625 += _acc641;
	_acc639 += _acc640 * 2.000000;
	_acc626 += _acc639;
	_acc631 -= _acc639;
	_acc637 += _acc638 * 2.000000;
	_acc627 += _acc637;
	_acc630 -= _acc637;
	_acc635 += _acc636 * 2.000000;
	_acc626 += _acc635;
	_acc631 += _acc635;
	_acc633 -= _acc634;
	_acc632 += _acc633 * 2.000000;
	_acc624 += _acc632;
	_acc625 += _acc632;
	_acc615 += _acc622 * _t619;
	_acc619 += _acc622 * _t615;
	_acc616 += _acc621 * _t619;
	_acc619 += _acc621 * _t616;
	_acc617 += _acc620 * _t619;
	_acc619 += _acc620 * _t617;
	_t1607 = _t619 * _t619;
	_t1608 = -_t1607;
	_acc618 += _acc619 * _t1608;
	_t1609 = (float)1.0 / (_t618);
	_t1610 = _t617 * _t1609;
	_acc617 += _acc618 * _t1610;
	_t1611 = _t616 * _t1609;
	_acc616 += _acc618 * _t1611;
	_t1612 = _t615 * _t1609;
	_acc615 += _acc618 * _t1612;
	_acc613 += _acc617 * _t614;
	_acc614 += _acc617 * _t613;
	_acc609 += _acc616 * _t614;
	_acc614 += _acc616 * _t609;
	_acc605 += _acc615 * _t614;
	_acc614 += _acc615 * _t605;
	_t1613 = _t614 * _t614;
	_t1614 = -_t1613;
	_acc601 += _acc614 * _t1614;
	_acc612 += _acc613;
	_acc611 += _acc612;
	_acc610 += _acc612;
	_acc608 += _acc609;
	_acc607 += _acc608;
	_acc606 += _acc608;
	_acc604 += _acc605;
	_acc603 += _acc604;
	_acc602 += _acc604;
	_acc600 += _acc601;
	_acc599 += _acc600;
	_acc598 += _acc600;
	_acc471 += _acc597 * _t594;
	_acc594 += _acc597 * _t471;
	_acc470 += _acc596 * _t595;
	_acc595 += _acc596 * _t470;
	_acc594 += _acc595 * _t578;
	_acc578 += _acc595 * _t594;
	_t1615 = _t594 * _t594;
	_t1616 = -_t1615;
	_acc593 += _acc594 * _t1616;
	_t1617 = 2.000000 * _t590;
	_acc590 += _acc593 * _t1617;
	cif (_t589 >= 0.000000) {
		_acc589 = _acc590;
	}
	else {
		_acc592 = _acc590;
		_acc589 -= _acc592;
	}
	_acc7 += _acc589 * _t481;
	_acc8 += _acc589 * _t482;
	_acc9 += _acc589 * _t483;
	_acc481 += _acc589 * _t7;
	_acc482 += _acc589 * _t8;
	_acc483 += _acc589 * _t9;
	cif (vertParams[4] == 2.000000) {
	}
	else {
		_acc588 = _acc578;
		_t1618 = 2.000000 * _t587;
		_acc587 += _acc588 * _t1618;
		_acc586 += _acc587;
		_acc581 += _acc587;
		_acc585 += _acc586;
		_acc583 += _acc586;
		_t1619 = 2.000000 * _t584;
		_acc584 += _acc585 * _t1619;
		_acc4 += _acc584;
		_acc475 -= _acc584;
		_t1620 = 2.000000 * _t582;
		_acc582 += _acc583 * _t1620;
		_acc5 += _acc582;
		_acc476 -= _acc582;
		_t1621 = 2.000000 * _t580;
		_acc580 += _acc581 * _t1621;
		_acc6 += _acc580;
		_acc477 -= _acc580;
	}
	_acc9 -= _acc577;
	_acc8 -= _acc576;
	_acc7 -= _acc575;
	cif (vertParams[60] == 0.000000) {
		_acc533 = _acc475;
		_acc535 = _acc476;
		_acc537 = _acc477;
		_acc498 = _acc478;
		_acc499 = _acc479;
		_acc500 = _acc480;
		_acc555 = _acc481;
		_acc556 = _acc482;
		_acc557 = _acc483;
		_acc552 += _acc557 * _t554;
		_acc554 += _acc557 * _t552;
		_acc547 += _acc556 * _t554;
		_acc554 += _acc556 * _t547;
		_acc542 += _acc555 * _t554;
		_acc554 += _acc555 * _t542;
		_t1622 = _t554 * _t554;
		_t1623 = -_t1622;
		_acc553 += _acc554 * _t1623;
		_t1624 = (float)1.0 / (_t553);
		_t1625 = _t542 * _t1624;
		_acc542 += _acc553 * _t1625;
		_t1626 = _t547 * _t1624;
		_acc547 += _acc553 * _t1626;
		_t1627 = _t552 * _t1624;
		_acc552 += _acc553 * _t1627;
		_acc551 += _acc552;
		_acc548 += _acc552;
		_acc550 += _acc551;
		_acc549 += _acc551;
		_acc531 += _acc550 * vertParams[73];
		_acc516 += _acc549 * vertParams[76];
		_acc527 += _acc548 * vertParams[79];
		_acc546 += _acc547;
		_acc543 += _acc547;
		_acc545 += _acc546;
		_acc544 += _acc546;
		_acc531 += _acc545 * vertParams[72];
		_acc516 += _acc544 * vertParams[75];
		_acc527 += _acc543 * vertParams[78];
		_acc541 += _acc542;
		_acc538 += _acc542;
		_acc540 += _acc541;
		_acc539 += _acc541;
		_acc531 += _acc540 * vertParams[71];
		_acc516 += _acc539 * vertParams[74];
		_acc527 += _acc538 * vertParams[77];
		_acc6 += _acc537;
		_acc536 += _acc537;
		_acc529 += _acc536 * _t9;
		_acc9 += _acc536 * _t529;
		_acc5 += _acc535;
		_acc534 += _acc535;
		_acc529 += _acc534 * _t8;
		_acc8 += _acc534 * _t529;
		_acc4 += _acc533;
		_acc532 += _acc533;
		_acc529 += _acc532 * _t7;
		_acc7 += _acc532 * _t529;
		_acc530 += _acc531;
		_acc527 -= _acc531;
		_acc516 -= _acc530;
		_acc528 += _acc529 * _t511;
		_acc511 += _acc529 * _t528;
		_acc525 += _acc528 * vertParams[68];
		_acc522 += _acc528 * vertParams[69];
		_acc519 += _acc528 * vertParams[70];
		_acc526 += _acc527 * _t511;
		_acc511 += _acc527 * _t526;
		_acc7 += _acc526 * _t525;
		_acc8 += _acc526 * _t522;
		_acc9 += _acc526 * _t519;
		_acc525 += _acc526 * _t7;
		_acc522 += _acc526 * _t8;
		_acc519 += _acc526 * _t9;
		_acc524 += _acc525;
		_acc523 -= _acc525;
		_acc513 += _acc524 * vertParams[67];
		_acc514 += _acc523 * vertParams[66];
		_acc521 += _acc522;
		_acc520 -= _acc522;
		_acc514 += _acc521 * vertParams[65];
		_acc512 += _acc520 * vertParams[67];
		_acc518 += _acc519;
		_acc517 -= _acc519;
		_acc512 += _acc518 * vertParams[66];
		_acc513 += _acc517 * vertParams[65];
		_acc515 += _acc516 * _t511;
		_acc511 += _acc516 * _t515;
		_acc512 += _acc515 * _t509;
		_acc513 += _acc515 * _t506;
		_acc514 += _acc515 * _t503;
		_acc509 += _acc515 * _t512;
		_acc506 += _acc515 * _t513;
		_acc503 += _acc515 * _t514;
		_acc6 += _acc514;
		_acc5 += _acc513;
		_acc4 += _acc512;
		_t1628 = _t511 * _t511;
		_t1629 = -_t1628;
		_acc510 += _acc511 * _t1629;
		_acc509 += _acc510 * vertParams[65];
		_acc506 += _acc510 * vertParams[66];
		_acc503 += _acc510 * vertParams[67];
		_acc508 += _acc509;
		_acc507 -= _acc509;
		_acc8 += _acc508 * vertParams[70];
		_acc9 += _acc507 * vertParams[69];
		_acc505 += _acc506;
		_acc504 -= _acc506;
		_acc9 += _acc505 * vertParams[68];
		_acc7 += _acc504 * vertParams[70];
		_acc502 += _acc503;
		_acc501 -= _acc503;
		_acc7 += _acc502 * vertParams[69];
		_acc8 += _acc501 * vertParams[68];
		_acc489 += _acc500 * _t497;
		_acc497 += _acc500 * _t489;
		_acc492 += _acc499 * _t497;
		_acc497 += _acc499 * _t492;
		_acc495 += _acc498 * _t497;
		_acc497 += _acc498 * _t495;
		_t1630 = _t497 * _t497;
		_t1631 = -_t1630;
		_acc496 += _acc497 * _t1631;
		_t1632 = (float)1.0 / (_t496);
		_t1633 = _t495 * _t1632;
		_acc495 += _acc496 * _t1633;
		_t1634 = _t492 * _t1632;
		_acc492 += _acc496 * _t1634;
		_t1635 = _t489 * _t1632;
		_acc489 += _acc496 * _t1635;
		_acc494 += _acc495;
		_acc493 -= _acc495;
		_acc491 += _acc492;
		_acc490 -= _acc492;
		_acc488 += _acc489;
		_acc487 -= _acc489;
	}
	else {
	}
	cif (vertParams[4] == 0.000000) {
		_acc474 = _acc471;
		_t1636 = 2.000000 * _t473;
		_acc473 += _acc474 * _t1636;
		_t1637 = (float)1.0 / (_t463);
		_acc13 += _acc473 * _t1637;
		_t1638 = -_t13;
		_t1639 = _t1637 * _t1637;
		_t1640 = _t1638 * _t1639;
		_acc463 += _acc473 * _t1640;
	}
	else {
	}
	_t1641 = 2.000000 * _t469;
	_acc469 += _acc470 * _t1641;
	_t1642 = (float)1.0 / (_t463);
	_acc464 += _acc469 * _t1642;
	_t1643 = -_t464;
	_t1644 = _t1642 * _t1642;
	_t1645 = _t1643 * _t1644;
	_acc463 += _acc469 * _t1645;
	_acc12 += _acc468 * _t465;
	_acc465 += _acc468 * _t12;
	_acc11 += _acc467 * _t465;
	_acc465 += _acc467 * _t11;
	_acc10 += _acc466 * _t465;
	_acc465 += _acc466 * _t10;
	_acc15 += _acc464 * vertParams[3];
	_acc14 += _acc463 * vertParams[3];
	cif (vertParams[4] == 0.000000) {
		_acc26 = _acc7;
		_acc24 = _acc8;
		_acc22 = _acc9;
		_acc21 += _acc26 * _t25;
		_acc25 += _acc26 * _t21;
		_t1646 = sin(_t19);
		_t1647 = -_t1646;
		_acc19 += _acc25 * _t1647;
		_acc21 += _acc24 * _t23;
		_acc23 += _acc24 * _t21;
		_t1648 = cos(_t19);
		_acc19 += _acc23 * _t1648;
		_t1649 = sin(_t20);
		_t1650 = -_t1649;
		_acc20 += _acc22 * _t1650;
		_t1651 = cos(_t20);
		_acc20 += _acc21 * _t1651;
		_acc3 += _acc20 * 3.141593;
		_acc2 += _acc19 * 6.283185;
	}
	else cif (vertParams[4] == 1.000000) {
		_acc32 = _acc4;
		_acc33 = _acc5;
		_acc34 = _acc6;
		_acc114 = _acc7;
		_acc119 = _acc8;
		_acc124 = _acc9;
		_acc127 = _acc10;
		_acc128 = _acc11;
		_acc129 = _acc12;
		_acc85 = _acc13;
		_acc131 = _acc14;
		_acc38 = _acc15;
		_acc130 += _acc131 * _t38;
		_acc38 += _acc131 * _t130;
		_acc85 += _acc130 * 0.318310;
		_acc126 += _acc129 * vertParams[53];
		_acc126 += _acc128 * vertParams[52];
		_acc126 += _acc127 * vertParams[51];
		_acc125 += _acc126 * 3.141593;
		_t1652 = _t125 * _t125;
		_t1653 = -_t1652;
		_acc38 += _acc125 * _t1653;
		_acc123 += _acc124;
		_acc120 += _acc124;
		_acc122 += _acc123;
		_acc121 += _acc123;
		_acc89 += _acc122 * _t92;
		_acc92 += _acc122 * _t89;
		_acc87 += _acc121 * _t95;
		_acc95 += _acc121 * _t87;
		_acc85 += _acc120 * _t37;
		_acc37 += _acc120 * _t85;
		_acc118 += _acc119;
		_acc115 += _acc119;
		_acc117 += _acc118;
		_acc116 += _acc118;
		_acc89 += _acc117 * _t91;
		_acc91 += _acc117 * _t89;
		_acc87 += _acc116 * _t94;
		_acc94 += _acc116 * _t87;
		_acc85 += _acc115 * _t36;
		_acc36 += _acc115 * _t85;
		_acc113 += _acc114;
		_acc110 += _acc114;
		_acc112 += _acc113;
		_acc111 += _acc113;
		_acc89 += _acc112 * _t90;
		_acc90 += _acc112 * _t89;
		_acc87 += _acc111 * _t93;
		_acc93 += _acc111 * _t87;
		_acc85 += _acc110 * _t35;
		_acc35 += _acc110 * _t85;
		cif (_t37 < -0.999999) {
		}
		else {
			_acc105 = _acc90;
			_acc101 = _acc91;
			_acc102 = _acc92;
			_acc101 = _acc93;
			_acc109 = _acc94;
			_acc106 = _acc95;
			_acc108 -= _acc109;
			_acc107 += _acc108 * _t98;
			_acc98 += _acc108 * _t107;
			_t1654 = 2.000000 * _t36;
			_acc36 += _acc107 * _t1654;
			_acc36 -= _acc106;
			_acc104 -= _acc105;
			_acc103 += _acc104 * _t98;
			_acc98 += _acc104 * _t103;
			_t1655 = 2.000000 * _t35;
			_acc35 += _acc103 * _t1655;
			_acc35 -= _acc102;
			_acc100 += _acc101 * _t98;
			_acc98 += _acc101 * _t100;
			_acc99 += _acc100 * _t36;
			_acc36 += _acc100 * _t99;
			_acc35 -= _acc99;
			_t1656 = _t98 * _t98;
			_t1657 = -_t1656;
			_acc97 += _acc98 * _t1657;
			_acc37 += _acc97;
		}
		_acc88 += _acc89 * _t82;
		_acc82 += _acc89 * _t88;
		_t1658 = sin(_t78);
		_t1659 = -_t1658;
		_acc78 += _acc88 * _t1659;
		_acc86 += _acc87 * _t82;
		_acc82 += _acc87 * _t86;
		_t1660 = cos(_t78);
		_acc78 += _acc86 * _t1660;
		_t1661 = 2.000000 * _t85;
		_t1662 = (float)1.0 / (_t1661);
		_acc83 += _acc85 * _t1662;
		cif (primary[4] >= 0.000001) {
			_acc3 = _acc83;
		}
		else {
		}
		_t1663 = 2.000000 * _t82;
		_t1664 = (float)1.0 / (_t1663);
		_acc80 += _acc82 * _t1664;
		cif (_t79 >= 0.000001) {
			_acc79 = _acc80;
		}
		else {
		}
		_acc3 -= _acc79;
		_acc2 += _acc78 * 6.283185;
		cif (vertParams[5] == 0.000000) {
			_acc47 = _acc32;
			_acc51 = _acc33;
			_acc55 = _acc34;
			_acc75 = _acc35;
			_acc76 = _acc36;
			_acc77 = _acc37;
			_acc72 += _acc77 * _t74;
			_acc74 += _acc77 * _t72;
			_acc67 += _acc76 * _t74;
			_acc74 += _acc76 * _t67;
			_acc62 += _acc75 * _t74;
			_acc74 += _acc75 * _t62;
			_t1665 = _t74 * _t74;
			_t1666 = -_t1665;
			_acc73 += _acc74 * _t1666;
			_t1667 = (float)1.0 / (_t73);
			_t1668 = _t62 * _t1667;
			_acc62 += _acc73 * _t1668;
			_t1669 = _t67 * _t1667;
			_acc67 += _acc73 * _t1669;
			_t1670 = _t72 * _t1667;
			_acc72 += _acc73 * _t1670;
			_acc71 += _acc72;
			_acc68 += _acc72;
			_acc70 += _acc71;
			_acc69 += _acc71;
			_acc57 += _acc70 * vertParams[18];
			_acc42 += _acc69 * vertParams[21];
			_acc43 += _acc68 * vertParams[24];
			_acc66 += _acc67;
			_acc63 += _acc67;
			_acc65 += _acc66;
			_acc64 += _acc66;
			_acc57 += _acc65 * vertParams[17];
			_acc42 += _acc64 * vertParams[20];
			_acc43 += _acc63 * vertParams[23];
			_acc61 += _acc62;
			_acc58 += _acc62;
			_acc60 += _acc61;
			_acc59 += _acc61;
			_acc57 += _acc60 * vertParams[16];
			_acc42 += _acc59 * vertParams[19];
			_acc43 += _acc58 * vertParams[22];
			_acc56 += _acc57;
			_acc43 -= _acc57;
			_acc42 -= _acc56;
			_acc54 += _acc55;
			_acc52 += _acc55;
			_acc53 += _acc54;
			_acc42 += _acc53 * vertParams[12];
			_acc43 += _acc52 * vertParams[15];
			_acc50 += _acc51;
			_acc48 += _acc51;
			_acc49 += _acc50;
			_acc42 += _acc49 * vertParams[11];
			_acc43 += _acc48 * vertParams[14];
			_acc46 += _acc47;
			_acc44 += _acc47;
			_acc45 += _acc46;
			_acc42 += _acc45 * vertParams[10];
			_acc43 += _acc44 * vertParams[13];
			_acc41 += _acc43 * primary[2];
			_acc1 += _acc43 * _t41;
			_acc41 -= _acc42;
			_t1671 = 2.000000 * _t41;
			_t1672 = (float)1.0 / (_t1671);
			_acc40 += _acc41 * _t1672;
			_acc0 -= _acc40;
		}
		else {
		}
	}
	else cif (vertParams[4] == 2.000000) {
		_acc452 = _acc4;
		_acc455 = _acc5;
		_acc458 = _acc6;
		_acc398 = _acc7;
		_acc399 = _acc8;
		_acc400 = _acc9;
		_acc375 = _acc10;
		_acc376 = _acc11;
		_acc377 = _acc12;
		_acc462 = _acc14;
		_acc397 = _acc15;
		_acc397 += _acc462 * _t461;
		_acc461 += _acc462 * _t397;
		_acc460 += _acc461 * 0.318310;
		_t1673 = _t460 * _t460;
		_t1674 = -_t1673;
		_acc459 += _acc460 * _t1674;
		_acc457 += _acc458;
		_acc456 += _acc457 * scene[37];
		_acc449 += _acc456;
		_acc400 -= _acc456;
		_acc454 += _acc455;
		_acc453 += _acc454 * scene[37];
		_acc446 += _acc453;
		_acc399 -= _acc453;
		_acc451 += _acc452;
		_acc450 += _acc451 * scene[37];
		_acc443 += _acc450;
		_acc398 -= _acc450;
		_acc448 += _acc449;
		_acc447 += _acc449;
		_acc420 += _acc448 * _t423;
		_acc423 += _acc448 * _t420;
		_acc419 += _acc447 * _t426;
		_acc426 += _acc447 * _t419;
		_acc445 += _acc446;
		_acc444 += _acc446;
		_acc420 += _acc445 * _t422;
		_acc422 += _acc445 * _t420;
		_acc419 += _acc444 * _t425;
		_acc425 += _acc444 * _t419;
		_acc442 += _acc443;
		_acc441 += _acc443;
		_acc420 += _acc442 * _t421;
		_acc421 += _acc442 * _t420;
		_acc419 += _acc441 * _t424;
		_acc424 += _acc441 * _t419;
		cif (_t400 < -0.999999) {
		}
		else {
			_acc436 = _acc421;
			_acc432 = _acc422;
			_acc433 = _acc423;
			_acc432 = _acc424;
			_acc440 = _acc425;
			_acc437 = _acc426;
			_acc439 -= _acc440;
			_acc438 += _acc439 * _t429;
			_acc429 += _acc439 * _t438;
			_t1675 = 2.000000 * _t399;
			_acc399 += _acc438 * _t1675;
			_acc399 -= _acc437;
			_acc435 -= _acc436;
			_acc434 += _acc435 * _t429;
			_acc429 += _acc435 * _t434;
			_t1676 = 2.000000 * _t398;
			_acc398 += _acc434 * _t1676;
			_acc398 -= _acc433;
			_acc431 += _acc432 * _t429;
			_acc429 += _acc432 * _t431;
			_acc430 += _acc431 * _t399;
			_acc399 += _acc431 * _t430;
			_acc398 -= _acc430;
			_t1677 = _t429 * _t429;
			_t1678 = -_t1677;
			_acc428 += _acc429 * _t1678;
			_acc400 += _acc428;
		}
		_acc405 += _acc420 * _t418;
		_acc418 += _acc420 * _t405;
		_acc405 += _acc419 * _t417;
		_acc417 += _acc419 * _t405;
		_t1679 = sin(_t406);
		_t1680 = -_t1679;
		_acc406 += _acc418 * _t1680;
		_t1681 = cos(_t406);
		_acc406 += _acc417 * _t1681;
		cif (_t402 == 0.000000) {
		}
		else cif (_t404 == 0.000000) {
		}
		else cif (_t409 > _t410) {
			_acc402 = _acc405;
			_acc413 = _acc406;
			_acc412 += _acc413 * 0.785398;
			_t1682 = (float)1.0 / (_t402);
			_acc404 += _acc412 * _t1682;
			_t1683 = -_t404;
			_t1684 = _t1682 * _t1682;
			_t1685 = _t1683 * _t1684;
			_acc402 += _acc412 * _t1685;
		}
		else {
			_acc404 = _acc405;
			_acc416 = _acc406;
			_acc415 -= _acc416;
			_acc414 += _acc415 * 0.785398;
			_t1686 = (float)1.0 / (_t404);
			_acc402 += _acc414 * _t1686;
			_t1687 = -_t402;
			_t1688 = _t1686 * _t1686;
			_t1689 = _t1687 * _t1688;
			_acc404 += _acc414 * _t1689;
		}
		_acc403 += _acc404;
		_acc1 += _acc403 * 2.000000;
		_acc401 += _acc402;
		_acc0 += _acc401 * 2.000000;
		_acc332 -= _acc400;
		_acc337 -= _acc399;
		_acc342 -= _acc398;
		_t1690 = (float)1.0 / (_t381);
		_acc396 += _acc397 * _t1690;
		_t1691 = -_t396;
		_t1692 = _t1690 * _t1690;
		_t1693 = _t1691 * _t1692;
		_acc381 += _acc397 * _t1693;
		_acc395 += _acc396 * vertParams[57];
		_acc394 += _acc395;
		_acc388 += _acc395;
		_acc393 += _acc394 * vertParams[55];
		_acc392 += _acc393;
		_acc389 += _acc393;
		_acc391 += _acc392;
		_acc390 += _acc392;
		_acc349 += _acc391 * 0.212671;
		_acc354 += _acc390 * 0.715160;
		_acc359 += _acc389 * 0.072169;
		_acc387 += _acc388 * vertParams[56];
		_acc386 += _acc387;
		_acc383 += _acc387;
		_acc385 += _acc386;
		_acc384 += _acc386;
		_acc364 += _acc385 * 0.212671;
		_acc369 += _acc384 * 0.715160;
		_acc374 += _acc383 * 0.072169;
		cif (_t378 >= 0.000000) {
			_acc378 = _acc381;
		}
		else {
		}
		cif (_t323 >= 0.000000) {
			_acc323 = _acc378;
		}
		else {
			_acc380 = _acc378;
			_acc323 -= _acc380;
		}
		_acc359 += _acc377;
		_acc374 += _acc377;
		_acc354 += _acc376;
		_acc369 += _acc376;
		_acc349 += _acc375;
		_acc364 += _acc375;
		_acc373 += _acc374;
		_acc371 += _acc374;
		_acc372 += _acc373 * _t297;
		_acc297 += _acc373 * _t372;
		_acc343 += _acc372 * vertParams[51];
		_acc370 += _acc371 * _t297;
		_acc297 += _acc371 * _t370;
		_acc306 += _acc370 * vertParams[54];
		_acc368 += _acc369;
		_acc366 += _acc369;
		_acc367 += _acc368 * _t297;
		_acc297 += _acc368 * _t367;
		_acc343 += _acc367 * vertParams[50];
		_acc365 += _acc366 * _t297;
		_acc297 += _acc366 * _t365;
		_acc306 += _acc365 * vertParams[53];
		_acc363 += _acc364;
		_acc361 += _acc364;
		_acc362 += _acc363 * _t297;
		_acc297 += _acc363 * _t362;
		_acc343 += _acc362 * vertParams[49];
		_acc360 += _acc361 * _t297;
		_acc297 += _acc361 * _t360;
		_acc306 += _acc360 * vertParams[52];
		_acc358 += _acc359;
		_acc356 += _acc359;
		_acc357 += _acc358 * _t344;
		_acc344 += _acc358 * _t357;
		_acc343 += _acc357 * vertParams[45];
		_acc355 += _acc356 * _t344;
		_acc344 += _acc356 * _t355;
		_acc306 += _acc355 * vertParams[48];
		_acc353 += _acc354;
		_acc351 += _acc354;
		_acc352 += _acc353 * _t344;
		_acc344 += _acc353 * _t352;
		_acc343 += _acc352 * vertParams[44];
		_acc350 += _acc351 * _t344;
		_acc344 += _acc351 * _t350;
		_acc306 += _acc350 * vertParams[47];
		_acc348 += _acc349;
		_acc346 += _acc349;
		_acc347 += _acc348 * _t344;
		_acc344 += _acc348 * _t347;
		_acc343 += _acc347 * vertParams[43];
		_acc345 += _acc346 * _t344;
		_acc344 += _acc346 * _t345;
		_acc306 += _acc345 * vertParams[46];
		_acc297 -= _acc344;
		_acc306 -= _acc343;
		_acc341 += _acc342;
		_acc338 += _acc342;
		_acc340 += _acc341;
		_acc339 += _acc341;
		_acc132 += _acc340 * _t327;
		_acc327 += _acc340 * _t132;
		_acc136 += _acc339 * _t324;
		_acc324 += _acc339 * _t136;
		_acc140 += _acc338 * _t326;
		_acc326 += _acc338 * _t140;
		_acc336 += _acc337;
		_acc333 += _acc337;
		_acc335 += _acc336;
		_acc334 += _acc336;
		_acc133 += _acc335 * _t327;
		_acc327 += _acc335 * _t133;
		_acc137 += _acc334 * _t324;
		_acc324 += _acc334 * _t137;
		_acc141 += _acc333 * _t326;
		_acc326 += _acc333 * _t141;
		_acc331 += _acc332;
		_acc328 += _acc332;
		_acc330 += _acc331;
		_acc329 += _acc331;
		_acc134 += _acc330 * _t327;
		_acc327 += _acc330 * _t134;
		_acc138 += _acc329 * _t324;
		_acc324 += _acc329 * _t138;
		_acc142 += _acc328 * _t326;
		_acc326 += _acc328 * _t142;
		_acc321 += _acc327 * _t323;
		_acc323 += _acc327 * _t321;
		_acc325 += _acc326 * _t323;
		_acc323 += _acc326 * _t325;
		_acc322 -= _acc325;
		_t1694 = sin(_t320);
		_t1695 = -_t1694;
		_acc320 += _acc324 * _t1695;
		_t1696 = cos(_t320);
		_acc320 += _acc323 * _t1696;
		_t1697 = sin(_t318);
		_t1698 = -_t1697;
		_acc318 += _acc322 * _t1698;
		_t1699 = cos(_t318);
		_acc318 += _acc321 * _t1699;
		_acc319 += _acc320 * vertParams[42];
		_acc316 += _acc319;
		_acc317 += _acc318 * vertParams[41];
		_acc315 += _acc317;
		_acc297 += _acc316;
		_acc306 += _acc315;
		cif (_t293 < 0.500000) {
			_acc310 = _acc306;
			_acc309 -= _acc310;
			_t1700 = 2.000000 * _t309;
			_t1701 = (float)1.0 / (_t1700);
			_acc308 += _acc309 * _t1701;
			_acc293 += _acc308 * 2.000000;
		}
		else {
			_acc314 = _acc306;
			_acc313 += _acc314;
			_t1702 = 2.000000 * _t313;
			_t1703 = (float)1.0 / (_t1702);
			_acc312 += _acc313 * _t1703;
			_acc311 += _acc312 * 2.000000;
			_acc293 += _acc311;
		}
		cif (_t296 < 0.500000) {
			_acc301 = _acc297;
			_acc300 -= _acc301;
			_t1704 = 2.000000 * _t300;
			_t1705 = (float)1.0 / (_t1704);
			_acc299 += _acc300 * _t1705;
			_acc296 += _acc299 * 2.000000;
		}
		else {
			_acc305 = _acc297;
			_acc304 += _acc305;
			_t1706 = 2.000000 * _t304;
			_t1707 = (float)1.0 / (_t1706);
			_acc303 += _acc304 * _t1707;
			_acc302 += _acc303 * 2.000000;
			_acc296 += _acc302;
		}
		_t1708 = (float)1.0 / (_t294);
		_acc295 += _acc296 * _t1708;
		_t1709 = -_t295;
		_t1710 = _t1708 * _t1708;
		_t1711 = _t1709 * _t1710;
		_acc294 += _acc296 * _t1711;
		_acc3 += _acc295;
		_t1712 = (float)1.0 / (_t291);
		_acc292 += _acc293 * _t1712;
		_t1713 = -_t292;
		_t1714 = _t1712 * _t1712;
		_t1715 = _t1713 * _t1714;
		_acc291 += _acc293 * _t1715;
		_acc2 += _acc292;
		cif (vertParams[5] == 0.000000) {
			_acc160 = _acc132;
			_acc162 = _acc133;
			_acc164 = _acc134;
			_acc166 = _acc136;
			_acc169 = _acc137;
			_acc171 = _acc138;
			_acc173 = _acc140;
			_acc175 = _acc141;
			_acc178 = _acc142;
			_acc177 -= _acc178;
			_acc176 += _acc177 * 2.000000;
			_acc149 += _acc176;
			_acc150 += _acc176;
			_acc174 += _acc175 * 2.000000;
			_acc154 += _acc174;
			_acc155 -= _acc174;
			_acc172 += _acc173 * 2.000000;
			_acc153 += _acc172;
			_acc156 += _acc172;
			_acc170 += _acc171 * 2.000000;
			_acc154 += _acc170;
			_acc155 += _acc170;
			_acc168 -= _acc169;
			_acc167 += _acc168 * 2.000000;
			_acc149 += _acc167;
			_acc151 += _acc167;
			_acc165 += _acc166 * 2.000000;
			_acc152 += _acc165;
			_acc157 -= _acc165;
			_acc163 += _acc164 * 2.000000;
			_acc153 += _acc163;
			_acc156 -= _acc163;
			_acc161 += _acc162 * 2.000000;
			_acc152 += _acc161;
			_acc157 += _acc161;
			_acc159 -= _acc160;
			_acc158 += _acc159 * 2.000000;
			_acc150 += _acc158;
			_acc151 += _acc158;
		}
		else {
			_acc272 = _acc132;
			_acc274 = _acc133;
			_acc276 = _acc134;
			_acc278 = _acc136;
			_acc281 = _acc137;
			_acc283 = _acc138;
			_acc285 = _acc140;
			_acc287 = _acc141;
			_acc290 = _acc142;
			_acc289 -= _acc290;
			_acc288 += _acc289 * 2.000000;
			_acc261 += _acc288;
			_acc262 += _acc288;
			_acc286 += _acc287 * 2.000000;
			_acc266 += _acc286;
			_acc267 -= _acc286;
			_acc284 += _acc285 * 2.000000;
			_acc265 += _acc284;
			_acc268 += _acc284;
			_acc282 += _acc283 * 2.000000;
			_acc266 += _acc282;
			_acc267 += _acc282;
			_acc280 -= _acc281;
			_acc279 += _acc280 * 2.000000;
			_acc261 += _acc279;
			_acc263 += _acc279;
			_acc277 += _acc278 * 2.000000;
			_acc264 += _acc277;
			_acc269 -= _acc277;
			_acc275 += _acc276 * 2.000000;
			_acc265 += _acc275;
			_acc268 -= _acc275;
			_acc273 += _acc274 * 2.000000;
			_acc264 += _acc273;
			_acc269 += _acc273;
			_acc271 -= _acc272;
			_acc270 += _acc271 * 2.000000;
			_acc262 += _acc270;
			_acc263 += _acc270;
			_acc209 += _acc269 * _t210;
			_acc210 += _acc269 * _t209;
			_acc208 += _acc268 * _t210;
			_acc210 += _acc268 * _t208;
			_acc207 += _acc267 * _t210;
			_acc210 += _acc267 * _t207;
			_acc208 += _acc266 * _t209;
			_acc209 += _acc266 * _t208;
			_acc207 += _acc265 * _t209;
			_acc209 += _acc265 * _t207;
			_acc207 += _acc264 * _t208;
			_acc208 += _acc264 * _t207;
			_acc209 += _acc263 * _t209;
			_acc209 += _acc263 * _t209;
			_acc208 += _acc262 * _t208;
			_acc208 += _acc262 * _t208;
			_acc207 += _acc261 * _t207;
			_acc207 += _acc261 * _t207;
			cif (_t200 > 0.999500) {
				_acc227 = _acc207;
				_acc228 = _acc208;
				_acc229 = _acc209;
				_acc230 = _acc210;
				_acc224 += _acc230 * _t226;
				_acc226 += _acc230 * _t224;
				_acc221 += _acc229 * _t226;
				_acc226 += _acc229 * _t221;
				_acc218 += _acc228 * _t226;
				_acc226 += _acc228 * _t218;
				_acc215 += _acc227 * _t226;
				_acc226 += _acc227 * _t215;
				_t1716 = _t226 * _t226;
				_t1717 = -_t1716;
				_acc225 += _acc226 * _t1717;
				_t1718 = (float)1.0 / (_t225);
				_t1719 = _t215 * _t1718;
				_acc215 += _acc225 * _t1719;
				_t1720 = _t218 * _t1718;
				_acc218 += _acc225 * _t1720;
				_t1721 = _t221 * _t1718;
				_acc221 += _acc225 * _t1721;
				_t1722 = _t224 * _t1718;
				_acc224 += _acc225 * _t1722;
				_acc223 += _acc224;
				_acc222 += _acc224;
				_acc212 += _acc223 * vertParams[15];
				_acc199 += _acc222 * primary[0];
				_acc220 += _acc221;
				_acc219 += _acc221;
				_acc212 += _acc220 * vertParams[14];
				_acc198 += _acc219 * primary[0];
				_acc217 += _acc218;
				_acc216 += _acc218;
				_acc212 += _acc217 * vertParams[13];
				_acc197 += _acc216 * primary[0];
				_acc214 += _acc215;
				_acc213 += _acc215;
				_acc212 += _acc214 * vertParams[12];
				_acc196 += _acc213 * primary[0];
			}
			else {
				_acc251 = _acc207;
				_acc254 = _acc208;
				_acc257 = _acc209;
				_acc260 = _acc210;
				_acc259 += _acc260;
				_acc258 += _acc260;
				_acc248 += _acc259 * vertParams[15];
				_acc246 += _acc258 * _t247;
				_acc247 += _acc258 * _t246;
				_acc256 += _acc257;
				_acc255 += _acc257;
				_acc248 += _acc256 * vertParams[14];
				_acc245 += _acc255 * _t247;
				_acc247 += _acc255 * _t245;
				_acc253 += _acc254;
				_acc252 += _acc254;
				_acc248 += _acc253 * vertParams[13];
				_acc244 += _acc252 * _t247;
				_acc247 += _acc252 * _t244;
				_acc250 += _acc251;
				_acc249 += _acc251;
				_acc248 += _acc250 * vertParams[12];
				_acc243 += _acc249 * _t247;
				_acc247 += _acc249 * _t243;
				_t1723 = sin(_t232);
				_t1724 = -_t1723;
				_acc232 += _acc248 * _t1724;
				_t1725 = cos(_t232);
				_acc232 += _acc247 * _t1725;
				_acc240 += _acc246 * _t242;
				_acc242 += _acc246 * _t240;
				_acc238 += _acc245 * _t242;
				_acc242 += _acc245 * _t238;
				_acc236 += _acc244 * _t242;
				_acc242 += _acc244 * _t236;
				_acc234 += _acc243 * _t242;
				_acc242 += _acc243 * _t234;
				_t1726 = _t242 * _t242;
				_t1727 = -_t1726;
				_acc241 += _acc242 * _t1727;
				_t1728 = (float)1.0 / (_t241);
				_t1729 = _t234 * _t1728;
				_acc234 += _acc241 * _t1729;
				_t1730 = _t236 * _t1728;
				_acc236 += _acc241 * _t1730;
				_t1731 = _t238 * _t1728;
				_acc238 += _acc241 * _t1731;
				_t1732 = _t240 * _t1728;
				_acc240 += _acc241 * _t1732;
				_acc199 += _acc240;
				_acc239 -= _acc240;
				_acc200 += _acc239 * vertParams[15];
				_acc198 += _acc238;
				_acc237 -= _acc238;
				_acc200 += _acc237 * vertParams[14];
				_acc197 += _acc236;
				_acc235 -= _acc236;
				_acc200 += _acc235 * vertParams[13];
				_acc196 += _acc234;
				_acc233 -= _acc234;
				_acc200 += _acc233 * vertParams[12];
				_acc231 += _acc232 * primary[0];
				_t1733 = _t200 * _t200;
				_t1734 = 1.000000-_t1733;
				_t1735 = sqrt(_t1734);
				_t1736 = (float)1.0 / (_t1735);
				_t1737 = -_t1736;
				_acc200 += _acc231 * _t1737;
			}
			cif (_t195 < 0.000000) {
				_acc202 = _acc196;
				_acc203 = _acc197;
				_acc204 = _acc198;
				_acc205 = _acc199;
				_acc206 = _acc200;
				_acc195 -= _acc206;
			}
			else {
				_acc195 = _acc200;
			}
			_acc194 += _acc195;
			_acc189 += _acc195;
			_acc193 += _acc194;
			_acc190 += _acc194;
			_acc192 += _acc193;
			_acc191 += _acc193;
		}
	}
	else {
	}
	grad[0] = _acc0;
	grad[1] = _acc1;
	grad[2] = _acc2;
	grad[3] = _acc3;
}
export void evaluate_path_bidir_mala_1_2_static_derv(uniform const float lens[2], uniform const float primary[5], uniform const float scene[38], uniform const float vertParams[238], uniform float grad[]) {
	float g[4] = {0};
	evaluate_path_bidir_mala_1_2_static_derv_kernel(lens, primary, scene, vertParams, g);
	foreach (index = 0 ... 4) {
		grad[index] = g[index];
	}
}
