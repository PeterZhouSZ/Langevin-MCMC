static void evaluate_path_bidir_mala_3_1_static_derv_kernel(uniform const float lens[2], uniform const float primary[7], uniform const float scene[38], uniform const float vertParams[297], float grad[6]) {
	uniform float _t2446, _t2445, _t2444, _t2443, _t2442, _t2441, _t2440, _t2439, _t2437, _t2433, _t2432, _t2429, _t2420, _t2419, _t2417, _t2428, _t2418, _t2438, _t2436, _t2426, _t2425, _t2431, _t2424, _t1701, _t1700, _t1699, _t1697, _t1696, _t2048, _t2047, _t2046, _t2043, _t2042, _t2040, _t2039, _t2033, _t1965, _t1963, _t2032, _t2028, _t2025, _t2020, _t2019, _t2017, _t2016, _t2014, _t2013, _t2010, _t2007, _t2009, _t2006, _t2004, _t1999, _t1998, _t1996, _t1994, _t1993, _t1992, _t1987, _t1989, _t1986, _t1985, _t1984, _t1979, _t1978, _t1977, _t1969, _t1968, _t1962, _t1961, _t1960, _t1958, _t1957, _t1956, _t1955, _t1953, _t1952, _t1951, _t1950, _t1949, _t1948, _t1946, _t1942, _t1941, _t1940, _t1939, _t1938, _t1937, _t1936, _t1935, _t1934, _t1933, _t1932, _t1931, _t1929, _t1927, _t1926, _t1925, _t1924, _t1923, _t1921, _t1920, _t1905, _t1916, _t1915, _t1914, _t1913, _t1912, _t1911, _t1908, _t1907, _t1903, _t1900, _t1902, _t1899, _t1883, _t1887, _t1894, _t1893, _t1892, _t1891, _t1890, _t1889, _t1882, _t2000, _t1881, _t1878, _t1880, _t1873, _t1875, _t1870, _t1852, _t1869, _t1698, _t1868, _t1867, _t1862, _t1859, _t1858, _t1856, _t1851, _t1850, _t1849, _t1848, _t1844, _t1842, _t1841, _t1839, _t1834, _t1831, _t1828, _t1827, _t1811, _t1810, _t1808, _t1825, _t1821, _t1819, _t1818, _t1817, _t1816, _t1815, _t1805, _t1795, _t1794, _t1793, _t1791, _t1788, _t1787, _t1786, _t1785, _t1783, _t1781, _t1779, _t1771, _t2001, _t1769, _t1997, _t1767, _t1765, _t1764, _t1749, _t1748, _t1747, _t1777, _t1746, _t1745, _t1757, _t1865, _t1755, _t1754, _t1752, _t1751, _t1719, _t1759, _t1718, _t1758, _t1717, _t1735, _t1734, _t1733, _t1732, _t1744, _t1743, _t1742, _t1741, _t1740, _t1775, _t1739, _t1774, _t1738, _t1731, _t1995, _t1730, _t1729, _t1726, _t1725, _t1877, _t1724, _t1722, _t1709, _t1708, _t1756, _t1707, _t1753, _t1706, _t1714, _t1713, _t1712, _t1711, _t2041, _t1331, _t1330, _t1329, _t1328, _t1327, _t1695, _t1694, _t1970, _t1693, _t1692, _t1688, _t1687, _t1686, _t1681, _t1680, _t1959, _t1679, _t1678, _t1677, _t1676, _t1674, _t1673, _t1671, _t1668, _t1670, _t1667, _t1666, _t1657, _t1656, _t1655, _t781, _t84, _t780, _t83, _t798, _t962, _t1641, _t797, _t221, _t792, _t788, _t393, _t1335, _t771, _t1334, _t770, _t1020, _t777, _t61, _t776, _t390, _t747, _t1400, _t755, _t192, _t753, _t1411, _t749, _t731, _t746, _t1128, _t1408, _t721, _t743, _t1683, _t725, _t830, _t1249, _t733, _t1248, _t730, _t271, _t1580, _t817, _t1397, _t835, _t1715, _t1422, _t2034, _t834, _t1685, _t724, _t1790, _t510, _t1047, _t720, _t742, _t1122, _t1947, _t1258, _t1120, _t713, _t1599, _t1459, _t710, _t709, _t704, _t703, _t702, _t113, _t715, _t1402, _t699, _t563, _t562, _t561, _t559, _t1675, _t719, _t741, _t135, _t1205, _t1789, _t329, _t328, _t408, _t1206, _t1568, _t1833, _t939, _t1204, _t705, _t461, _t701, _t344, _t339, _t700, _t1918, _t571, _t873, _t572, _t1318, _t1803, _t1919, _t574, _t874, _t648, _t1113, _t1240, _t643, _t642, _t641, _t1385, _t765, _t636, _t1066, _t1485, _t634, _t1944, _t756, _t633, _t257, _t630, _t16, _t627, _t2044, _t1527, _t639, _t759, _t758, _t270, _t819, _t269, _t42, _t264, _t1392, _t737, _t786, _t1250, _t2421, _t581, _t583, _t1257, _t1376, _t1355, _t580, _t1991, _t579, _t1348, _t575, _t2035, _t1589, _t872, _t2416, _t1413, _t397, _t1200, _t538, _t1594, _t1943, _t558, _t949, _t1125, _t297, _t555, _t1609, _t553, _t91, _t318, _t992, _t551, _t549, _t398, _t1689, _t548, _t1196, _t1690, _t546, _t543, _t1186, _t1896, _t1280, _t536, _t532, _t1247, _t527, _t2427, _t646, _t1236, _t1235, _t1035, _t692, _t231, _t67, _t1823, _t526, _t1237, _t635, _t502, _t638, _t1516, _t501, _t628, _t2018, _t493, _t487, _t413, _t412, _t796, _t98, _t485, _t478, _t1238, _t477, _t330, _t1326, _t462, _t79, _t464, _t1600, _t451, _t1151, _t450, _t488, _t1165, _t436, _t1073, _t416, _t1201, _t423, _t882, _t621, _t370, _t480, _t1368, _t768, _t1322, _t623, _t479, _t1365, _t434, _t790, _t1651, _t433, _t108, _t432, _t110, _t431, _t109, _t789, _t1650, _t430, _t37, _t974, _t1649, _t2027, _t278, _t1479, _t429, _t428, _t422, _t421, _t327, _t268, _t506, _t1728, _t207, _t1792, _t522, _t1876, _t1857, _t63, _t406, _t45, _t200, _t190, _t1661, _t211, _t734, _t1062, _t775, _t258, _t476, _t187, _t745, _t1830, _t353, _t892, _t1813, _t439, _t943, _t707, _t17, _t234, _t405, _t1203, _t82, _t953, _t557, _t752, _t1410, _t205, _t1069, _t127, _t1025, _t62, _t343, _t377, _t1191, _t466, _t864, _t1021, _t863, _t88, _t787, _t87, _t750, _t629, _t1481, _t491, _t620, _t806, _t137, _t761, _t194, _t77, _t182, _t1381, _t791, _t384, _t136, _t940, _t148, _t763, _t1762, _t193, _t1784, _t1075, _t181, _t1380, _t1466, _t1232, _t383, _t124, _t298, _t1015, _t832, _t811, _t1972, _t332, _t1212, _t1584, _t861, _t470, _t1058, _t310, _t1333, _t1778, _t950, _t1616, _t1332, _t323, _t50, _t760, _t1586, _t307, _t622, _t1188, _t1366, _t437, _t121, _t2012, _t158, _t389, _t52, _t1845, _t762, _t513, _t2036, _t1930, _t144, _t284, _t1591, _t183, _t195, _t78, _t706, _t81, _t306, _t952, _t296, _t38, _t452, _t129, _t36, _t1843, _t130, _t58, _t348, _t33, _t862, _t32, _t1496, _t1928, _t1519, _t973, _t31, _t1444, _t1539, _t794, _t1634, _t484, _t1324, _t961, _t1640, _t123, _t7, _t1638, _t12, _t2022, _t1545, _t1964, _t542, _t1184, _t401, _t228, _t1157, _t184, _t1582, _t632, _t254, _t1572, _t1383, _t196, _t93, _t465, _t197, _t1384, _t39, _t180, _t1379, _t76, _t320, _t1608, _t6, _t29, _t47, _t960, _t262, _t1109, _t382, _t414, _t2422, _t59, _t1645, _t106, _t97, _t30, _t498, _t322, _t185, _t394, _t920, _t508, _t202, _t694, _t53, _t840, _t72, _t697, _t1126, _t1716, _t46, _t1083, _t363, _t509, _t1430, _t357, _t256, _t1981, _t23, _t1835, _t24, _t227, _t400, _t474, _t986, _t497, _t392, _t889, _t1806, _t528, _t930, _t48, _t1614, _t303, _t312, _t880, _t766, _t504, _t468, _t204, _t1085, _t818, _t1394, _t1579, _t435, _t25, _t801, _t844, _t26, _t1074, _t199, _t189, _t198, _t1308, _t403, _t233, _t486, _t800, _t653, _t1367, _t695, _t1804, _t40, _t814, _t1283, _t2415, _t1343, _t2430, _t618, _t1492, _t442, _t1663, _t213, _t1064, _t1895, _t1279, _t35, _t308, _t415, _t489, _t966, _t140, _t94, _t151, _t1427, _t9, _t15, _t1317, _t131, _t537, _t1251, _t68, _t132, _t356, _t226, _t399, _t1241, _t711, _t283, _t143, _t49, _t28, _t340, _t100, _t1442, _t708, _t1154, _t34, _t142, _t417, _t57, _t64, _t125, _t467, _t201, _t407, _t1581, _t51, _t122, _t420, _t1662, _t212, _t735, _t1063, _t66, _t1837, _t1162, _t117, _t1633, _t85, _t1067, _t1564, _t55, _t1917, _t570, _t1352, _t455, _t21, _t315, _t65, _t1983, _t111, _t1065, _t481, _t1213, _t95, _t1782, _t1071, _t454, _t1152, _t128, _t449, _t1149, _t1446, _t456, _t1403, _t426, _t1797, _t1658, _t208, _t374, _t1468, _t309, _t89, _t263, _t1110, _t379, _t90, _t1585, _t222, _t380, _t727, _t149, _t287, _t573, _t1320, _t812, _t1084, _t1847, _t104, _t566, _t1508, _t1443, _t1541, _t1802, _t523, _t216, _t218, _t891, _t1807, _t931, _t10, _t1562, _t388, _t119, _t833, _t1163, _t1587, _t223, _t1780, _t838, _t1773, _t1448, _t381, _t779, _t1624, _t1684, _t723, _t425, _t1615, _t586, _t105, _t858, _t1349, _t445, _t1976, _t997, _t1824, _t112, _t342, _t995, _t1140, _t1181, _t1866, _t230, _t495, _t625, _t1664, _t214, _t899, _t496, _t626, _t215, _t2015, _t159, _t1967, _t980, _t544, _t252, _t191, _t418, _t253, _t545, _t457, _t424, _t375, _t352, _t640, _t1517, _t828, _t102, _t101, _t259, _t103, _t261, _t1108, _t738, _t751, _t115, _t1060, _t334, _t1583, _t326, _t1540, _t225, _t2005, _t11, _t266, _t1393, _t754, _t1398, _t619, _t116, _t525, _t54, _t260, _t524, _t107, _t341, _t911, _t1542, _t560, _t936, _t351, _t533, _t1721, _t1432, _t990, _t1142, _t120, _t831, _t1164, _t224, _t2037, _t145, _t285, _t896, _t813, _t1945, _t757, _t1567, _t96, _t301, _t302, _t767, _t505, _t1727, _t206, _t1086, _t305, _t1854, _t74, _t311, _t75, _t319, _t147, _t286, _t2045, _t146, _t20, _t1520, _t255, _t118, _t378, _t43, _t337, _t1566, _t338, _t999, _t652, _t875, _t1809, _t530, _t347, _t914, _t1267, _t1549, _t331, _t114, _t637, _t350, _t529, _t1440, _t520, _t1598, _t507, _t1691, _t547, _t984, _t492, _t361, _t203, _t521, _t13, _t362, _t460, _t19, _t459, _t364, _t1431, _t18, _t359, _t518, _t1460, _t712, _t469, _t1439, _t360, _t1737, _t73, _t1975, _t994, _t809, _t367, _t535, _t1252, _t133, _t69, _t134, _t371, _t373, _t376, _t1193, _t716, _t472, _t1798, _t1659, _t209, _t958, _t556, _t391, _t186, _t395, _t932, _t396, _t1836, _t1161, _t99, _t1838, _t178, _t1452, _t1820, _t179, _t1453, _t698, _t70, _t1482, _t409, _t1207, _t1569, _t410, _t80, _t366, _t1208, _t411, _t483, _t1840, _t782, _t784, _t1386, _t799, _t1387, _t845, _t803, _t358, _t804, _t494, _t624, _t807, _t808, _t1971, _t989, _t369, _t810, _t815, _t820, _t821, _t822, _t823, _t22, _t824, _t2434, _t825, _t2435, _t826, _t150, _t288, _t188, _t289, _t290, _t552, _t8, _t829, _t2003, _t1872, _t1424, _t2002, _t836, _t1423, _t857, _t516, _t335, _t851, _t519, _t852, _t517, _t853, _t860, _t1909, _t866, _t868, _t1312, _t869, _t650, _t870, _t649, _t871, _t876, _t576, _t883, _t577, _t884, _t885, _t1922, _t886, _t887, _t996, _t888, _t877, _t878, _t879, _t1761, _t1723, _t897, _t898, _t900, _t901, _t890, _t1760, _t893, _t1814, _t944, _t1763, _t903, _t904, _t1536, _t1610, _t906, _t1898, _t1705, _t909, _t1057, _t910, _t1613, _t1061, _t912, _t1445, _t1180, _t1274, _t219, _t856, _t922, _t1270, _t1885, _t1449, _t220, _t923, _t1271, _t924, _t1553, _t925, _t1554, _t926, _t927, _t1556, _t928, _t1822, _t160, _t929, _t933, _t349, _t934, _t935, _t1832, _t937, _t1199, _t355, _t938, _t1632, _t919, _t1388, _t1194, _t1897, _t1281, _t1826, _t946, _t947, _t1117, _t1319, _t948, _t438, _t942, _t1799, _t1660, _t210, _t959, _t217, _t963, _t1954, _t972, _t964, _t965, _t86, _t967, _t968, _t839, _t1637, _t1465, _t970, _t951, _t1801, _t971, _t1642, _t975, _t976, _t540, _t977, _t1648, _t978, _t1682, _t979, _t515, _t1654, _t981, _t982, _t983, _t550, _t988, _t1974, _t993, _t1141, _t71, _t1483, _t1001, _t1002, _t1003, _t1004, _t346, _t1005, _t1006, _t345, _t1007, _t1008, _t1009, _t1010, _t1011, _t1012, _t1829, _t534, _t1013, _t354, _t1014, _t1017, _t1018, _t1022, _t265, _t954, _t1076, _t1886, _t1023, _t1026, _t1027, _t1273, _t905, _t1030, _t1354, _t728, _t1034, _t1356, _t60, _t1036, _t1360, _t1037, _t1038, _t1039, _t1361, _t1041, _t1042, _t1409, _t1032, _t1272, _t1028, _t1620, _t1043, _t1044, _t1040, _t1045, _t1049, _t1052, _t1053, _t1639, _t333, _t1059, _t1054, _t1050, _t740, _t1068, _t1070, _t1072, _t1306, _t843, _t1079, _t1080, _t1081, _t1056, _t1082, _t1570, _t56, _t1114, _t1242, _t1202, _t2023, _t272, _t987, _t1119, _t2026, _t277, _t1121, _t1123, _t1259, _t1124, _t793, _t313, _t1135, _t795, _t314, _t1136, _t1139, _t1179, _t1143, _t1144, _t1145, _t1146, _t386, _t1147, _t387, _t1148, _t1155, _t1156, _t232, _t402, _t1158, _t1159, _t229, _t404, _t1160, _t783, _t1167, _t1428, _t2011, _t1533, _t1535, _t1534, _t1111, _t1574, _t1538, _t1150, _t1185, _t1559, _t1192, _t955, _t1077, _t841, _t956, _t1078, _t842, _t511, _t273, _t274, _t275, _t503, _t276, _t2029, _t279, _t1480, _t2030, _t1537, _t281, _t1198, _t714, _t1461, _t458, _t718, _t1467, _t1518, _t616, _t1233, _t578, _t1522, _t1573, _t1234, _t1243, _t1244, _t1245, _t482, _t1246, _t569, _t985, _t41, _t1401, _t27, _t1260, _t1261, _t1262, _t1263, _t1264, _t1546, _t1265, _t1547, _t1266, _t2024, _t1548, _t1268, _t1550, _t1269, _t1552, _t1275, _t1276, _t1277, _t1278, _t1282, _t1284, _t1116, _t1285, _t499, _t368, _t1590, _t1631, _t918, _t44, _t1115, _t92, _t1629, _t1630, _t1214, _t1307, _t444, _t1309, _t447, _t1310, _t443, _t1311, _t1313, _t1315, _t1316, _t1665, _t1323, _t1325, _t772, _t2414, _t1860, _t1339, _t2412, _t1861, _t1340, _t2413, _t1341, _t1342, _t1344, _t1345, _t1346, _t1347, _t1350, _t1351, _t1353, _t816, _t1189, _t1363, _t1239, _t1364, _t138, _t1369, _t139, _t1370, _t1502, _t1371, _t1503, _t1253, _t1372, _t1254, _t1373, _t1255, _t1374, _t1256, _t1375, _t1377, _t1463, _t1378, _t969, _t1464, _t1195, _t1389, _t1390, _t1391, _t1395, _t1575, _t14, _t1396, _t1576, _t1399, _t1493, _t1357, _t1358, _t1359, _t1404, _t1405, _t1406, _t1412, _t1407, _t1414, _t1980, _t1415, _t1416, _t1417, _t1418, _t1863, _t1419, _t1864, _t1420, _t1421, _t1766, _t1441, _t1447, _t1314, _t1450, _t446, _t1451, _t1454, _t126, _t1455, _t1456, _t1457, _t473, _t1458, _t471, _t1462, _t1510, _t1484, _t1494, _t1495, _t1486, _t1487, _t1904, _t1488, _t1489, _t1490, _t1504, _t564, _t1505, _t565, _t1506, _t1507, _t1509, _t1511, _t1512, _t1513, _t1514, _t1515, _t1966, _t1521, _t1523, _t1524, _t1525, _t1526, _t152, _t1528, _t153, _t1529, _t154, _t1530, _t1531, _t1532, _t1543, _t1544, _t1498, _t1499, _t1500, _t1551, _t1555, _t1557, _t1558, _t1560, _t141, _t1561, _t1563, _t1565, _t1382, _t1571, _t1577, _t1578, _t1426, _t1990, _t1592, _t1593, _t644, _t1595, _t647, _t867, _t1601, _t1497, _t1602, _t1603, _t1604, _t1596, _t1605, _t1606, _t1031, _t908, _t1607, _t1611, _t1612, _t729, _t1617, _t732, _t1618, _t1619, _t1621, _t736, _t1622, _t1623, _t1625, _t1048, _t1286, _t1626, _t1287, _t1627, _t1288, _t1628, _t1635, _t1636, _t325, _t1643, _t1644, _t1646, _t512, _t1647, _t1652, _t514, _t1653;
	float _t3077, _t3073, _t3072, _t3071, _t3070, _t3069, _t3065, _t3062, _t3061, _t3058, _t3055, _t3053, _t3050, _t3049, _t3047, _t3046, _t3045, _t3036, _t3031, _t3027, _t3025, _t3024, _t3017, _t3008, _t3005, _t3004, _t3003, _t3000, _t2999, _t2997, _t2996, _t2995, _t2985, _t2976, _t2973, _t2972, _t2971, _t2970, _t2968, _t2967, _t3059, _t2966, _t2964, _t2962, _t2957, _t2954, _t2953, _t2952, _t2951, _t3048, _t2950, _t3051, _t2949, _t2948, _t2947, _t2936, _t2933, _t2932, _t2930, _t2929, _t2927, _t2926, _t3029, _t2925, _t2923, _t2922, _t2911, _t2907, _t2902, _t2896, _t2895, _t2894, _t2879, _t2877, _t2875, _t2873, _t2871, _t2869, _t2866, _t2861, _t2858, _t2854, _t2853, _t2842, _t2838, _t2836, _t2826, _t2825, _t2823, _t2819, _t2818, _t2817, _t2815, _t2808, _t2807, _t2806, _t2986, _t2804, _t2793, _t2786, _t2785, _t2783, _t2780, _t2779, _t2776, _t2775, _t2772, _t2770, _t2769, _t2768, _t2766, _t2764, _t2763, _t2762, _t2761, _t2760, _t2759, _t2754, _t2751, _t2750, _t2746, _t2742, _t2738, _t2784, _t2736, _t2729, _t2723, _t2719, _t2860, _t2717, _t2716, _t2712, _t2711, _t2709, _t2707, _t2706, _t2704, _t2701, _t2700, _t2699, _t2698, _t2693, _t2771, _t3022, _t2690, _t2689, _t2687, _t2683, _t2682, _t3033, _t2881, _t2680, _t2787, _t2677, _t2676, _t2674, _t2737, _t2672, _t2669, _t2666, _t2664, _t2663, _t2659, _t2657, _t2655, _t2654, _t2653, _t2652, _t2870, _t2650, _t2649, _t2645, _t2644, _t2643, _t2642, _t2640, _t2864, _t2631, _t2629, _t2628, _t2625, _t2623, _t2961, _t2622, _t2713, _t2621, _t2620, _t2619, _t2610, _t2600, _t2599, _t2928, _t2598, _t2597, _t3028, _t2592, _t2591, _t2590, _t3023, _t2589, _t2588, _t2584, _t2583, _t2581, _t2580, _t2575, _t2827, _t2572, _t2571, _t2570, _t2568, _t2567, _t2904, _t2820, _t2566, _t2565, _t2564, _t2550, _t3081, _t2548, _t2546, _t2905, _t2821, _t2544, _t2543, _t3002, _t2563, _t2813, _t2539, _t2537, _t2535, _t2534, _t2993, _t2810, _t2533, _t2990, _t2527, _t2525, _t2522, _t2521, _t2519, _t2980, _t2517, _t2515, _t2514, _t2512, _t2510, _t2508, _t2507, _t2506, _t2503, _t2502, _t2501, _t2499, _t2632, _t2496, _t2493, _t2491, _t2490, _t2489, _t2487, _t2480, _t2479, _t2478, _t2474, _t2473, _t2471, _t2469, _t2468, _t2467, _t2466, _t2464, _t2463, _t2462, _t2461, _t2488, _t2718, _t2460, _t2457, _t2454, _t2451, _t2777, _t2675, _t2447, _t2916, _t2828, _t2409, _t2408, _t3011, _t2399, _t2050, _t2576, _t2049, _t2398, _t2397, _t2396, _t2395, _t2394, _t2393, _t2386, _t2385, _t2532, _t2384, _t2390, _t2389, _t3044, _t2375, _t2374, _t3043, _t2373, _t2364, _t2363, _t2357, _t2356, _t2355, _t2349, _t2348, _t2347, _t2596, _t2346, _t2344, _t2343, _t2846, _t2340, _t2339, _t2338, _t2587, _t2337, _t2336, _t2333, _t2312, _t2308, _t2305, _t2302, _t2300, _t2472, _t2296, _t2291, _t2288, _t2730, _t2287, _t2285, _t2284, _t2283, _t2727, _t2647, _t2280, _t2278, _t2276, _t2275, _t2722, _t2274, _t2273, _t2262, _t2641, _t2271, _t2665, _t2270, _t2268, _t2267, _t2266, _t2264, _t2626, _t2255, _t2252, _t2935, _t2236, _t2250, _t2249, _t2248, _t2247, _t2245, _t2244, _t2243, _t2242, _t3037, _t2231, _t2230, _t2229, _t2595, _t2226, _t2223, _t2205, _t2920, _t2216, _t2215, _t2214, _t2211, _t2209, _t2328, _t2609, _t2203, _t2939, _t2202, _t2201, _t2365, _t2200, _t2359, _t2196, _t2189, _t2931, _t2850, _t2228, _t2188, _t2187, _t2225, _t2185, _t2184, _t3030, _t2183, _t2182, _t3032, _t2181, _t2180, _t2834, _t2554, _t2164, _t2163, _t2577, _t2162, _t2161, _t2551, _t2160, _t2159, _t2222, _t2178, _t2844, _t2221, _t2177, _t2845, _t2220, _t2176, _t2174, _t2213, _t2171, _t2168, _t2167, _t2166, _t2052, _t3012, _t2157, _t2152, _t2151, _t2150, _t2156, _t2547, _t2155, _t2149, _t2148, _t2146, _t2145, _t2138, _t2137, _t2134, _t2119, _t2118, _t2117, _t2116, _t2115, _t2114, _t2112, _t2100, _t2099, _t2191, _t2098, _t2109, _t2108, _t2107, _t2106, _t2105, _t2072, _t2219, _t2175, _t2071, _t2217, _t2069, _t2851, _t2353, _t2088, _t2452, _t2352, _t2087, _t2351, _t2086, _t2350, _t2085, _t2092, _t2197, _t2091, _t2354, _t2186, _t2082, _t2081, _t2080, _t2079, _t2078, _t2849, _t2077, _t2342, _t2076, _t2075, _t2068, _t2062, _t2917, _t2061, _t3016, _t2837, _t2060, _t2067, _t2585, _t2066, _t2212, _t2064, _t2892, _t2372, _t2368, _t2239, _t2367, _t2238, _t2938, _t2362, _t2855, _t2095, _t2601, _t2234, _t2194, _t2459, _t2492, _t2486, _t3076, _t3079, _t3078, _t2656, _t2648, _t2277, _t2668, _t2865, _t2634, _t2574, _t2411, _t2410, _t2573, _t3010, _t2158, _t2822, _t3006, _t2909, _t2758, _t2900, _t2988, _t2528, _t2692, _t2982, _t2998, _t2748, _t2747, _t2745, _t2792, _t2321, _t2791, _t2269, _t2720, _t2721, _t2859, _t1768, _t2660, _t2257, _t2863, _t2450, _t2862, _t2265, _t2667, _t2726, _t2857, _t2633, _t2494, _t2448, _t2714, _t3009, _t2406, _t2405, _t2613, _t2465, _t2513, _t2694, _t2978, _t2788, _t2679, _t173, _t2126, _t778, _t316, _t2829, _t2830, _t2403, _t2475, _t2298, _t3020, _t2334, _t2627, _t609, _t2470, _t2306, _t2511, _t2774, _t689, _t2734, _t2974, _t2889, _t2733, _t688, _t2753, _t2556, _t2387, _t685, _t2651, _t2286, _t684, _t683, _t2688, _t672, _t1089, _t671, _t2795, _t1091, _t668, _t1090, _t2977, _t2684, _t660, _t594, _t2330, _t589, _t2885, _t295, _t2309, _t1105, _t2835, _t615, _t2233, _t1100, _t1224, _t602, _t2102, _t2101, _t2169, _t1470, _t596, _t2778, _t587, _t3060, _t2327, _t1103, _t2913, _t2498, _t3015, _t610, _t667, _t2732, _t2400, _t2614, _t2708, _t2615, _t2991, _t2918, _t593, _t2210, _t592, _t2292, _t2940, _t3039, _t2805, _t597, _t3075, _t2945, _t1227, _t2366, _t2240, _t2831, _t2054, _t769, _t1305, _t657, _t171, _t2956, _t2914, _t2994, _t2912, _t2578, _t2965, _t3074, _t902, _t2975, _t659, _t2921, _t2218, _t2070, _t827, _t2915, _t2582, _t2058, _t2289, _t656, _t2458, _t1087, _t2856, _t1436, _t676, _t235, _t2136, _t1107, _t1096, _t2299, _t691, _t2773, _t174, _t2678, _t687, _t2767, _t2147, _t242, _t2281, _t673, _t2969, _t2526, _t167, _t2867, _t2755, _t2559, _t601, _t2630, _t2495, _t2812, _t2557, _t168, _t2540, _t2481, _t3018, _t590, _t3054, _t2960, _t2924, _t2847, _t2811, _t2531, _t1218, _t608, _t2190, _t2084, _t669, _t238, _t662, _t2794, _t658, _t162, _t2697, _t2739, _t3068, _t2313, _t157, _t773, _t611, _t686, _t2989, _t2848, _t453, _t1231, _t2702, _t3040, _t2204, _t2756, _t2401, _t1220, _t3041, _t2608, _t2703, _t2541, _t2833, _t2695, _t2906, _t2824, _t2404, _t907, _t665, _t2135, _t1219, _t245, _t1216, _t2941, _t299, _t2883, _t2315, _t2611, _t2731, _t2552, _t585, _t156, _t2757, _t175, _t1474, _t2594, _t2290, _t2569, _t2453, _t2715, _t2744, _t2173, _t654, _t1106, _t2691, _t241, _t3067, _t2728, _t2520, _t666, _t1301, _t682, _t239, _t1137, _t2074, _t2090, _t3052, _t2899, _t670, _t170, _t2113, _t2579, _t2661, _t2635, _t236, _t600, _t2139, _t1104, _t177, _t604, _t2524, _t2646, _t678, _t2382, _t2329, _t2316, _t599, _t2124, _t2979, _t2685, _t3019, _t2207, _t2133, _t2127, _t2504, _t2523, _t240, _t2749, _t2903, _t2607, _t1304, _t1292, _t674, _t606, _t2083, _t2128, _t2317, _t2121, _t1178, _t2272, _t2593, _t2509, _t2983, _t244, _t248, _t249, _t250, _t251, _t1098, _t2636, _t2449, _t1302, _t2800, _t1303, _t161, _t2832, _t2553, _t2051, _t1101, _t2555, _t2809, _t1225, _t603, _t1229, _t3001, _t2542, _t1230, _t2132, _t2322, _t2195, _t246, _t2369, _t2816, _t607, _t612, _t243, _t2345, _t2891, _t2545, _t2154, _t2958, _t613, _t2963, _t3035, _t2602, _t2402, _t1129, _t584, _t605, _t2901, _t2529, _t941, _t2111, _t675, _t3042, _t2946, _t1211, _t2637, _t1434, _t2378, _t2616, _t2765, _t2893, _t2497, _t1435, _t1169, _t2959, _t854, _t1433, _t1177, _t2799, _t859, _t2530, _t2251, _t677, _t2884, _t2987, _t2391, _t176, _t2814, _t2561, _t448, _t365, _t172, _t2549, _t3056, _t2562, _t2331, _t2841, _t2170, _t2179, _t2919, _t2104, _t595, _t291, _t2110, _t1168, _t304, _t2193, _t2192, _t850, _t2981, _t2797, _t1092, _t2455, _t2260, _t2144, _t1300, _t2456, _t2261, _t2258, _t2558, _t2392, _t440, _t894, _t2908, _t2606, _t2097, _t1796, _t2639, _t2303, _t916, _t1182, _t2872, _t2671, _t2246, _t2801, _t2803, _t2314, _t2882, _t2536, _t2538, _t2141, _t2518, _t2686, _t2482, _t661, _t2516, _t2618, _t2705, _t1469, _t2984, _t2802, _t247, _t164, _t2898, _t166, _t169, _t2897, _t165, _t2383, _t2752, _t2992, _t2560, _t2724, _t2839, _t2505, _t2172, _t3021, _t2876, _t2297, _t2586, _t2301, _t2725, _t2279, _t2735, _t913, _t2878, _t2311, _t2887, _t2319, _t2320, _t1171, _t2741, _t2890, _t2318, _t2310, _t2484, _t2888, _t2485, _t2323, _t2324, _t2796, _t1093, _t2798, _t664, _t1094, _t1095, _t1097, _t1099, _t1222, _t1102, _t1294, _t2142, _t2943, _t1472, _t1478, _t3064, _t1130, _t1134, _t2120, _t1138, _t2122, _t2131, _t2130, _t1170, _t1172, _t1173, _t1131, _t1174, _t2937, _t2605, _t2198, _t2093, _t1132, _t2361, _t2096, _t1175, _t3038, _t2360, _t2094, _t1112, _t3066, _t2380, _t1187, _t2886, _t2681, _t846, _t2944, _t1473, _t1475, _t1476, _t2612, _t2710, _t1477, _t280, _t2624, _t1197, _t1209, _t1221, _t1223, _t1226, _t1228, _t2617, _t1471, _t2868, _t2670, _t679, _t2282, _t680, _t2673, _t681, _t2307, _t2143, _t1296, _t2789, _t2790, _t1293, _t2140, _t1295, _t1297, _t1298, _t1299, _t2477, _t1289, _t2743, _t1290, _t1210, _t2955, _t1215, _t3007, _t3013, _t2053, _t2325, _t3014, _t2910, _t2059, _t2840, _t2332, _t591, _t3026, _t2843, _t598, _t3057, _t1190, _t3063, _t2065, _t2500, _t2638, _t2662, _t2696, _t3080, _t567, _t3034, _t2603, _t2852, _t2604, _t2934, _t2235, _t155, _t2942, _t2370, _t2376, _t2377, _t2379, _t2253, _t2256, _t1425, _t1429, _t1437, _t2781, _t2293, _t2874, _t2782, _t2294, _t2658, _t2295, _t2304, _t2476, _t2880, _t2740, _t2483, _t1088;
	/* Forward */
	_t6 = scene[8] * 0.500000;
	_t7 = scene[4] * 0.500000;
	_t8 = _t7+_t6;
	_t9 = _t8+scene[16];
	_t10 = scene[7] * 0.500000;
	_t11 = scene[3] * 0.500000;
	_t12 = _t11+_t10;
	_t13 = _t12+scene[15];
	_t14 = scene[6] * 0.500000;
	_t15 = scene[2] * 0.500000;
	_t16 = _t15+_t14;
	_t17 = _t16+scene[14];
	_t18 = scene[5] * 0.500000;
	_t19 = scene[1] * 0.500000;
	_t20 = _t19+_t18;
	_t21 = _t20+scene[13];
	_t22 = (float)1.0 / (_t9);
	_t23 = _t13 * _t22;
	_t24 = _t17 * _t22;
	_t25 = _t21 * _t22;
	_t26 = sqrt(_t25*_t25+_t24*_t24+_t23*_t23);
	_t27 = (float)1.0 / (_t26);
	_t28 = _t25 * _t27;
	_t29 = _t24 * _t27;
	_t30 = _t23 * _t27;
	_t31 = scene[24] * scene[24];
	_t32 = scene[25] * scene[25];
	_t33 = scene[26] * scene[26];
	_t34 = scene[24] * scene[25];
	_t35 = scene[24] * scene[26];
	_t36 = scene[25] * scene[26];
	_t37 = scene[24] * scene[27];
	_t38 = scene[25] * scene[27];
	_t39 = scene[26] * scene[27];
	_t40 = _t32+_t33;
	_t41 = 2.000000 * _t40;
	_t42 = 1.000000-_t41;
	_t43 = _t34+_t39;
	_t44 = 2.000000 * _t43;
	_t45 = _t35-_t38;
	_t46 = 2.000000 * _t45;
	_t47 = _t34-_t39;
	_t48 = 2.000000 * _t47;
	_t49 = _t31+_t33;
	_t50 = 2.000000 * _t49;
	_t51 = 1.000000-_t50;
	_t52 = _t36+_t37;
	_t53 = 2.000000 * _t52;
	_t54 = _t35+_t38;
	_t55 = 2.000000 * _t54;
	_t56 = _t36-_t37;
	_t57 = 2.000000 * _t56;
	_t58 = _t31+_t32;
	_t59 = 2.000000 * _t58;
	_t60 = 1.000000-_t59;
	_t61 = _t60 * _t30;
	_t62 = _t53 * _t29;
	_t63 = _t46 * _t28;
	_t64 = _t63+_t62;
	_t65 = _t64+_t61;
	_t66 = _t57 * _t30;
	_t67 = _t51 * _t29;
	_t68 = _t44 * _t28;
	_t69 = _t68+_t67;
	_t70 = _t69+_t66;
	_t71 = _t55 * _t30;
	_t72 = _t48 * _t29;
	_t73 = _t42 * _t28;
	_t74 = _t73+_t72;
	_t75 = _t74+_t71;
	_t76 = scene[8] * primary[2];
	_t77 = scene[4] * primary[1];
	_t78 = _t77+_t76;
	_t79 = _t78+scene[16];
	_t80 = scene[7] * primary[2];
	_t81 = scene[3] * primary[1];
	_t82 = _t81+_t80;
	_t83 = _t82+scene[15];
	_t84 = scene[6] * primary[2];
	_t85 = scene[2] * primary[1];
	_t86 = _t85+_t84;
	_t87 = _t86+scene[14];
	_t88 = scene[5] * primary[2];
	_t89 = scene[1] * primary[1];
	_t90 = _t89+_t88;
	_t91 = _t90+scene[13];
	_t92 = (float)1.0 / (_t79);
	_t93 = _t83 * _t92;
	_t94 = _t87 * _t92;
	_t95 = _t91 * _t92;
	_t96 = sqrt(_t95*_t95+_t94*_t94+_t93*_t93);
	_t97 = (float)1.0 / (_t96);
	_t98 = _t95 * _t97;
	_t99 = _t94 * _t97;
	_t100 = _t93 * _t97;
	_t101 = scene[24] * scene[24];
	_t102 = scene[25] * scene[25];
	_t103 = scene[26] * scene[26];
	_t104 = scene[24] * scene[25];
	_t105 = scene[24] * scene[26];
	_t106 = scene[25] * scene[26];
	_t107 = scene[24] * scene[27];
	_t108 = scene[25] * scene[27];
	_t109 = scene[26] * scene[27];
	_t110 = _t102+_t103;
	_t111 = 2.000000 * _t110;
	_t112 = 1.000000-_t111;
	_t113 = _t104+_t109;
	_t114 = 2.000000 * _t113;
	_t115 = _t105-_t108;
	_t116 = 2.000000 * _t115;
	_t117 = _t104-_t109;
	_t118 = 2.000000 * _t117;
	_t119 = _t101+_t103;
	_t120 = 2.000000 * _t119;
	_t121 = 1.000000-_t120;
	_t122 = _t106+_t107;
	_t123 = 2.000000 * _t122;
	_t124 = _t105+_t108;
	_t125 = 2.000000 * _t124;
	_t126 = _t106-_t107;
	_t127 = 2.000000 * _t126;
	_t128 = _t101+_t102;
	_t129 = 2.000000 * _t128;
	_t130 = 1.000000-_t129;
	_t131 = _t130 * _t100;
	_t132 = _t123 * _t99;
	_t133 = _t116 * _t98;
	_t134 = _t133+_t132;
	_t135 = _t134+_t131;
	_t136 = _t127 * _t100;
	_t137 = _t121 * _t99;
	_t138 = _t114 * _t98;
	_t139 = _t138+_t137;
	_t140 = _t139+_t136;
	_t141 = _t125 * _t100;
	_t142 = _t118 * _t99;
	_t143 = _t112 * _t98;
	_t144 = _t143+_t142;
	_t145 = _t144+_t141;
	_t146 = _t75 * _t145 + _t70 * _t140 + _t65 * _t135;
	_t147 = scene[33] / _t146;
	_t148 = _t147 * _t147;
	_t149 = _t148 / _t146;
	_t150 = scene[32] / _t149;
	_t151 = _t150 * _t150;
	cif (vertParams[3] == 0.000000) {
		_t164 = vertParams[9] * vertParams[11];
		_t165 = vertParams[8] * vertParams[12];
		_t166 = _t165-_t164;
		_t167 = vertParams[8] * vertParams[13];
		_t168 = vertParams[10] * vertParams[11];
		_t169 = _t168-_t167;
		_t170 = vertParams[10] * vertParams[12];
		_t171 = vertParams[9] * vertParams[13];
		_t172 = _t171-_t170;
		_t173 = sqrt(_t172*_t172+_t169*_t169+_t166*_t166);
		_t174 = (float)1.0 / (_t173);
		_t175 = _t172 * _t174;
		_t176 = _t169 * _t174;
		_t177 = _t166 * _t174;
		_t178 = _t140 * vertParams[11];
		_t179 = _t145 * vertParams[12];
		_t180 = _t179-_t178;
		_t181 = _t145 * vertParams[13];
		_t182 = _t135 * vertParams[11];
		_t183 = _t182-_t181;
		_t184 = _t135 * vertParams[12];
		_t185 = _t140 * vertParams[13];
		_t186 = _t185-_t184;
		_t187 = _t186 * vertParams[8] + _t183 * vertParams[9] + _t180 * vertParams[10];
		_t188 = (float)1.0 / (_t187);
		_t189 = scene[18]-vertParams[5];
		_t190 = scene[19]-vertParams[6];
		_t191 = scene[20]-vertParams[7];
		_t192 = _t189 * _t186 + _t190 * _t183 + _t191 * _t180;
		_t193 = _t192 * _t188;
		_t194 = _t190 * vertParams[8];
		_t195 = _t189 * vertParams[9];
		_t196 = _t195-_t194;
		_t197 = _t189 * vertParams[10];
		_t198 = _t191 * vertParams[8];
		_t199 = _t198-_t197;
		_t200 = _t191 * vertParams[9];
		_t201 = _t190 * vertParams[10];
		_t202 = _t201-_t200;
		_t203 = _t145 * _t202 + _t140 * _t199 + _t135 * _t196;
		_t204 = _t203 * _t188;
		_t205 = vertParams[11] * _t202 + vertParams[12] * _t199 + vertParams[13] * _t196;
		_t206 = _t205 * _t188;
		_t207 = 1.000000-_t193;
		_t208 = _t207-_t204;
		_t209 = _t206 * _t145;
		_t210 = scene[18]+_t209;
		_t211 = _t206 * _t140;
		_t212 = scene[19]+_t211;
		_t213 = _t206 * _t135;
		_t214 = scene[20]+_t213;
		_t215 = _t204 * vertParams[20];
		_t216 = _t193 * vertParams[17];
		_t217 = _t208 * vertParams[14];
		_t218 = _t217+_t216;
		_t219 = _t218+_t215;
		_t220 = _t204 * vertParams[21];
		_t221 = _t193 * vertParams[18];
		_t222 = _t208 * vertParams[15];
		_t223 = _t222+_t221;
		_t224 = _t223+_t220;
		_t225 = _t204 * vertParams[22];
		_t226 = _t193 * vertParams[19];
		_t227 = _t208 * vertParams[16];
		_t228 = _t227+_t226;
		_t229 = _t228+_t225;
		_t230 = sqrt(_t219*_t219+_t224*_t224+_t229*_t229);
		_t231 = (float)1.0 / (_t230);
		_t232 = _t219 * _t231;
		_t233 = _t224 * _t231;
		_t234 = _t229 * _t231;
		cif (vertParams[41] == 0.000000) {
			_t235 = _t193;
			_t236 = _t204;
		}
		else {
			_t238 = _t204 * vertParams[46];
			_t239 = _t193 * vertParams[44];
			_t240 = 1.000000-_t193;
			_t241 = _t240-_t204;
			_t242 = _t241 * vertParams[42];
			_t243 = _t242+_t239;
			_t244 = _t243+_t238;
			_t245 = _t204 * vertParams[47];
			_t246 = _t193 * vertParams[45];
			_t247 = 1.000000-_t193;
			_t248 = _t247-_t204;
			_t249 = _t248 * vertParams[43];
			_t250 = _t249+_t246;
			_t251 = _t250+_t245;
			_t235 = _t244;
			_t236 = _t251;
		}
		_t152 = _t210;
		_t153 = _t212;
		_t154 = _t214;
		_t155 = _t175;
		_t156 = _t176;
		_t157 = _t177;
		_t158 = _t232;
		_t159 = _t233;
		_t160 = _t234;
		_t161 = _t235;
		_t162 = _t236;
	}
	else {
		_t152 = 0.000000;
		_t153 = 0.000000;
		_t154 = 0.000000;
		_t155 = 0.000000;
		_t156 = 0.000000;
		_t157 = 0.000000;
		_t158 = 0.000000;
		_t159 = 0.000000;
		_t160 = 0.000000;
		_t161 = 0.000000;
		_t162 = 0.000000;
	}
	_t252 = -_t145;
	_t253 = -_t140;
	_t254 = -_t135;
	_t255 = scene[20]-_t154;
	_t256 = _t255 * _t255;
	_t257 = scene[19]-_t153;
	_t258 = _t257 * _t257;
	_t259 = scene[18]-_t152;
	_t260 = _t259 * _t259;
	_t261 = _t260+_t258;
	_t262 = _t261+_t256;
	_t263 = _t262 * _t262;
	_t264 = _t151 * _t263;
	_t265 = _t145 * _t158 + _t140 * _t159 + _t135 * _t160;
	cif (_t265 >= 0.000000) {
		_t266 = _t265;
	}
	else {
		_t268 = -_t265;
		_t266 = _t268;
	}
	_t269 = _t266 * _t266;
	_t270 = (float)1.0 / (_t269);
	_t271 = _t264 * _t270;
	cif (vertParams[50] == 0.000000) {
		cif (vertParams[51] == 1.000000) {
			_t295 = _t158 * _t252 + _t159 * _t253 + _t160 * _t254;
			cif (_t295 > 0.000000) {
				_t296 = _t158;
				_t297 = _t159;
				_t298 = _t160;
				_t299 = _t295;
			}
			else {
				_t301 = -_t158;
				_t302 = -_t159;
				_t303 = -_t160;
				_t304 = -_t295;
				_t296 = _t301;
				_t297 = _t302;
				_t298 = _t303;
				_t299 = _t304;
			}
			_t305 = _t252 * _t296 + _t253 * _t297 + _t254 * _t298;
			_t306 = 2.000000 * _t305;
			_t307 = _t306 * _t296;
			_t308 = _t307-_t252;
			_t309 = _t306 * _t297;
			_t310 = _t309-_t253;
			_t311 = _t306 * _t298;
			_t312 = _t311-_t254;
			cif (vertParams[49] > vertParams[59]) {
				_t318 = 6.283185 * primary[3];
				_t319 = 1.000000-primary[4];
				cif (_t319 >= 0.000001) {
					_t320 = _t319;
				}
				else {
					_t320 = 0.000001;
				}
				_t322 = sqrt(_t320);
				cif (primary[4] >= 0.000001) {
					_t323 = primary[4];
				}
				else {
					_t323 = 0.000001;
				}
				_t325 = sqrt(_t323);
				_t326 = sin(_t318);
				_t327 = _t326 * _t322;
				_t328 = cos(_t318);
				_t329 = _t328 * _t322;
				cif (_t298 < -0.999999) {
					_t330 = 0.000000;
					_t331 = -1.000000;
					_t332 = 0.000000;
					_t333 = -1.000000;
					_t334 = 0.000000;
					_t335 = 0.000000;
				}
				else {
					_t337 = 1.000000+_t298;
					_t338 = (float)1.0 / (_t337);
					_t339 = -_t296;
					_t340 = _t339 * _t297;
					_t341 = _t340 * _t338;
					_t342 = -_t296;
					_t343 = _t296 * _t296;
					_t344 = _t343 * _t338;
					_t345 = 1.000000-_t344;
					_t346 = -_t297;
					_t347 = _t297 * _t297;
					_t348 = _t347 * _t338;
					_t349 = 1.000000-_t348;
					_t330 = _t345;
					_t331 = _t341;
					_t332 = _t342;
					_t333 = _t341;
					_t334 = _t349;
					_t335 = _t346;
				}
				_t350 = _t325 * _t296;
				_t351 = _t327 * _t333;
				_t352 = _t329 * _t330;
				_t353 = _t352+_t351;
				_t354 = _t353+_t350;
				_t355 = _t325 * _t297;
				_t356 = _t327 * _t334;
				_t357 = _t329 * _t331;
				_t358 = _t357+_t356;
				_t359 = _t358+_t355;
				_t360 = _t325 * _t298;
				_t361 = _t327 * _t335;
				_t362 = _t329 * _t332;
				_t363 = _t362+_t361;
				_t364 = _t363+_t360;
				_t365 = 1.000000-vertParams[59];
				_t313 = _t354;
				_t314 = _t359;
				_t315 = _t364;
				_t316 = _t365;
			}
			else {
				_t366 = vertParams[58]+1.000000;
				_t367 = (float)1.0 / (_t366);
				_t368 = pow(primary[4],_t367);
				_t369 = _t368 * _t368;
				_t370 = 1.000000-_t369;
				cif (_t370 >= 0.000001) {
					_t371 = _t370;
				}
				else {
					_t371 = 0.000001;
				}
				_t373 = sqrt(_t371);
				_t374 = 6.283185 * primary[3];
				_t375 = sin(_t374);
				_t376 = _t373 * _t375;
				_t377 = cos(_t374);
				_t378 = _t373 * _t377;
				cif (_t312 < -0.999999) {
					_t379 = 0.000000;
					_t380 = -1.000000;
					_t381 = 0.000000;
					_t382 = -1.000000;
					_t383 = 0.000000;
					_t384 = 0.000000;
				}
				else {
					_t386 = 1.000000+_t312;
					_t387 = (float)1.0 / (_t386);
					_t388 = -_t308;
					_t389 = _t388 * _t310;
					_t390 = _t389 * _t387;
					_t391 = -_t308;
					_t392 = _t308 * _t308;
					_t393 = _t392 * _t387;
					_t394 = 1.000000-_t393;
					_t395 = -_t310;
					_t396 = _t310 * _t310;
					_t397 = _t396 * _t387;
					_t398 = 1.000000-_t397;
					_t379 = _t394;
					_t380 = _t390;
					_t381 = _t391;
					_t382 = _t390;
					_t383 = _t398;
					_t384 = _t395;
				}
				_t399 = _t368 * _t308;
				_t400 = _t376 * _t382;
				_t401 = _t378 * _t379;
				_t402 = _t401+_t400;
				_t403 = _t402+_t399;
				_t404 = _t368 * _t310;
				_t405 = _t376 * _t383;
				_t406 = _t378 * _t380;
				_t407 = _t406+_t405;
				_t408 = _t407+_t404;
				_t409 = _t368 * _t312;
				_t410 = _t376 * _t384;
				_t411 = _t378 * _t381;
				_t412 = _t411+_t410;
				_t413 = _t412+_t409;
				_t313 = _t403;
				_t314 = _t408;
				_t315 = _t413;
				_t316 = vertParams[59];
			}
			_t414 = _t296 * _t313 + _t297 * _t314 + _t298 * _t315;
			cif (vertParams[59] > 0.000000) {
				_t420 = _t308 * _t313 + _t310 * _t314 + _t312 * _t315;
				_t421 = pow(_t420,vertParams[58]);
				_t422 = _t421 * 0.159155;
				cif (_t422 > 0.000000) {
					_t428 = vertParams[58]+1.000000;
					_t429 = vertParams[58]+2.000000;
					_t430 = _t429 * _t422;
					_t431 = vertParams[55] * _t430;
					_t432 = vertParams[56] * _t430;
					_t433 = vertParams[57] * _t430;
					_t434 = vertParams[59] * _t428;
					_t435 = _t434 * _t422;
					_t423 = _t431;
					_t424 = _t432;
					_t425 = _t433;
					_t426 = _t435;
				}
				else {
					_t423 = 0.000000;
					_t424 = 0.000000;
					_t425 = 0.000000;
					_t426 = 0.000000;
				}
				_t415 = _t423;
				_t416 = _t424;
				_t417 = _t425;
				_t418 = _t426;
			}
			else {
				_t415 = 0.000000;
				_t416 = 0.000000;
				_t417 = 0.000000;
				_t418 = 0.000000;
			}
			cif (vertParams[59] < 1.000000) {
				_t442 = vertParams[52] * 0.318310;
				_t443 = vertParams[53] * 0.318310;
				_t444 = vertParams[54] * 0.318310;
				_t445 = 1.000000-vertParams[59];
				_t446 = _t445 * 0.318310;
				_t447 = _t446 * _t414;
				_t448 = _t446 * _t299;
				_t436 = _t442;
				_t437 = _t443;
				_t438 = _t444;
				_t439 = _t447;
				_t440 = _t448;
			}
			else {
				_t436 = 0.000000;
				_t437 = 0.000000;
				_t438 = 0.000000;
				_t439 = 0.000000;
				_t440 = 0.000000;
			}
			_t449 = _t415+_t436;
			_t450 = _t416+_t437;
			_t451 = _t417+_t438;
			_t452 = _t418+_t439;
			_t453 = _t418+_t440;
			_t454 = _t449 * _t414;
			_t455 = _t450 * _t414;
			_t456 = _t451 * _t414;
			_t457 = (float)1.0 / (_t452);
			_t458 = _t454 * _t457;
			_t459 = _t455 * _t457;
			_t460 = _t456 * _t457;
			_t283 = _t313;
			_t284 = _t314;
			_t285 = _t315;
			_t286 = _t458;
			_t287 = _t459;
			_t288 = _t460;
			_t289 = _t414;
			_t290 = _t452;
			_t291 = _t453;
		}
		else cif (vertParams[51] == 2.000000) {
			_t461 = _t252 * _t158 + _t253 * _t159 + _t254 * _t160;
			cif (_t461 >= 0.000000) {
				_t462 = _t461;
			}
			else {
				_t464 = -_t461;
				_t462 = _t464;
			}
			_t465 = sqrt(_t462);
			_t466 = 0.200000 * _t465;
			_t467 = 1.200000-_t466;
			_t468 = vertParams[60] * _t467;
			_t469 = 6.283185 * primary[4];
			_t470 = sin(_t469);
			_t471 = cos(_t469);
			_t472 = _t468 * _t468;
			_t473 = 1.000000-primary[3];
			cif (_t473 >= 0.000001) {
				_t474 = _t473;
			}
			else {
				_t474 = 0.000001;
			}
			_t476 = log(_t474);
			_t477 = -_t476;
			_t478 = _t472 * _t477;
			_t479 = 1.000000+_t478;
			_t480 = sqrt(_t479);
			_t481 = (float)1.0 / (_t480);
			_t482 = _t481 * _t481;
			_t483 = 3.141593 * _t472;
			_t484 = _t483 * _t481;
			_t485 = _t484 * _t482;
			_t486 = 1.000000-primary[3];
			_t487 = _t486 / _t485;
			_t488 = 1.000000-_t482;
			cif (_t488 >= 0.000001) {
				_t489 = _t488;
			}
			else {
				_t489 = 0.000001;
			}
			_t491 = sqrt(_t489);
			_t492 = _t491 * _t470;
			_t493 = _t491 * _t471;
			cif (_t160 < -0.999999) {
				_t494 = 0.000000;
				_t495 = -1.000000;
				_t496 = 0.000000;
				_t497 = -1.000000;
				_t498 = 0.000000;
				_t499 = 0.000000;
			}
			else {
				_t501 = 1.000000+_t160;
				_t502 = (float)1.0 / (_t501);
				_t503 = -_t158;
				_t504 = _t503 * _t159;
				_t505 = _t504 * _t502;
				_t506 = -_t158;
				_t507 = _t158 * _t158;
				_t508 = _t507 * _t502;
				_t509 = 1.000000-_t508;
				_t510 = -_t159;
				_t511 = _t159 * _t159;
				_t512 = _t511 * _t502;
				_t513 = 1.000000-_t512;
				_t494 = _t509;
				_t495 = _t505;
				_t496 = _t506;
				_t497 = _t505;
				_t498 = _t513;
				_t499 = _t510;
			}
			_t514 = _t481 * _t158;
			_t515 = _t492 * _t497;
			_t516 = _t493 * _t494;
			_t517 = _t516+_t515;
			_t518 = _t517+_t514;
			_t519 = _t481 * _t159;
			_t520 = _t492 * _t498;
			_t521 = _t493 * _t495;
			_t522 = _t521+_t520;
			_t523 = _t522+_t519;
			_t524 = _t481 * _t160;
			_t525 = _t492 * _t499;
			_t526 = _t493 * _t496;
			_t527 = _t526+_t525;
			_t528 = _t527+_t524;
			_t529 = _t252 * _t518 + _t253 * _t523 + _t254 * _t528;
			cif (_t529 > 0.000000) {
				_t530 = vertParams[59];
			}
			else {
				_t530 = vertParams[58];
			}
			_t532 = _t530 * _t530;
			_t533 = _t529 * _t529;
			_t534 = 1.000000-_t533;
			_t535 = _t534 * _t532;
			_t536 = 1.000000-_t535;
			cif (_t536 <= 0.000000) {
				_t537 = 0.000000;
				_t538 = 1.000000;
			}
			else {
				cif (_t529 >= 0.000000) {
					_t540 = _t529;
				}
				else {
					_t542 = -_t529;
					_t540 = _t542;
				}
				_t543 = sqrt(_t536);
				_t544 = vertParams[58] * _t543;
				_t545 = vertParams[58] * _t540;
				_t546 = _t540+_t544;
				_t547 = _t540-_t544;
				_t548 = _t547 / _t546;
				_t549 = _t545+_t543;
				_t550 = _t545-_t543;
				_t551 = _t550 / _t549;
				_t552 = -_t543;
				cif (_t529 > 0.000000) {
					_t553 = _t552;
				}
				else {
					_t553 = _t543;
				}
				_t555 = _t551 * _t551;
				_t556 = _t548 * _t548;
				_t557 = _t556+_t555;
				_t558 = 0.500000 * _t557;
				_t537 = _t553;
				_t538 = _t558;
			}
			cif (vertParams[49] <= _t538) {
				_t569 = _t252 * _t518 + _t253 * _t523 + _t254 * _t528;
				_t570 = 2.000000 * _t569;
				_t571 = _t570 * _t518;
				_t572 = _t571-_t252;
				_t573 = _t570 * _t523;
				_t574 = _t573-_t253;
				_t575 = _t570 * _t528;
				_t576 = _t575-_t254;
				_t577 = _t572 * _t518 + _t574 * _t523 + _t576 * _t528;
				_t578 = 4.000000 * _t577;
				_t579 = _t487 * _t538;
				_t580 = _t579 / _t578;
				cif (_t580 >= 0.000000) {
					_t581 = _t580;
				}
				else {
					_t583 = -_t580;
					_t581 = _t583;
				}
				_t584 = 4.000000 * _t529;
				_t585 = (float)1.0 / (_t584);
				_t586 = _t572 * _t158 + _t574 * _t159 + _t576 * _t160;
				cif (_t586 >= 0.000000) {
					_t587 = _t586;
				}
				else {
					_t589 = -_t586;
					_t587 = _t589;
				}
				_t590 = sqrt(_t587);
				_t591 = 0.200000 * _t590;
				_t592 = 1.200000-_t591;
				_t593 = vertParams[60] * _t592;
				_t594 = _t481 * _t481;
				_t595 = _t593 * _t593;
				_t596 = _t492 * _t492;
				_t597 = _t596 / _t595;
				_t598 = _t593 * _t593;
				_t599 = _t493 * _t493;
				_t600 = _t599 / _t598;
				_t601 = _t600+_t597;
				_t602 = _t601 / _t594;
				_t603 = _t594 * _t594;
				_t604 = 3.141593 * _t593;
				_t605 = _t604 * _t593;
				_t606 = _t605 * _t603;
				_t607 = -_t602;
				_t608 = exp(_t607);
				_t609 = _t608 / _t606;
				_t610 = _t538 * _t609;
				_t611 = _t610 * _t481;
				_t612 = _t611 * _t585;
				cif (_t612 >= 0.000000) {
					_t613 = _t612;
				}
				else {
					_t615 = -_t612;
					_t613 = _t615;
				}
				_t559 = _t572;
				_t560 = _t574;
				_t561 = _t576;
				_t562 = vertParams[52];
				_t563 = vertParams[53];
				_t564 = vertParams[54];
				_t565 = _t586;
				_t566 = _t581;
				_t567 = _t613;
			}
			else {
				cif (_t537 < 0.000000) {
					_t616 = vertParams[59];
				}
				else {
					_t616 = vertParams[58];
				}
				_t618 = _t252 * _t518 + _t253 * _t523 + _t254 * _t528;
				_t619 = _t618 * _t616;
				_t620 = _t619+_t537;
				_t621 = _t252 * _t616;
				_t622 = _t518 * _t620;
				_t623 = _t622-_t621;
				_t624 = _t253 * _t616;
				_t625 = _t523 * _t620;
				_t626 = _t625-_t624;
				_t627 = _t254 * _t616;
				_t628 = _t528 * _t620;
				_t629 = _t628-_t627;
				cif (_t461 > 0.000000) {
					_t630 = vertParams[58];
				}
				else {
					_t630 = vertParams[59];
				}
				_t632 = (float)1.0 / (_t630);
				_t633 = _t632 * _t632;
				_t634 = vertParams[55] * _t633;
				_t635 = vertParams[56] * _t633;
				_t636 = vertParams[57] * _t633;
				_t637 = _t623 * _t518 + _t626 * _t523 + _t629 * _t528;
				_t638 = _t630 * _t637;
				_t639 = _t529+_t638;
				_t640 = _t639 * _t639;
				_t641 = _t630 * _t630;
				_t642 = _t641 * _t637;
				_t643 = _t642 / _t640;
				cif (_t643 >= 0.000000) {
					_t644 = _t643;
				}
				else {
					_t646 = -_t643;
					_t644 = _t646;
				}
				_t647 = 1.000000-_t538;
				_t648 = _t487 * _t647;
				_t649 = _t648 * _t644;
				cif (_t649 >= 0.000000) {
					_t650 = _t649;
				}
				else {
					_t652 = -_t649;
					_t650 = _t652;
				}
				_t653 = _t623 * _t158 + _t626 * _t159 + _t629 * _t160;
				cif (_t653 > 0.000000) {
					_t654 = vertParams[58];
				}
				else {
					_t654 = vertParams[59];
				}
				_t656 = _t654 * _t529;
				_t657 = _t637+_t656;
				_t658 = _t657 * _t657;
				_t659 = _t654 * _t654;
				_t660 = _t659 * _t529;
				_t661 = _t660 / _t658;
				cif (_t653 >= 0.000000) {
					_t662 = _t653;
				}
				else {
					_t664 = -_t653;
					_t662 = _t664;
				}
				_t665 = sqrt(_t662);
				_t666 = 0.200000 * _t665;
				_t667 = 1.200000-_t666;
				_t668 = vertParams[60] * _t667;
				_t669 = _t481 * _t481;
				_t670 = _t668 * _t668;
				_t671 = _t492 * _t492;
				_t672 = _t671 / _t670;
				_t673 = _t668 * _t668;
				_t674 = _t493 * _t493;
				_t675 = _t674 / _t673;
				_t676 = _t675+_t672;
				_t677 = _t676 / _t669;
				_t678 = _t669 * _t669;
				_t679 = 3.141593 * _t668;
				_t680 = _t679 * _t668;
				_t681 = _t680 * _t678;
				_t682 = -_t677;
				_t683 = exp(_t682);
				_t684 = _t683 / _t681;
				_t685 = 1.000000-_t538;
				_t686 = _t685 * _t684;
				_t687 = _t686 * _t481;
				_t688 = _t687 * _t661;
				cif (_t688 >= 0.000000) {
					_t689 = _t688;
				}
				else {
					_t691 = -_t688;
					_t689 = _t691;
				}
				_t559 = _t623;
				_t560 = _t626;
				_t561 = _t629;
				_t562 = _t634;
				_t563 = _t635;
				_t564 = _t636;
				_t565 = _t653;
				_t566 = _t650;
				_t567 = _t689;
			}
			cif (_t461 >= 0.000000) {
				_t692 = _t461;
			}
			else {
				_t694 = -_t461;
				_t692 = _t694;
			}
			cif (_t565 >= 0.000000) {
				_t695 = _t565;
			}
			else {
				_t697 = -_t565;
				_t695 = _t697;
			}
			_t698 = _t481 * _t481;
			_t699 = vertParams[60] * vertParams[60];
			_t700 = _t492 * _t492;
			_t701 = _t700 / _t699;
			_t702 = vertParams[60] * vertParams[60];
			_t703 = _t493 * _t493;
			_t704 = _t703 / _t702;
			_t705 = _t704+_t701;
			_t706 = _t705 / _t698;
			_t707 = _t698 * _t698;
			_t708 = 3.141593 * vertParams[60];
			_t709 = _t708 * vertParams[60];
			_t710 = _t709 * _t707;
			_t711 = -_t706;
			_t712 = exp(_t711);
			_t713 = _t712 / _t710;
			_t714 = _t695 * _t695;
			_t715 = 1.000001-_t714;
			cif (_t715 >= 0.000000) {
				_t716 = _t715;
			}
			else {
				_t718 = -_t715;
				_t716 = _t718;
			}
			_t719 = sqrt(_t716);
			_t720 = _t719 / _t695;
			cif (_t720 <= 0.000000) {
				_t721 = 1.000000;
			}
			else {
				_t723 = vertParams[60] * _t720;
				_t724 = (float)1.0 / (_t723);
				cif (_t724 >= 1.600000) {
					_t725 = 1.000000;
				}
				else {
					_t727 = _t724 * _t724;
					_t728 = 2.577000 * _t727;
					_t729 = 2.276000 * _t724;
					_t730 = 1.000000+_t729;
					_t731 = _t730+_t728;
					_t732 = 2.181000 * _t727;
					_t733 = 3.535000 * _t724;
					_t734 = _t733+_t732;
					_t735 = _t734 / _t731;
					_t725 = _t735;
				}
				_t721 = _t725;
			}
			_t736 = _t692 * _t692;
			_t737 = 1.000001-_t736;
			cif (_t737 >= 0.000000) {
				_t738 = _t737;
			}
			else {
				_t740 = -_t737;
				_t738 = _t740;
			}
			_t741 = sqrt(_t738);
			_t742 = _t741 / _t692;
			cif (_t742 <= 0.000000) {
				_t743 = 1.000000;
			}
			else {
				_t745 = vertParams[60] * _t742;
				_t746 = (float)1.0 / (_t745);
				cif (_t746 >= 1.600000) {
					_t747 = 1.000000;
				}
				else {
					_t749 = _t746 * _t746;
					_t750 = 2.577000 * _t749;
					_t751 = 2.276000 * _t746;
					_t752 = 1.000000+_t751;
					_t753 = _t752+_t750;
					_t754 = 2.181000 * _t749;
					_t755 = 3.535000 * _t746;
					_t756 = _t755+_t754;
					_t757 = _t756 / _t753;
					_t747 = _t757;
				}
				_t743 = _t747;
			}
			_t758 = _t743 * _t721;
			_t759 = _t713 * _t758;
			_t760 = _t759 * _t529;
			_t761 = _t487 * _t692;
			_t762 = _t760 / _t761;
			cif (_t762 >= 0.000000) {
				_t763 = _t762;
			}
			else {
				_t765 = -_t762;
				_t763 = _t765;
			}
			_t766 = _t562 * _t763;
			_t767 = _t563 * _t763;
			_t768 = _t564 * _t763;
			_t283 = _t559;
			_t284 = _t560;
			_t285 = _t561;
			_t286 = _t766;
			_t287 = _t767;
			_t288 = _t768;
			_t289 = _t565;
			_t290 = _t566;
			_t291 = _t567;
		}
		else cif (vertParams[51] == 0.000000) {
			_t769 = _t252 * _t158 + _t253 * _t159 + _t254 * _t160;
			cif (_t769 > 0.000000) {
				_t770 = _t158;
				_t771 = _t159;
				_t772 = _t160;
				_t773 = _t769;
			}
			else {
				_t775 = -_t158;
				_t776 = -_t159;
				_t777 = -_t160;
				_t778 = -_t769;
				_t770 = _t775;
				_t771 = _t776;
				_t772 = _t777;
				_t773 = _t778;
			}
			cif (_t772 < -0.999999) {
				_t779 = 0.000000;
				_t780 = -1.000000;
				_t781 = 0.000000;
				_t782 = -1.000000;
				_t783 = 0.000000;
				_t784 = 0.000000;
			}
			else {
				_t786 = 1.000000+_t772;
				_t787 = (float)1.0 / (_t786);
				_t788 = -_t770;
				_t789 = _t788 * _t771;
				_t790 = _t789 * _t787;
				_t791 = -_t770;
				_t792 = _t770 * _t770;
				_t793 = _t792 * _t787;
				_t794 = 1.000000-_t793;
				_t795 = -_t771;
				_t796 = _t771 * _t771;
				_t797 = _t796 * _t787;
				_t798 = 1.000000-_t797;
				_t779 = _t794;
				_t780 = _t790;
				_t781 = _t791;
				_t782 = _t790;
				_t783 = _t798;
				_t784 = _t795;
			}
			_t799 = 6.283185 * primary[3];
			_t800 = 1.000000-primary[4];
			cif (_t800 >= 0.000001) {
				_t801 = _t800;
			}
			else {
				_t801 = 0.000001;
			}
			_t803 = sqrt(_t801);
			cif (primary[4] >= 0.000001) {
				_t804 = primary[4];
			}
			else {
				_t804 = 0.000001;
			}
			_t806 = sqrt(_t804);
			_t807 = sin(_t799);
			_t808 = _t807 * _t803;
			_t809 = cos(_t799);
			_t810 = _t809 * _t803;
			_t811 = _t806 * _t770;
			_t812 = _t808 * _t782;
			_t813 = _t810 * _t779;
			_t814 = _t813+_t812;
			_t815 = _t814+_t811;
			_t816 = _t806 * _t771;
			_t817 = _t808 * _t783;
			_t818 = _t810 * _t780;
			_t819 = _t818+_t817;
			_t820 = _t819+_t816;
			_t821 = _t806 * _t772;
			_t822 = _t808 * _t784;
			_t823 = _t810 * _t781;
			_t824 = _t823+_t822;
			_t825 = _t824+_t821;
			_t826 = _t806 * 0.318310;
			_t827 = _t773 * 0.318310;
			_t283 = _t815;
			_t284 = _t820;
			_t285 = _t825;
			_t286 = vertParams[52];
			_t287 = vertParams[53];
			_t288 = vertParams[54];
			_t289 = _t806;
			_t290 = _t826;
			_t291 = _t827;
		}
		else {
			_t283 = 0.000000;
			_t284 = 0.000000;
			_t285 = 0.000000;
			_t286 = 0.000000;
			_t287 = 0.000000;
			_t288 = 0.000000;
			_t289 = 0.000000;
			_t290 = 0.000000;
			_t291 = 0.000000;
		}
		_t272 = _t283;
		_t273 = _t284;
		_t274 = _t285;
		_t275 = _t286;
		_t276 = _t287;
		_t277 = _t288;
		_t278 = _t289;
		_t279 = _t290;
		_t280 = _t291;
		_t281 = 1.000000;
	}
	else {
		_t828 = 6.283185 * primary[3];
		_t829 = 3.141593 * primary[4];
		_t830 = sin(_t829);
		_t831 = cos(_t829);
		_t832 = sin(_t828);
		_t833 = _t830 * _t832;
		_t834 = cos(_t828);
		_t835 = _t830 * _t834;
		cif (_t830 >= 0.000000) {
			_t836 = _t830;
		}
		else {
			_t838 = -_t830;
			_t836 = _t838;
		}
		_t839 = _t836 * 6.283185;
		_t840 = _t839 * 3.141593;
		cif (vertParams[51] == 1.000000) {
			_t850 = _t158 * _t252 + _t159 * _t253 + _t160 * _t254;
			cif (_t850 > 0.000000) {
				_t851 = _t158;
				_t852 = _t159;
				_t853 = _t160;
				_t854 = _t850;
			}
			else {
				_t856 = -_t158;
				_t857 = -_t159;
				_t858 = -_t160;
				_t859 = -_t850;
				_t851 = _t856;
				_t852 = _t857;
				_t853 = _t858;
				_t854 = _t859;
			}
			_t860 = _t851 * _t835 + _t852 * _t833 + _t853 * _t831;
			cif (vertParams[59] > 0.000000) {
				_t866 = _t252 * _t851 + _t253 * _t852 + _t254 * _t853;
				_t867 = 2.000000 * _t866;
				_t868 = _t867 * _t851;
				_t869 = _t868-_t252;
				_t870 = _t867 * _t852;
				_t871 = _t870-_t253;
				_t872 = _t867 * _t853;
				_t873 = _t872-_t254;
				_t874 = _t869 * _t835 + _t871 * _t833 + _t873 * _t831;
				_t875 = pow(_t874,vertParams[58]);
				_t876 = _t875 * 0.159155;
				cif (_t876 > 0.000000) {
					_t882 = vertParams[58]+1.000000;
					_t883 = vertParams[58]+2.000000;
					_t884 = _t883 * _t876;
					_t885 = vertParams[55] * _t884;
					_t886 = vertParams[56] * _t884;
					_t887 = vertParams[57] * _t884;
					_t888 = vertParams[59] * _t882;
					_t889 = _t888 * _t876;
					_t877 = _t885;
					_t878 = _t886;
					_t879 = _t887;
					_t880 = _t889;
				}
				else {
					_t877 = 0.000000;
					_t878 = 0.000000;
					_t879 = 0.000000;
					_t880 = 0.000000;
				}
				_t861 = _t877;
				_t862 = _t878;
				_t863 = _t879;
				_t864 = _t880;
			}
			else {
				_t861 = 0.000000;
				_t862 = 0.000000;
				_t863 = 0.000000;
				_t864 = 0.000000;
			}
			cif (vertParams[59] < 1.000000) {
				_t896 = vertParams[52] * 0.318310;
				_t897 = vertParams[53] * 0.318310;
				_t898 = vertParams[54] * 0.318310;
				_t899 = 1.000000-vertParams[59];
				_t900 = _t899 * 0.318310;
				_t901 = _t900 * _t860;
				_t902 = _t900 * _t854;
				_t890 = _t896;
				_t891 = _t897;
				_t892 = _t898;
				_t893 = _t901;
				_t894 = _t902;
			}
			else {
				_t890 = 0.000000;
				_t891 = 0.000000;
				_t892 = 0.000000;
				_t893 = 0.000000;
				_t894 = 0.000000;
			}
			_t903 = _t861+_t890;
			_t904 = _t862+_t891;
			_t905 = _t863+_t892;
			_t906 = _t864+_t893;
			_t907 = _t864+_t894;
			_t908 = _t903 * _t860;
			_t909 = _t904 * _t860;
			_t910 = _t905 * _t860;
			_t841 = _t908;
			_t842 = _t909;
			_t843 = _t910;
			_t844 = _t860;
			_t845 = _t906;
			_t846 = _t907;
		}
		else cif (vertParams[51] == 2.000000) {
			_t911 = _t252 * _t158 + _t253 * _t159 + _t254 * _t160;
			_t912 = _t835 * _t158 + _t833 * _t159 + _t831 * _t160;
			_t913 = _t911 * _t912;
			cif (_t911 > 0.000000) {
				_t914 = vertParams[58];
			}
			else {
				_t914 = vertParams[59];
			}
			cif (_t912 > 0.000000) {
				_t916 = vertParams[58];
			}
			else {
				_t916 = vertParams[59];
			}
			cif (_t913 > 0.000000) {
				_t922 = _t252+_t835;
				_t923 = _t253+_t833;
				_t924 = _t254+_t831;
				_t925 = sqrt(_t922*_t922+_t923*_t923+_t924*_t924);
				_t926 = (float)1.0 / (_t925);
				_t927 = _t922 * _t926;
				_t928 = _t923 * _t926;
				_t929 = _t924 * _t926;
				_t918 = _t927;
				_t919 = _t928;
				_t920 = _t929;
			}
			else {
				_t930 = _t835 * _t914;
				_t931 = _t252+_t930;
				_t932 = _t833 * _t914;
				_t933 = _t253+_t932;
				_t934 = _t831 * _t914;
				_t935 = _t254+_t934;
				_t936 = sqrt(_t931*_t931+_t933*_t933+_t935*_t935);
				_t937 = (float)1.0 / (_t936);
				_t938 = _t931 * _t937;
				_t939 = _t933 * _t937;
				_t940 = _t935 * _t937;
				_t918 = _t938;
				_t919 = _t939;
				_t920 = _t940;
			}
			_t941 = _t918 * _t158 + _t919 * _t159 + _t920 * _t160;
			cif (_t941 < 0.000000) {
				_t946 = -_t918;
				_t947 = -_t919;
				_t948 = -_t920;
				_t942 = _t946;
				_t943 = _t947;
				_t944 = _t948;
			}
			else {
				_t942 = _t918;
				_t943 = _t919;
				_t944 = _t920;
			}
			_t949 = _t252 * _t942 + _t253 * _t943 + _t254 * _t944;
			_t950 = _t835 * _t942 + _t833 * _t943 + _t831 * _t944;
			cif (_t160 < -0.999999) {
				_t951 = 0.000000;
				_t952 = -1.000000;
				_t953 = 0.000000;
				_t954 = -1.000000;
				_t955 = 0.000000;
				_t956 = 0.000000;
			}
			else {
				_t958 = 1.000000+_t160;
				_t959 = (float)1.0 / (_t958);
				_t960 = -_t158;
				_t961 = _t960 * _t159;
				_t962 = _t961 * _t959;
				_t963 = -_t158;
				_t964 = _t158 * _t158;
				_t965 = _t964 * _t959;
				_t966 = 1.000000-_t965;
				_t967 = -_t159;
				_t968 = _t159 * _t159;
				_t969 = _t968 * _t959;
				_t970 = 1.000000-_t969;
				_t951 = _t966;
				_t952 = _t962;
				_t953 = _t963;
				_t954 = _t962;
				_t955 = _t970;
				_t956 = _t967;
			}
			_t971 = _t158 * _t942 + _t159 * _t943 + _t160 * _t944;
			_t972 = _t954 * _t942 + _t955 * _t943 + _t956 * _t944;
			_t973 = _t951 * _t942 + _t952 * _t943 + _t953 * _t944;
			_t974 = _t971 * _t971;
			_t975 = vertParams[60] * vertParams[60];
			_t976 = _t972 * _t972;
			_t977 = _t976 / _t975;
			_t978 = vertParams[60] * vertParams[60];
			_t979 = _t973 * _t973;
			_t980 = _t979 / _t978;
			_t981 = _t980+_t977;
			_t982 = _t981 / _t974;
			_t983 = _t974 * _t974;
			_t984 = 3.141593 * vertParams[60];
			_t985 = _t984 * vertParams[60];
			_t986 = _t985 * _t983;
			_t987 = -_t982;
			_t988 = exp(_t987);
			_t989 = _t988 / _t986;
			cif (_t949 > 0.000000) {
				_t990 = vertParams[59];
			}
			else {
				_t990 = vertParams[58];
			}
			_t992 = _t990 * _t990;
			_t993 = _t949 * _t949;
			_t994 = 1.000000-_t993;
			_t995 = _t994 * _t992;
			_t996 = 1.000000-_t995;
			cif (_t996 <= 0.000000) {
				_t997 = 1.000000;
			}
			else {
				cif (_t949 >= 0.000000) {
					_t999 = _t949;
				}
				else {
					_t1001 = -_t949;
					_t999 = _t1001;
				}
				_t1002 = sqrt(_t996);
				_t1003 = vertParams[58] * _t1002;
				_t1004 = vertParams[58] * _t999;
				_t1005 = _t999+_t1003;
				_t1006 = _t999-_t1003;
				_t1007 = _t1006 / _t1005;
				_t1008 = _t1004+_t1002;
				_t1009 = _t1004-_t1002;
				_t1010 = _t1009 / _t1008;
				_t1011 = _t1010 * _t1010;
				_t1012 = _t1007 * _t1007;
				_t1013 = _t1012+_t1011;
				_t1014 = 0.500000 * _t1013;
				_t997 = _t1014;
			}
			cif (_t911 >= 0.000000) {
				_t1015 = _t911;
			}
			else {
				_t1017 = -_t911;
				_t1015 = _t1017;
			}
			cif (_t912 >= 0.000000) {
				_t1018 = _t912;
			}
			else {
				_t1020 = -_t912;
				_t1018 = _t1020;
			}
			_t1021 = _t1018 * _t1018;
			_t1022 = 1.000001-_t1021;
			cif (_t1022 >= 0.000000) {
				_t1023 = _t1022;
			}
			else {
				_t1025 = -_t1022;
				_t1023 = _t1025;
			}
			_t1026 = sqrt(_t1023);
			_t1027 = _t1026 / _t1018;
			cif (_t1027 <= 0.000000) {
				_t1028 = 1.000000;
			}
			else {
				_t1030 = vertParams[60] * _t1027;
				_t1031 = (float)1.0 / (_t1030);
				cif (_t1031 >= 1.600000) {
					_t1032 = 1.000000;
				}
				else {
					_t1034 = _t1031 * _t1031;
					_t1035 = 2.577000 * _t1034;
					_t1036 = 2.276000 * _t1031;
					_t1037 = 1.000000+_t1036;
					_t1038 = _t1037+_t1035;
					_t1039 = 2.181000 * _t1034;
					_t1040 = 3.535000 * _t1031;
					_t1041 = _t1040+_t1039;
					_t1042 = _t1041 / _t1038;
					_t1032 = _t1042;
				}
				_t1028 = _t1032;
			}
			_t1043 = _t1015 * _t1015;
			_t1044 = 1.000001-_t1043;
			cif (_t1044 >= 0.000000) {
				_t1045 = _t1044;
			}
			else {
				_t1047 = -_t1044;
				_t1045 = _t1047;
			}
			_t1048 = sqrt(_t1045);
			_t1049 = _t1048 / _t1015;
			cif (_t1049 <= 0.000000) {
				_t1050 = 1.000000;
			}
			else {
				_t1052 = vertParams[60] * _t1049;
				_t1053 = (float)1.0 / (_t1052);
				cif (_t1053 >= 1.600000) {
					_t1054 = 1.000000;
				}
				else {
					_t1056 = _t1053 * _t1053;
					_t1057 = 2.577000 * _t1056;
					_t1058 = 2.276000 * _t1053;
					_t1059 = 1.000000+_t1058;
					_t1060 = _t1059+_t1057;
					_t1061 = 2.181000 * _t1056;
					_t1062 = 3.535000 * _t1053;
					_t1063 = _t1062+_t1061;
					_t1064 = _t1063 / _t1060;
					_t1054 = _t1064;
				}
				_t1050 = _t1054;
			}
			_t1065 = _t1050 * _t1028;
			_t1066 = sqrt(_t1015);
			_t1067 = 0.200000 * _t1066;
			_t1068 = 1.200000-_t1067;
			_t1069 = vertParams[60] * _t1068;
			_t1070 = _t971 * _t971;
			_t1071 = _t1069 * _t1069;
			_t1072 = _t972 * _t972;
			_t1073 = _t1072 / _t1071;
			_t1074 = _t1069 * _t1069;
			_t1075 = _t973 * _t973;
			_t1076 = _t1075 / _t1074;
			_t1077 = _t1076+_t1073;
			_t1078 = _t1077 / _t1070;
			_t1079 = _t1070 * _t1070;
			_t1080 = 3.141593 * _t1069;
			_t1081 = _t1080 * _t1069;
			_t1082 = _t1081 * _t1079;
			_t1083 = -_t1078;
			_t1084 = exp(_t1083);
			_t1085 = _t1084 / _t1082;
			_t1086 = _t971 * _t1085;
			_t1087 = sqrt(_t1018);
			_t1088 = 0.200000 * _t1087;
			_t1089 = 1.200000-_t1088;
			_t1090 = vertParams[60] * _t1089;
			_t1091 = _t971 * _t971;
			_t1092 = _t1090 * _t1090;
			_t1093 = _t972 * _t972;
			_t1094 = _t1093 / _t1092;
			_t1095 = _t1090 * _t1090;
			_t1096 = _t973 * _t973;
			_t1097 = _t1096 / _t1095;
			_t1098 = _t1097+_t1094;
			_t1099 = _t1098 / _t1091;
			_t1100 = _t1091 * _t1091;
			_t1101 = 3.141593 * _t1090;
			_t1102 = _t1101 * _t1090;
			_t1103 = _t1102 * _t1100;
			_t1104 = -_t1099;
			_t1105 = exp(_t1104);
			_t1106 = _t1105 / _t1103;
			_t1107 = _t971 * _t1106;
			cif (_t913 > 0.000000) {
				_t1113 = 4.000000 * _t911;
				_t1114 = _t997 * _t989;
				_t1115 = _t1114 * _t1065;
				_t1116 = _t1115 / _t1113;
				cif (_t1116 >= 0.000000) {
					_t1117 = _t1116;
				}
				else {
					_t1119 = -_t1116;
					_t1117 = _t1119;
				}
				_t1120 = vertParams[52] * _t1117;
				_t1121 = vertParams[53] * _t1117;
				_t1122 = vertParams[54] * _t1117;
				_t1123 = 4.000000 * _t950;
				_t1124 = _t1086 * _t997;
				_t1125 = _t1124 / _t1123;
				cif (_t1125 >= 0.000000) {
					_t1126 = _t1125;
				}
				else {
					_t1128 = -_t1125;
					_t1126 = _t1128;
				}
				_t1129 = 4.000000 * _t949;
				_t1130 = _t1107 * _t997;
				_t1131 = _t1130 / _t1129;
				cif (_t1131 >= 0.000000) {
					_t1132 = _t1131;
				}
				else {
					_t1134 = -_t1131;
					_t1132 = _t1134;
				}
				_t1108 = _t1120;
				_t1109 = _t1121;
				_t1110 = _t1122;
				_t1111 = _t1126;
				_t1112 = _t1132;
			}
			else {
				_t1135 = _t914 * _t950;
				_t1136 = _t949+_t1135;
				_t1137 = _t916 * _t949;
				_t1138 = _t950+_t1137;
				_t1139 = (float)1.0 / (_t914);
				_t1140 = _t1139 * _t1139;
				_t1141 = _t1136 * _t1136;
				_t1142 = _t911 * _t1141;
				_t1143 = _t914 * _t914;
				_t1144 = 1.000000-_t997;
				_t1145 = _t1144 * _t989;
				_t1146 = _t1145 * _t1065;
				_t1147 = _t1146 * _t1143;
				_t1148 = _t1147 * _t949;
				_t1149 = _t1148 * _t950;
				_t1150 = _t1140 * _t1149;
				_t1151 = _t1150 / _t1142;
				cif (_t1151 >= 0.000000) {
					_t1152 = _t1151;
				}
				else {
					_t1154 = -_t1151;
					_t1152 = _t1154;
				}
				_t1155 = vertParams[55] * _t1152;
				_t1156 = vertParams[56] * _t1152;
				_t1157 = vertParams[57] * _t1152;
				_t1158 = _t1136 * _t1136;
				_t1159 = _t914 * _t914;
				_t1160 = _t1159 * _t950;
				_t1161 = 1.000000-_t997;
				_t1162 = _t1086 * _t1161;
				_t1163 = _t1162 * _t1160;
				_t1164 = _t1163 / _t1158;
				cif (_t1164 >= 0.000000) {
					_t1165 = _t1164;
				}
				else {
					_t1167 = -_t1164;
					_t1165 = _t1167;
				}
				_t1168 = _t1138 * _t1138;
				_t1169 = _t916 * _t916;
				_t1170 = _t1169 * _t949;
				_t1171 = 1.000000-_t997;
				_t1172 = _t1107 * _t1171;
				_t1173 = _t1172 * _t1170;
				_t1174 = _t1173 / _t1168;
				cif (_t1174 >= 0.000000) {
					_t1175 = _t1174;
				}
				else {
					_t1177 = -_t1174;
					_t1175 = _t1177;
				}
				_t1108 = _t1155;
				_t1109 = _t1156;
				_t1110 = _t1157;
				_t1111 = _t1165;
				_t1112 = _t1175;
			}
			_t841 = _t1108;
			_t842 = _t1109;
			_t843 = _t1110;
			_t844 = _t912;
			_t845 = _t1111;
			_t846 = _t1112;
		}
		else cif (vertParams[51] == 0.000000) {
			_t1178 = _t158 * _t252 + _t159 * _t253 + _t160 * _t254;
			cif (_t1178 > 0.000000) {
				_t1179 = _t158;
				_t1180 = _t159;
				_t1181 = _t160;
				_t1182 = _t1178;
			}
			else {
				_t1184 = -_t158;
				_t1185 = -_t159;
				_t1186 = -_t160;
				_t1187 = -_t1178;
				_t1179 = _t1184;
				_t1180 = _t1185;
				_t1181 = _t1186;
				_t1182 = _t1187;
			}
			_t1188 = _t1179 * _t835 + _t1180 * _t833 + _t1181 * _t831;
			_t1189 = _t1188 * 0.318310;
			_t1190 = _t1182 * 0.318310;
			_t1191 = _t1189 * vertParams[52];
			_t1192 = _t1189 * vertParams[53];
			_t1193 = _t1189 * vertParams[54];
			_t841 = _t1191;
			_t842 = _t1192;
			_t843 = _t1193;
			_t844 = _t1188;
			_t845 = _t1189;
			_t846 = _t1190;
		}
		else {
			_t841 = 0.000000;
			_t842 = 0.000000;
			_t843 = 0.000000;
			_t844 = 0.000000;
			_t845 = 0.000000;
			_t846 = 0.000000;
		}
		_t272 = _t835;
		_t273 = _t833;
		_t274 = _t831;
		_t275 = _t841;
		_t276 = _t842;
		_t277 = _t843;
		_t278 = _t844;
		_t279 = _t845;
		_t280 = _t846;
		_t281 = _t840;
	}
	_t1194 = _t275 * _t281;
	_t1195 = _t276 * _t281;
	_t1196 = _t277 * _t281;
	_t1197 = _t280 * _t280;
	_t1198 = _t278 / _t279;
	_t1199 = _t1198 * _t1198;
	_t1200 = _t1199 * _t271;
	_t1201 = (float)1.0 / (_t279);
	_t1202 = _t1201 * _t1201;
	_t1203 = _t1194 * vertParams[61];
	_t1204 = _t1195 * vertParams[61];
	_t1205 = _t1196 * vertParams[61];
	cif (vertParams[62] == 0.000000) {
		_t1218 = vertParams[68] * vertParams[70];
		_t1219 = vertParams[67] * vertParams[71];
		_t1220 = _t1219-_t1218;
		_t1221 = vertParams[67] * vertParams[72];
		_t1222 = vertParams[69] * vertParams[70];
		_t1223 = _t1222-_t1221;
		_t1224 = vertParams[69] * vertParams[71];
		_t1225 = vertParams[68] * vertParams[72];
		_t1226 = _t1225-_t1224;
		_t1227 = sqrt(_t1226*_t1226+_t1223*_t1223+_t1220*_t1220);
		_t1228 = (float)1.0 / (_t1227);
		_t1229 = _t1226 * _t1228;
		_t1230 = _t1223 * _t1228;
		_t1231 = _t1220 * _t1228;
		_t1232 = _t273 * vertParams[70];
		_t1233 = _t272 * vertParams[71];
		_t1234 = _t1233-_t1232;
		_t1235 = _t272 * vertParams[72];
		_t1236 = _t274 * vertParams[70];
		_t1237 = _t1236-_t1235;
		_t1238 = _t274 * vertParams[71];
		_t1239 = _t273 * vertParams[72];
		_t1240 = _t1239-_t1238;
		_t1241 = _t1240 * vertParams[67] + _t1237 * vertParams[68] + _t1234 * vertParams[69];
		_t1242 = (float)1.0 / (_t1241);
		_t1243 = _t152-vertParams[64];
		_t1244 = _t153-vertParams[65];
		_t1245 = _t154-vertParams[66];
		_t1246 = _t1243 * _t1240 + _t1244 * _t1237 + _t1245 * _t1234;
		_t1247 = _t1246 * _t1242;
		_t1248 = _t1244 * vertParams[67];
		_t1249 = _t1243 * vertParams[68];
		_t1250 = _t1249-_t1248;
		_t1251 = _t1243 * vertParams[69];
		_t1252 = _t1245 * vertParams[67];
		_t1253 = _t1252-_t1251;
		_t1254 = _t1245 * vertParams[68];
		_t1255 = _t1244 * vertParams[69];
		_t1256 = _t1255-_t1254;
		_t1257 = _t272 * _t1256 + _t273 * _t1253 + _t274 * _t1250;
		_t1258 = _t1257 * _t1242;
		_t1259 = vertParams[70] * _t1256 + vertParams[71] * _t1253 + vertParams[72] * _t1250;
		_t1260 = _t1259 * _t1242;
		_t1261 = 1.000000-_t1247;
		_t1262 = _t1261-_t1258;
		_t1263 = _t1260 * _t272;
		_t1264 = _t152+_t1263;
		_t1265 = _t1260 * _t273;
		_t1266 = _t153+_t1265;
		_t1267 = _t1260 * _t274;
		_t1268 = _t154+_t1267;
		_t1269 = _t1258 * vertParams[79];
		_t1270 = _t1247 * vertParams[76];
		_t1271 = _t1262 * vertParams[73];
		_t1272 = _t1271+_t1270;
		_t1273 = _t1272+_t1269;
		_t1274 = _t1258 * vertParams[80];
		_t1275 = _t1247 * vertParams[77];
		_t1276 = _t1262 * vertParams[74];
		_t1277 = _t1276+_t1275;
		_t1278 = _t1277+_t1274;
		_t1279 = _t1258 * vertParams[81];
		_t1280 = _t1247 * vertParams[78];
		_t1281 = _t1262 * vertParams[75];
		_t1282 = _t1281+_t1280;
		_t1283 = _t1282+_t1279;
		_t1284 = sqrt(_t1273*_t1273+_t1278*_t1278+_t1283*_t1283);
		_t1285 = (float)1.0 / (_t1284);
		_t1286 = _t1273 * _t1285;
		_t1287 = _t1278 * _t1285;
		_t1288 = _t1283 * _t1285;
		cif (vertParams[100] == 0.000000) {
			_t1289 = _t1247;
			_t1290 = _t1258;
		}
		else {
			_t1292 = _t1258 * vertParams[105];
			_t1293 = _t1247 * vertParams[103];
			_t1294 = 1.000000-_t1247;
			_t1295 = _t1294-_t1258;
			_t1296 = _t1295 * vertParams[101];
			_t1297 = _t1296+_t1293;
			_t1298 = _t1297+_t1292;
			_t1299 = _t1258 * vertParams[106];
			_t1300 = _t1247 * vertParams[104];
			_t1301 = 1.000000-_t1247;
			_t1302 = _t1301-_t1258;
			_t1303 = _t1302 * vertParams[102];
			_t1304 = _t1303+_t1300;
			_t1305 = _t1304+_t1299;
			_t1289 = _t1298;
			_t1290 = _t1305;
		}
		_t1206 = _t1264;
		_t1207 = _t1266;
		_t1208 = _t1268;
		_t1209 = _t1229;
		_t1210 = _t1230;
		_t1211 = _t1231;
		_t1212 = _t1286;
		_t1213 = _t1287;
		_t1214 = _t1288;
		_t1215 = _t1289;
		_t1216 = _t1290;
	}
	else {
		_t1206 = 0.000000;
		_t1207 = 0.000000;
		_t1208 = 0.000000;
		_t1209 = 0.000000;
		_t1210 = 0.000000;
		_t1211 = 0.000000;
		_t1212 = 0.000000;
		_t1213 = 0.000000;
		_t1214 = 0.000000;
		_t1215 = 0.000000;
		_t1216 = 0.000000;
	}
	_t1306 = -_t272;
	_t1307 = -_t273;
	_t1308 = -_t274;
	_t1309 = _t154-_t1208;
	_t1310 = _t1309 * _t1309;
	_t1311 = _t153-_t1207;
	_t1312 = _t1311 * _t1311;
	_t1313 = _t152-_t1206;
	_t1314 = _t1313 * _t1313;
	_t1315 = _t1314+_t1312;
	_t1316 = _t1315+_t1310;
	_t1317 = _t1316 * _t1316;
	_t1318 = _t1202 * _t1317;
	_t1319 = _t272 * _t1212 + _t273 * _t1213 + _t274 * _t1214;
	cif (_t1319 >= 0.000000) {
		_t1320 = _t1319;
	}
	else {
		_t1322 = -_t1319;
		_t1320 = _t1322;
	}
	_t1323 = _t1320 * _t1320;
	_t1324 = (float)1.0 / (_t1323);
	_t1325 = _t1318 * _t1324;
	_t1326 = _t1200 * _t1324;
	cif (vertParams[108] == 0.000000) {
		_t1339 = vertParams[109]-_t1206;
		_t1340 = vertParams[110]-_t1207;
		_t1341 = vertParams[111]-_t1208;
		_t1342 = _t1341 * _t1341;
		_t1343 = _t1340 * _t1340;
		_t1344 = _t1339 * _t1339;
		_t1345 = _t1344+_t1343;
		_t1346 = _t1345+_t1342;
		_t1347 = sqrt(_t1346);
		_t1348 = _t1339 / _t1347;
		_t1349 = _t1340 / _t1347;
		_t1350 = _t1341 / _t1347;
		_t1351 = (float)1.0 / (_t1346);
		_t1352 = vertParams[112] * _t1351;
		_t1353 = vertParams[113] * _t1351;
		_t1354 = vertParams[114] * _t1351;
		_t1327 = _t1348;
		_t1328 = _t1349;
		_t1329 = _t1350;
		_t1330 = _t1352;
		_t1331 = _t1353;
		_t1332 = _t1354;
		_t1333 = 1.000000;
		_t1334 = _t1346;
		_t1335 = 0.079577;
	}
	else cif (vertParams[108] == 1.000000) {
		cif (vertParams[109] == 0.000000) {
			_t1363 = 1.000001-primary[5];
			_t1364 = sqrt(_t1363);
			_t1365 = 1.000000-_t1364;
			_t1366 = _t1364 * primary[6];
			_t1367 = vertParams[117] * _t1366;
			_t1368 = vertParams[114] * _t1365;
			_t1369 = vertParams[111]+_t1368;
			_t1370 = _t1369+_t1367;
			_t1371 = vertParams[118] * _t1366;
			_t1372 = vertParams[115] * _t1365;
			_t1373 = vertParams[112]+_t1372;
			_t1374 = _t1373+_t1371;
			_t1375 = vertParams[119] * _t1366;
			_t1376 = vertParams[116] * _t1365;
			_t1377 = vertParams[113]+_t1376;
			_t1378 = _t1377+_t1375;
			_t1379 = 1.000000-_t1365;
			_t1380 = _t1379-_t1366;
			_t1381 = vertParams[126] * _t1366;
			_t1382 = vertParams[123] * _t1365;
			_t1383 = vertParams[120] * _t1380;
			_t1384 = _t1383+_t1382;
			_t1385 = _t1384+_t1381;
			_t1386 = vertParams[127] * _t1366;
			_t1387 = vertParams[124] * _t1365;
			_t1388 = vertParams[121] * _t1380;
			_t1389 = _t1388+_t1387;
			_t1390 = _t1389+_t1386;
			_t1391 = vertParams[128] * _t1366;
			_t1392 = vertParams[125] * _t1365;
			_t1393 = vertParams[122] * _t1380;
			_t1394 = _t1393+_t1392;
			_t1395 = _t1394+_t1391;
			_t1396 = sqrt(_t1385*_t1385+_t1390*_t1390+_t1395*_t1395);
			_t1397 = (float)1.0 / (_t1396);
			_t1398 = _t1385 * _t1397;
			_t1399 = _t1390 * _t1397;
			_t1400 = _t1395 * _t1397;
			_t1355 = _t1370;
			_t1356 = _t1374;
			_t1357 = _t1378;
			_t1358 = _t1398;
			_t1359 = _t1399;
			_t1360 = _t1400;
			_t1361 = vertParams[154];
		}
		else {
			_t1355 = 0.000000;
			_t1356 = 0.000000;
			_t1357 = 0.000000;
			_t1358 = 0.000000;
			_t1359 = 0.000000;
			_t1360 = 0.000000;
			_t1361 = 0.000000;
		}
		_t1401 = _t1355-_t1206;
		_t1402 = _t1356-_t1207;
		_t1403 = _t1357-_t1208;
		_t1404 = _t1403 * _t1403;
		_t1405 = _t1402 * _t1402;
		_t1406 = _t1401 * _t1401;
		_t1407 = _t1406+_t1405;
		_t1408 = _t1407+_t1404;
		_t1409 = sqrt(_t1408);
		_t1410 = _t1401 / _t1409;
		_t1411 = _t1402 / _t1409;
		_t1412 = _t1403 / _t1409;
		_t1413 = _t1410 * _t1358 + _t1411 * _t1359 + _t1412 * _t1360;
		_t1414 = -_t1413;
		_t1415 = _t1361 * _t1408;
		_t1416 = _t1415 / _t1414;
		_t1417 = vertParams[155] / _t1416;
		_t1418 = vertParams[156] / _t1416;
		_t1419 = vertParams[157] / _t1416;
		_t1420 = _t1361 * _t1414;
		_t1421 = _t1420 * 0.318310;
		_t1327 = _t1410;
		_t1328 = _t1411;
		_t1329 = _t1412;
		_t1330 = _t1417;
		_t1331 = _t1418;
		_t1332 = _t1419;
		_t1333 = _t1414;
		_t1334 = _t1416;
		_t1335 = _t1421;
	}
	else cif (vertParams[108] == 2.000000) {
		cif (vertParams[109] == 0.000000) {
			_t1439 = vertParams[116] * vertParams[116];
			_t1440 = vertParams[117] * vertParams[117];
			_t1441 = vertParams[118] * vertParams[118];
			_t1442 = vertParams[116] * vertParams[117];
			_t1443 = vertParams[116] * vertParams[118];
			_t1444 = vertParams[117] * vertParams[118];
			_t1445 = vertParams[116] * vertParams[119];
			_t1446 = vertParams[117] * vertParams[119];
			_t1447 = vertParams[118] * vertParams[119];
			_t1448 = _t1440+_t1441;
			_t1449 = 2.000000 * _t1448;
			_t1450 = 1.000000-_t1449;
			_t1451 = _t1442+_t1447;
			_t1452 = 2.000000 * _t1451;
			_t1453 = _t1443-_t1446;
			_t1454 = 2.000000 * _t1453;
			_t1455 = _t1442-_t1447;
			_t1456 = 2.000000 * _t1455;
			_t1457 = _t1439+_t1441;
			_t1458 = 2.000000 * _t1457;
			_t1459 = 1.000000-_t1458;
			_t1460 = _t1444+_t1445;
			_t1461 = 2.000000 * _t1460;
			_t1462 = _t1443+_t1446;
			_t1463 = 2.000000 * _t1462;
			_t1464 = _t1444-_t1445;
			_t1465 = 2.000000 * _t1464;
			_t1466 = _t1439+_t1440;
			_t1467 = 2.000000 * _t1466;
			_t1468 = 1.000000-_t1467;
			_t1422 = _t1450;
			_t1423 = _t1452;
			_t1424 = _t1454;
			_t1425 = 0.000000;
			_t1426 = _t1456;
			_t1427 = _t1459;
			_t1428 = _t1461;
			_t1429 = 0.000000;
			_t1430 = _t1463;
			_t1431 = _t1465;
			_t1432 = _t1468;
			_t1433 = 0.000000;
			_t1434 = vertParams[110];
			_t1435 = vertParams[111];
			_t1436 = vertParams[112];
			_t1437 = 1.000000;
		}
		else {
			_t1469 = 1.000000-primary[0];
			_t1470 = primary[0] * vertParams[113];
			_t1471 = _t1469 * vertParams[110];
			_t1472 = _t1471+_t1470;
			_t1473 = primary[0] * vertParams[114];
			_t1474 = _t1469 * vertParams[111];
			_t1475 = _t1474+_t1473;
			_t1476 = primary[0] * vertParams[115];
			_t1477 = _t1469 * vertParams[112];
			_t1478 = _t1477+_t1476;
			_t1479 = vertParams[119] * vertParams[123];
			_t1480 = vertParams[118] * vertParams[122];
			_t1481 = vertParams[117] * vertParams[121];
			_t1482 = vertParams[116] * vertParams[120];
			_t1483 = _t1482+_t1481;
			_t1484 = _t1483+_t1480;
			_t1485 = _t1484+_t1479;
			cif (_t1485 < 0.000000) {
				_t1492 = -vertParams[120];
				_t1493 = -vertParams[121];
				_t1494 = -vertParams[122];
				_t1495 = -vertParams[123];
				_t1496 = -_t1485;
				_t1486 = _t1492;
				_t1487 = _t1493;
				_t1488 = _t1494;
				_t1489 = _t1495;
				_t1490 = _t1496;
			}
			else {
				_t1486 = vertParams[120];
				_t1487 = vertParams[121];
				_t1488 = vertParams[122];
				_t1489 = vertParams[123];
				_t1490 = _t1485;
			}
			cif (_t1490 > 0.999500) {
				_t1502 = 1.000000-primary[0];
				_t1503 = primary[0] * _t1486;
				_t1504 = _t1502 * vertParams[116];
				_t1505 = _t1504+_t1503;
				_t1506 = primary[0] * _t1487;
				_t1507 = _t1502 * vertParams[117];
				_t1508 = _t1507+_t1506;
				_t1509 = primary[0] * _t1488;
				_t1510 = _t1502 * vertParams[118];
				_t1511 = _t1510+_t1509;
				_t1512 = primary[0] * _t1489;
				_t1513 = _t1502 * vertParams[119];
				_t1514 = _t1513+_t1512;
				_t1515 = sqrt(_t1505*_t1505+_t1508*_t1508+_t1511*_t1511+_t1514*_t1514);
				_t1516 = (float)1.0 / (_t1515);
				_t1517 = _t1505 * _t1516;
				_t1518 = _t1508 * _t1516;
				_t1519 = _t1511 * _t1516;
				_t1520 = _t1514 * _t1516;
				_t1497 = _t1517;
				_t1498 = _t1518;
				_t1499 = _t1519;
				_t1500 = _t1520;
			}
			else {
				_t1521 = acos(_t1490);
				_t1522 = _t1521 * primary[0];
				_t1523 = vertParams[116] * _t1490;
				_t1524 = _t1486-_t1523;
				_t1525 = vertParams[117] * _t1490;
				_t1526 = _t1487-_t1525;
				_t1527 = vertParams[118] * _t1490;
				_t1528 = _t1488-_t1527;
				_t1529 = vertParams[119] * _t1490;
				_t1530 = _t1489-_t1529;
				_t1531 = sqrt(_t1524*_t1524+_t1526*_t1526+_t1528*_t1528+_t1530*_t1530);
				_t1532 = (float)1.0 / (_t1531);
				_t1533 = _t1524 * _t1532;
				_t1534 = _t1526 * _t1532;
				_t1535 = _t1528 * _t1532;
				_t1536 = _t1530 * _t1532;
				_t1537 = sin(_t1522);
				_t1538 = cos(_t1522);
				_t1539 = _t1533 * _t1537;
				_t1540 = vertParams[116] * _t1538;
				_t1541 = _t1540+_t1539;
				_t1542 = _t1534 * _t1537;
				_t1543 = vertParams[117] * _t1538;
				_t1544 = _t1543+_t1542;
				_t1545 = _t1535 * _t1537;
				_t1546 = vertParams[118] * _t1538;
				_t1547 = _t1546+_t1545;
				_t1548 = _t1536 * _t1537;
				_t1549 = vertParams[119] * _t1538;
				_t1550 = _t1549+_t1548;
				_t1497 = _t1541;
				_t1498 = _t1544;
				_t1499 = _t1547;
				_t1500 = _t1550;
			}
			_t1551 = _t1497 * _t1497;
			_t1552 = _t1498 * _t1498;
			_t1553 = _t1499 * _t1499;
			_t1554 = _t1497 * _t1498;
			_t1555 = _t1497 * _t1499;
			_t1556 = _t1498 * _t1499;
			_t1557 = _t1497 * _t1500;
			_t1558 = _t1498 * _t1500;
			_t1559 = _t1499 * _t1500;
			_t1560 = _t1552+_t1553;
			_t1561 = 2.000000 * _t1560;
			_t1562 = 1.000000-_t1561;
			_t1563 = _t1554+_t1559;
			_t1564 = 2.000000 * _t1563;
			_t1565 = _t1555-_t1558;
			_t1566 = 2.000000 * _t1565;
			_t1567 = _t1554-_t1559;
			_t1568 = 2.000000 * _t1567;
			_t1569 = _t1551+_t1553;
			_t1570 = 2.000000 * _t1569;
			_t1571 = 1.000000-_t1570;
			_t1572 = _t1556+_t1557;
			_t1573 = 2.000000 * _t1572;
			_t1574 = _t1555+_t1558;
			_t1575 = 2.000000 * _t1574;
			_t1576 = _t1556-_t1557;
			_t1577 = 2.000000 * _t1576;
			_t1578 = _t1551+_t1552;
			_t1579 = 2.000000 * _t1578;
			_t1580 = 1.000000-_t1579;
			_t1422 = _t1562;
			_t1423 = _t1564;
			_t1424 = _t1566;
			_t1425 = 0.000000;
			_t1426 = _t1568;
			_t1427 = _t1571;
			_t1428 = _t1573;
			_t1429 = 0.000000;
			_t1430 = _t1575;
			_t1431 = _t1577;
			_t1432 = _t1580;
			_t1433 = 0.000000;
			_t1434 = _t1472;
			_t1435 = _t1475;
			_t1436 = _t1478;
			_t1437 = 1.000000;
		}
		_t1581 = vertParams[140]-vertParams[139];
		_t1582 = primary[5]-vertParams[139];
		_t1583 = _t1582 / _t1581;
		_t1584 = vertParams[142]-vertParams[141];
		_t1585 = primary[6]-vertParams[141];
		_t1586 = _t1585 / _t1584;
		cif (_t1586 < 0.500000) {
			_t1589 = 2.000000 * _t1586;
			_t1590 = sqrt(_t1589);
			_t1591 = 1.000000-_t1590;
			_t1587 = _t1591;
		}
		else {
			_t1592 = _t1586-0.500000;
			_t1593 = 2.000000 * _t1592;
			_t1594 = sqrt(_t1593);
			_t1595 = _t1594-1.000000;
			_t1587 = _t1595;
		}
		cif (_t1583 < 0.500000) {
			_t1598 = 2.000000 * _t1583;
			_t1599 = sqrt(_t1598);
			_t1600 = 1.000000-_t1599;
			_t1596 = _t1600;
		}
		else {
			_t1601 = _t1583-0.500000;
			_t1602 = 2.000000 * _t1601;
			_t1603 = sqrt(_t1602);
			_t1604 = _t1603-1.000000;
			_t1596 = _t1604;
		}
		_t1605 = vertParams[143]+_t1596;
		_t1606 = vertParams[144]+_t1587;
		_t1607 = _t1605+0.500000;
		_t1608 = _t1607 * vertParams[145];
		_t1609 = _t1606+0.500000;
		_t1610 = _t1609 * vertParams[146];
		_t1611 = sin(_t1608);
		_t1612 = cos(_t1608);
		_t1613 = sin(_t1610);
		_t1614 = cos(_t1610);
		_t1615 = -_t1612;
		_t1616 = _t1615 * _t1613;
		_t1617 = _t1611 * _t1613;
		_t1618 = _t1432 * _t1616;
		_t1619 = _t1428 * _t1614;
		_t1620 = _t1424 * _t1617;
		_t1621 = _t1620+_t1619;
		_t1622 = _t1621+_t1618;
		_t1623 = _t1431 * _t1616;
		_t1624 = _t1427 * _t1614;
		_t1625 = _t1423 * _t1617;
		_t1626 = _t1625+_t1624;
		_t1627 = _t1626+_t1623;
		_t1628 = _t1430 * _t1616;
		_t1629 = _t1426 * _t1614;
		_t1630 = _t1422 * _t1617;
		_t1631 = _t1630+_t1629;
		_t1632 = _t1631+_t1628;
		_t1633 = 1.000000-_t1596;
		_t1634 = 1.000000-_t1587;
		_t1635 = vertParams[150] * _t1596;
		_t1636 = _t1635 * _t1634;
		_t1637 = vertParams[147] * _t1633;
		_t1638 = _t1637 * _t1634;
		_t1639 = _t1638+_t1636;
		_t1640 = vertParams[151] * _t1596;
		_t1641 = _t1640 * _t1634;
		_t1642 = vertParams[148] * _t1633;
		_t1643 = _t1642 * _t1634;
		_t1644 = _t1643+_t1641;
		_t1645 = vertParams[152] * _t1596;
		_t1646 = _t1645 * _t1634;
		_t1647 = vertParams[149] * _t1633;
		_t1648 = _t1647 * _t1634;
		_t1649 = _t1648+_t1646;
		_t1650 = vertParams[156] * _t1596;
		_t1651 = _t1650 * _t1587;
		_t1652 = vertParams[153] * _t1633;
		_t1653 = _t1652 * _t1587;
		_t1654 = _t1653+_t1651;
		_t1655 = vertParams[157] * _t1596;
		_t1656 = _t1655 * _t1587;
		_t1657 = vertParams[154] * _t1633;
		_t1658 = _t1657 * _t1587;
		_t1659 = _t1658+_t1656;
		_t1660 = vertParams[158] * _t1596;
		_t1661 = _t1660 * _t1587;
		_t1662 = vertParams[155] * _t1633;
		_t1663 = _t1662 * _t1587;
		_t1664 = _t1663+_t1661;
		_t1665 = _t1639+_t1654;
		_t1666 = _t1644+_t1659;
		_t1667 = _t1649+_t1664;
		cif (_t1613 >= 0.000000) {
			_t1668 = _t1613;
		}
		else {
			_t1670 = -_t1613;
			_t1668 = _t1670;
		}
		cif (_t1668 >= 0.000000) {
			_t1671 = _t1668;
		}
		else {
			_t1671 = 0.000000;
		}
		_t1673 = _t1664 * 0.072169;
		_t1674 = _t1659 * 0.715160;
		_t1675 = _t1654 * 0.212671;
		_t1676 = _t1675+_t1674;
		_t1677 = _t1676+_t1673;
		_t1678 = _t1677 * vertParams[160];
		_t1679 = _t1649 * 0.072169;
		_t1680 = _t1644 * 0.715160;
		_t1681 = _t1639 * 0.212671;
		_t1682 = _t1681+_t1680;
		_t1683 = _t1682+_t1679;
		_t1684 = _t1683 * vertParams[159];
		_t1685 = _t1684+_t1678;
		_t1686 = _t1685 * vertParams[161];
		_t1687 = _t1686 / _t1671;
		_t1688 = (float)1.0 / (_t1687);
		_t1689 = _t1665 * _t1688;
		_t1690 = _t1666 * _t1688;
		_t1691 = _t1667 * _t1688;
		_t1692 = scene[37] * scene[37];
		_t1693 = (float)1.0 / (_t1692);
		_t1694 = 0.318310 * _t1693;
		_t1695 = _t1687 * _t1694;
		_t1327 = _t1632;
		_t1328 = _t1627;
		_t1329 = _t1622;
		_t1330 = _t1689;
		_t1331 = _t1690;
		_t1332 = _t1691;
		_t1333 = 1.000000;
		_t1334 = _t1687;
		_t1335 = _t1695;
	}
	else {
		_t1327 = 0.000000;
		_t1328 = 0.000000;
		_t1329 = 0.000000;
		_t1330 = 0.000000;
		_t1331 = 0.000000;
		_t1332 = 0.000000;
		_t1333 = 0.000000;
		_t1334 = 0.000000;
		_t1335 = 0.000000;
	}
	cif (vertParams[164] == 1.000000) {
		_t1705 = _t1212 * _t1306 + _t1213 * _t1307 + _t1214 * _t1308;
		cif (_t1705 > 0.000000) {
			_t1706 = _t1212;
			_t1707 = _t1213;
			_t1708 = _t1214;
			_t1709 = _t1705;
		}
		else {
			_t1711 = -_t1212;
			_t1712 = -_t1213;
			_t1713 = -_t1214;
			_t1714 = -_t1705;
			_t1706 = _t1711;
			_t1707 = _t1712;
			_t1708 = _t1713;
			_t1709 = _t1714;
		}
		_t1715 = _t1706 * _t1327 + _t1707 * _t1328 + _t1708 * _t1329;
		cif (vertParams[172] > 0.000000) {
			_t1721 = _t1306 * _t1706 + _t1307 * _t1707 + _t1308 * _t1708;
			_t1722 = 2.000000 * _t1721;
			_t1723 = _t1722 * _t1706;
			_t1724 = _t1723-_t1306;
			_t1725 = _t1722 * _t1707;
			_t1726 = _t1725-_t1307;
			_t1727 = _t1722 * _t1708;
			_t1728 = _t1727-_t1308;
			_t1729 = _t1724 * _t1327 + _t1726 * _t1328 + _t1728 * _t1329;
			_t1730 = pow(_t1729,vertParams[171]);
			_t1731 = _t1730 * 0.159155;
			cif (_t1731 > 0.000000) {
				_t1737 = vertParams[171]+1.000000;
				_t1738 = vertParams[171]+2.000000;
				_t1739 = _t1738 * _t1731;
				_t1740 = vertParams[168] * _t1739;
				_t1741 = vertParams[169] * _t1739;
				_t1742 = vertParams[170] * _t1739;
				_t1743 = vertParams[172] * _t1737;
				_t1744 = _t1743 * _t1731;
				_t1732 = _t1740;
				_t1733 = _t1741;
				_t1734 = _t1742;
				_t1735 = _t1744;
			}
			else {
				_t1732 = 0.000000;
				_t1733 = 0.000000;
				_t1734 = 0.000000;
				_t1735 = 0.000000;
			}
			_t1716 = _t1732;
			_t1717 = _t1733;
			_t1718 = _t1734;
			_t1719 = _t1735;
		}
		else {
			_t1716 = 0.000000;
			_t1717 = 0.000000;
			_t1718 = 0.000000;
			_t1719 = 0.000000;
		}
		cif (vertParams[172] < 1.000000) {
			_t1751 = vertParams[165] * 0.318310;
			_t1752 = vertParams[166] * 0.318310;
			_t1753 = vertParams[167] * 0.318310;
			_t1754 = 1.000000-vertParams[172];
			_t1755 = _t1754 * 0.318310;
			_t1756 = _t1755 * _t1715;
			_t1757 = _t1755 * _t1709;
			_t1745 = _t1751;
			_t1746 = _t1752;
			_t1747 = _t1753;
			_t1748 = _t1756;
			_t1749 = _t1757;
		}
		else {
			_t1745 = 0.000000;
			_t1746 = 0.000000;
			_t1747 = 0.000000;
			_t1748 = 0.000000;
			_t1749 = 0.000000;
		}
		_t1758 = _t1716+_t1745;
		_t1759 = _t1717+_t1746;
		_t1760 = _t1718+_t1747;
		_t1761 = _t1719+_t1748;
		_t1762 = _t1719+_t1749;
		_t1763 = _t1758 * _t1715;
		_t1764 = _t1759 * _t1715;
		_t1765 = _t1760 * _t1715;
		_t1696 = _t1763;
		_t1697 = _t1764;
		_t1698 = _t1765;
		_t1699 = _t1715;
		_t1700 = _t1761;
		_t1701 = _t1762;
	}
	else cif (vertParams[164] == 2.000000) {
		_t1766 = _t1306 * _t1212 + _t1307 * _t1213 + _t1308 * _t1214;
		_t1767 = _t1327 * _t1212 + _t1328 * _t1213 + _t1329 * _t1214;
		_t1768 = _t1766 * _t1767;
		cif (_t1766 > 0.000000) {
			_t1769 = vertParams[171];
		}
		else {
			_t1769 = vertParams[172];
		}
		cif (_t1767 > 0.000000) {
			_t1771 = vertParams[171];
		}
		else {
			_t1771 = vertParams[172];
		}
		cif (_t1768 > 0.000000) {
			_t1777 = _t1306+_t1327;
			_t1778 = _t1307+_t1328;
			_t1779 = _t1308+_t1329;
			_t1780 = sqrt(_t1777*_t1777+_t1778*_t1778+_t1779*_t1779);
			_t1781 = (float)1.0 / (_t1780);
			_t1782 = _t1777 * _t1781;
			_t1783 = _t1778 * _t1781;
			_t1784 = _t1779 * _t1781;
			_t1773 = _t1782;
			_t1774 = _t1783;
			_t1775 = _t1784;
		}
		else {
			_t1785 = _t1327 * _t1769;
			_t1786 = _t1306+_t1785;
			_t1787 = _t1328 * _t1769;
			_t1788 = _t1307+_t1787;
			_t1789 = _t1329 * _t1769;
			_t1790 = _t1308+_t1789;
			_t1791 = sqrt(_t1786*_t1786+_t1788*_t1788+_t1790*_t1790);
			_t1792 = (float)1.0 / (_t1791);
			_t1793 = _t1786 * _t1792;
			_t1794 = _t1788 * _t1792;
			_t1795 = _t1790 * _t1792;
			_t1773 = _t1793;
			_t1774 = _t1794;
			_t1775 = _t1795;
		}
		_t1796 = _t1773 * _t1212 + _t1774 * _t1213 + _t1775 * _t1214;
		cif (_t1796 < 0.000000) {
			_t1801 = -_t1773;
			_t1802 = -_t1774;
			_t1803 = -_t1775;
			_t1797 = _t1801;
			_t1798 = _t1802;
			_t1799 = _t1803;
		}
		else {
			_t1797 = _t1773;
			_t1798 = _t1774;
			_t1799 = _t1775;
		}
		_t1804 = _t1306 * _t1797 + _t1307 * _t1798 + _t1308 * _t1799;
		_t1805 = _t1327 * _t1797 + _t1328 * _t1798 + _t1329 * _t1799;
		cif (_t1214 < -0.999999) {
			_t1806 = 0.000000;
			_t1807 = -1.000000;
			_t1808 = 0.000000;
			_t1809 = -1.000000;
			_t1810 = 0.000000;
			_t1811 = 0.000000;
		}
		else {
			_t1813 = 1.000000+_t1214;
			_t1814 = (float)1.0 / (_t1813);
			_t1815 = -_t1212;
			_t1816 = _t1815 * _t1213;
			_t1817 = _t1816 * _t1814;
			_t1818 = -_t1212;
			_t1819 = _t1212 * _t1212;
			_t1820 = _t1819 * _t1814;
			_t1821 = 1.000000-_t1820;
			_t1822 = -_t1213;
			_t1823 = _t1213 * _t1213;
			_t1824 = _t1823 * _t1814;
			_t1825 = 1.000000-_t1824;
			_t1806 = _t1821;
			_t1807 = _t1817;
			_t1808 = _t1818;
			_t1809 = _t1817;
			_t1810 = _t1825;
			_t1811 = _t1822;
		}
		_t1826 = _t1212 * _t1797 + _t1213 * _t1798 + _t1214 * _t1799;
		_t1827 = _t1809 * _t1797 + _t1810 * _t1798 + _t1811 * _t1799;
		_t1828 = _t1806 * _t1797 + _t1807 * _t1798 + _t1808 * _t1799;
		_t1829 = _t1826 * _t1826;
		_t1830 = vertParams[173] * vertParams[173];
		_t1831 = _t1827 * _t1827;
		_t1832 = _t1831 / _t1830;
		_t1833 = vertParams[173] * vertParams[173];
		_t1834 = _t1828 * _t1828;
		_t1835 = _t1834 / _t1833;
		_t1836 = _t1835+_t1832;
		_t1837 = _t1836 / _t1829;
		_t1838 = _t1829 * _t1829;
		_t1839 = 3.141593 * vertParams[173];
		_t1840 = _t1839 * vertParams[173];
		_t1841 = _t1840 * _t1838;
		_t1842 = -_t1837;
		_t1843 = exp(_t1842);
		_t1844 = _t1843 / _t1841;
		cif (_t1804 > 0.000000) {
			_t1845 = vertParams[172];
		}
		else {
			_t1845 = vertParams[171];
		}
		_t1847 = _t1845 * _t1845;
		_t1848 = _t1804 * _t1804;
		_t1849 = 1.000000-_t1848;
		_t1850 = _t1849 * _t1847;
		_t1851 = 1.000000-_t1850;
		cif (_t1851 <= 0.000000) {
			_t1852 = 1.000000;
		}
		else {
			cif (_t1804 >= 0.000000) {
				_t1854 = _t1804;
			}
			else {
				_t1856 = -_t1804;
				_t1854 = _t1856;
			}
			_t1857 = sqrt(_t1851);
			_t1858 = vertParams[171] * _t1857;
			_t1859 = vertParams[171] * _t1854;
			_t1860 = _t1854+_t1858;
			_t1861 = _t1854-_t1858;
			_t1862 = _t1861 / _t1860;
			_t1863 = _t1859+_t1857;
			_t1864 = _t1859-_t1857;
			_t1865 = _t1864 / _t1863;
			_t1866 = _t1865 * _t1865;
			_t1867 = _t1862 * _t1862;
			_t1868 = _t1867+_t1866;
			_t1869 = 0.500000 * _t1868;
			_t1852 = _t1869;
		}
		cif (_t1766 >= 0.000000) {
			_t1870 = _t1766;
		}
		else {
			_t1872 = -_t1766;
			_t1870 = _t1872;
		}
		cif (_t1767 >= 0.000000) {
			_t1873 = _t1767;
		}
		else {
			_t1875 = -_t1767;
			_t1873 = _t1875;
		}
		_t1876 = _t1873 * _t1873;
		_t1877 = 1.000001-_t1876;
		cif (_t1877 >= 0.000000) {
			_t1878 = _t1877;
		}
		else {
			_t1880 = -_t1877;
			_t1878 = _t1880;
		}
		_t1881 = sqrt(_t1878);
		_t1882 = _t1881 / _t1873;
		cif (_t1882 <= 0.000000) {
			_t1883 = 1.000000;
		}
		else {
			_t1885 = vertParams[173] * _t1882;
			_t1886 = (float)1.0 / (_t1885);
			cif (_t1886 >= 1.600000) {
				_t1887 = 1.000000;
			}
			else {
				_t1889 = _t1886 * _t1886;
				_t1890 = 2.577000 * _t1889;
				_t1891 = 2.276000 * _t1886;
				_t1892 = 1.000000+_t1891;
				_t1893 = _t1892+_t1890;
				_t1894 = 2.181000 * _t1889;
				_t1895 = 3.535000 * _t1886;
				_t1896 = _t1895+_t1894;
				_t1897 = _t1896 / _t1893;
				_t1887 = _t1897;
			}
			_t1883 = _t1887;
		}
		_t1898 = _t1870 * _t1870;
		_t1899 = 1.000001-_t1898;
		cif (_t1899 >= 0.000000) {
			_t1900 = _t1899;
		}
		else {
			_t1902 = -_t1899;
			_t1900 = _t1902;
		}
		_t1903 = sqrt(_t1900);
		_t1904 = _t1903 / _t1870;
		cif (_t1904 <= 0.000000) {
			_t1905 = 1.000000;
		}
		else {
			_t1907 = vertParams[173] * _t1904;
			_t1908 = (float)1.0 / (_t1907);
			cif (_t1908 >= 1.600000) {
				_t1909 = 1.000000;
			}
			else {
				_t1911 = _t1908 * _t1908;
				_t1912 = 2.577000 * _t1911;
				_t1913 = 2.276000 * _t1908;
				_t1914 = 1.000000+_t1913;
				_t1915 = _t1914+_t1912;
				_t1916 = 2.181000 * _t1911;
				_t1917 = 3.535000 * _t1908;
				_t1918 = _t1917+_t1916;
				_t1919 = _t1918 / _t1915;
				_t1909 = _t1919;
			}
			_t1905 = _t1909;
		}
		_t1920 = _t1905 * _t1883;
		_t1921 = sqrt(_t1870);
		_t1922 = 0.200000 * _t1921;
		_t1923 = 1.200000-_t1922;
		_t1924 = vertParams[173] * _t1923;
		_t1925 = _t1826 * _t1826;
		_t1926 = _t1924 * _t1924;
		_t1927 = _t1827 * _t1827;
		_t1928 = _t1927 / _t1926;
		_t1929 = _t1924 * _t1924;
		_t1930 = _t1828 * _t1828;
		_t1931 = _t1930 / _t1929;
		_t1932 = _t1931+_t1928;
		_t1933 = _t1932 / _t1925;
		_t1934 = _t1925 * _t1925;
		_t1935 = 3.141593 * _t1924;
		_t1936 = _t1935 * _t1924;
		_t1937 = _t1936 * _t1934;
		_t1938 = -_t1933;
		_t1939 = exp(_t1938);
		_t1940 = _t1939 / _t1937;
		_t1941 = _t1826 * _t1940;
		_t1942 = sqrt(_t1873);
		_t1943 = 0.200000 * _t1942;
		_t1944 = 1.200000-_t1943;
		_t1945 = vertParams[173] * _t1944;
		_t1946 = _t1826 * _t1826;
		_t1947 = _t1945 * _t1945;
		_t1948 = _t1827 * _t1827;
		_t1949 = _t1948 / _t1947;
		_t1950 = _t1945 * _t1945;
		_t1951 = _t1828 * _t1828;
		_t1952 = _t1951 / _t1950;
		_t1953 = _t1952+_t1949;
		_t1954 = _t1953 / _t1946;
		_t1955 = _t1946 * _t1946;
		_t1956 = 3.141593 * _t1945;
		_t1957 = _t1956 * _t1945;
		_t1958 = _t1957 * _t1955;
		_t1959 = -_t1954;
		_t1960 = exp(_t1959);
		_t1961 = _t1960 / _t1958;
		_t1962 = _t1826 * _t1961;
		cif (_t1768 > 0.000000) {
			_t1968 = 4.000000 * _t1766;
			_t1969 = _t1852 * _t1844;
			_t1970 = _t1969 * _t1920;
			_t1971 = _t1970 / _t1968;
			cif (_t1971 >= 0.000000) {
				_t1972 = _t1971;
			}
			else {
				_t1974 = -_t1971;
				_t1972 = _t1974;
			}
			_t1975 = vertParams[165] * _t1972;
			_t1976 = vertParams[166] * _t1972;
			_t1977 = vertParams[167] * _t1972;
			_t1978 = 4.000000 * _t1805;
			_t1979 = _t1941 * _t1852;
			_t1980 = _t1979 / _t1978;
			cif (_t1980 >= 0.000000) {
				_t1981 = _t1980;
			}
			else {
				_t1983 = -_t1980;
				_t1981 = _t1983;
			}
			_t1984 = 4.000000 * _t1804;
			_t1985 = _t1962 * _t1852;
			_t1986 = _t1985 / _t1984;
			cif (_t1986 >= 0.000000) {
				_t1987 = _t1986;
			}
			else {
				_t1989 = -_t1986;
				_t1987 = _t1989;
			}
			_t1963 = _t1975;
			_t1964 = _t1976;
			_t1965 = _t1977;
			_t1966 = _t1981;
			_t1967 = _t1987;
		}
		else {
			_t1990 = _t1769 * _t1805;
			_t1991 = _t1804+_t1990;
			_t1992 = _t1771 * _t1804;
			_t1993 = _t1805+_t1992;
			_t1994 = (float)1.0 / (_t1769);
			_t1995 = _t1994 * _t1994;
			_t1996 = _t1991 * _t1991;
			_t1997 = _t1766 * _t1996;
			_t1998 = _t1769 * _t1769;
			_t1999 = 1.000000-_t1852;
			_t2000 = _t1999 * _t1844;
			_t2001 = _t2000 * _t1920;
			_t2002 = _t2001 * _t1998;
			_t2003 = _t2002 * _t1804;
			_t2004 = _t2003 * _t1805;
			_t2005 = _t1995 * _t2004;
			_t2006 = _t2005 / _t1997;
			cif (_t2006 >= 0.000000) {
				_t2007 = _t2006;
			}
			else {
				_t2009 = -_t2006;
				_t2007 = _t2009;
			}
			_t2010 = vertParams[168] * _t2007;
			_t2011 = vertParams[169] * _t2007;
			_t2012 = vertParams[170] * _t2007;
			_t2013 = _t1991 * _t1991;
			_t2014 = _t1769 * _t1769;
			_t2015 = _t2014 * _t1805;
			_t2016 = 1.000000-_t1852;
			_t2017 = _t1941 * _t2016;
			_t2018 = _t2017 * _t2015;
			_t2019 = _t2018 / _t2013;
			cif (_t2019 >= 0.000000) {
				_t2020 = _t2019;
			}
			else {
				_t2022 = -_t2019;
				_t2020 = _t2022;
			}
			_t2023 = _t1993 * _t1993;
			_t2024 = _t1771 * _t1771;
			_t2025 = _t2024 * _t1804;
			_t2026 = 1.000000-_t1852;
			_t2027 = _t1962 * _t2026;
			_t2028 = _t2027 * _t2025;
			_t2029 = _t2028 / _t2023;
			cif (_t2029 >= 0.000000) {
				_t2030 = _t2029;
			}
			else {
				_t2032 = -_t2029;
				_t2030 = _t2032;
			}
			_t1963 = _t2010;
			_t1964 = _t2011;
			_t1965 = _t2012;
			_t1966 = _t2020;
			_t1967 = _t2030;
		}
		_t1696 = _t1963;
		_t1697 = _t1964;
		_t1698 = _t1965;
		_t1699 = _t1767;
		_t1700 = _t1966;
		_t1701 = _t1967;
	}
	else cif (vertParams[164] == 0.000000) {
		_t2033 = _t1212 * _t1306 + _t1213 * _t1307 + _t1214 * _t1308;
		cif (_t2033 > 0.000000) {
			_t2034 = _t1212;
			_t2035 = _t1213;
			_t2036 = _t1214;
			_t2037 = _t2033;
		}
		else {
			_t2039 = -_t1212;
			_t2040 = -_t1213;
			_t2041 = -_t1214;
			_t2042 = -_t2033;
			_t2034 = _t2039;
			_t2035 = _t2040;
			_t2036 = _t2041;
			_t2037 = _t2042;
		}
		_t2043 = _t2034 * _t1327 + _t2035 * _t1328 + _t2036 * _t1329;
		_t2044 = _t2043 * 0.318310;
		_t2045 = _t2037 * 0.318310;
		_t2046 = _t2044 * vertParams[165];
		_t2047 = _t2044 * vertParams[166];
		_t2048 = _t2044 * vertParams[167];
		_t1696 = _t2046;
		_t1697 = _t2047;
		_t1698 = _t2048;
		_t1699 = _t2043;
		_t1700 = _t2044;
		_t1701 = _t2045;
	}
	else {
		_t1696 = 0.000000;
		_t1697 = 0.000000;
		_t1698 = 0.000000;
		_t1699 = 0.000000;
		_t1700 = 0.000000;
		_t1701 = 0.000000;
	}
	cif (vertParams[164] == 1.000000) {
		_t2058 = _t1212 * _t1327 + _t1213 * _t1328 + _t1214 * _t1329;
		cif (_t2058 > 0.000000) {
			_t2059 = _t1212;
			_t2060 = _t1213;
			_t2061 = _t1214;
			_t2062 = _t2058;
		}
		else {
			_t2064 = -_t1212;
			_t2065 = -_t1213;
			_t2066 = -_t1214;
			_t2067 = -_t2058;
			_t2059 = _t2064;
			_t2060 = _t2065;
			_t2061 = _t2066;
			_t2062 = _t2067;
		}
		_t2068 = _t2059 * _t1306 + _t2060 * _t1307 + _t2061 * _t1308;
		cif (vertParams[172] > 0.000000) {
			_t2074 = _t1327 * _t2059 + _t1328 * _t2060 + _t1329 * _t2061;
			_t2075 = 2.000000 * _t2074;
			_t2076 = _t2075 * _t2059;
			_t2077 = _t2076-_t1327;
			_t2078 = _t2075 * _t2060;
			_t2079 = _t2078-_t1328;
			_t2080 = _t2075 * _t2061;
			_t2081 = _t2080-_t1329;
			_t2082 = _t2077 * _t1306 + _t2079 * _t1307 + _t2081 * _t1308;
			_t2083 = pow(_t2082,vertParams[171]);
			_t2084 = _t2083 * 0.159155;
			cif (_t2084 > 0.000000) {
				_t2090 = vertParams[171]+1.000000;
				_t2091 = vertParams[171]+2.000000;
				_t2092 = _t2091 * _t2084;
				_t2093 = vertParams[168] * _t2092;
				_t2094 = vertParams[169] * _t2092;
				_t2095 = vertParams[170] * _t2092;
				_t2096 = vertParams[172] * _t2090;
				_t2097 = _t2096 * _t2084;
				_t2085 = _t2093;
				_t2086 = _t2094;
				_t2087 = _t2095;
				_t2088 = _t2097;
			}
			else {
				_t2085 = 0.000000;
				_t2086 = 0.000000;
				_t2087 = 0.000000;
				_t2088 = 0.000000;
			}
			_t2069 = _t2085;
			_t2070 = _t2086;
			_t2071 = _t2087;
			_t2072 = _t2088;
		}
		else {
			_t2069 = 0.000000;
			_t2070 = 0.000000;
			_t2071 = 0.000000;
			_t2072 = 0.000000;
		}
		cif (vertParams[172] < 1.000000) {
			_t2104 = vertParams[165] * 0.318310;
			_t2105 = vertParams[166] * 0.318310;
			_t2106 = vertParams[167] * 0.318310;
			_t2107 = 1.000000-vertParams[172];
			_t2108 = _t2107 * 0.318310;
			_t2109 = _t2108 * _t2068;
			_t2110 = _t2108 * _t2062;
			_t2098 = _t2104;
			_t2099 = _t2105;
			_t2100 = _t2106;
			_t2101 = _t2109;
			_t2102 = _t2110;
		}
		else {
			_t2098 = 0.000000;
			_t2099 = 0.000000;
			_t2100 = 0.000000;
			_t2101 = 0.000000;
			_t2102 = 0.000000;
		}
		_t2111 = _t2069+_t2098;
		_t2112 = _t2070+_t2099;
		_t2113 = _t2071+_t2100;
		_t2114 = _t2072+_t2101;
		_t2115 = _t2072+_t2102;
		_t2116 = _t2111 * _t2068;
		_t2117 = _t2112 * _t2068;
		_t2118 = _t2113 * _t2068;
		_t2049 = _t2116;
		_t2050 = _t2117;
		_t2051 = _t2118;
		_t2052 = _t2068;
		_t2053 = _t2114;
		_t2054 = _t2115;
	}
	else cif (vertParams[164] == 2.000000) {
		_t2119 = _t1327 * _t1212 + _t1328 * _t1213 + _t1329 * _t1214;
		_t2120 = _t1306 * _t1212 + _t1307 * _t1213 + _t1308 * _t1214;
		_t2121 = _t2119 * _t2120;
		cif (_t2119 > 0.000000) {
			_t2122 = vertParams[171];
		}
		else {
			_t2122 = vertParams[172];
		}
		cif (_t2120 > 0.000000) {
			_t2124 = vertParams[171];
		}
		else {
			_t2124 = vertParams[172];
		}
		cif (_t2121 > 0.000000) {
			_t2130 = _t1327+_t1306;
			_t2131 = _t1328+_t1307;
			_t2132 = _t1329+_t1308;
			_t2133 = sqrt(_t2130*_t2130+_t2131*_t2131+_t2132*_t2132);
			_t2134 = (float)1.0 / (_t2133);
			_t2135 = _t2130 * _t2134;
			_t2136 = _t2131 * _t2134;
			_t2137 = _t2132 * _t2134;
			_t2126 = _t2135;
			_t2127 = _t2136;
			_t2128 = _t2137;
		}
		else {
			_t2138 = _t1306 * _t2122;
			_t2139 = _t1327+_t2138;
			_t2140 = _t1307 * _t2122;
			_t2141 = _t1328+_t2140;
			_t2142 = _t1308 * _t2122;
			_t2143 = _t1329+_t2142;
			_t2144 = sqrt(_t2139*_t2139+_t2141*_t2141+_t2143*_t2143);
			_t2145 = (float)1.0 / (_t2144);
			_t2146 = _t2139 * _t2145;
			_t2147 = _t2141 * _t2145;
			_t2148 = _t2143 * _t2145;
			_t2126 = _t2146;
			_t2127 = _t2147;
			_t2128 = _t2148;
		}
		_t2149 = _t2126 * _t1212 + _t2127 * _t1213 + _t2128 * _t1214;
		cif (_t2149 < 0.000000) {
			_t2154 = -_t2126;
			_t2155 = -_t2127;
			_t2156 = -_t2128;
			_t2150 = _t2154;
			_t2151 = _t2155;
			_t2152 = _t2156;
		}
		else {
			_t2150 = _t2126;
			_t2151 = _t2127;
			_t2152 = _t2128;
		}
		_t2157 = _t1327 * _t2150 + _t1328 * _t2151 + _t1329 * _t2152;
		_t2158 = _t1306 * _t2150 + _t1307 * _t2151 + _t1308 * _t2152;
		cif (_t1214 < -0.999999) {
			_t2159 = 0.000000;
			_t2160 = -1.000000;
			_t2161 = 0.000000;
			_t2162 = -1.000000;
			_t2163 = 0.000000;
			_t2164 = 0.000000;
		}
		else {
			_t2166 = 1.000000+_t1214;
			_t2167 = (float)1.0 / (_t2166);
			_t2168 = -_t1212;
			_t2169 = _t2168 * _t1213;
			_t2170 = _t2169 * _t2167;
			_t2171 = -_t1212;
			_t2172 = _t1212 * _t1212;
			_t2173 = _t2172 * _t2167;
			_t2174 = 1.000000-_t2173;
			_t2175 = -_t1213;
			_t2176 = _t1213 * _t1213;
			_t2177 = _t2176 * _t2167;
			_t2178 = 1.000000-_t2177;
			_t2159 = _t2174;
			_t2160 = _t2170;
			_t2161 = _t2171;
			_t2162 = _t2170;
			_t2163 = _t2178;
			_t2164 = _t2175;
		}
		_t2179 = _t1212 * _t2150 + _t1213 * _t2151 + _t1214 * _t2152;
		_t2180 = _t2162 * _t2150 + _t2163 * _t2151 + _t2164 * _t2152;
		_t2181 = _t2159 * _t2150 + _t2160 * _t2151 + _t2161 * _t2152;
		_t2182 = _t2179 * _t2179;
		_t2183 = vertParams[173] * vertParams[173];
		_t2184 = _t2180 * _t2180;
		_t2185 = _t2184 / _t2183;
		_t2186 = vertParams[173] * vertParams[173];
		_t2187 = _t2181 * _t2181;
		_t2188 = _t2187 / _t2186;
		_t2189 = _t2188+_t2185;
		_t2190 = _t2189 / _t2182;
		_t2191 = _t2182 * _t2182;
		_t2192 = 3.141593 * vertParams[173];
		_t2193 = _t2192 * vertParams[173];
		_t2194 = _t2193 * _t2191;
		_t2195 = -_t2190;
		_t2196 = exp(_t2195);
		_t2197 = _t2196 / _t2194;
		cif (_t2157 > 0.000000) {
			_t2198 = vertParams[172];
		}
		else {
			_t2198 = vertParams[171];
		}
		_t2200 = _t2198 * _t2198;
		_t2201 = _t2157 * _t2157;
		_t2202 = 1.000000-_t2201;
		_t2203 = _t2202 * _t2200;
		_t2204 = 1.000000-_t2203;
		cif (_t2204 <= 0.000000) {
			_t2205 = 1.000000;
		}
		else {
			cif (_t2157 >= 0.000000) {
				_t2207 = _t2157;
			}
			else {
				_t2209 = -_t2157;
				_t2207 = _t2209;
			}
			_t2210 = sqrt(_t2204);
			_t2211 = vertParams[171] * _t2210;
			_t2212 = vertParams[171] * _t2207;
			_t2213 = _t2207+_t2211;
			_t2214 = _t2207-_t2211;
			_t2215 = _t2214 / _t2213;
			_t2216 = _t2212+_t2210;
			_t2217 = _t2212-_t2210;
			_t2218 = _t2217 / _t2216;
			_t2219 = _t2218 * _t2218;
			_t2220 = _t2215 * _t2215;
			_t2221 = _t2220+_t2219;
			_t2222 = 0.500000 * _t2221;
			_t2205 = _t2222;
		}
		cif (_t2119 >= 0.000000) {
			_t2223 = _t2119;
		}
		else {
			_t2225 = -_t2119;
			_t2223 = _t2225;
		}
		cif (_t2120 >= 0.000000) {
			_t2226 = _t2120;
		}
		else {
			_t2228 = -_t2120;
			_t2226 = _t2228;
		}
		_t2229 = _t2226 * _t2226;
		_t2230 = 1.000001-_t2229;
		cif (_t2230 >= 0.000000) {
			_t2231 = _t2230;
		}
		else {
			_t2233 = -_t2230;
			_t2231 = _t2233;
		}
		_t2234 = sqrt(_t2231);
		_t2235 = _t2234 / _t2226;
		cif (_t2235 <= 0.000000) {
			_t2236 = 1.000000;
		}
		else {
			_t2238 = vertParams[173] * _t2235;
			_t2239 = (float)1.0 / (_t2238);
			cif (_t2239 >= 1.600000) {
				_t2240 = 1.000000;
			}
			else {
				_t2242 = _t2239 * _t2239;
				_t2243 = 2.577000 * _t2242;
				_t2244 = 2.276000 * _t2239;
				_t2245 = 1.000000+_t2244;
				_t2246 = _t2245+_t2243;
				_t2247 = 2.181000 * _t2242;
				_t2248 = 3.535000 * _t2239;
				_t2249 = _t2248+_t2247;
				_t2250 = _t2249 / _t2246;
				_t2240 = _t2250;
			}
			_t2236 = _t2240;
		}
		_t2251 = _t2223 * _t2223;
		_t2252 = 1.000001-_t2251;
		cif (_t2252 >= 0.000000) {
			_t2253 = _t2252;
		}
		else {
			_t2255 = -_t2252;
			_t2253 = _t2255;
		}
		_t2256 = sqrt(_t2253);
		_t2257 = _t2256 / _t2223;
		cif (_t2257 <= 0.000000) {
			_t2258 = 1.000000;
		}
		else {
			_t2260 = vertParams[173] * _t2257;
			_t2261 = (float)1.0 / (_t2260);
			cif (_t2261 >= 1.600000) {
				_t2262 = 1.000000;
			}
			else {
				_t2264 = _t2261 * _t2261;
				_t2265 = 2.577000 * _t2264;
				_t2266 = 2.276000 * _t2261;
				_t2267 = 1.000000+_t2266;
				_t2268 = _t2267+_t2265;
				_t2269 = 2.181000 * _t2264;
				_t2270 = 3.535000 * _t2261;
				_t2271 = _t2270+_t2269;
				_t2272 = _t2271 / _t2268;
				_t2262 = _t2272;
			}
			_t2258 = _t2262;
		}
		_t2273 = _t2258 * _t2236;
		_t2274 = sqrt(_t2223);
		_t2275 = 0.200000 * _t2274;
		_t2276 = 1.200000-_t2275;
		_t2277 = vertParams[173] * _t2276;
		_t2278 = _t2179 * _t2179;
		_t2279 = _t2277 * _t2277;
		_t2280 = _t2180 * _t2180;
		_t2281 = _t2280 / _t2279;
		_t2282 = _t2277 * _t2277;
		_t2283 = _t2181 * _t2181;
		_t2284 = _t2283 / _t2282;
		_t2285 = _t2284+_t2281;
		_t2286 = _t2285 / _t2278;
		_t2287 = _t2278 * _t2278;
		_t2288 = 3.141593 * _t2277;
		_t2289 = _t2288 * _t2277;
		_t2290 = _t2289 * _t2287;
		_t2291 = -_t2286;
		_t2292 = exp(_t2291);
		_t2293 = _t2292 / _t2290;
		_t2294 = _t2179 * _t2293;
		_t2295 = sqrt(_t2226);
		_t2296 = 0.200000 * _t2295;
		_t2297 = 1.200000-_t2296;
		_t2298 = vertParams[173] * _t2297;
		_t2299 = _t2179 * _t2179;
		_t2300 = _t2298 * _t2298;
		_t2301 = _t2180 * _t2180;
		_t2302 = _t2301 / _t2300;
		_t2303 = _t2298 * _t2298;
		_t2304 = _t2181 * _t2181;
		_t2305 = _t2304 / _t2303;
		_t2306 = _t2305+_t2302;
		_t2307 = _t2306 / _t2299;
		_t2308 = _t2299 * _t2299;
		_t2309 = 3.141593 * _t2298;
		_t2310 = _t2309 * _t2298;
		_t2311 = _t2310 * _t2308;
		_t2312 = -_t2307;
		_t2313 = exp(_t2312);
		_t2314 = _t2313 / _t2311;
		_t2315 = _t2179 * _t2314;
		cif (_t2121 > 0.000000) {
			_t2321 = 4.000000 * _t2119;
			_t2322 = _t2205 * _t2197;
			_t2323 = _t2322 * _t2273;
			_t2324 = _t2323 / _t2321;
			cif (_t2324 >= 0.000000) {
				_t2325 = _t2324;
			}
			else {
				_t2327 = -_t2324;
				_t2325 = _t2327;
			}
			_t2328 = vertParams[165] * _t2325;
			_t2329 = vertParams[166] * _t2325;
			_t2330 = vertParams[167] * _t2325;
			_t2331 = 4.000000 * _t2158;
			_t2332 = _t2294 * _t2205;
			_t2333 = _t2332 / _t2331;
			cif (_t2333 >= 0.000000) {
				_t2334 = _t2333;
			}
			else {
				_t2336 = -_t2333;
				_t2334 = _t2336;
			}
			_t2337 = 4.000000 * _t2157;
			_t2338 = _t2315 * _t2205;
			_t2339 = _t2338 / _t2337;
			cif (_t2339 >= 0.000000) {
				_t2340 = _t2339;
			}
			else {
				_t2342 = -_t2339;
				_t2340 = _t2342;
			}
			_t2316 = _t2328;
			_t2317 = _t2329;
			_t2318 = _t2330;
			_t2319 = _t2334;
			_t2320 = _t2340;
		}
		else {
			_t2343 = _t2122 * _t2158;
			_t2344 = _t2157+_t2343;
			_t2345 = _t2124 * _t2157;
			_t2346 = _t2158+_t2345;
			_t2347 = _t2344 * _t2344;
			_t2348 = _t2119 * _t2347;
			_t2349 = _t2122 * _t2122;
			_t2350 = 1.000000-_t2205;
			_t2351 = _t2350 * _t2197;
			_t2352 = _t2351 * _t2273;
			_t2353 = _t2352 * _t2349;
			_t2354 = _t2353 * _t2157;
			_t2355 = _t2354 * _t2158;
			_t2356 = _t2355 / _t2348;
			cif (_t2356 >= 0.000000) {
				_t2357 = _t2356;
			}
			else {
				_t2359 = -_t2356;
				_t2357 = _t2359;
			}
			_t2360 = vertParams[168] * _t2357;
			_t2361 = vertParams[169] * _t2357;
			_t2362 = vertParams[170] * _t2357;
			_t2363 = _t2344 * _t2344;
			_t2364 = _t2122 * _t2122;
			_t2365 = _t2364 * _t2158;
			_t2366 = 1.000000-_t2205;
			_t2367 = _t2294 * _t2366;
			_t2368 = _t2367 * _t2365;
			_t2369 = _t2368 / _t2363;
			cif (_t2369 >= 0.000000) {
				_t2370 = _t2369;
			}
			else {
				_t2372 = -_t2369;
				_t2370 = _t2372;
			}
			_t2373 = _t2346 * _t2346;
			_t2374 = _t2124 * _t2124;
			_t2375 = _t2374 * _t2157;
			_t2376 = 1.000000-_t2205;
			_t2377 = _t2315 * _t2376;
			_t2378 = _t2377 * _t2375;
			_t2379 = _t2378 / _t2373;
			cif (_t2379 >= 0.000000) {
				_t2380 = _t2379;
			}
			else {
				_t2382 = -_t2379;
				_t2380 = _t2382;
			}
			_t2316 = _t2360;
			_t2317 = _t2361;
			_t2318 = _t2362;
			_t2319 = _t2370;
			_t2320 = _t2380;
		}
		_t2049 = _t2316;
		_t2050 = _t2317;
		_t2051 = _t2318;
		_t2052 = _t2120;
		_t2053 = _t2319;
		_t2054 = _t2320;
	}
	else cif (vertParams[164] == 0.000000) {
		_t2383 = _t1212 * _t1327 + _t1213 * _t1328 + _t1214 * _t1329;
		cif (_t2383 > 0.000000) {
			_t2384 = _t1212;
			_t2385 = _t1213;
			_t2386 = _t1214;
			_t2387 = _t2383;
		}
		else {
			_t2389 = -_t1212;
			_t2390 = -_t1213;
			_t2391 = -_t1214;
			_t2392 = -_t2383;
			_t2384 = _t2389;
			_t2385 = _t2390;
			_t2386 = _t2391;
			_t2387 = _t2392;
		}
		_t2393 = _t2384 * _t1306 + _t2385 * _t1307 + _t2386 * _t1308;
		_t2394 = _t2393 * 0.318310;
		_t2395 = _t2387 * 0.318310;
		_t2396 = _t2394 * vertParams[165];
		_t2397 = _t2394 * vertParams[166];
		_t2398 = _t2394 * vertParams[167];
		_t2049 = _t2396;
		_t2050 = _t2397;
		_t2051 = _t2398;
		_t2052 = _t2393;
		_t2053 = _t2394;
		_t2054 = _t2395;
	}
	else {
		_t2049 = 0.000000;
		_t2050 = 0.000000;
		_t2051 = 0.000000;
		_t2052 = 0.000000;
		_t2053 = 0.000000;
		_t2054 = 0.000000;
	}
	_t2399 = _t1212 * _t1327 + _t1213 * _t1328 + _t1214 * _t1329;
	_t2400 = _t1212 * _t1306 + _t1213 * _t1307 + _t1214 * _t1308;
	_t2401 = _t1209 * _t1327 + _t1210 * _t1328 + _t1211 * _t1329;
	_t2402 = _t1209 * _t1306 + _t1210 * _t1307 + _t1211 * _t1308;
	_t2403 = _t2401 * _t2400;
	_t2404 = _t2402 * _t2399;
	_t2405 = _t2404 / _t2403;
	cif (_t2405 >= 0.000000) {
		_t2406 = _t2405;
	}
	else {
		_t2408 = -_t2405;
		_t2406 = _t2408;
	}
	_t2409 = _t2049 * _t2406;
	_t2410 = _t2050 * _t2406;
	_t2411 = _t2051 * _t2406;
	_t2412 = _t1203 * _t1696;
	_t2413 = _t1204 * _t1697;
	_t2414 = _t1205 * _t1698;
	_t2415 = (float)1.0 / (vertParams[174]);
	_t2416 = _t2412 * _t1330;
	_t2417 = _t2416 * _t2415;
	_t2418 = _t2413 * _t1331;
	_t2419 = _t2418 * _t2415;
	_t2420 = _t2414 * _t1332;
	_t2421 = _t2420 * _t2415;
	cif (vertParams[108] == 0.000000) {
		_t2422 = 0.000000;
	}
	else {
		_t2424 = vertParams[174] * _t1334;
		_t2425 = _t1700 / _t2424;
		_t2426 = _t2425 * _t2425;
		_t2422 = _t2426;
	}
	_t2427 = _t1701 * _t1701;
	_t2428 = _t1326 * _t2427;
	_t2429 = _t1325+_t2428;
	_t2430 = _t1334 * _t1333;
	_t2431 = _t1335 * _t1699;
	_t2432 = _t2431 / _t2430;
	_t2433 = _t2432 * _t2432;
	_t2434 = _t2433 * _t2429;
	_t2435 = _t2422+1.000000;
	_t2436 = _t2435+_t2434;
	_t2437 = (float)1.0 / (_t2436);
	_t2438 = _t2417 * _t2437;
	_t2439 = _t2419 * _t2437;
	_t2440 = _t2421 * _t2437;
	_t2441 = _t2440 * 0.072169;
	_t2442 = _t2439 * 0.715160;
	_t2443 = _t2438 * 0.212671;
	_t2444 = _t2443+_t2442;
	_t2445 = _t2444+_t2441;
	_t2446 = log(_t2445);
	float _acc8 = 0, _acc11 = 0, _acc18 = 0, _acc20 = 0, _acc9 = 0, _acc13 = 0, _acc22 = 0, _acc26 = 0, _acc27 = 0, _acc23 = 0, _acc34 = 0, _acc47 = 0, _acc50 = 0, _acc35 = 0, _acc32 = 0, _acc62 = 0, _acc57 = 0, _acc51 = 0, _acc68 = 0, _acc66 = 0, _acc69 = 0, _acc74 = 0, _acc88 = 0, _acc89 = 0, _acc90 = 0, _acc87 = 0, _acc96 = 0, _acc94 = 0, _acc97 = 0, _acc115 = 0, _acc104 = 0, _acc103 = 0, _acc119 = 0, _acc120 = 0, _acc122 = 0, _acc124 = 0, _acc107 = 0, _acc106 = 0, _acc126 = 0, _acc102 = 0, _acc130 = 0, _acc123 = 0, _acc116 = 0, _acc132 = 0, _acc133 = 0, _acc131 = 0, _acc134 = 0, _acc127 = 0, _acc137 = 0, _acc136 = 0, _acc125 = 0, _acc99 = 0, _acc118 = 0, _acc143 = 0, _acc65 = 0, _acc146 = 0, _acc149 = 0, _acc150 = 0, _acc187 = 0, _acc77 = 0, _acc194 = 0, _acc78 = 0, _acc195 = 0, _acc197 = 0, _acc201 = 0, _acc203 = 0, _acc196 = 0, _acc199 = 0, _acc45 = 0, _acc209 = 0, _acc216 = 0, _acc218 = 0, _acc222 = 0, _acc220 = 0, _acc226 = 0, _acc227 = 0, _acc225 = 0, _acc230 = 0, _acc219 = 0, _acc224 = 0, _acc234 = 0, _acc210 = 0, _acc255 = 0, _acc188 = 0, _acc258 = 0, _acc151 = 0, _acc268 = 0, _acc269 = 0, _acc829 = 0, _acc832 = 0, _acc828 = 0, _acc834 = 0, _acc223 = 0, _acc838 = 0, _acc33 = 0, _acc839 = 0, _acc1192 = 0, _acc934 = 0, _acc938 = 0, _acc926 = 0, _acc929 = 0, _acc928 = 0, _acc918 = 0, _acc948 = 0, _acc6 = 0, _acc29 = 0, _acc960 = 0, _acc969 = 0, _acc967 = 0, _acc970 = 0, _acc956 = 0, _acc955 = 0, _acc976 = 0, _acc978 = 0, _acc981 = 0, _acc983 = 0, _acc982 = 0, _acc987 = 0, _acc986 = 0, _acc988 = 0, _acc73 = 0, _acc994 = 0, _acc995 = 0, _acc1001 = 0, _acc105 = 0, _acc996 = 0, _acc0 = 0, _acc1003 = 0, _acc1005 = 0, _acc1011 = 0, _acc1012 = 0, _acc1014 = 0, _acc1017 = 0, _acc1023 = 0, _acc1018 = 0, _acc1026 = 0, _acc1027 = 0, _acc1037 = 0, _acc1040 = 0, _acc1038 = 0, _acc1041 = 0, _acc1043 = 0, _acc1044 = 0, _acc1045 = 0, _acc1052 = 0, _acc1059 = 0, _acc1056 = 0, _acc1053 = 0, _acc1061 = 0, _acc44 = 0, _acc211 = 0, _acc1062 = 0, _acc30 = 0, _acc1060 = 0, _acc212 = 0, _acc1063 = 0, _acc213 = 0, _acc1064 = 0, _acc1054 = 0, _acc1050 = 0, _acc1066 = 0, _acc85 = 0, _acc1067 = 0, _acc1068 = 0, _acc193 = 0, _acc1075 = 0, _acc1022 = 0, _acc1076 = 0, _acc1077 = 0, _acc1070 = 0, _acc205 = 0, _acc1069 = 0, _acc1079 = 0, _acc46 = 0, _acc1083 = 0, _acc1082 = 0, _acc1135 = 0, _acc993 = 0, _acc1141 = 0, _acc1144 = 0, _acc1145 = 0, _acc1143 = 0, _acc1146 = 0, _acc1147 = 0, _acc1148 = 0, _acc141 = 0, _acc990 = 0, _acc1142 = 0, _acc1136 = 0, _acc1159 = 0, _acc1161 = 0, _acc1160 = 0, _acc1162 = 0, _acc1158 = 0, _acc1157 = 0, _acc1156 = 0, _acc1155 = 0, _acc111 = 0, _acc1065 = 0, _acc997 = 0, _acc1121 = 0, _acc1111 = 0, _acc263 = 0, _acc1110 = 0, _acc262 = 0, _acc1109 = 0, _acc261 = 0, _acc1108 = 0, _acc858 = 0, _acc857 = 0, _acc856 = 0, _acc851 = 0, _acc852 = 0, _acc870 = 0, _acc853 = 0, _acc200 = 0, _acc867 = 0, _acc871 = 0, _acc869 = 0, _acc883 = 0, _acc884 = 0, _acc876 = 0, _acc888 = 0, _acc886 = 0, _acc885 = 0, _acc70 = 0, _acc880 = 0, _acc879 = 0, _acc214 = 0, _acc899 = 0, _acc901 = 0, _acc898 = 0, _acc10 = 0, _acc896 = 0, _acc890 = 0, _acc861 = 0, _acc862 = 0, _acc943 = 0, _acc892 = 0, _acc863 = 0, _acc944 = 0, _acc893 = 0, _acc1021 = 0, _acc1074 = 0, _acc864 = 0, _acc903 = 0, _acc904 = 0, _acc906 = 0, _acc860 = 0, _acc910 = 0, _acc908 = 0, _acc845 = 0, _acc975 = 0, _acc843 = 0, _acc842 = 0, _acc841 = 0, _acc1164 = 0, _acc831 = 0, _acc61 = 0, _acc777 = 0, _acc776 = 0, _acc775 = 0, _acc786 = 0, _acc792 = 0, _acc787 = 0, _acc98 = 0, _acc796 = 0, _acc221 = 0, _acc797 = 0, _acc795 = 0, _acc791 = 0, _acc25 = 0, _acc844 = 0, _acc801 = 0, _acc804 = 0, _acc807 = 0, _acc799 = 0, _acc803 = 0, _acc140 = 0, _acc809 = 0, _acc812 = 0, _acc813 = 0, _acc811 = 0, _acc270 = 0, _acc819 = 0, _acc784 = 0, _acc989 = 0, _acc808 = 0, _acc810 = 0, _acc822 = 0, _acc823 = 0, _acc821 = 0, _acc824 = 0, _acc825 = 0, _acc815 = 0, _acc462 = 0, _acc465 = 0, _acc466 = 0, _acc467 = 0, _acc468 = 0, _acc473 = 0, _acc476 = 0, _acc217 = 0, _acc477 = 0, _acc478 = 0, _acc479 = 0, _acc472 = 0, _acc483 = 0, _acc86 = 0, _acc1073 = 0, _acc482 = 0, _acc1058 = 0, _acc470 = 0, _acc1188 = 0, _acc471 = 0, _acc501 = 0, _acc980 = 0, _acc503 = 0, _acc984 = 0, _acc507 = 0, _acc502 = 0, _acc1165 = 0, _acc511 = 0, _acc512 = 0, _acc509 = 0, _acc497 = 0, _acc494 = 0, _acc515 = 0, _acc514 = 0, _acc67 = 0, _acc495 = 0, _acc1035 = 0, _acc499 = 0, _acc148 = 0, _acc231 = 0, _acc496 = 0, _acc1115 = 0, _acc530 = 0, _acc1184 = 0, _acc542 = 0, _acc536 = 0, _acc544 = 0, _acc540 = 0, _acc550 = 0, _acc552 = 0, _acc551 = 0, _acc556 = 0, _acc949 = 0, _acc558 = 0, _acc624 = 0, _acc625 = 0, _acc616 = 0, _acc620 = 0, _acc627 = 0, _acc628 = 0, _acc257 = 0, _acc633 = 0, _acc639 = 0, _acc637 = 0, _acc636 = 0, _acc635 = 0, _acc634 = 0, _acc629 = 0, _acc626 = 0, _acc873 = 0, _acc571 = 0, _acc575 = 0, _acc523 = 0, _acc578 = 0, _acc579 = 0, _acc580 = 0, _acc581 = 0, _acc586 = 0, _acc874 = 0, _acc574 = 0, _acc694 = 0, _acc697 = 0, _acc492 = 0, _acc699 = 0, _acc700 = 0, _acc703 = 0, _acc461 = 0, _acc705 = 0, _acc1154 = 0, _acc708 = 0, _acc17 = 0, _acc707 = 0, _acc652 = 0, _acc709 = 0, _acc710 = 0, _acc723 = 0, _acc817 = 0, _acc729 = 0, _acc727 = 0, _acc1047 = 0, _acc510 = 0, _acc724 = 0, _acc1117 = 0, _acc731 = 0, _acc830 = 0, _acc725 = 0, _acc718 = 0, _acc740 = 0, _acc737 = 0, _acc719 = 0, _acc741 = 0, _acc720 = 0, _acc742 = 0, _acc738 = 0, _acc751 = 0, _acc749 = 0, _acc754 = 0, _acc756 = 0, _acc757 = 0, _acc759 = 0, _acc985 = 0, _acc692 = 0, _acc761 = 0, _acc765 = 0, _acc762 = 0, _acc76 = 0, _acc563 = 0, _acc763 = 0, _acc566 = 0, _acc1084 = 0, _acc565 = 0, _acc768 = 0, _acc767 = 0, _acc766 = 0, _acc561 = 0, _acc560 = 0, _acc559 = 0, _acc302 = 0, _acc95 = 0, _acc1071 = 0, _acc160 = 0, _acc159 = 0, _acc121 = 0, _acc158 = 0, _acc305 = 0, _acc252 = 0, _acc307 = 0, _acc253 = 0, _acc309 = 0, _acc81 = 0, _acc952 = 0, _acc306 = 0, _acc311 = 0, _acc15 = 0, _acc60 = 0, _acc366 = 0, _acc367 = 0, _acc619 = 0, _acc369 = 0, _acc371 = 0, _acc373 = 0, _acc386 = 0, _acc388 = 0, _acc389 = 0, _acc772 = 0, _acc393 = 0, _acc387 = 0, _acc396 = 0, _acc391 = 0, _acc382 = 0, _acc400 = 0, _acc401 = 0, _acc383 = 0, _acc380 = 0, _acc404 = 0, _acc384 = 0, _acc1193 = 0, _acc376 = 0, _acc411 = 0, _acc486 = 0, _acc412 = 0, _acc487 = 0, _acc413 = 0, _acc3 = 0, _acc326 = 0, _acc91 = 0, _acc553 = 0, _acc318 = 0, _acc322 = 0, _acc340 = 0, _acc1191 = 0, _acc377 = 0, _acc343 = 0, _acc344 = 0, _acc338 = 0, _acc348 = 0, _acc349 = 0, _acc351 = 0, _acc352 = 0, _acc350 = 0, _acc331 = 0, _acc356 = 0, _acc357 = 0, _acc358 = 0, _acc325 = 0, _acc329 = 0, _acc361 = 0, _acc362 = 0, _acc360 = 0, _acc363 = 0, _acc364 = 0, _acc359 = 0, _acc1015 = 0, _acc298 = 0, _acc557 = 0, _acc297 = 0, _acc296 = 0, _acc303 = 0, _acc312 = 0, _acc310 = 0, _acc308 = 0, _acc420 = 0, _acc429 = 0, _acc430 = 0, _acc428 = 0, _acc434 = 0, _acc110 = 0, _acc432 = 0, _acc109 = 0, _acc431 = 0, _acc425 = 0, _acc424 = 0, _acc882 = 0, _acc423 = 0, _acc445 = 0, _acc446 = 0, _acc447 = 0, _acc442 = 0, _acc436 = 0, _acc489 = 0, _acc415 = 0, _acc437 = 0, _acc416 = 0, _acc417 = 0, _acc488 = 0, _acc439 = 0, _acc418 = 0, _acc1149 = 0, _acc449 = 0, _acc1150 = 0, _acc450 = 0, _acc1151 = 0, _acc451 = 0, _acc1152 = 0, _acc454 = 0, _acc455 = 0, _acc872 = 0, _acc570 = 0, _acc1413 = 0, _acc753 = 0, _acc1411 = 0, _acc752 = 0, _acc1410 = 0, _acc1010 = 0, _acc1959 = 0, _acc1343 = 0, _acc1345 = 0, _acc1340 = 0, _acc1341 = 0, _acc2430 = 0, _acc577 = 0, _acc1349 = 0, _acc576 = 0, _acc1348 = 0, _acc1996 = 0, _acc2040 = 0, _acc1635 = 0, _acc2036 = 0, _acc1234 = 0, _acc2035 = 0, _acc2034 = 0, _acc2044 = 0, _acc274 = 0, _acc1816 = 0, _acc935 = 0, _acc1933 = 0, _acc932 = 0, _acc395 = 0, _acc1932 = 0, _acc93 = 0, _acc1681 = 0, _acc1351 = 0, _acc1682 = 0, _acc1693 = 0, _acc1346 = 0, _acc7 = 0, _acc1638 = 0, _acc1243 = 0, _acc1780 = 0, _acc405 = 0, _acc1203 = 0, _acc52 = 0, _acc1674 = 0, _acc1779 = 0, _acc1784 = 0, _acc55 = 0, _acc1783 = 0, _acc1782 = 0, _acc1789 = 0, _acc2432 = 0, _acc1815 = 0, _acc1777 = 0, _acc1581 = 0, _acc1819 = 0, _acc1820 = 0, _acc1418 = 0, _acc335 = 0, _acc1773 = 0, _acc1817 = 0, _acc1408 = 0, _acc1009 = 0, _acc1958 = 0, _acc878 = 0, _acc1821 = 0, _acc1585 = 0, _acc1809 = 0, _acc1950 = 0, _acc1830 = 0, _acc1006 = 0, _acc1833 = 0, _acc1706 = 0, _acc1834 = 0, _acc1849 = 0, _acc266 = 0, _acc1393 = 0, _acc1355 = 0, _acc1342 = 0, _acc2433 = 0, _acc964 = 0, _acc1858 = 0, _acc1854 = 0, _acc142 = 0, _acc1791 = 0, _acc232 = 0, _acc788 = 0, _acc1860 = 0, _acc1407 = 0, _acc1180 = 0, _acc1272 = 0, _acc233 = 0, _acc800 = 0, _acc1861 = 0, _acc963 = 0, _acc972 = 0, _acc1857 = 0, _acc202 = 0, _acc2045 = 0, _acc114 = 0, _acc1866 = 0, _acc1605 = 0, _acc1867 = 0, _acc1315 = 0, _acc16 = 0, _acc1788 = 0, _acc1078 = 0, _acc1306 = 0, _acc946 = 0, _acc1774 = 0, _acc1607 = 0, _acc1801 = 0, _acc368 = 0, _acc1875 = 0, _acc782 = 0, _acc1631 = 0, _acc745 = 0, _acc1891 = 0, _acc1658 = 0, _acc1889 = 0, _acc979 = 0, _acc1654 = 0, _acc1339 = 0, _acc2429 = 0, _acc650 = 0, _acc746 = 0, _acc1894 = 0, _acc508 = 0, _acc1659 = 0, _acc113 = 0, _acc702 = 0, _acc1865 = 0, _acc1404 = 0, _acc1899 = 0, _acc1189 = 0, _acc469 = 0, _acc1439 = 0, _acc1904 = 0, _acc21 = 0, _acc1913 = 0, _acc1752 = 0, _acc1911 = 0, _acc1057 = 0, _acc909 = 0, _acc1916 = 0, _acc71 = 0, _acc1352 = 0, _acc190 = 0, _acc1387 = 0, _acc1486 = 0, _acc1856 = 0, _acc887 = 0, _acc1673 = 0, _acc1534 = 0, _acc374 = 0, _acc1917 = 0, _acc1625 = 0, _acc112 = 0, _acc701 = 0, _acc1864 = 0, _acc1915 = 0, _acc1395 = 0, _acc1575 = 0, _acc942 = 0, _acc1570 = 0, _acc1353 = 0, _acc191 = 0, _acc1388 = 0, _acc1487 = 0, _acc706 = 0, _acc1868 = 0, _acc260 = 0, _acc1798 = 0, _acc375 = 0, _acc1918 = 0, _acc1354 = 0, _acc1389 = 0, _acc1488 = 0, _acc480 = 0, _acc2033 = 0, _acc1627 = 0, _acc1808 = 0, _acc1002 = 0, _acc1949 = 0, _acc1900 = 0, _acc1281 = 0, _acc630 = 0, _acc1883 = 0, _acc1116 = 0, _acc730 = 0, _acc1580 = 0, _acc271 = 0, _acc145 = 0, _acc1794 = 0, _acc1921 = 0, _acc1872 = 0, _acc48 = 0, _acc1614 = 0, _acc1922 = 0, _acc647 = 0, _acc528 = 0, _acc1239 = 0, _acc1417 = 0, _acc930 = 0, _acc889 = 0, _acc392 = 0, _acc1929 = 0, _acc534 = 0, _acc735 = 0, _acc1250 = 0, _acc63 = 0, _acc1930 = 0, _acc1113 = 0, _acc648 = 0, _acc1240 = 0, _acc493 = 0, _acc1823 = 0, _acc354 = 0, _acc1925 = 0, _acc14 = 0, _acc961 = 0, _acc1640 = 0, _acc1245 = 0, _acc965 = 0, _acc1639 = 0, _acc1244 = 0, _acc1935 = 0, _acc1652 = 0, _acc836 = 0, _acc1423 = 0, _acc1878 = 0, _acc1951 = 0, _acc1623 = 0, _acc933 = 0, _acc1934 = 0, _acc1939 = 0, _acc1940 = 0, _acc533 = 0, _acc2414 = 0, _acc459 = 0, _acc1942 = 0, _acc2413 = 0, _acc1 = 0, _acc498 = 0, _acc1827 = 0, _acc484 = 0, _acc1324 = 0, _acc1420 = 0, _acc323 = 0, _acc1967 = 0, _acc1419 = 0, _acc1952 = 0, _acc1803 = 0, _acc2030 = 0, _acc1876 = 0, _acc1953 = 0, _acc334 = 0, _acc1946 = 0, _acc1956 = 0, _acc1955 = 0, _acc49 = 0, _acc1948 = 0, _acc1743 = 0, _acc128 = 0, _acc999 = 0, _acc1744 = 0, _acc623 = 0, _acc1365 = 0, _acc192 = 0, _acc755 = 0, _acc2422 = 0, _acc36 = 0, _acc1755 = 0, _acc2427 = 0, _acc1989 = 0, _acc1785 = 0, _acc1372 = 0, _acc24 = 0, _acc1756 = 0, _acc1753 = 0, _acc402 = 0, _acc1769 = 0, _acc525 = 0, _acc646 = 0, _acc1236 = 0, _acc1081 = 0, _acc1729 = 0, _acc816 = 0, _acc1890 = 0, _acc452 = 0, _acc2029 = 0, _acc481 = 0, _acc1718 = 0, _acc1719 = 0, _acc1995 = 0, _acc951 = 0, _acc1970 = 0, _acc1844 = 0, _acc897 = 0, _acc1288 = 0, _acc1555 = 0, _acc1760 = 0, _acc1416 = 0, _acc1839 = 0, _acc1963 = 0, _acc545 = 0, _acc1765 = 0, _acc2017 = 0, _acc1686 = 0, _acc1013 = 0, _acc1962 = 0, _acc1685 = 0, _acc1282 = 0, _acc1626 = 0, _acc1974 = 0, _acc1896 = 0, _acc1330 = 0, _acc1723 = 0, _acc1696 = 0, _acc1032 = 0, _acc1738 = 0, _acc1484 = 0, _acc2041 = 0, _acc1114 = 0, _acc1242 = 0, _acc826 = 0, _acc1897 = 0, _acc1999 = 0, _acc43 = 0, _acc1709 = 0, _acc1902 = 0, _acc1358 = 0, _acc1080 = 0, _acc1728 = 0, _acc1398 = 0, _acc353 = 0, _acc1924 = 0, _acc2011 = 0, _acc1276 = 0, _acc1697 = 0, _acc1571 = 0, _acc1837 = 0, _acc381 = 0, _acc1448 = 0, _acc1030 = 0, _acc1739 = 0, _acc2009 = 0, _acc518 = 0, _acc2442 = 0, _acc992 = 0, _acc1140 = 0, _acc2000 = 0, _acc1912 = 0, _acc2042 = 0, _acc1332 = 0, _acc1724 = 0, _acc1278 = 0, _acc1927 = 0, _acc2015 = 0, _acc1457 = 0, _acc814 = 0, _acc695 = 0, _acc1283 = 0, _acc1123 = 0, _acc1259 = 0, _acc2419 = 0, _acc408 = 0, _acc328 = 0, _acc1568 = 0, _acc1206 = 0, _acc1031 = 0, _acc491 = 0, _acc1742 = 0, _acc1405 = 0, _acc1838 = 0, _acc1976 = 0, _acc1881 = 0, _acc939 = 0, _acc406 = 0, _acc327 = 0, _acc1204 = 0, _acc1937 = 0, _acc378 = 0, _acc1757 = 0, _acc1072 = 0, _acc1721 = 0, _acc2001 = 0, _acc204 = 0, _acc1085 = 0, _acc2048 = 0, _acc1731 = 0, _acc1907 = 0, _acc1525 = 0, _acc285 = 0, _acc1964 = 0, _acc1611 = 0, _acc1840 = 0, _acc1786 = 0, _acc1373 = 0, _acc1406 = 0, _acc1412 = 0, _acc259 = 0, _acc1797 = 0, _acc422 = 0, _acc1824 = 0, _acc794 = 0, _acc1634 = 0, _acc1981 = 0, _acc1926 = 0, _acc276 = 0, _acc313 = 0, _acc1740 = 0, _acc135 = 0, _acc940 = 0, _acc407 = 0, _acc330 = 0, _acc1205 = 0, _acc1938 = 0, _acc485 = 0, _acc1327 = 0, _acc1741 = 0, _acc1020 = 0, _acc1847 = 0, _acc1390 = 0, _acc1489 = 0, _acc1969 = 0, _acc644 = 0, _acc1886 = 0, _acc734 = 0, _acc1249 = 0, _acc1751 = 0, _acc516 = 0, _acc1430 = 0, _acc2439 = 0, _acc1895 = 0, _acc19 = 0, _acc1850 = 0, _acc1975 = 0, _acc1181 = 0, _acc1273 = 0, _acc1758 = 0, _acc208 = 0, _acc426 = 0, _acc2032 = 0, _acc1287 = 0, _acc1049 = 0, _acc1818 = 0, _acc2435 = 0, _acc1726 = 0, _acc1331 = 0, _acc1829 = 0, _acc31 = 0, _acc1754 = 0, _acc1539 = 0, _acc1444 = 0, _acc72 = 0, _acc1126 = 0, _acc2421 = 0, _acc41 = 0, _acc840 = 0, _acc1985 = 0, _acc1943 = 0, _acc1708 = 0, _acc80 = 0, _acc1334 = 0, _acc410 = 0, _acc1208 = 0, _acc2027 = 0, _acc959 = 0, _acc1701 = 0, _acc1717 = 0, _acc1966 = 0, _acc1842 = 0, _acc900 = 0, _acc1713 = 0, _acc1990 = 0, _acc1375 = 0, _acc1481 = 0, _acc1120 = 0, _acc714 = 0, _acc2417 = 0, _acc1771 = 0, _acc1941 = 0, _acc2412 = 0, _acc1822 = 0, _acc460 = 0, _acc1813 = 0, _acc1699 = 0, _acc1415 = 0, _acc38 = 0, _acc229 = 0, _acc1862 = 0, _acc1811 = 0, _acc1403 = 0, _acc1179 = 0, _acc923 = 0, _acc1271 = 0, _acc1028 = 0, _acc1735 = 0, _acc1531 = 0, _acc549 = 0, _acc398 = 0, _acc1201 = 0, _acc290 = 0, _acc129 = 0, _acc1825 = 0, _acc1746 = 0, _acc911 = 0, _acc341 = 0, _acc1542 = 0, _acc228 = 0, _acc966 = 0, _acc973 = 0, _acc1859 = 0, _acc877 = 0, _acc1737 = 0, _acc2028 = 0, _acc1734 = 0, _acc1530 = 0, _acc1968 = 0, _acc643 = 0, _acc1885 = 0, _acc733 = 0, _acc1248 = 0, _acc1705 = 0, _acc1715 = 0, _acc79 = 0, _acc1725 = 0, _acc1333 = 0, _acc1707 = 0, _acc2428 = 0, _acc1347 = 0, _acc1983 = 0, _acc1326 = 0, _acc1814 = 0, _acc958 = 0, _acc1700 = 0, _acc1716 = 0, _acc1965 = 0, _acc1841 = 0, _acc1374 = 0, _acc713 = 0, _acc2416 = 0, _acc1832 = 0, _acc1441 = 0, _acc1124 = 0, _acc2420 = 0, _acc1984 = 0, _acc520 = 0, _acc2443 = 0, _acc1598 = 0, _acc53 = 0, _acc1698 = 0, _acc1572 = 0, _acc1733 = 0, _acc1529 = 0, _acc2436 = 0, _acc288 = 0, _acc207 = 0, _acc2047 = 0, _acc1732 = 0, _acc1528 = 0, _acc287 = 0, _acc1978 = 0, _acc2434 = 0, _acc1905 = 0, _acc1826 = 0, _acc206 = 0, _acc1086 = 0, _acc2046 = 0, _acc1745 = 0, _acc1908 = 0, _acc1527 = 0, _acc286 = 0, _acc144 = 0, _acc1793 = 0, _acc868 = 0, _acc1312 = 0, _acc1920 = 0, _acc56 = 0, _acc75 = 0, _acc562 = 0, _acc1843 = 0, _acc2039 = 0, _acc1722 = 0, _acc1329 = 0, _acc866 = 0, _acc1727 = 0, _acc1357 = 0, _acc2037 = 0, _acc524 = 0, _acc1235 = 0, _acc1335 = 0, _acc1307 = 0, _acc1749 = 0, _acc1893 = 0, _acc198 = 0, _acc2043 = 0, _acc1308 = 0, _acc332 = 0, _acc1944 = 0, _acc1212 = 0, _acc1543 = 0, _acc139 = 0, _acc1997 = 0, _acc256 = 0, _acc642 = 0, _acc1887 = 0, _acc1590 = 0, _acc532 = 0, _acc1247 = 0, _acc315 = 0, _acc82 = 0, _acc953 = 0, _acc1971 = 0, _acc535 = 0, _acc1252 = 0, _acc1325 = 0, _acc92 = 0, _acc333 = 0, _acc1945 = 0, _acc1213 = 0, _acc1544 = 0, _acc1993 = 0, _acc1214 = 0, _acc64 = 0, _acc1328 = 0, _acc1364 = 0, _acc464 = 0, _acc1600 = 0, _acc1711 = 0, _acc1960 = 0, _acc215 = 0, _acc1712 = 0, _acc1684 = 0, _acc1961 = 0, _acc289 = 0, _acc2437 = 0, _acc2426 = 0, _acc2003 = 0, _acc1451 = 0, _acc2438 = 0, _acc108 = 0, _acc433 = 0, _acc1714 = 0, _acc505 = 0, _acc1661 = 0, _acc517 = 0, _acc2441 = 0, _acc1432 = 0, _acc1892 = 0, _acc1163 = 0, _acc833 = 0, _acc1903 = 0, _acc1587 = 0, _acc1852 = 0, _acc1394 = 0, _acc1936 = 0, _acc1653 = 0, _acc1424 = 0, _acc820 = 0, _acc1804 = 0, _acc936 = 0, _acc339 = 0, _acc1567 = 0, _acc506 = 0, _acc1662 = 0, _acc1979 = 0, _acc2024 = 0, _acc1761 = 0, _acc1558 = 0, _acc438 = 0, _acc1317 = 0, _acc355 = 0, _acc1923 = 0, _acc2010 = 0, _acc1914 = 0, _acc1538 = 0, _acc1275 = 0, _acc954 = 0, _acc1845 = 0, _acc1972 = 0, _acc1253 = 0, _acc1781 = 0, _acc1456 = 0, _acc1807 = 0, _acc564 = 0, _acc1730 = 0, _acc2004 = 0, _acc1198 = 0, _acc1977 = 0, _acc2446 = 0, _acc403 = 0, _acc2023 = 0, _acc1128 = 0, _acc2425 = 0, _acc1603 = 0, _acc1125 = 0, _acc1898 = 0, _acc2002 = 0, _acc1450 = 0, _acc2025 = 0, _acc1495 = 0, _acc721 = 0, _acc743 = 0, _acc2424 = 0, _acc522 = 0, _acc2445 = 0, _acc1748 = 0, _acc1592 = 0, _acc546 = 0, _acc2019 = 0, _acc1688 = 0, _acc1461 = 0, _acc521 = 0, _acc2444 = 0, _acc1747 = 0, _acc548 = 0, _acc2018 = 0, _acc1687 = 0, _acc1279 = 0, _acc2013 = 0, _acc1414 = 0, _acc2014 = 0, _acc1458 = 0, _acc1991 = 0, _acc583 = 0, _acc1376 = 0, _acc698 = 0, _acc1482 = 0, _acc1467 = 0, _acc1518 = 0, _acc379 = 0, _acc346 = 0, _acc2007 = 0, _acc390 = 0, _acc1787 = 0, _acc345 = 0, _acc2006 = 0, _acc640 = 0, _acc1517 = 0, _acc1792 = 0, _acc1310 = 0, _acc28 = 0, _acc474 = 0, _acc2005 = 0, _acc399 = 0, _acc1241 = 0, _acc1421 = 0, _acc538 = 0, _acc2 = 0, _acc1810 = 0, _acc1594 = 0, _acc1139 = 0, _acc1998 = 0, _acc185 = 0, _acc1384 = 0, _acc1994 = 0, _acc138 = 0, _acc806 = 0, _acc1992 = 0, _acc1831 = 0, _acc1954 = 0, _acc2022 = 0, _acc925 = 0, _acc1554 = 0, _acc1523 = 0, _acc1008 = 0, _acc1957 = 0, _acc1036 = 0, _acc1360 = 0, _acc649 = 0, _acc747 = 0, _acc1400 = 0, _acc1042 = 0, _acc1409 = 0, _acc1034 = 0, _acc1356 = 0, _acc728 = 0, _acc1397 = 0, _acc186 = 0, _acc641 = 0, _acc1385 = 0, _acc1391 = 0, _acc1490 = 0, _acc42 = 0, _acc264 = 0, _acc1392 = 0, _acc622 = 0, _acc1877 = 0, _acc1366 = 0, _acc1602 = 0, _acc189 = 0, _acc1386 = 0, _acc182 = 0, _acc1381 = 0, _acc184 = 0, _acc632 = 0, _acc254 = 0, _acc1383 = 0, _acc183 = 0, _acc1382 = 0, _acc1483 = 0, _acc1369 = 0, _acc653 = 0, _acc1367 = 0, _acc621 = 0, _acc370 = 0, _acc1368 = 0, _acc5 = 0, _acc1363 = 0, _acc1947 = 0, _acc1828 = 0, _acc1359 = 0, _acc4 = 0, _acc1656 = 0, _acc1427 = 0, _acc783 = 0, _acc1632 = 0, _acc1622 = 0, _acc1689 = 0, _acc444 = 0, _acc1691 = 0, _acc1695 = 0, _acc1694 = 0, _acc1692 = 0, _acc1378 = 0, _acc1464 = 0, _acc1667 = 0, _acc1344 = 0, _acc1666 = 0, _acc1665 = 0, _acc421 = 0, _acc1671 = 0, _acc1678 = 0, _acc1683 = 0, _acc1186 = 0, _acc543 = 0, _acc1280 = 0, _acc1679 = 0, _acc1512 = 0, _acc1644 = 0, _acc37 = 0, _acc974 = 0, _acc793 = 0, _acc1987 = 0, _acc1649 = 0, _acc1007 = 0, _acc1677 = 0, _acc1004 = 0, _acc1676 = 0, _acc1039 = 0, _acc1361 = 0, _acc1675 = 0, _acc1664 = 0, _acc875 = 0, _acc1668 = 0, _acc443 = 0, _acc1690 = 0, _acc1613 = 0, _acc1350 = 0, _acc1670 = 0, _acc1663 = 0, _acc504 = 0, _acc1660 = 0, _acc519 = 0, _acc2440 = 0, _acc1431 = 0, _acc1596 = 0, _acc1657 = 0, _acc1167 = 0, _acc1428 = 0, _acc54 = 0, _acc1655 = 0, _acc1426 = 0, _acc790 = 0, _acc1651 = 0, _acc1048 = 0, _acc835 = 0, _acc1422 = 0, _acc789 = 0, _acc1650 = 0, _acc977 = 0, _acc1648 = 0, _acc1646 = 0, _acc1986 = 0, _acc1647 = 0, _acc59 = 0, _acc1645 = 0, _acc1643 = 0, _acc962 = 0, _acc798 = 0, _acc1641 = 0, _acc1246 = 0, _acc971 = 0, _acc1642 = 0, _acc1636 = 0, _acc1805 = 0, _acc1202 = 0, _acc968 = 0, _acc1637 = 0, _acc1628 = 0, _acc818 = 0, _acc732 = 0, _acc1579 = 0, _acc84 = 0, _acc781 = 0, _acc1851 = 0, _acc1630 = 0, _acc83 = 0, _acc780 = 0, _acc1629 = 0, _acc1617 = 0, _acc950 = 0, _acc1616 = 0, _acc337 = 0, _acc1767 = 0, _acc1566 = 0, _acc779 = 0, _acc1848 = 0, _acc1624 = 0, _acc1621 = 0, _acc1618 = 0, _acc301 = 0, _acc1620 = 0, _acc1619 = 0, _acc618 = 0, _acc1492 = 0, _acc1615 = 0, _acc1612 = 0, _acc319 = 0, _acc1835 = 0, _acc1610 = 0, _acc320 = 0, _acc1836 = 0, _acc1608 = 0, _acc555 = 0, _acc1609 = 0, _acc1680 = 0, _acc1606 = 0, _acc712 = 0, _acc1806 = 0, _acc2415 = 0, _acc1599 = 0, _acc265 = 0, _acc1583 = 0, _acc1604 = 0, _acc1601 = 0, _acc760 = 0, _acc1586 = 0, _acc1595 = 0, _acc1323 = 0, _acc1593 = 0, _acc1584 = 0, _acc58 = 0, _acc758 = 0, _acc1582 = 0, _acc178 = 0, _acc1452 = 0, _acc1454 = 0, _acc905 = 0, _acc1536 = 0, _acc770 = 0, _acc1459 = 0, _acc1377 = 0, _acc1463 = 0, _acc39 = 0, _acc180 = 0, _acc1379 = 0, _acc1465 = 0, _acc924 = 0, _acc1928 = 0, _acc1553 = 0, _acc147 = 0, _acc1795 = 0, _acc1468 = 0, _acc181 = 0, _acc1380 = 0, _acc1466 = 0, _acc927 = 0, _acc1556 = 0, _acc529 = 0, _acc1440 = 0, _acc912 = 0, _acc1919 = 0, _acc1445 = 0, _acc101 = 0, _acc1541 = 0, _acc1443 = 0, _acc342 = 0, _acc1446 = 0, _acc771 = 0, _acc1460 = 0, _acc1455 = 0, _acc1507 = 0, _acc100 = 0, _acc1540 = 0, _acc1442 = 0, _acc1447 = 0, _acc179 = 0, _acc1453 = 0, _acc1370 = 0, _acc1502 = 0, _acc922 = 0, _acc1270 = 0, _acc1449 = 0, _acc931 = 0, _acc891 = 0, _acc1562 = 0, _acc1564 = 0, _acc1233 = 0, _acc1522 = 0, _acc1573 = 0, _acc1577 = 0, _acc1578 = 0, _acc1873 = 0, _acc1551 = 0, _acc1396 = 0, _acc1576 = 0, _acc1763 = 0, _acc1557 = 0, _acc1316 = 0, _acc1574 = 0, _acc409 = 0, _acc1207 = 0, _acc2026 = 0, _acc1569 = 0, _acc1185 = 0, _acc1762 = 0, _acc1559 = 0, _acc1766 = 0, _acc1565 = 0, _acc1563 = 0, _acc1764 = 0, _acc2016 = 0, _acc1561 = 0, _acc1560 = 0, _acc1980 = 0, _acc152 = 0, _acc1499 = 0, _acc569 = 0, _acc397 = 0, _acc1200 = 0, _acc1500 = 0, _acc1778 = 0, _acc1498 = 0, _acc547 = 0, _acc2020 = 0, _acc1196 = 0, _acc1497 = 0, _acc40 = 0, _acc1799 = 0, _acc1496 = 0, _acc1519 = 0, _acc1313 = 0, _acc1232 = 0, _acc1520 = 0, _acc1025 = 0, _acc1314 = 0, _acc1514 = 0, _acc638 = 0, _acc1516 = 0, _acc1882 = 0, _acc1511 = 0, _acc1880 = 0, _acc1508 = 0, _acc1505 = 0, _acc1515 = 0, _acc1513 = 0, _acc1462 = 0, _acc1510 = 0, _acc1509 = 0, _acc1506 = 0, _acc1504 = 0, _acc1371 = 0, _acc1503 = 0, _acc937 = 0, _acc1199 = 0, _acc1537 = 0, _acc12 = 0, _acc1545 = 0, _acc1535 = 0, _acc1533 = 0, _acc1532 = 0, _acc1526 = 0, _acc1589 = 0, _acc283 = 0, _acc1909 = 0, _acc1524 = 0, _acc513 = 0, _acc1591 = 0, _acc284 = 0, _acc1521 = 0, _acc1399 = 0, _acc1493 = 0, _acc1494 = 0, _acc704 = 0, _acc1863 = 0, _acc1485 = 0, _acc736 = 0, _acc278 = 0, _acc1479 = 0, _acc279 = 0, _acc1480 = 0, _acc572 = 0, _acc1318 = 0, _acc573 = 0, _acc1320 = 0, _acc947 = 0, _acc1319 = 0, _acc2431 = 0, _acc281 = 0, _acc435 = 0, _acc1322 = 0, _acc272 = 0, _acc273 = 0, _acc1311 = 0, _acc153 = 0, _acc1309 = 0, _acc117 = 0, _acc1633 = 0, _acc154 = 0, _acc1546 = 0, _acc1264 = 0, _acc1548 = 0, _acc1266 = 0, _acc1550 = 0, _acc1268 = 0, _acc1775 = 0, _acc1286 = 0, _acc1285 = 0, _acc1284 = 0, _acc1262 = 0, _acc2418 = 0, _acc1258 = 0, _acc2012 = 0, _acc1277 = 0, _acc1759 = 0, _acc1274 = 0, _acc1552 = 0, _acc1269 = 0, _acc914 = 0, _acc347 = 0, _acc1549 = 0, _acc1267 = 0, _acc1260 = 0, _acc1547 = 0, _acc1265 = 0, _acc1263 = 0, _acc1261 = 0, _acc715 = 0, _acc1402 = 0, _acc1256 = 0, _acc1122 = 0, _acc716 = 0, _acc1257 = 0, _acc1401 = 0, _acc1255 = 0, _acc750 = 0, _acc1254 = 0, _acc537 = 0, _acc1251 = 0, _acc526 = 0, _acc1802 = 0, _acc1237 = 0, _acc527 = 0, _acc1238 = 0, _acc920 = 0, _acc394 = 0, _acc1931 = 0, _acc1195 = 0, _acc919 = 0, _acc1194 = 0, _acc1119 = 0, _acc277 = 0, _acc314 = 0, _acc275 = 0, _acc711 = 0, _acc1870 = 0, _acc458 = 0, _acc1790 = 0, _acc414 = 0, _acc1869 = 0, _acc456 = 0, _acc457 = 0;
	/* Reverse accumulation */
	_acc2446 = 1.0;
	_t2447 = (float)1.0 / (_t2445);
	_acc2445 += _acc2446 * _t2447;
	_acc2444 += _acc2445;
	_acc2441 += _acc2445;
	_acc2443 += _acc2444;
	_acc2442 += _acc2444;
	_acc2438 += _acc2443 * 0.212671;
	_acc2439 += _acc2442 * 0.715160;
	_acc2440 += _acc2441 * 0.072169;
	_acc2421 += _acc2440 * _t2437;
	_acc2437 += _acc2440 * _t2421;
	_acc2419 += _acc2439 * _t2437;
	_acc2437 += _acc2439 * _t2419;
	_acc2417 += _acc2438 * _t2437;
	_acc2437 += _acc2438 * _t2417;
	_t2448 = _t2437 * _t2437;
	_t2449 = -_t2448;
	_acc2436 += _acc2437 * _t2449;
	_acc2435 += _acc2436;
	_acc2434 += _acc2436;
	_acc2422 += _acc2435;
	_acc2433 += _acc2434 * _t2429;
	_acc2429 += _acc2434 * _t2433;
	_t2450 = 2.000000 * _t2432;
	_acc2432 += _acc2433 * _t2450;
	_t2451 = (float)1.0 / (_t2430);
	_acc2431 += _acc2432 * _t2451;
	_t2452 = -_t2431;
	_t2453 = _t2451 * _t2451;
	_t2454 = _t2452 * _t2453;
	_acc2430 += _acc2432 * _t2454;
	_acc1335 += _acc2431 * _t1699;
	_acc1699 += _acc2431 * _t1335;
	_acc1334 += _acc2430 * _t1333;
	_acc1333 += _acc2430 * _t1334;
	_acc1325 += _acc2429;
	_acc2428 += _acc2429;
	_acc1326 += _acc2428 * _t2427;
	_acc2427 += _acc2428 * _t1326;
	_t2455 = 2.000000 * _t1701;
	_acc1701 += _acc2427 * _t2455;
	cif (vertParams[108] == 0.000000) {
	}
	else {
		_acc2426 = _acc2422;
		_t2456 = 2.000000 * _t2425;
		_acc2425 += _acc2426 * _t2456;
		_t2457 = (float)1.0 / (_t2424);
		_acc1700 += _acc2425 * _t2457;
		_t2458 = -_t1700;
		_t2459 = _t2457 * _t2457;
		_t2460 = _t2458 * _t2459;
		_acc2424 += _acc2425 * _t2460;
		_acc1334 += _acc2424 * vertParams[174];
	}
	_acc2420 += _acc2421 * _t2415;
	_acc2415 += _acc2421 * _t2420;
	_acc2414 += _acc2420 * _t1332;
	_acc1332 += _acc2420 * _t2414;
	_acc2418 += _acc2419 * _t2415;
	_acc2415 += _acc2419 * _t2418;
	_acc2413 += _acc2418 * _t1331;
	_acc1331 += _acc2418 * _t2413;
	_acc2416 += _acc2417 * _t2415;
	_acc2415 += _acc2417 * _t2416;
	_acc2412 += _acc2416 * _t1330;
	_acc1330 += _acc2416 * _t2412;
	_acc1205 += _acc2414 * _t1698;
	_acc1698 += _acc2414 * _t1205;
	_acc1204 += _acc2413 * _t1697;
	_acc1697 += _acc2413 * _t1204;
	_acc1203 += _acc2412 * _t1696;
	_acc1696 += _acc2412 * _t1203;
	cif (vertParams[164] == 1.000000) {
		_acc1763 = _acc1696;
		_acc1764 = _acc1697;
		_acc1765 = _acc1698;
		_acc1715 = _acc1699;
		_acc1761 = _acc1700;
		_acc1762 = _acc1701;
		_acc1760 += _acc1765 * _t1715;
		_acc1715 += _acc1765 * _t1760;
		_acc1759 += _acc1764 * _t1715;
		_acc1715 += _acc1764 * _t1759;
		_acc1758 += _acc1763 * _t1715;
		_acc1715 += _acc1763 * _t1758;
		_acc1719 += _acc1762;
		_acc1749 += _acc1762;
		_acc1719 += _acc1761;
		_acc1748 += _acc1761;
		_acc1718 += _acc1760;
		_acc1747 += _acc1760;
		_acc1717 += _acc1759;
		_acc1746 += _acc1759;
		_acc1716 += _acc1758;
		_acc1745 += _acc1758;
		cif (vertParams[172] < 1.000000) {
			_acc1751 = _acc1745;
			_acc1752 = _acc1746;
			_acc1753 = _acc1747;
			_acc1756 = _acc1748;
			_acc1757 = _acc1749;
			_acc1755 += _acc1757 * _t1709;
			_acc1709 += _acc1757 * _t1755;
			_acc1755 += _acc1756 * _t1715;
			_acc1715 += _acc1756 * _t1755;
			_acc1754 += _acc1755 * 0.318310;
		}
		else {
		}
		cif (vertParams[172] > 0.000000) {
			_acc1732 = _acc1716;
			_acc1733 = _acc1717;
			_acc1734 = _acc1718;
			_acc1735 = _acc1719;
			cif (_t1731 > 0.000000) {
				_acc1740 = _acc1732;
				_acc1741 = _acc1733;
				_acc1742 = _acc1734;
				_acc1744 = _acc1735;
				_acc1743 += _acc1744 * _t1731;
				_acc1731 += _acc1744 * _t1743;
				_acc1737 += _acc1743 * vertParams[172];
				_acc1739 += _acc1742 * vertParams[170];
				_acc1739 += _acc1741 * vertParams[169];
				_acc1739 += _acc1740 * vertParams[168];
				_acc1738 += _acc1739 * _t1731;
				_acc1731 += _acc1739 * _t1738;
			}
			else {
			}
			_acc1730 += _acc1731 * 0.159155;
			_t2461 = vertParams[171]-1.000000;
			_t2462 = pow(_t1729,_t2461);
			_t2463 = vertParams[171] * _t2462;
			_acc1729 += _acc1730 * _t2463;
			_acc1724 += _acc1729 * _t1327;
			_acc1726 += _acc1729 * _t1328;
			_acc1728 += _acc1729 * _t1329;
			_acc1327 += _acc1729 * _t1724;
			_acc1328 += _acc1729 * _t1726;
			_acc1329 += _acc1729 * _t1728;
			_acc1727 += _acc1728;
			_acc1308 -= _acc1728;
			_acc1722 += _acc1727 * _t1708;
			_acc1708 += _acc1727 * _t1722;
			_acc1725 += _acc1726;
			_acc1307 -= _acc1726;
			_acc1722 += _acc1725 * _t1707;
			_acc1707 += _acc1725 * _t1722;
			_acc1723 += _acc1724;
			_acc1306 -= _acc1724;
			_acc1722 += _acc1723 * _t1706;
			_acc1706 += _acc1723 * _t1722;
			_acc1721 += _acc1722 * 2.000000;
			_acc1306 += _acc1721 * _t1706;
			_acc1307 += _acc1721 * _t1707;
			_acc1308 += _acc1721 * _t1708;
			_acc1706 += _acc1721 * _t1306;
			_acc1707 += _acc1721 * _t1307;
			_acc1708 += _acc1721 * _t1308;
		}
		else {
		}
		_acc1706 += _acc1715 * _t1327;
		_acc1707 += _acc1715 * _t1328;
		_acc1708 += _acc1715 * _t1329;
		_acc1327 += _acc1715 * _t1706;
		_acc1328 += _acc1715 * _t1707;
		_acc1329 += _acc1715 * _t1708;
		cif (_t1705 > 0.000000) {
			_acc1212 = _acc1706;
			_acc1213 = _acc1707;
			_acc1214 = _acc1708;
			_acc1705 = _acc1709;
		}
		else {
			_acc1711 = _acc1706;
			_acc1712 = _acc1707;
			_acc1713 = _acc1708;
			_acc1714 = _acc1709;
			_acc1705 -= _acc1714;
			_acc1214 -= _acc1713;
			_acc1213 -= _acc1712;
			_acc1212 -= _acc1711;
		}
		_acc1212 += _acc1705 * _t1306;
		_acc1213 += _acc1705 * _t1307;
		_acc1214 += _acc1705 * _t1308;
		_acc1306 += _acc1705 * _t1212;
		_acc1307 += _acc1705 * _t1213;
		_acc1308 += _acc1705 * _t1214;
	}
	else cif (vertParams[164] == 2.000000) {
		_acc1963 = _acc1696;
		_acc1964 = _acc1697;
		_acc1965 = _acc1698;
		_acc1767 = _acc1699;
		_acc1966 = _acc1700;
		_acc1967 = _acc1701;
		cif (_t1768 > 0.000000) {
			_acc1975 = _acc1963;
			_acc1976 = _acc1964;
			_acc1977 = _acc1965;
			_acc1981 = _acc1966;
			_acc1987 = _acc1967;
			cif (_t1986 >= 0.000000) {
				_acc1986 = _acc1987;
			}
			else {
				_acc1989 = _acc1987;
				_acc1986 -= _acc1989;
			}
			_t2464 = (float)1.0 / (_t1984);
			_acc1985 += _acc1986 * _t2464;
			_t2465 = -_t1985;
			_t2466 = _t2464 * _t2464;
			_t2467 = _t2465 * _t2466;
			_acc1984 += _acc1986 * _t2467;
			_acc1962 += _acc1985 * _t1852;
			_acc1852 += _acc1985 * _t1962;
			_acc1804 += _acc1984 * 4.000000;
			cif (_t1980 >= 0.000000) {
				_acc1980 = _acc1981;
			}
			else {
				_acc1983 = _acc1981;
				_acc1980 -= _acc1983;
			}
			_t2468 = (float)1.0 / (_t1978);
			_acc1979 += _acc1980 * _t2468;
			_t2469 = -_t1979;
			_t2470 = _t2468 * _t2468;
			_t2471 = _t2469 * _t2470;
			_acc1978 += _acc1980 * _t2471;
			_acc1941 += _acc1979 * _t1852;
			_acc1852 += _acc1979 * _t1941;
			_acc1805 += _acc1978 * 4.000000;
			_acc1972 += _acc1977 * vertParams[167];
			_acc1972 += _acc1976 * vertParams[166];
			_acc1972 += _acc1975 * vertParams[165];
			cif (_t1971 >= 0.000000) {
				_acc1971 = _acc1972;
			}
			else {
				_acc1974 = _acc1972;
				_acc1971 -= _acc1974;
			}
			_t2472 = (float)1.0 / (_t1968);
			_acc1970 += _acc1971 * _t2472;
			_t2473 = -_t1970;
			_t2474 = _t2472 * _t2472;
			_t2475 = _t2473 * _t2474;
			_acc1968 += _acc1971 * _t2475;
			_acc1969 += _acc1970 * _t1920;
			_acc1920 += _acc1970 * _t1969;
			_acc1852 += _acc1969 * _t1844;
			_acc1844 += _acc1969 * _t1852;
			_acc1766 += _acc1968 * 4.000000;
		}
		else {
			_acc2010 = _acc1963;
			_acc2011 = _acc1964;
			_acc2012 = _acc1965;
			_acc2020 = _acc1966;
			_acc2030 = _acc1967;
			cif (_t2029 >= 0.000000) {
				_acc2029 = _acc2030;
			}
			else {
				_acc2032 = _acc2030;
				_acc2029 -= _acc2032;
			}
			_t2476 = (float)1.0 / (_t2023);
			_acc2028 += _acc2029 * _t2476;
			_t2477 = -_t2028;
			_t2478 = _t2476 * _t2476;
			_t2479 = _t2477 * _t2478;
			_acc2023 += _acc2029 * _t2479;
			_acc2027 += _acc2028 * _t2025;
			_acc2025 += _acc2028 * _t2027;
			_acc1962 += _acc2027 * _t2026;
			_acc2026 += _acc2027 * _t1962;
			_acc1852 -= _acc2026;
			_acc2024 += _acc2025 * _t1804;
			_acc1804 += _acc2025 * _t2024;
			_t2480 = 2.000000 * _t1771;
			_acc1771 += _acc2024 * _t2480;
			_t2481 = 2.000000 * _t1993;
			_acc1993 += _acc2023 * _t2481;
			cif (_t2019 >= 0.000000) {
				_acc2019 = _acc2020;
			}
			else {
				_acc2022 = _acc2020;
				_acc2019 -= _acc2022;
			}
			_t2482 = (float)1.0 / (_t2013);
			_acc2018 += _acc2019 * _t2482;
			_t2483 = -_t2018;
			_t2484 = _t2482 * _t2482;
			_t2485 = _t2483 * _t2484;
			_acc2013 += _acc2019 * _t2485;
			_acc2017 += _acc2018 * _t2015;
			_acc2015 += _acc2018 * _t2017;
			_acc1941 += _acc2017 * _t2016;
			_acc2016 += _acc2017 * _t1941;
			_acc1852 -= _acc2016;
			_acc2014 += _acc2015 * _t1805;
			_acc1805 += _acc2015 * _t2014;
			_t2486 = 2.000000 * _t1769;
			_acc1769 += _acc2014 * _t2486;
			_t2487 = 2.000000 * _t1991;
			_acc1991 += _acc2013 * _t2487;
			_acc2007 += _acc2012 * vertParams[170];
			_acc2007 += _acc2011 * vertParams[169];
			_acc2007 += _acc2010 * vertParams[168];
			cif (_t2006 >= 0.000000) {
				_acc2006 = _acc2007;
			}
			else {
				_acc2009 = _acc2007;
				_acc2006 -= _acc2009;
			}
			_t2488 = (float)1.0 / (_t1997);
			_acc2005 += _acc2006 * _t2488;
			_t2489 = -_t2005;
			_t2490 = _t2488 * _t2488;
			_t2491 = _t2489 * _t2490;
			_acc1997 += _acc2006 * _t2491;
			_acc1995 += _acc2005 * _t2004;
			_acc2004 += _acc2005 * _t1995;
			_acc2003 += _acc2004 * _t1805;
			_acc1805 += _acc2004 * _t2003;
			_acc2002 += _acc2003 * _t1804;
			_acc1804 += _acc2003 * _t2002;
			_acc2001 += _acc2002 * _t1998;
			_acc1998 += _acc2002 * _t2001;
			_acc2000 += _acc2001 * _t1920;
			_acc1920 += _acc2001 * _t2000;
			_acc1999 += _acc2000 * _t1844;
			_acc1844 += _acc2000 * _t1999;
			_acc1852 -= _acc1999;
			_t2492 = 2.000000 * _t1769;
			_acc1769 += _acc1998 * _t2492;
			_acc1766 += _acc1997 * _t1996;
			_acc1996 += _acc1997 * _t1766;
			_t2493 = 2.000000 * _t1991;
			_acc1991 += _acc1996 * _t2493;
			_t2494 = 2.000000 * _t1994;
			_acc1994 += _acc1995 * _t2494;
			_t2495 = _t1994 * _t1994;
			_t2496 = -_t2495;
			_acc1769 += _acc1994 * _t2496;
			_acc1805 += _acc1993;
			_acc1992 += _acc1993;
			_acc1771 += _acc1992 * _t1804;
			_acc1804 += _acc1992 * _t1771;
			_acc1804 += _acc1991;
			_acc1990 += _acc1991;
			_acc1769 += _acc1990 * _t1805;
			_acc1805 += _acc1990 * _t1769;
		}
		_acc1826 += _acc1962 * _t1961;
		_acc1961 += _acc1962 * _t1826;
		_t2497 = (float)1.0 / (_t1958);
		_acc1960 += _acc1961 * _t2497;
		_t2498 = -_t1960;
		_t2499 = _t2497 * _t2497;
		_t2500 = _t2498 * _t2499;
		_acc1958 += _acc1961 * _t2500;
		_acc1959 += _acc1960 * _t1960;
		_acc1954 -= _acc1959;
		_acc1957 += _acc1958 * _t1955;
		_acc1955 += _acc1958 * _t1957;
		_acc1956 += _acc1957 * _t1945;
		_acc1945 += _acc1957 * _t1956;
		_acc1945 += _acc1956 * 3.141593;
		_t2501 = 2.000000 * _t1946;
		_acc1946 += _acc1955 * _t2501;
		_t2502 = (float)1.0 / (_t1946);
		_acc1953 += _acc1954 * _t2502;
		_t2503 = -_t1953;
		_t2504 = _t2502 * _t2502;
		_t2505 = _t2503 * _t2504;
		_acc1946 += _acc1954 * _t2505;
		_acc1952 += _acc1953;
		_acc1949 += _acc1953;
		_t2506 = (float)1.0 / (_t1950);
		_acc1951 += _acc1952 * _t2506;
		_t2507 = -_t1951;
		_t2508 = _t2506 * _t2506;
		_t2509 = _t2507 * _t2508;
		_acc1950 += _acc1952 * _t2509;
		_t2510 = 2.000000 * _t1828;
		_acc1828 += _acc1951 * _t2510;
		_t2511 = 2.000000 * _t1945;
		_acc1945 += _acc1950 * _t2511;
		_t2512 = (float)1.0 / (_t1947);
		_acc1948 += _acc1949 * _t2512;
		_t2513 = -_t1948;
		_t2514 = _t2512 * _t2512;
		_t2515 = _t2513 * _t2514;
		_acc1947 += _acc1949 * _t2515;
		_t2516 = 2.000000 * _t1827;
		_acc1827 += _acc1948 * _t2516;
		_t2517 = 2.000000 * _t1945;
		_acc1945 += _acc1947 * _t2517;
		_t2518 = 2.000000 * _t1826;
		_acc1826 += _acc1946 * _t2518;
		_acc1944 += _acc1945 * vertParams[173];
		_acc1943 -= _acc1944;
		_acc1942 += _acc1943 * 0.200000;
		_t2519 = 2.000000 * _t1942;
		_t2520 = (float)1.0 / (_t2519);
		_acc1873 += _acc1942 * _t2520;
		_acc1826 += _acc1941 * _t1940;
		_acc1940 += _acc1941 * _t1826;
		_t2521 = (float)1.0 / (_t1937);
		_acc1939 += _acc1940 * _t2521;
		_t2522 = -_t1939;
		_t2523 = _t2521 * _t2521;
		_t2524 = _t2522 * _t2523;
		_acc1937 += _acc1940 * _t2524;
		_acc1938 += _acc1939 * _t1939;
		_acc1933 -= _acc1938;
		_acc1936 += _acc1937 * _t1934;
		_acc1934 += _acc1937 * _t1936;
		_acc1935 += _acc1936 * _t1924;
		_acc1924 += _acc1936 * _t1935;
		_acc1924 += _acc1935 * 3.141593;
		_t2525 = 2.000000 * _t1925;
		_acc1925 += _acc1934 * _t2525;
		_t2526 = (float)1.0 / (_t1925);
		_acc1932 += _acc1933 * _t2526;
		_t2527 = -_t1932;
		_t2528 = _t2526 * _t2526;
		_t2529 = _t2527 * _t2528;
		_acc1925 += _acc1933 * _t2529;
		_acc1931 += _acc1932;
		_acc1928 += _acc1932;
		_t2530 = (float)1.0 / (_t1929);
		_acc1930 += _acc1931 * _t2530;
		_t2531 = -_t1930;
		_t2532 = _t2530 * _t2530;
		_t2533 = _t2531 * _t2532;
		_acc1929 += _acc1931 * _t2533;
		_t2534 = 2.000000 * _t1828;
		_acc1828 += _acc1930 * _t2534;
		_t2535 = 2.000000 * _t1924;
		_acc1924 += _acc1929 * _t2535;
		_t2536 = (float)1.0 / (_t1926);
		_acc1927 += _acc1928 * _t2536;
		_t2537 = -_t1927;
		_t2538 = _t2536 * _t2536;
		_t2539 = _t2537 * _t2538;
		_acc1926 += _acc1928 * _t2539;
		_t2540 = 2.000000 * _t1827;
		_acc1827 += _acc1927 * _t2540;
		_t2541 = 2.000000 * _t1924;
		_acc1924 += _acc1926 * _t2541;
		_t2542 = 2.000000 * _t1826;
		_acc1826 += _acc1925 * _t2542;
		_acc1923 += _acc1924 * vertParams[173];
		_acc1922 -= _acc1923;
		_acc1921 += _acc1922 * 0.200000;
		_t2543 = 2.000000 * _t1921;
		_t2544 = (float)1.0 / (_t2543);
		_acc1870 += _acc1921 * _t2544;
		_acc1905 += _acc1920 * _t1883;
		_acc1883 += _acc1920 * _t1905;
		cif (_t1904 <= 0.000000) {
		}
		else {
			_acc1909 = _acc1905;
			cif (_t1908 >= 1.600000) {
			}
			else {
				_acc1919 = _acc1909;
				_t2545 = (float)1.0 / (_t1915);
				_acc1918 += _acc1919 * _t2545;
				_t2546 = -_t1918;
				_t2547 = _t2545 * _t2545;
				_t2548 = _t2546 * _t2547;
				_acc1915 += _acc1919 * _t2548;
				_acc1917 += _acc1918;
				_acc1916 += _acc1918;
				_acc1908 += _acc1917 * 3.535000;
				_acc1911 += _acc1916 * 2.181000;
				_acc1914 += _acc1915;
				_acc1912 += _acc1915;
				_acc1913 += _acc1914;
				_acc1908 += _acc1913 * 2.276000;
				_acc1911 += _acc1912 * 2.577000;
				_t2549 = 2.000000 * _t1908;
				_acc1908 += _acc1911 * _t2549;
			}
			_t2550 = _t1908 * _t1908;
			_t2551 = -_t2550;
			_acc1907 += _acc1908 * _t2551;
			_acc1904 += _acc1907 * vertParams[173];
		}
		_t2552 = (float)1.0 / (_t1870);
		_acc1903 += _acc1904 * _t2552;
		_t2553 = -_t1903;
		_t2554 = _t2552 * _t2552;
		_t2555 = _t2553 * _t2554;
		_acc1870 += _acc1904 * _t2555;
		_t2556 = 2.000000 * _t1903;
		_t2557 = (float)1.0 / (_t2556);
		_acc1900 += _acc1903 * _t2557;
		cif (_t1899 >= 0.000000) {
			_acc1899 = _acc1900;
		}
		else {
			_acc1902 = _acc1900;
			_acc1899 -= _acc1902;
		}
		_acc1898 -= _acc1899;
		_t2558 = 2.000000 * _t1870;
		_acc1870 += _acc1898 * _t2558;
		cif (_t1882 <= 0.000000) {
		}
		else {
			_acc1887 = _acc1883;
			cif (_t1886 >= 1.600000) {
			}
			else {
				_acc1897 = _acc1887;
				_t2559 = (float)1.0 / (_t1893);
				_acc1896 += _acc1897 * _t2559;
				_t2560 = -_t1896;
				_t2561 = _t2559 * _t2559;
				_t2562 = _t2560 * _t2561;
				_acc1893 += _acc1897 * _t2562;
				_acc1895 += _acc1896;
				_acc1894 += _acc1896;
				_acc1886 += _acc1895 * 3.535000;
				_acc1889 += _acc1894 * 2.181000;
				_acc1892 += _acc1893;
				_acc1890 += _acc1893;
				_acc1891 += _acc1892;
				_acc1886 += _acc1891 * 2.276000;
				_acc1889 += _acc1890 * 2.577000;
				_t2563 = 2.000000 * _t1886;
				_acc1886 += _acc1889 * _t2563;
			}
			_t2564 = _t1886 * _t1886;
			_t2565 = -_t2564;
			_acc1885 += _acc1886 * _t2565;
			_acc1882 += _acc1885 * vertParams[173];
		}
		_t2566 = (float)1.0 / (_t1873);
		_acc1881 += _acc1882 * _t2566;
		_t2567 = -_t1881;
		_t2568 = _t2566 * _t2566;
		_t2569 = _t2567 * _t2568;
		_acc1873 += _acc1882 * _t2569;
		_t2570 = 2.000000 * _t1881;
		_t2571 = (float)1.0 / (_t2570);
		_acc1878 += _acc1881 * _t2571;
		cif (_t1877 >= 0.000000) {
			_acc1877 = _acc1878;
		}
		else {
			_acc1880 = _acc1878;
			_acc1877 -= _acc1880;
		}
		_acc1876 -= _acc1877;
		_t2572 = 2.000000 * _t1873;
		_acc1873 += _acc1876 * _t2572;
		cif (_t1767 >= 0.000000) {
			_acc1767 = _acc1873;
		}
		else {
			_acc1875 = _acc1873;
			_acc1767 -= _acc1875;
		}
		cif (_t1766 >= 0.000000) {
			_acc1766 = _acc1870;
		}
		else {
			_acc1872 = _acc1870;
			_acc1766 -= _acc1872;
		}
		cif (_t1851 <= 0.000000) {
		}
		else {
			_acc1869 = _acc1852;
			_acc1868 += _acc1869 * 0.500000;
			_acc1867 += _acc1868;
			_acc1866 += _acc1868;
			_t2573 = 2.000000 * _t1862;
			_acc1862 += _acc1867 * _t2573;
			_t2574 = 2.000000 * _t1865;
			_acc1865 += _acc1866 * _t2574;
			_t2575 = (float)1.0 / (_t1863);
			_acc1864 += _acc1865 * _t2575;
			_t2576 = -_t1864;
			_t2577 = _t2575 * _t2575;
			_t2578 = _t2576 * _t2577;
			_acc1863 += _acc1865 * _t2578;
			_acc1859 += _acc1864;
			_acc1857 -= _acc1864;
			_acc1859 += _acc1863;
			_acc1857 += _acc1863;
			_t2579 = (float)1.0 / (_t1860);
			_acc1861 += _acc1862 * _t2579;
			_t2580 = -_t1861;
			_t2581 = _t2579 * _t2579;
			_t2582 = _t2580 * _t2581;
			_acc1860 += _acc1862 * _t2582;
			_acc1854 += _acc1861;
			_acc1858 -= _acc1861;
			_acc1854 += _acc1860;
			_acc1858 += _acc1860;
			_acc1854 += _acc1859 * vertParams[171];
			_acc1857 += _acc1858 * vertParams[171];
			_t2583 = 2.000000 * _t1857;
			_t2584 = (float)1.0 / (_t2583);
			_acc1851 += _acc1857 * _t2584;
			cif (_t1804 >= 0.000000) {
				_acc1804 = _acc1854;
			}
			else {
				_acc1856 = _acc1854;
				_acc1804 -= _acc1856;
			}
		}
		_acc1850 -= _acc1851;
		_acc1849 += _acc1850 * _t1847;
		_acc1847 += _acc1850 * _t1849;
		_acc1848 -= _acc1849;
		_t2585 = 2.000000 * _t1804;
		_acc1804 += _acc1848 * _t2585;
		_t2586 = 2.000000 * _t1845;
		_acc1845 += _acc1847 * _t2586;
		cif (_t1804 > 0.000000) {
		}
		else {
		}
		_t2587 = (float)1.0 / (_t1841);
		_acc1843 += _acc1844 * _t2587;
		_t2588 = -_t1843;
		_t2589 = _t2587 * _t2587;
		_t2590 = _t2588 * _t2589;
		_acc1841 += _acc1844 * _t2590;
		_acc1842 += _acc1843 * _t1843;
		_acc1837 -= _acc1842;
		_acc1840 += _acc1841 * _t1838;
		_acc1838 += _acc1841 * _t1840;
		_acc1839 += _acc1840 * vertParams[173];
		_t2591 = 2.000000 * _t1829;
		_acc1829 += _acc1838 * _t2591;
		_t2592 = (float)1.0 / (_t1829);
		_acc1836 += _acc1837 * _t2592;
		_t2593 = -_t1836;
		_t2594 = _t2592 * _t2592;
		_t2595 = _t2593 * _t2594;
		_acc1829 += _acc1837 * _t2595;
		_acc1835 += _acc1836;
		_acc1832 += _acc1836;
		_t2596 = (float)1.0 / (_t1833);
		_acc1834 += _acc1835 * _t2596;
		_t2597 = -_t1834;
		_t2598 = _t2596 * _t2596;
		_t2599 = _t2597 * _t2598;
		_acc1833 += _acc1835 * _t2599;
		_t2600 = 2.000000 * _t1828;
		_acc1828 += _acc1834 * _t2600;
		_t2601 = (float)1.0 / (_t1830);
		_acc1831 += _acc1832 * _t2601;
		_t2602 = -_t1831;
		_t2603 = _t2601 * _t2601;
		_t2604 = _t2602 * _t2603;
		_acc1830 += _acc1832 * _t2604;
		_t2605 = 2.000000 * _t1827;
		_acc1827 += _acc1831 * _t2605;
		_t2606 = 2.000000 * _t1826;
		_acc1826 += _acc1829 * _t2606;
		_acc1806 += _acc1828 * _t1797;
		_acc1807 += _acc1828 * _t1798;
		_acc1808 += _acc1828 * _t1799;
		_acc1797 += _acc1828 * _t1806;
		_acc1798 += _acc1828 * _t1807;
		_acc1799 += _acc1828 * _t1808;
		_acc1809 += _acc1827 * _t1797;
		_acc1810 += _acc1827 * _t1798;
		_acc1811 += _acc1827 * _t1799;
		_acc1797 += _acc1827 * _t1809;
		_acc1798 += _acc1827 * _t1810;
		_acc1799 += _acc1827 * _t1811;
		_acc1212 += _acc1826 * _t1797;
		_acc1213 += _acc1826 * _t1798;
		_acc1214 += _acc1826 * _t1799;
		_acc1797 += _acc1826 * _t1212;
		_acc1798 += _acc1826 * _t1213;
		_acc1799 += _acc1826 * _t1214;
		cif (_t1214 < -0.999999) {
		}
		else {
			_acc1821 = _acc1806;
			_acc1817 = _acc1807;
			_acc1818 = _acc1808;
			_acc1817 = _acc1809;
			_acc1825 = _acc1810;
			_acc1822 = _acc1811;
			_acc1824 -= _acc1825;
			_acc1823 += _acc1824 * _t1814;
			_acc1814 += _acc1824 * _t1823;
			_t2607 = 2.000000 * _t1213;
			_acc1213 += _acc1823 * _t2607;
			_acc1213 -= _acc1822;
			_acc1820 -= _acc1821;
			_acc1819 += _acc1820 * _t1814;
			_acc1814 += _acc1820 * _t1819;
			_t2608 = 2.000000 * _t1212;
			_acc1212 += _acc1819 * _t2608;
			_acc1212 -= _acc1818;
			_acc1816 += _acc1817 * _t1814;
			_acc1814 += _acc1817 * _t1816;
			_acc1815 += _acc1816 * _t1213;
			_acc1213 += _acc1816 * _t1815;
			_acc1212 -= _acc1815;
			_t2609 = _t1814 * _t1814;
			_t2610 = -_t2609;
			_acc1813 += _acc1814 * _t2610;
			_acc1214 += _acc1813;
		}
		_acc1327 += _acc1805 * _t1797;
		_acc1328 += _acc1805 * _t1798;
		_acc1329 += _acc1805 * _t1799;
		_acc1797 += _acc1805 * _t1327;
		_acc1798 += _acc1805 * _t1328;
		_acc1799 += _acc1805 * _t1329;
		_acc1306 += _acc1804 * _t1797;
		_acc1307 += _acc1804 * _t1798;
		_acc1308 += _acc1804 * _t1799;
		_acc1797 += _acc1804 * _t1306;
		_acc1798 += _acc1804 * _t1307;
		_acc1799 += _acc1804 * _t1308;
		cif (_t1796 < 0.000000) {
			_acc1801 = _acc1797;
			_acc1802 = _acc1798;
			_acc1803 = _acc1799;
			_acc1775 -= _acc1803;
			_acc1774 -= _acc1802;
			_acc1773 -= _acc1801;
		}
		else {
			_acc1773 = _acc1797;
			_acc1774 = _acc1798;
			_acc1775 = _acc1799;
		}
		cif (_t1768 > 0.000000) {
			_acc1782 = _acc1773;
			_acc1783 = _acc1774;
			_acc1784 = _acc1775;
			_acc1779 += _acc1784 * _t1781;
			_acc1781 += _acc1784 * _t1779;
			_acc1778 += _acc1783 * _t1781;
			_acc1781 += _acc1783 * _t1778;
			_acc1777 += _acc1782 * _t1781;
			_acc1781 += _acc1782 * _t1777;
			_t2611 = _t1781 * _t1781;
			_t2612 = -_t2611;
			_acc1780 += _acc1781 * _t2612;
			_t2613 = (float)1.0 / (_t1780);
			_t2614 = _t1777 * _t2613;
			_acc1777 += _acc1780 * _t2614;
			_t2615 = _t1778 * _t2613;
			_acc1778 += _acc1780 * _t2615;
			_t2616 = _t1779 * _t2613;
			_acc1779 += _acc1780 * _t2616;
			_acc1308 += _acc1779;
			_acc1329 += _acc1779;
			_acc1307 += _acc1778;
			_acc1328 += _acc1778;
			_acc1306 += _acc1777;
			_acc1327 += _acc1777;
		}
		else {
			_acc1793 = _acc1773;
			_acc1794 = _acc1774;
			_acc1795 = _acc1775;
			_acc1790 += _acc1795 * _t1792;
			_acc1792 += _acc1795 * _t1790;
			_acc1788 += _acc1794 * _t1792;
			_acc1792 += _acc1794 * _t1788;
			_acc1786 += _acc1793 * _t1792;
			_acc1792 += _acc1793 * _t1786;
			_t2617 = _t1792 * _t1792;
			_t2618 = -_t2617;
			_acc1791 += _acc1792 * _t2618;
			_t2619 = (float)1.0 / (_t1791);
			_t2620 = _t1786 * _t2619;
			_acc1786 += _acc1791 * _t2620;
			_t2621 = _t1788 * _t2619;
			_acc1788 += _acc1791 * _t2621;
			_t2622 = _t1790 * _t2619;
			_acc1790 += _acc1791 * _t2622;
			_acc1308 += _acc1790;
			_acc1789 += _acc1790;
			_acc1329 += _acc1789 * _t1769;
			_acc1769 += _acc1789 * _t1329;
			_acc1307 += _acc1788;
			_acc1787 += _acc1788;
			_acc1328 += _acc1787 * _t1769;
			_acc1769 += _acc1787 * _t1328;
			_acc1306 += _acc1786;
			_acc1785 += _acc1786;
			_acc1327 += _acc1785 * _t1769;
			_acc1769 += _acc1785 * _t1327;
		}
		cif (_t1767 > 0.000000) {
		}
		else {
		}
		cif (_t1766 > 0.000000) {
		}
		else {
		}
		_acc1327 += _acc1767 * _t1212;
		_acc1328 += _acc1767 * _t1213;
		_acc1329 += _acc1767 * _t1214;
		_acc1212 += _acc1767 * _t1327;
		_acc1213 += _acc1767 * _t1328;
		_acc1214 += _acc1767 * _t1329;
		_acc1306 += _acc1766 * _t1212;
		_acc1307 += _acc1766 * _t1213;
		_acc1308 += _acc1766 * _t1214;
		_acc1212 += _acc1766 * _t1306;
		_acc1213 += _acc1766 * _t1307;
		_acc1214 += _acc1766 * _t1308;
	}
	else cif (vertParams[164] == 0.000000) {
		_acc2046 = _acc1696;
		_acc2047 = _acc1697;
		_acc2048 = _acc1698;
		_acc2043 = _acc1699;
		_acc2044 = _acc1700;
		_acc2045 = _acc1701;
		_acc2044 += _acc2048 * vertParams[167];
		_acc2044 += _acc2047 * vertParams[166];
		_acc2044 += _acc2046 * vertParams[165];
		_acc2037 += _acc2045 * 0.318310;
		_acc2043 += _acc2044 * 0.318310;
		_acc2034 += _acc2043 * _t1327;
		_acc2035 += _acc2043 * _t1328;
		_acc2036 += _acc2043 * _t1329;
		_acc1327 += _acc2043 * _t2034;
		_acc1328 += _acc2043 * _t2035;
		_acc1329 += _acc2043 * _t2036;
		cif (_t2033 > 0.000000) {
			_acc1212 = _acc2034;
			_acc1213 = _acc2035;
			_acc1214 = _acc2036;
			_acc2033 = _acc2037;
		}
		else {
			_acc2039 = _acc2034;
			_acc2040 = _acc2035;
			_acc2041 = _acc2036;
			_acc2042 = _acc2037;
			_acc2033 -= _acc2042;
			_acc1214 -= _acc2041;
			_acc1213 -= _acc2040;
			_acc1212 -= _acc2039;
		}
		_acc1212 += _acc2033 * _t1306;
		_acc1213 += _acc2033 * _t1307;
		_acc1214 += _acc2033 * _t1308;
		_acc1306 += _acc2033 * _t1212;
		_acc1307 += _acc2033 * _t1213;
		_acc1308 += _acc2033 * _t1214;
	}
	else {
	}
	cif (vertParams[108] == 0.000000) {
		_acc1348 = _acc1327;
		_acc1349 = _acc1328;
		_acc1350 = _acc1329;
		_acc1352 = _acc1330;
		_acc1353 = _acc1331;
		_acc1354 = _acc1332;
		_acc1346 = _acc1334;
		_acc1351 += _acc1354 * vertParams[114];
		_acc1351 += _acc1353 * vertParams[113];
		_acc1351 += _acc1352 * vertParams[112];
		_t2623 = _t1351 * _t1351;
		_t2624 = -_t2623;
		_acc1346 += _acc1351 * _t2624;
		_t2625 = (float)1.0 / (_t1347);
		_acc1341 += _acc1350 * _t2625;
		_t2626 = -_t1341;
		_t2627 = _t2625 * _t2625;
		_t2628 = _t2626 * _t2627;
		_acc1347 += _acc1350 * _t2628;
		_t2629 = (float)1.0 / (_t1347);
		_acc1340 += _acc1349 * _t2629;
		_t2630 = -_t1340;
		_t2631 = _t2629 * _t2629;
		_t2632 = _t2630 * _t2631;
		_acc1347 += _acc1349 * _t2632;
		_t2633 = (float)1.0 / (_t1347);
		_acc1339 += _acc1348 * _t2633;
		_t2634 = -_t1339;
		_t2635 = _t2633 * _t2633;
		_t2636 = _t2634 * _t2635;
		_acc1347 += _acc1348 * _t2636;
		_t2637 = 2.000000 * _t1347;
		_t2638 = (float)1.0 / (_t2637);
		_acc1346 += _acc1347 * _t2638;
		_acc1345 += _acc1346;
		_acc1342 += _acc1346;
		_acc1344 += _acc1345;
		_acc1343 += _acc1345;
		_t2639 = 2.000000 * _t1339;
		_acc1339 += _acc1344 * _t2639;
		_t2640 = 2.000000 * _t1340;
		_acc1340 += _acc1343 * _t2640;
		_t2641 = 2.000000 * _t1341;
		_acc1341 += _acc1342 * _t2641;
		_acc1208 -= _acc1341;
		_acc1207 -= _acc1340;
		_acc1206 -= _acc1339;
	}
	else cif (vertParams[108] == 1.000000) {
		_acc1410 = _acc1327;
		_acc1411 = _acc1328;
		_acc1412 = _acc1329;
		_acc1417 = _acc1330;
		_acc1418 = _acc1331;
		_acc1419 = _acc1332;
		_acc1414 = _acc1333;
		_acc1416 = _acc1334;
		_acc1421 = _acc1335;
		_acc1420 += _acc1421 * 0.318310;
		_acc1361 += _acc1420 * _t1414;
		_acc1414 += _acc1420 * _t1361;
		_t2642 = -vertParams[157];
		_t2643 = (float)1.0 / (_t1416);
		_t2644 = _t2643 * _t2643;
		_t2645 = _t2642 * _t2644;
		_acc1416 += _acc1419 * _t2645;
		_t2646 = -vertParams[156];
		_t2647 = (float)1.0 / (_t1416);
		_t2648 = _t2647 * _t2647;
		_t2649 = _t2646 * _t2648;
		_acc1416 += _acc1418 * _t2649;
		_t2650 = -vertParams[155];
		_t2651 = (float)1.0 / (_t1416);
		_t2652 = _t2651 * _t2651;
		_t2653 = _t2650 * _t2652;
		_acc1416 += _acc1417 * _t2653;
		_t2654 = (float)1.0 / (_t1414);
		_acc1415 += _acc1416 * _t2654;
		_t2655 = -_t1415;
		_t2656 = _t2654 * _t2654;
		_t2657 = _t2655 * _t2656;
		_acc1414 += _acc1416 * _t2657;
		_acc1361 += _acc1415 * _t1408;
		_acc1408 += _acc1415 * _t1361;
		_acc1413 -= _acc1414;
		_acc1410 += _acc1413 * _t1358;
		_acc1411 += _acc1413 * _t1359;
		_acc1412 += _acc1413 * _t1360;
		_acc1358 += _acc1413 * _t1410;
		_acc1359 += _acc1413 * _t1411;
		_acc1360 += _acc1413 * _t1412;
		_t2658 = (float)1.0 / (_t1409);
		_acc1403 += _acc1412 * _t2658;
		_t2659 = -_t1403;
		_t2660 = _t2658 * _t2658;
		_t2661 = _t2659 * _t2660;
		_acc1409 += _acc1412 * _t2661;
		_t2662 = (float)1.0 / (_t1409);
		_acc1402 += _acc1411 * _t2662;
		_t2663 = -_t1402;
		_t2664 = _t2662 * _t2662;
		_t2665 = _t2663 * _t2664;
		_acc1409 += _acc1411 * _t2665;
		_t2666 = (float)1.0 / (_t1409);
		_acc1401 += _acc1410 * _t2666;
		_t2667 = -_t1401;
		_t2668 = _t2666 * _t2666;
		_t2669 = _t2667 * _t2668;
		_acc1409 += _acc1410 * _t2669;
		_t2670 = 2.000000 * _t1409;
		_t2671 = (float)1.0 / (_t2670);
		_acc1408 += _acc1409 * _t2671;
		_acc1407 += _acc1408;
		_acc1404 += _acc1408;
		_acc1406 += _acc1407;
		_acc1405 += _acc1407;
		_t2672 = 2.000000 * _t1401;
		_acc1401 += _acc1406 * _t2672;
		_t2673 = 2.000000 * _t1402;
		_acc1402 += _acc1405 * _t2673;
		_t2674 = 2.000000 * _t1403;
		_acc1403 += _acc1404 * _t2674;
		_acc1357 += _acc1403;
		_acc1208 -= _acc1403;
		_acc1356 += _acc1402;
		_acc1207 -= _acc1402;
		_acc1355 += _acc1401;
		_acc1206 -= _acc1401;
		cif (vertParams[109] == 0.000000) {
			_acc1370 = _acc1355;
			_acc1374 = _acc1356;
			_acc1378 = _acc1357;
			_acc1398 = _acc1358;
			_acc1399 = _acc1359;
			_acc1400 = _acc1360;
			_acc1395 += _acc1400 * _t1397;
			_acc1397 += _acc1400 * _t1395;
			_acc1390 += _acc1399 * _t1397;
			_acc1397 += _acc1399 * _t1390;
			_acc1385 += _acc1398 * _t1397;
			_acc1397 += _acc1398 * _t1385;
			_t2675 = _t1397 * _t1397;
			_t2676 = -_t2675;
			_acc1396 += _acc1397 * _t2676;
			_t2677 = (float)1.0 / (_t1396);
			_t2678 = _t1385 * _t2677;
			_acc1385 += _acc1396 * _t2678;
			_t2679 = _t1390 * _t2677;
			_acc1390 += _acc1396 * _t2679;
			_t2680 = _t1395 * _t2677;
			_acc1395 += _acc1396 * _t2680;
			_acc1394 += _acc1395;
			_acc1391 += _acc1395;
			_acc1393 += _acc1394;
			_acc1392 += _acc1394;
			_acc1380 += _acc1393 * vertParams[122];
			_acc1365 += _acc1392 * vertParams[125];
			_acc1366 += _acc1391 * vertParams[128];
			_acc1389 += _acc1390;
			_acc1386 += _acc1390;
			_acc1388 += _acc1389;
			_acc1387 += _acc1389;
			_acc1380 += _acc1388 * vertParams[121];
			_acc1365 += _acc1387 * vertParams[124];
			_acc1366 += _acc1386 * vertParams[127];
			_acc1384 += _acc1385;
			_acc1381 += _acc1385;
			_acc1383 += _acc1384;
			_acc1382 += _acc1384;
			_acc1380 += _acc1383 * vertParams[120];
			_acc1365 += _acc1382 * vertParams[123];
			_acc1366 += _acc1381 * vertParams[126];
			_acc1379 += _acc1380;
			_acc1366 -= _acc1380;
			_acc1365 -= _acc1379;
			_acc1377 += _acc1378;
			_acc1375 += _acc1378;
			_acc1376 += _acc1377;
			_acc1365 += _acc1376 * vertParams[116];
			_acc1366 += _acc1375 * vertParams[119];
			_acc1373 += _acc1374;
			_acc1371 += _acc1374;
			_acc1372 += _acc1373;
			_acc1365 += _acc1372 * vertParams[115];
			_acc1366 += _acc1371 * vertParams[118];
			_acc1369 += _acc1370;
			_acc1367 += _acc1370;
			_acc1368 += _acc1369;
			_acc1365 += _acc1368 * vertParams[114];
			_acc1366 += _acc1367 * vertParams[117];
			_acc1364 += _acc1366 * primary[6];
			_acc5 += _acc1366 * _t1364;
			_acc1364 -= _acc1365;
			_t2681 = 2.000000 * _t1364;
			_t2682 = (float)1.0 / (_t2681);
			_acc1363 += _acc1364 * _t2682;
			_acc4 -= _acc1363;
		}
		else {
		}
	}
	else cif (vertParams[108] == 2.000000) {
		_acc1632 = _acc1327;
		_acc1627 = _acc1328;
		_acc1622 = _acc1329;
		_acc1689 = _acc1330;
		_acc1690 = _acc1331;
		_acc1691 = _acc1332;
		_acc1687 = _acc1334;
		_acc1695 = _acc1335;
		_acc1687 += _acc1695 * _t1694;
		_acc1694 += _acc1695 * _t1687;
		_acc1693 += _acc1694 * 0.318310;
		_t2683 = _t1693 * _t1693;
		_t2684 = -_t2683;
		_acc1692 += _acc1693 * _t2684;
		_acc1667 += _acc1691 * _t1688;
		_acc1688 += _acc1691 * _t1667;
		_acc1666 += _acc1690 * _t1688;
		_acc1688 += _acc1690 * _t1666;
		_acc1665 += _acc1689 * _t1688;
		_acc1688 += _acc1689 * _t1665;
		_t2685 = _t1688 * _t1688;
		_t2686 = -_t2685;
		_acc1687 += _acc1688 * _t2686;
		_t2687 = (float)1.0 / (_t1671);
		_acc1686 += _acc1687 * _t2687;
		_t2688 = -_t1686;
		_t2689 = _t2687 * _t2687;
		_t2690 = _t2688 * _t2689;
		_acc1671 += _acc1687 * _t2690;
		_acc1685 += _acc1686 * vertParams[161];
		_acc1684 += _acc1685;
		_acc1678 += _acc1685;
		_acc1683 += _acc1684 * vertParams[159];
		_acc1682 += _acc1683;
		_acc1679 += _acc1683;
		_acc1681 += _acc1682;
		_acc1680 += _acc1682;
		_acc1639 += _acc1681 * 0.212671;
		_acc1644 += _acc1680 * 0.715160;
		_acc1649 += _acc1679 * 0.072169;
		_acc1677 += _acc1678 * vertParams[160];
		_acc1676 += _acc1677;
		_acc1673 += _acc1677;
		_acc1675 += _acc1676;
		_acc1674 += _acc1676;
		_acc1654 += _acc1675 * 0.212671;
		_acc1659 += _acc1674 * 0.715160;
		_acc1664 += _acc1673 * 0.072169;
		cif (_t1668 >= 0.000000) {
			_acc1668 = _acc1671;
		}
		else {
		}
		cif (_t1613 >= 0.000000) {
			_acc1613 = _acc1668;
		}
		else {
			_acc1670 = _acc1668;
			_acc1613 -= _acc1670;
		}
		_acc1649 += _acc1667;
		_acc1664 += _acc1667;
		_acc1644 += _acc1666;
		_acc1659 += _acc1666;
		_acc1639 += _acc1665;
		_acc1654 += _acc1665;
		_acc1663 += _acc1664;
		_acc1661 += _acc1664;
		_acc1662 += _acc1663 * _t1587;
		_acc1587 += _acc1663 * _t1662;
		_acc1633 += _acc1662 * vertParams[155];
		_acc1660 += _acc1661 * _t1587;
		_acc1587 += _acc1661 * _t1660;
		_acc1596 += _acc1660 * vertParams[158];
		_acc1658 += _acc1659;
		_acc1656 += _acc1659;
		_acc1657 += _acc1658 * _t1587;
		_acc1587 += _acc1658 * _t1657;
		_acc1633 += _acc1657 * vertParams[154];
		_acc1655 += _acc1656 * _t1587;
		_acc1587 += _acc1656 * _t1655;
		_acc1596 += _acc1655 * vertParams[157];
		_acc1653 += _acc1654;
		_acc1651 += _acc1654;
		_acc1652 += _acc1653 * _t1587;
		_acc1587 += _acc1653 * _t1652;
		_acc1633 += _acc1652 * vertParams[153];
		_acc1650 += _acc1651 * _t1587;
		_acc1587 += _acc1651 * _t1650;
		_acc1596 += _acc1650 * vertParams[156];
		_acc1648 += _acc1649;
		_acc1646 += _acc1649;
		_acc1647 += _acc1648 * _t1634;
		_acc1634 += _acc1648 * _t1647;
		_acc1633 += _acc1647 * vertParams[149];
		_acc1645 += _acc1646 * _t1634;
		_acc1634 += _acc1646 * _t1645;
		_acc1596 += _acc1645 * vertParams[152];
		_acc1643 += _acc1644;
		_acc1641 += _acc1644;
		_acc1642 += _acc1643 * _t1634;
		_acc1634 += _acc1643 * _t1642;
		_acc1633 += _acc1642 * vertParams[148];
		_acc1640 += _acc1641 * _t1634;
		_acc1634 += _acc1641 * _t1640;
		_acc1596 += _acc1640 * vertParams[151];
		_acc1638 += _acc1639;
		_acc1636 += _acc1639;
		_acc1637 += _acc1638 * _t1634;
		_acc1634 += _acc1638 * _t1637;
		_acc1633 += _acc1637 * vertParams[147];
		_acc1635 += _acc1636 * _t1634;
		_acc1634 += _acc1636 * _t1635;
		_acc1596 += _acc1635 * vertParams[150];
		_acc1587 -= _acc1634;
		_acc1596 -= _acc1633;
		_acc1631 += _acc1632;
		_acc1628 += _acc1632;
		_acc1630 += _acc1631;
		_acc1629 += _acc1631;
		_acc1422 += _acc1630 * _t1617;
		_acc1617 += _acc1630 * _t1422;
		_acc1426 += _acc1629 * _t1614;
		_acc1614 += _acc1629 * _t1426;
		_acc1430 += _acc1628 * _t1616;
		_acc1616 += _acc1628 * _t1430;
		_acc1626 += _acc1627;
		_acc1623 += _acc1627;
		_acc1625 += _acc1626;
		_acc1624 += _acc1626;
		_acc1423 += _acc1625 * _t1617;
		_acc1617 += _acc1625 * _t1423;
		_acc1427 += _acc1624 * _t1614;
		_acc1614 += _acc1624 * _t1427;
		_acc1431 += _acc1623 * _t1616;
		_acc1616 += _acc1623 * _t1431;
		_acc1621 += _acc1622;
		_acc1618 += _acc1622;
		_acc1620 += _acc1621;
		_acc1619 += _acc1621;
		_acc1424 += _acc1620 * _t1617;
		_acc1617 += _acc1620 * _t1424;
		_acc1428 += _acc1619 * _t1614;
		_acc1614 += _acc1619 * _t1428;
		_acc1432 += _acc1618 * _t1616;
		_acc1616 += _acc1618 * _t1432;
		_acc1611 += _acc1617 * _t1613;
		_acc1613 += _acc1617 * _t1611;
		_acc1615 += _acc1616 * _t1613;
		_acc1613 += _acc1616 * _t1615;
		_acc1612 -= _acc1615;
		_t2691 = sin(_t1610);
		_t2692 = -_t2691;
		_acc1610 += _acc1614 * _t2692;
		_t2693 = cos(_t1610);
		_acc1610 += _acc1613 * _t2693;
		_t2694 = sin(_t1608);
		_t2695 = -_t2694;
		_acc1608 += _acc1612 * _t2695;
		_t2696 = cos(_t1608);
		_acc1608 += _acc1611 * _t2696;
		_acc1609 += _acc1610 * vertParams[146];
		_acc1606 += _acc1609;
		_acc1607 += _acc1608 * vertParams[145];
		_acc1605 += _acc1607;
		_acc1587 += _acc1606;
		_acc1596 += _acc1605;
		cif (_t1583 < 0.500000) {
			_acc1600 = _acc1596;
			_acc1599 -= _acc1600;
			_t2697 = 2.000000 * _t1599;
			_t2698 = (float)1.0 / (_t2697);
			_acc1598 += _acc1599 * _t2698;
			_acc1583 += _acc1598 * 2.000000;
		}
		else {
			_acc1604 = _acc1596;
			_acc1603 += _acc1604;
			_t2699 = 2.000000 * _t1603;
			_t2700 = (float)1.0 / (_t2699);
			_acc1602 += _acc1603 * _t2700;
			_acc1601 += _acc1602 * 2.000000;
			_acc1583 += _acc1601;
		}
		cif (_t1586 < 0.500000) {
			_acc1591 = _acc1587;
			_acc1590 -= _acc1591;
			_t2701 = 2.000000 * _t1590;
			_t2702 = (float)1.0 / (_t2701);
			_acc1589 += _acc1590 * _t2702;
			_acc1586 += _acc1589 * 2.000000;
		}
		else {
			_acc1595 = _acc1587;
			_acc1594 += _acc1595;
			_t2703 = 2.000000 * _t1594;
			_t2704 = (float)1.0 / (_t2703);
			_acc1593 += _acc1594 * _t2704;
			_acc1592 += _acc1593 * 2.000000;
			_acc1586 += _acc1592;
		}
		_t2705 = (float)1.0 / (_t1584);
		_acc1585 += _acc1586 * _t2705;
		_t2706 = -_t1585;
		_t2707 = _t2705 * _t2705;
		_t2708 = _t2706 * _t2707;
		_acc1584 += _acc1586 * _t2708;
		_acc5 += _acc1585;
		_t2709 = (float)1.0 / (_t1581);
		_acc1582 += _acc1583 * _t2709;
		_t2710 = -_t1582;
		_t2711 = _t2709 * _t2709;
		_t2712 = _t2710 * _t2711;
		_acc1581 += _acc1583 * _t2712;
		_acc4 += _acc1582;
		cif (vertParams[109] == 0.000000) {
			_acc1450 = _acc1422;
			_acc1452 = _acc1423;
			_acc1454 = _acc1424;
			_acc1456 = _acc1426;
			_acc1459 = _acc1427;
			_acc1461 = _acc1428;
			_acc1463 = _acc1430;
			_acc1465 = _acc1431;
			_acc1468 = _acc1432;
			_acc1467 -= _acc1468;
			_acc1466 += _acc1467 * 2.000000;
			_acc1439 += _acc1466;
			_acc1440 += _acc1466;
			_acc1464 += _acc1465 * 2.000000;
			_acc1444 += _acc1464;
			_acc1445 -= _acc1464;
			_acc1462 += _acc1463 * 2.000000;
			_acc1443 += _acc1462;
			_acc1446 += _acc1462;
			_acc1460 += _acc1461 * 2.000000;
			_acc1444 += _acc1460;
			_acc1445 += _acc1460;
			_acc1458 -= _acc1459;
			_acc1457 += _acc1458 * 2.000000;
			_acc1439 += _acc1457;
			_acc1441 += _acc1457;
			_acc1455 += _acc1456 * 2.000000;
			_acc1442 += _acc1455;
			_acc1447 -= _acc1455;
			_acc1453 += _acc1454 * 2.000000;
			_acc1443 += _acc1453;
			_acc1446 -= _acc1453;
			_acc1451 += _acc1452 * 2.000000;
			_acc1442 += _acc1451;
			_acc1447 += _acc1451;
			_acc1449 -= _acc1450;
			_acc1448 += _acc1449 * 2.000000;
			_acc1440 += _acc1448;
			_acc1441 += _acc1448;
		}
		else {
			_acc1562 = _acc1422;
			_acc1564 = _acc1423;
			_acc1566 = _acc1424;
			_acc1568 = _acc1426;
			_acc1571 = _acc1427;
			_acc1573 = _acc1428;
			_acc1575 = _acc1430;
			_acc1577 = _acc1431;
			_acc1580 = _acc1432;
			_acc1579 -= _acc1580;
			_acc1578 += _acc1579 * 2.000000;
			_acc1551 += _acc1578;
			_acc1552 += _acc1578;
			_acc1576 += _acc1577 * 2.000000;
			_acc1556 += _acc1576;
			_acc1557 -= _acc1576;
			_acc1574 += _acc1575 * 2.000000;
			_acc1555 += _acc1574;
			_acc1558 += _acc1574;
			_acc1572 += _acc1573 * 2.000000;
			_acc1556 += _acc1572;
			_acc1557 += _acc1572;
			_acc1570 -= _acc1571;
			_acc1569 += _acc1570 * 2.000000;
			_acc1551 += _acc1569;
			_acc1553 += _acc1569;
			_acc1567 += _acc1568 * 2.000000;
			_acc1554 += _acc1567;
			_acc1559 -= _acc1567;
			_acc1565 += _acc1566 * 2.000000;
			_acc1555 += _acc1565;
			_acc1558 -= _acc1565;
			_acc1563 += _acc1564 * 2.000000;
			_acc1554 += _acc1563;
			_acc1559 += _acc1563;
			_acc1561 -= _acc1562;
			_acc1560 += _acc1561 * 2.000000;
			_acc1552 += _acc1560;
			_acc1553 += _acc1560;
			_acc1499 += _acc1559 * _t1500;
			_acc1500 += _acc1559 * _t1499;
			_acc1498 += _acc1558 * _t1500;
			_acc1500 += _acc1558 * _t1498;
			_acc1497 += _acc1557 * _t1500;
			_acc1500 += _acc1557 * _t1497;
			_acc1498 += _acc1556 * _t1499;
			_acc1499 += _acc1556 * _t1498;
			_acc1497 += _acc1555 * _t1499;
			_acc1499 += _acc1555 * _t1497;
			_acc1497 += _acc1554 * _t1498;
			_acc1498 += _acc1554 * _t1497;
			_acc1499 += _acc1553 * _t1499;
			_acc1499 += _acc1553 * _t1499;
			_acc1498 += _acc1552 * _t1498;
			_acc1498 += _acc1552 * _t1498;
			_acc1497 += _acc1551 * _t1497;
			_acc1497 += _acc1551 * _t1497;
			cif (_t1490 > 0.999500) {
				_acc1517 = _acc1497;
				_acc1518 = _acc1498;
				_acc1519 = _acc1499;
				_acc1520 = _acc1500;
				_acc1514 += _acc1520 * _t1516;
				_acc1516 += _acc1520 * _t1514;
				_acc1511 += _acc1519 * _t1516;
				_acc1516 += _acc1519 * _t1511;
				_acc1508 += _acc1518 * _t1516;
				_acc1516 += _acc1518 * _t1508;
				_acc1505 += _acc1517 * _t1516;
				_acc1516 += _acc1517 * _t1505;
				_t2713 = _t1516 * _t1516;
				_t2714 = -_t2713;
				_acc1515 += _acc1516 * _t2714;
				_t2715 = (float)1.0 / (_t1515);
				_t2716 = _t1505 * _t2715;
				_acc1505 += _acc1515 * _t2716;
				_t2717 = _t1508 * _t2715;
				_acc1508 += _acc1515 * _t2717;
				_t2718 = _t1511 * _t2715;
				_acc1511 += _acc1515 * _t2718;
				_t2719 = _t1514 * _t2715;
				_acc1514 += _acc1515 * _t2719;
				_acc1513 += _acc1514;
				_acc1512 += _acc1514;
				_acc1502 += _acc1513 * vertParams[119];
				_acc1489 += _acc1512 * primary[0];
				_acc1510 += _acc1511;
				_acc1509 += _acc1511;
				_acc1502 += _acc1510 * vertParams[118];
				_acc1488 += _acc1509 * primary[0];
				_acc1507 += _acc1508;
				_acc1506 += _acc1508;
				_acc1502 += _acc1507 * vertParams[117];
				_acc1487 += _acc1506 * primary[0];
				_acc1504 += _acc1505;
				_acc1503 += _acc1505;
				_acc1502 += _acc1504 * vertParams[116];
				_acc1486 += _acc1503 * primary[0];
			}
			else {
				_acc1541 = _acc1497;
				_acc1544 = _acc1498;
				_acc1547 = _acc1499;
				_acc1550 = _acc1500;
				_acc1549 += _acc1550;
				_acc1548 += _acc1550;
				_acc1538 += _acc1549 * vertParams[119];
				_acc1536 += _acc1548 * _t1537;
				_acc1537 += _acc1548 * _t1536;
				_acc1546 += _acc1547;
				_acc1545 += _acc1547;
				_acc1538 += _acc1546 * vertParams[118];
				_acc1535 += _acc1545 * _t1537;
				_acc1537 += _acc1545 * _t1535;
				_acc1543 += _acc1544;
				_acc1542 += _acc1544;
				_acc1538 += _acc1543 * vertParams[117];
				_acc1534 += _acc1542 * _t1537;
				_acc1537 += _acc1542 * _t1534;
				_acc1540 += _acc1541;
				_acc1539 += _acc1541;
				_acc1538 += _acc1540 * vertParams[116];
				_acc1533 += _acc1539 * _t1537;
				_acc1537 += _acc1539 * _t1533;
				_t2720 = sin(_t1522);
				_t2721 = -_t2720;
				_acc1522 += _acc1538 * _t2721;
				_t2722 = cos(_t1522);
				_acc1522 += _acc1537 * _t2722;
				_acc1530 += _acc1536 * _t1532;
				_acc1532 += _acc1536 * _t1530;
				_acc1528 += _acc1535 * _t1532;
				_acc1532 += _acc1535 * _t1528;
				_acc1526 += _acc1534 * _t1532;
				_acc1532 += _acc1534 * _t1526;
				_acc1524 += _acc1533 * _t1532;
				_acc1532 += _acc1533 * _t1524;
				_t2723 = _t1532 * _t1532;
				_t2724 = -_t2723;
				_acc1531 += _acc1532 * _t2724;
				_t2725 = (float)1.0 / (_t1531);
				_t2726 = _t1524 * _t2725;
				_acc1524 += _acc1531 * _t2726;
				_t2727 = _t1526 * _t2725;
				_acc1526 += _acc1531 * _t2727;
				_t2728 = _t1528 * _t2725;
				_acc1528 += _acc1531 * _t2728;
				_t2729 = _t1530 * _t2725;
				_acc1530 += _acc1531 * _t2729;
				_acc1489 += _acc1530;
				_acc1529 -= _acc1530;
				_acc1490 += _acc1529 * vertParams[119];
				_acc1488 += _acc1528;
				_acc1527 -= _acc1528;
				_acc1490 += _acc1527 * vertParams[118];
				_acc1487 += _acc1526;
				_acc1525 -= _acc1526;
				_acc1490 += _acc1525 * vertParams[117];
				_acc1486 += _acc1524;
				_acc1523 -= _acc1524;
				_acc1490 += _acc1523 * vertParams[116];
				_acc1521 += _acc1522 * primary[0];
				_t2730 = _t1490 * _t1490;
				_t2731 = 1.000000-_t2730;
				_t2732 = sqrt(_t2731);
				_t2733 = (float)1.0 / (_t2732);
				_t2734 = -_t2733;
				_acc1490 += _acc1521 * _t2734;
			}
			cif (_t1485 < 0.000000) {
				_acc1492 = _acc1486;
				_acc1493 = _acc1487;
				_acc1494 = _acc1488;
				_acc1495 = _acc1489;
				_acc1496 = _acc1490;
				_acc1485 -= _acc1496;
			}
			else {
				_acc1485 = _acc1490;
			}
			_acc1484 += _acc1485;
			_acc1479 += _acc1485;
			_acc1483 += _acc1484;
			_acc1480 += _acc1484;
			_acc1482 += _acc1483;
			_acc1481 += _acc1483;
		}
	}
	else {
	}
	_acc1200 += _acc1326 * _t1324;
	_acc1324 += _acc1326 * _t1200;
	_acc1318 += _acc1325 * _t1324;
	_acc1324 += _acc1325 * _t1318;
	_t2735 = _t1324 * _t1324;
	_t2736 = -_t2735;
	_acc1323 += _acc1324 * _t2736;
	_t2737 = 2.000000 * _t1320;
	_acc1320 += _acc1323 * _t2737;
	cif (_t1319 >= 0.000000) {
		_acc1319 = _acc1320;
	}
	else {
		_acc1322 = _acc1320;
		_acc1319 -= _acc1322;
	}
	_acc272 += _acc1319 * _t1212;
	_acc273 += _acc1319 * _t1213;
	_acc274 += _acc1319 * _t1214;
	_acc1212 += _acc1319 * _t272;
	_acc1213 += _acc1319 * _t273;
	_acc1214 += _acc1319 * _t274;
	_acc1202 += _acc1318 * _t1317;
	_acc1317 += _acc1318 * _t1202;
	_t2738 = 2.000000 * _t1316;
	_acc1316 += _acc1317 * _t2738;
	_acc1315 += _acc1316;
	_acc1310 += _acc1316;
	_acc1314 += _acc1315;
	_acc1312 += _acc1315;
	_t2739 = 2.000000 * _t1313;
	_acc1313 += _acc1314 * _t2739;
	_acc152 += _acc1313;
	_acc1206 -= _acc1313;
	_t2740 = 2.000000 * _t1311;
	_acc1311 += _acc1312 * _t2740;
	_acc153 += _acc1311;
	_acc1207 -= _acc1311;
	_t2741 = 2.000000 * _t1309;
	_acc1309 += _acc1310 * _t2741;
	_acc154 += _acc1309;
	_acc1208 -= _acc1309;
	_acc274 -= _acc1308;
	_acc273 -= _acc1307;
	_acc272 -= _acc1306;
	cif (vertParams[62] == 0.000000) {
		_acc1264 = _acc1206;
		_acc1266 = _acc1207;
		_acc1268 = _acc1208;
		_acc1286 = _acc1212;
		_acc1287 = _acc1213;
		_acc1288 = _acc1214;
		_acc1283 += _acc1288 * _t1285;
		_acc1285 += _acc1288 * _t1283;
		_acc1278 += _acc1287 * _t1285;
		_acc1285 += _acc1287 * _t1278;
		_acc1273 += _acc1286 * _t1285;
		_acc1285 += _acc1286 * _t1273;
		_t2742 = _t1285 * _t1285;
		_t2743 = -_t2742;
		_acc1284 += _acc1285 * _t2743;
		_t2744 = (float)1.0 / (_t1284);
		_t2745 = _t1273 * _t2744;
		_acc1273 += _acc1284 * _t2745;
		_t2746 = _t1278 * _t2744;
		_acc1278 += _acc1284 * _t2746;
		_t2747 = _t1283 * _t2744;
		_acc1283 += _acc1284 * _t2747;
		_acc1282 += _acc1283;
		_acc1279 += _acc1283;
		_acc1281 += _acc1282;
		_acc1280 += _acc1282;
		_acc1262 += _acc1281 * vertParams[75];
		_acc1247 += _acc1280 * vertParams[78];
		_acc1258 += _acc1279 * vertParams[81];
		_acc1277 += _acc1278;
		_acc1274 += _acc1278;
		_acc1276 += _acc1277;
		_acc1275 += _acc1277;
		_acc1262 += _acc1276 * vertParams[74];
		_acc1247 += _acc1275 * vertParams[77];
		_acc1258 += _acc1274 * vertParams[80];
		_acc1272 += _acc1273;
		_acc1269 += _acc1273;
		_acc1271 += _acc1272;
		_acc1270 += _acc1272;
		_acc1262 += _acc1271 * vertParams[73];
		_acc1247 += _acc1270 * vertParams[76];
		_acc1258 += _acc1269 * vertParams[79];
		_acc154 += _acc1268;
		_acc1267 += _acc1268;
		_acc1260 += _acc1267 * _t274;
		_acc274 += _acc1267 * _t1260;
		_acc153 += _acc1266;
		_acc1265 += _acc1266;
		_acc1260 += _acc1265 * _t273;
		_acc273 += _acc1265 * _t1260;
		_acc152 += _acc1264;
		_acc1263 += _acc1264;
		_acc1260 += _acc1263 * _t272;
		_acc272 += _acc1263 * _t1260;
		_acc1261 += _acc1262;
		_acc1258 -= _acc1262;
		_acc1247 -= _acc1261;
		_acc1259 += _acc1260 * _t1242;
		_acc1242 += _acc1260 * _t1259;
		_acc1256 += _acc1259 * vertParams[70];
		_acc1253 += _acc1259 * vertParams[71];
		_acc1250 += _acc1259 * vertParams[72];
		_acc1257 += _acc1258 * _t1242;
		_acc1242 += _acc1258 * _t1257;
		_acc272 += _acc1257 * _t1256;
		_acc273 += _acc1257 * _t1253;
		_acc274 += _acc1257 * _t1250;
		_acc1256 += _acc1257 * _t272;
		_acc1253 += _acc1257 * _t273;
		_acc1250 += _acc1257 * _t274;
		_acc1255 += _acc1256;
		_acc1254 -= _acc1256;
		_acc1244 += _acc1255 * vertParams[69];
		_acc1245 += _acc1254 * vertParams[68];
		_acc1252 += _acc1253;
		_acc1251 -= _acc1253;
		_acc1245 += _acc1252 * vertParams[67];
		_acc1243 += _acc1251 * vertParams[69];
		_acc1249 += _acc1250;
		_acc1248 -= _acc1250;
		_acc1243 += _acc1249 * vertParams[68];
		_acc1244 += _acc1248 * vertParams[67];
		_acc1246 += _acc1247 * _t1242;
		_acc1242 += _acc1247 * _t1246;
		_acc1243 += _acc1246 * _t1240;
		_acc1244 += _acc1246 * _t1237;
		_acc1245 += _acc1246 * _t1234;
		_acc1240 += _acc1246 * _t1243;
		_acc1237 += _acc1246 * _t1244;
		_acc1234 += _acc1246 * _t1245;
		_acc154 += _acc1245;
		_acc153 += _acc1244;
		_acc152 += _acc1243;
		_t2748 = _t1242 * _t1242;
		_t2749 = -_t2748;
		_acc1241 += _acc1242 * _t2749;
		_acc1240 += _acc1241 * vertParams[67];
		_acc1237 += _acc1241 * vertParams[68];
		_acc1234 += _acc1241 * vertParams[69];
		_acc1239 += _acc1240;
		_acc1238 -= _acc1240;
		_acc273 += _acc1239 * vertParams[72];
		_acc274 += _acc1238 * vertParams[71];
		_acc1236 += _acc1237;
		_acc1235 -= _acc1237;
		_acc274 += _acc1236 * vertParams[70];
		_acc272 += _acc1235 * vertParams[72];
		_acc1233 += _acc1234;
		_acc1232 -= _acc1234;
		_acc272 += _acc1233 * vertParams[71];
		_acc273 += _acc1232 * vertParams[70];
	}
	else {
	}
	_acc1196 += _acc1205 * vertParams[61];
	_acc1195 += _acc1204 * vertParams[61];
	_acc1194 += _acc1203 * vertParams[61];
	_t2750 = 2.000000 * _t1201;
	_acc1201 += _acc1202 * _t2750;
	_t2751 = _t1201 * _t1201;
	_t2752 = -_t2751;
	_acc279 += _acc1201 * _t2752;
	_acc1199 += _acc1200 * _t271;
	_acc271 += _acc1200 * _t1199;
	_t2753 = 2.000000 * _t1198;
	_acc1198 += _acc1199 * _t2753;
	_t2754 = (float)1.0 / (_t279);
	_acc278 += _acc1198 * _t2754;
	_t2755 = -_t278;
	_t2756 = _t2754 * _t2754;
	_t2757 = _t2755 * _t2756;
	_acc279 += _acc1198 * _t2757;
	_acc277 += _acc1196 * _t281;
	_acc281 += _acc1196 * _t277;
	_acc276 += _acc1195 * _t281;
	_acc281 += _acc1195 * _t276;
	_acc275 += _acc1194 * _t281;
	_acc281 += _acc1194 * _t275;
	cif (vertParams[50] == 0.000000) {
		_acc283 = _acc272;
		_acc284 = _acc273;
		_acc285 = _acc274;
		_acc286 = _acc275;
		_acc287 = _acc276;
		_acc288 = _acc277;
		_acc289 = _acc278;
		_acc290 = _acc279;
		cif (vertParams[51] == 1.000000) {
			_acc313 = _acc283;
			_acc314 = _acc284;
			_acc315 = _acc285;
			_acc458 = _acc286;
			_acc459 = _acc287;
			_acc460 = _acc288;
			_acc414 = _acc289;
			_acc452 = _acc290;
			_acc456 += _acc460 * _t457;
			_acc457 += _acc460 * _t456;
			_acc455 += _acc459 * _t457;
			_acc457 += _acc459 * _t455;
			_acc454 += _acc458 * _t457;
			_acc457 += _acc458 * _t454;
			_t2758 = _t457 * _t457;
			_t2759 = -_t2758;
			_acc452 += _acc457 * _t2759;
			_acc451 += _acc456 * _t414;
			_acc414 += _acc456 * _t451;
			_acc450 += _acc455 * _t414;
			_acc414 += _acc455 * _t450;
			_acc449 += _acc454 * _t414;
			_acc414 += _acc454 * _t449;
			_acc418 += _acc452;
			_acc439 += _acc452;
			_acc417 += _acc451;
			_acc438 += _acc451;
			_acc416 += _acc450;
			_acc437 += _acc450;
			_acc415 += _acc449;
			_acc436 += _acc449;
			cif (vertParams[59] < 1.000000) {
				_acc442 = _acc436;
				_acc443 = _acc437;
				_acc444 = _acc438;
				_acc447 = _acc439;
				_acc446 += _acc447 * _t414;
				_acc414 += _acc447 * _t446;
				_acc445 += _acc446 * 0.318310;
			}
			else {
			}
			cif (vertParams[59] > 0.000000) {
				_acc423 = _acc415;
				_acc424 = _acc416;
				_acc425 = _acc417;
				_acc426 = _acc418;
				cif (_t422 > 0.000000) {
					_acc431 = _acc423;
					_acc432 = _acc424;
					_acc433 = _acc425;
					_acc435 = _acc426;
					_acc434 += _acc435 * _t422;
					_acc422 += _acc435 * _t434;
					_acc428 += _acc434 * vertParams[59];
					_acc430 += _acc433 * vertParams[57];
					_acc430 += _acc432 * vertParams[56];
					_acc430 += _acc431 * vertParams[55];
					_acc429 += _acc430 * _t422;
					_acc422 += _acc430 * _t429;
				}
				else {
				}
				_acc421 += _acc422 * 0.159155;
				_t2760 = vertParams[58]-1.000000;
				_t2761 = pow(_t420,_t2760);
				_t2762 = vertParams[58] * _t2761;
				_acc420 += _acc421 * _t2762;
				_acc308 += _acc420 * _t313;
				_acc310 += _acc420 * _t314;
				_acc312 += _acc420 * _t315;
				_acc313 += _acc420 * _t308;
				_acc314 += _acc420 * _t310;
				_acc315 += _acc420 * _t312;
			}
			else {
			}
			_acc296 += _acc414 * _t313;
			_acc297 += _acc414 * _t314;
			_acc298 += _acc414 * _t315;
			_acc313 += _acc414 * _t296;
			_acc314 += _acc414 * _t297;
			_acc315 += _acc414 * _t298;
			cif (vertParams[49] > vertParams[59]) {
				_acc354 = _acc313;
				_acc359 = _acc314;
				_acc364 = _acc315;
				_acc363 += _acc364;
				_acc360 += _acc364;
				_acc362 += _acc363;
				_acc361 += _acc363;
				_acc329 += _acc362 * _t332;
				_acc332 += _acc362 * _t329;
				_acc327 += _acc361 * _t335;
				_acc335 += _acc361 * _t327;
				_acc325 += _acc360 * _t298;
				_acc298 += _acc360 * _t325;
				_acc358 += _acc359;
				_acc355 += _acc359;
				_acc357 += _acc358;
				_acc356 += _acc358;
				_acc329 += _acc357 * _t331;
				_acc331 += _acc357 * _t329;
				_acc327 += _acc356 * _t334;
				_acc334 += _acc356 * _t327;
				_acc325 += _acc355 * _t297;
				_acc297 += _acc355 * _t325;
				_acc353 += _acc354;
				_acc350 += _acc354;
				_acc352 += _acc353;
				_acc351 += _acc353;
				_acc329 += _acc352 * _t330;
				_acc330 += _acc352 * _t329;
				_acc327 += _acc351 * _t333;
				_acc333 += _acc351 * _t327;
				_acc325 += _acc350 * _t296;
				_acc296 += _acc350 * _t325;
				cif (_t298 < -0.999999) {
				}
				else {
					_acc345 = _acc330;
					_acc341 = _acc331;
					_acc342 = _acc332;
					_acc341 = _acc333;
					_acc349 = _acc334;
					_acc346 = _acc335;
					_acc348 -= _acc349;
					_acc347 += _acc348 * _t338;
					_acc338 += _acc348 * _t347;
					_t2763 = 2.000000 * _t297;
					_acc297 += _acc347 * _t2763;
					_acc297 -= _acc346;
					_acc344 -= _acc345;
					_acc343 += _acc344 * _t338;
					_acc338 += _acc344 * _t343;
					_t2764 = 2.000000 * _t296;
					_acc296 += _acc343 * _t2764;
					_acc296 -= _acc342;
					_acc340 += _acc341 * _t338;
					_acc338 += _acc341 * _t340;
					_acc339 += _acc340 * _t297;
					_acc297 += _acc340 * _t339;
					_acc296 -= _acc339;
					_t2765 = _t338 * _t338;
					_t2766 = -_t2765;
					_acc337 += _acc338 * _t2766;
					_acc298 += _acc337;
				}
				_acc328 += _acc329 * _t322;
				_acc322 += _acc329 * _t328;
				_t2767 = sin(_t318);
				_t2768 = -_t2767;
				_acc318 += _acc328 * _t2768;
				_acc326 += _acc327 * _t322;
				_acc322 += _acc327 * _t326;
				_t2769 = cos(_t318);
				_acc318 += _acc326 * _t2769;
				_t2770 = 2.000000 * _t325;
				_t2771 = (float)1.0 / (_t2770);
				_acc323 += _acc325 * _t2771;
				cif (primary[4] >= 0.000001) {
					_acc3 = _acc323;
				}
				else {
				}
				_t2772 = 2.000000 * _t322;
				_t2773 = (float)1.0 / (_t2772);
				_acc320 += _acc322 * _t2773;
				cif (_t319 >= 0.000001) {
					_acc319 = _acc320;
				}
				else {
				}
				_acc3 -= _acc319;
				_acc2 += _acc318 * 6.283185;
			}
			else {
				_acc403 = _acc313;
				_acc408 = _acc314;
				_acc413 = _acc315;
				_acc412 += _acc413;
				_acc409 += _acc413;
				_acc411 += _acc412;
				_acc410 += _acc412;
				_acc378 += _acc411 * _t381;
				_acc381 += _acc411 * _t378;
				_acc376 += _acc410 * _t384;
				_acc384 += _acc410 * _t376;
				_acc368 += _acc409 * _t312;
				_acc312 += _acc409 * _t368;
				_acc407 += _acc408;
				_acc404 += _acc408;
				_acc406 += _acc407;
				_acc405 += _acc407;
				_acc378 += _acc406 * _t380;
				_acc380 += _acc406 * _t378;
				_acc376 += _acc405 * _t383;
				_acc383 += _acc405 * _t376;
				_acc368 += _acc404 * _t310;
				_acc310 += _acc404 * _t368;
				_acc402 += _acc403;
				_acc399 += _acc403;
				_acc401 += _acc402;
				_acc400 += _acc402;
				_acc378 += _acc401 * _t379;
				_acc379 += _acc401 * _t378;
				_acc376 += _acc400 * _t382;
				_acc382 += _acc400 * _t376;
				_acc368 += _acc399 * _t308;
				_acc308 += _acc399 * _t368;
				cif (_t312 < -0.999999) {
				}
				else {
					_acc394 = _acc379;
					_acc390 = _acc380;
					_acc391 = _acc381;
					_acc390 = _acc382;
					_acc398 = _acc383;
					_acc395 = _acc384;
					_acc397 -= _acc398;
					_acc396 += _acc397 * _t387;
					_acc387 += _acc397 * _t396;
					_t2774 = 2.000000 * _t310;
					_acc310 += _acc396 * _t2774;
					_acc310 -= _acc395;
					_acc393 -= _acc394;
					_acc392 += _acc393 * _t387;
					_acc387 += _acc393 * _t392;
					_t2775 = 2.000000 * _t308;
					_acc308 += _acc392 * _t2775;
					_acc308 -= _acc391;
					_acc389 += _acc390 * _t387;
					_acc387 += _acc390 * _t389;
					_acc388 += _acc389 * _t310;
					_acc310 += _acc389 * _t388;
					_acc308 -= _acc388;
					_t2776 = _t387 * _t387;
					_t2777 = -_t2776;
					_acc386 += _acc387 * _t2777;
					_acc312 += _acc386;
				}
				_acc373 += _acc378 * _t377;
				_acc377 += _acc378 * _t373;
				_t2778 = sin(_t374);
				_t2779 = -_t2778;
				_acc374 += _acc377 * _t2779;
				_acc373 += _acc376 * _t375;
				_acc375 += _acc376 * _t373;
				_t2780 = cos(_t374);
				_acc374 += _acc375 * _t2780;
				_acc2 += _acc374 * 6.283185;
				_t2781 = 2.000000 * _t373;
				_t2782 = (float)1.0 / (_t2781);
				_acc371 += _acc373 * _t2782;
				cif (_t370 >= 0.000001) {
					_acc370 = _acc371;
				}
				else {
				}
				_acc369 -= _acc370;
				_t2783 = 2.000000 * _t368;
				_acc368 += _acc369 * _t2783;
				_t2784 = _t367-1.000000;
				_t2785 = pow(primary[4],_t2784);
				_t2786 = _t367 * _t2785;
				_acc3 += _acc368 * _t2786;
				_t2787 = log(_t367);
				_t2788 = _t368 * _t2787;
				_acc367 += _acc368 * _t2788;
				_t2789 = _t367 * _t367;
				_t2790 = -_t2789;
				_acc366 += _acc367 * _t2790;
			}
			_acc311 += _acc312;
			_acc254 -= _acc312;
			_acc306 += _acc311 * _t298;
			_acc298 += _acc311 * _t306;
			_acc309 += _acc310;
			_acc253 -= _acc310;
			_acc306 += _acc309 * _t297;
			_acc297 += _acc309 * _t306;
			_acc307 += _acc308;
			_acc252 -= _acc308;
			_acc306 += _acc307 * _t296;
			_acc296 += _acc307 * _t306;
			_acc305 += _acc306 * 2.000000;
			_acc252 += _acc305 * _t296;
			_acc253 += _acc305 * _t297;
			_acc254 += _acc305 * _t298;
			_acc296 += _acc305 * _t252;
			_acc297 += _acc305 * _t253;
			_acc298 += _acc305 * _t254;
			cif (_t295 > 0.000000) {
				_acc158 = _acc296;
				_acc159 = _acc297;
				_acc160 = _acc298;
			}
			else {
				_acc301 = _acc296;
				_acc302 = _acc297;
				_acc303 = _acc298;
				_acc160 -= _acc303;
				_acc159 -= _acc302;
				_acc158 -= _acc301;
			}
		}
		else cif (vertParams[51] == 2.000000) {
			_acc559 = _acc283;
			_acc560 = _acc284;
			_acc561 = _acc285;
			_acc766 = _acc286;
			_acc767 = _acc287;
			_acc768 = _acc288;
			_acc565 = _acc289;
			_acc566 = _acc290;
			_acc564 += _acc768 * _t763;
			_acc763 += _acc768 * _t564;
			_acc563 += _acc767 * _t763;
			_acc763 += _acc767 * _t563;
			_acc562 += _acc766 * _t763;
			_acc763 += _acc766 * _t562;
			cif (_t762 >= 0.000000) {
				_acc762 = _acc763;
			}
			else {
				_acc765 = _acc763;
				_acc762 -= _acc765;
			}
			_t2791 = (float)1.0 / (_t761);
			_acc760 += _acc762 * _t2791;
			_t2792 = -_t760;
			_t2793 = _t2791 * _t2791;
			_t2794 = _t2792 * _t2793;
			_acc761 += _acc762 * _t2794;
			_acc487 += _acc761 * _t692;
			_acc692 += _acc761 * _t487;
			_acc759 += _acc760 * _t529;
			_acc529 += _acc760 * _t759;
			_acc713 += _acc759 * _t758;
			_acc758 += _acc759 * _t713;
			_acc743 += _acc758 * _t721;
			_acc721 += _acc758 * _t743;
			cif (_t742 <= 0.000000) {
			}
			else {
				_acc747 = _acc743;
				cif (_t746 >= 1.600000) {
				}
				else {
					_acc757 = _acc747;
					_t2795 = (float)1.0 / (_t753);
					_acc756 += _acc757 * _t2795;
					_t2796 = -_t756;
					_t2797 = _t2795 * _t2795;
					_t2798 = _t2796 * _t2797;
					_acc753 += _acc757 * _t2798;
					_acc755 += _acc756;
					_acc754 += _acc756;
					_acc746 += _acc755 * 3.535000;
					_acc749 += _acc754 * 2.181000;
					_acc752 += _acc753;
					_acc750 += _acc753;
					_acc751 += _acc752;
					_acc746 += _acc751 * 2.276000;
					_acc749 += _acc750 * 2.577000;
					_t2799 = 2.000000 * _t746;
					_acc746 += _acc749 * _t2799;
				}
				_t2800 = _t746 * _t746;
				_t2801 = -_t2800;
				_acc745 += _acc746 * _t2801;
				_acc742 += _acc745 * vertParams[60];
			}
			_t2802 = (float)1.0 / (_t692);
			_acc741 += _acc742 * _t2802;
			_t2803 = -_t741;
			_t2804 = _t2802 * _t2802;
			_t2805 = _t2803 * _t2804;
			_acc692 += _acc742 * _t2805;
			_t2806 = 2.000000 * _t741;
			_t2807 = (float)1.0 / (_t2806);
			_acc738 += _acc741 * _t2807;
			cif (_t737 >= 0.000000) {
				_acc737 = _acc738;
			}
			else {
				_acc740 = _acc738;
				_acc737 -= _acc740;
			}
			_acc736 -= _acc737;
			_t2808 = 2.000000 * _t692;
			_acc692 += _acc736 * _t2808;
			cif (_t720 <= 0.000000) {
			}
			else {
				_acc725 = _acc721;
				cif (_t724 >= 1.600000) {
				}
				else {
					_acc735 = _acc725;
					_t2809 = (float)1.0 / (_t731);
					_acc734 += _acc735 * _t2809;
					_t2810 = -_t734;
					_t2811 = _t2809 * _t2809;
					_t2812 = _t2810 * _t2811;
					_acc731 += _acc735 * _t2812;
					_acc733 += _acc734;
					_acc732 += _acc734;
					_acc724 += _acc733 * 3.535000;
					_acc727 += _acc732 * 2.181000;
					_acc730 += _acc731;
					_acc728 += _acc731;
					_acc729 += _acc730;
					_acc724 += _acc729 * 2.276000;
					_acc727 += _acc728 * 2.577000;
					_t2813 = 2.000000 * _t724;
					_acc724 += _acc727 * _t2813;
				}
				_t2814 = _t724 * _t724;
				_t2815 = -_t2814;
				_acc723 += _acc724 * _t2815;
				_acc720 += _acc723 * vertParams[60];
			}
			_t2816 = (float)1.0 / (_t695);
			_acc719 += _acc720 * _t2816;
			_t2817 = -_t719;
			_t2818 = _t2816 * _t2816;
			_t2819 = _t2817 * _t2818;
			_acc695 += _acc720 * _t2819;
			_t2820 = 2.000000 * _t719;
			_t2821 = (float)1.0 / (_t2820);
			_acc716 += _acc719 * _t2821;
			cif (_t715 >= 0.000000) {
				_acc715 = _acc716;
			}
			else {
				_acc718 = _acc716;
				_acc715 -= _acc718;
			}
			_acc714 -= _acc715;
			_t2822 = 2.000000 * _t695;
			_acc695 += _acc714 * _t2822;
			_t2823 = (float)1.0 / (_t710);
			_acc712 += _acc713 * _t2823;
			_t2824 = -_t712;
			_t2825 = _t2823 * _t2823;
			_t2826 = _t2824 * _t2825;
			_acc710 += _acc713 * _t2826;
			_acc711 += _acc712 * _t712;
			_acc706 -= _acc711;
			_acc709 += _acc710 * _t707;
			_acc707 += _acc710 * _t709;
			_acc708 += _acc709 * vertParams[60];
			_t2827 = 2.000000 * _t698;
			_acc698 += _acc707 * _t2827;
			_t2828 = (float)1.0 / (_t698);
			_acc705 += _acc706 * _t2828;
			_t2829 = -_t705;
			_t2830 = _t2828 * _t2828;
			_t2831 = _t2829 * _t2830;
			_acc698 += _acc706 * _t2831;
			_acc704 += _acc705;
			_acc701 += _acc705;
			_t2832 = (float)1.0 / (_t702);
			_acc703 += _acc704 * _t2832;
			_t2833 = -_t703;
			_t2834 = _t2832 * _t2832;
			_t2835 = _t2833 * _t2834;
			_acc702 += _acc704 * _t2835;
			_t2836 = 2.000000 * _t493;
			_acc493 += _acc703 * _t2836;
			_t2837 = (float)1.0 / (_t699);
			_acc700 += _acc701 * _t2837;
			_t2838 = -_t700;
			_t2839 = _t2837 * _t2837;
			_t2840 = _t2838 * _t2839;
			_acc699 += _acc701 * _t2840;
			_t2841 = 2.000000 * _t492;
			_acc492 += _acc700 * _t2841;
			_t2842 = 2.000000 * _t481;
			_acc481 += _acc698 * _t2842;
			cif (_t565 >= 0.000000) {
				_acc565 = _acc695;
			}
			else {
				_acc697 = _acc695;
				_acc565 -= _acc697;
			}
			cif (_t461 >= 0.000000) {
				_acc461 = _acc692;
			}
			else {
				_acc694 = _acc692;
				_acc461 -= _acc694;
			}
			cif (vertParams[49] <= _t538) {
				_acc572 = _acc559;
				_acc574 = _acc560;
				_acc576 = _acc561;
				_acc586 = _acc565;
				_acc581 = _acc566;
				_acc572 += _acc586 * _t158;
				_acc574 += _acc586 * _t159;
				_acc576 += _acc586 * _t160;
				_acc158 += _acc586 * _t572;
				_acc159 += _acc586 * _t574;
				_acc160 += _acc586 * _t576;
				cif (_t580 >= 0.000000) {
					_acc580 = _acc581;
				}
				else {
					_acc583 = _acc581;
					_acc580 -= _acc583;
				}
				_t2843 = (float)1.0 / (_t578);
				_acc579 += _acc580 * _t2843;
				_t2844 = -_t579;
				_t2845 = _t2843 * _t2843;
				_t2846 = _t2844 * _t2845;
				_acc578 += _acc580 * _t2846;
				_acc487 += _acc579 * _t538;
				_acc538 += _acc579 * _t487;
				_acc577 += _acc578 * 4.000000;
				_acc572 += _acc577 * _t518;
				_acc574 += _acc577 * _t523;
				_acc576 += _acc577 * _t528;
				_acc518 += _acc577 * _t572;
				_acc523 += _acc577 * _t574;
				_acc528 += _acc577 * _t576;
				_acc575 += _acc576;
				_acc254 -= _acc576;
				_acc570 += _acc575 * _t528;
				_acc528 += _acc575 * _t570;
				_acc573 += _acc574;
				_acc253 -= _acc574;
				_acc570 += _acc573 * _t523;
				_acc523 += _acc573 * _t570;
				_acc571 += _acc572;
				_acc252 -= _acc572;
				_acc570 += _acc571 * _t518;
				_acc518 += _acc571 * _t570;
				_acc569 += _acc570 * 2.000000;
				_acc252 += _acc569 * _t518;
				_acc253 += _acc569 * _t523;
				_acc254 += _acc569 * _t528;
				_acc518 += _acc569 * _t252;
				_acc523 += _acc569 * _t253;
				_acc528 += _acc569 * _t254;
			}
			else {
				_acc623 = _acc559;
				_acc626 = _acc560;
				_acc629 = _acc561;
				_acc634 = _acc562;
				_acc635 = _acc563;
				_acc636 = _acc564;
				_acc653 = _acc565;
				_acc650 = _acc566;
				_acc623 += _acc653 * _t158;
				_acc626 += _acc653 * _t159;
				_acc629 += _acc653 * _t160;
				_acc158 += _acc653 * _t623;
				_acc159 += _acc653 * _t626;
				_acc160 += _acc653 * _t629;
				cif (_t649 >= 0.000000) {
					_acc649 = _acc650;
				}
				else {
					_acc652 = _acc650;
					_acc649 -= _acc652;
				}
				_acc648 += _acc649 * _t644;
				_acc644 += _acc649 * _t648;
				_acc487 += _acc648 * _t647;
				_acc647 += _acc648 * _t487;
				_acc538 -= _acc647;
				cif (_t643 >= 0.000000) {
					_acc643 = _acc644;
				}
				else {
					_acc646 = _acc644;
					_acc643 -= _acc646;
				}
				_t2847 = (float)1.0 / (_t640);
				_acc642 += _acc643 * _t2847;
				_t2848 = -_t642;
				_t2849 = _t2847 * _t2847;
				_t2850 = _t2848 * _t2849;
				_acc640 += _acc643 * _t2850;
				_acc641 += _acc642 * _t637;
				_acc637 += _acc642 * _t641;
				_t2851 = 2.000000 * _t630;
				_acc630 += _acc641 * _t2851;
				_t2852 = 2.000000 * _t639;
				_acc639 += _acc640 * _t2852;
				_acc529 += _acc639;
				_acc638 += _acc639;
				_acc630 += _acc638 * _t637;
				_acc637 += _acc638 * _t630;
				_acc623 += _acc637 * _t518;
				_acc626 += _acc637 * _t523;
				_acc629 += _acc637 * _t528;
				_acc518 += _acc637 * _t623;
				_acc523 += _acc637 * _t626;
				_acc528 += _acc637 * _t629;
				_acc633 += _acc636 * vertParams[57];
				_acc633 += _acc635 * vertParams[56];
				_acc633 += _acc634 * vertParams[55];
				_t2853 = 2.000000 * _t632;
				_acc632 += _acc633 * _t2853;
				_t2854 = _t632 * _t632;
				_t2855 = -_t2854;
				_acc630 += _acc632 * _t2855;
				cif (_t461 > 0.000000) {
				}
				else {
				}
				_acc628 += _acc629;
				_acc627 -= _acc629;
				_acc528 += _acc628 * _t620;
				_acc620 += _acc628 * _t528;
				_acc254 += _acc627 * _t616;
				_acc616 += _acc627 * _t254;
				_acc625 += _acc626;
				_acc624 -= _acc626;
				_acc523 += _acc625 * _t620;
				_acc620 += _acc625 * _t523;
				_acc253 += _acc624 * _t616;
				_acc616 += _acc624 * _t253;
				_acc622 += _acc623;
				_acc621 -= _acc623;
				_acc518 += _acc622 * _t620;
				_acc620 += _acc622 * _t518;
				_acc252 += _acc621 * _t616;
				_acc616 += _acc621 * _t252;
				_acc619 += _acc620;
				_acc537 += _acc620;
				_acc618 += _acc619 * _t616;
				_acc616 += _acc619 * _t618;
				_acc252 += _acc618 * _t518;
				_acc253 += _acc618 * _t523;
				_acc254 += _acc618 * _t528;
				_acc518 += _acc618 * _t252;
				_acc523 += _acc618 * _t253;
				_acc528 += _acc618 * _t254;
				cif (_t537 < 0.000000) {
				}
				else {
				}
			}
			cif (_t536 <= 0.000000) {
			}
			else {
				_acc553 = _acc537;
				_acc558 = _acc538;
				_acc557 += _acc558 * 0.500000;
				_acc556 += _acc557;
				_acc555 += _acc557;
				_t2856 = 2.000000 * _t548;
				_acc548 += _acc556 * _t2856;
				_t2857 = 2.000000 * _t551;
				_acc551 += _acc555 * _t2857;
				cif (_t529 > 0.000000) {
					_acc552 = _acc553;
				}
				else {
					_acc543 = _acc553;
				}
				_acc543 -= _acc552;
				_t2858 = (float)1.0 / (_t549);
				_acc550 += _acc551 * _t2858;
				_t2859 = -_t550;
				_t2860 = _t2858 * _t2858;
				_t2861 = _t2859 * _t2860;
				_acc549 += _acc551 * _t2861;
				_acc545 += _acc550;
				_acc543 -= _acc550;
				_acc545 += _acc549;
				_acc543 += _acc549;
				_t2862 = (float)1.0 / (_t546);
				_acc547 += _acc548 * _t2862;
				_t2863 = -_t547;
				_t2864 = _t2862 * _t2862;
				_t2865 = _t2863 * _t2864;
				_acc546 += _acc548 * _t2865;
				_acc540 += _acc547;
				_acc544 -= _acc547;
				_acc540 += _acc546;
				_acc544 += _acc546;
				_acc540 += _acc545 * vertParams[58];
				_acc543 += _acc544 * vertParams[58];
				_t2866 = 2.000000 * _t543;
				_t2867 = (float)1.0 / (_t2866);
				_acc536 += _acc543 * _t2867;
				cif (_t529 >= 0.000000) {
					_acc529 = _acc540;
				}
				else {
					_acc542 = _acc540;
					_acc529 -= _acc542;
				}
			}
			_acc535 -= _acc536;
			_acc534 += _acc535 * _t532;
			_acc532 += _acc535 * _t534;
			_acc533 -= _acc534;
			_t2868 = 2.000000 * _t529;
			_acc529 += _acc533 * _t2868;
			_t2869 = 2.000000 * _t530;
			_acc530 += _acc532 * _t2869;
			cif (_t529 > 0.000000) {
			}
			else {
			}
			_acc252 += _acc529 * _t518;
			_acc253 += _acc529 * _t523;
			_acc254 += _acc529 * _t528;
			_acc518 += _acc529 * _t252;
			_acc523 += _acc529 * _t253;
			_acc528 += _acc529 * _t254;
			_acc527 += _acc528;
			_acc524 += _acc528;
			_acc526 += _acc527;
			_acc525 += _acc527;
			_acc493 += _acc526 * _t496;
			_acc496 += _acc526 * _t493;
			_acc492 += _acc525 * _t499;
			_acc499 += _acc525 * _t492;
			_acc481 += _acc524 * _t160;
			_acc160 += _acc524 * _t481;
			_acc522 += _acc523;
			_acc519 += _acc523;
			_acc521 += _acc522;
			_acc520 += _acc522;
			_acc493 += _acc521 * _t495;
			_acc495 += _acc521 * _t493;
			_acc492 += _acc520 * _t498;
			_acc498 += _acc520 * _t492;
			_acc481 += _acc519 * _t159;
			_acc159 += _acc519 * _t481;
			_acc517 += _acc518;
			_acc514 += _acc518;
			_acc516 += _acc517;
			_acc515 += _acc517;
			_acc493 += _acc516 * _t494;
			_acc494 += _acc516 * _t493;
			_acc492 += _acc515 * _t497;
			_acc497 += _acc515 * _t492;
			_acc481 += _acc514 * _t158;
			_acc158 += _acc514 * _t481;
			cif (_t160 < -0.999999) {
			}
			else {
				_acc509 = _acc494;
				_acc505 = _acc495;
				_acc506 = _acc496;
				_acc505 = _acc497;
				_acc513 = _acc498;
				_acc510 = _acc499;
				_acc512 -= _acc513;
				_acc511 += _acc512 * _t502;
				_acc502 += _acc512 * _t511;
				_t2870 = 2.000000 * _t159;
				_acc159 += _acc511 * _t2870;
				_acc159 -= _acc510;
				_acc508 -= _acc509;
				_acc507 += _acc508 * _t502;
				_acc502 += _acc508 * _t507;
				_t2871 = 2.000000 * _t158;
				_acc158 += _acc507 * _t2871;
				_acc158 -= _acc506;
				_acc504 += _acc505 * _t502;
				_acc502 += _acc505 * _t504;
				_acc503 += _acc504 * _t159;
				_acc159 += _acc504 * _t503;
				_acc158 -= _acc503;
				_t2872 = _t502 * _t502;
				_t2873 = -_t2872;
				_acc501 += _acc502 * _t2873;
				_acc160 += _acc501;
			}
			_acc491 += _acc493 * _t471;
			_acc471 += _acc493 * _t491;
			_acc491 += _acc492 * _t470;
			_acc470 += _acc492 * _t491;
			_t2874 = 2.000000 * _t491;
			_t2875 = (float)1.0 / (_t2874);
			_acc489 += _acc491 * _t2875;
			cif (_t488 >= 0.000001) {
				_acc488 = _acc489;
			}
			else {
			}
			_acc482 -= _acc488;
			_t2876 = (float)1.0 / (_t485);
			_acc486 += _acc487 * _t2876;
			_t2877 = -_t486;
			_t2878 = _t2876 * _t2876;
			_t2879 = _t2877 * _t2878;
			_acc485 += _acc487 * _t2879;
			_acc2 -= _acc486;
			_acc484 += _acc485 * _t482;
			_acc482 += _acc485 * _t484;
			_acc483 += _acc484 * _t481;
			_acc481 += _acc484 * _t483;
			_acc472 += _acc483 * 3.141593;
			_t2880 = 2.000000 * _t481;
			_acc481 += _acc482 * _t2880;
			_t2881 = _t481 * _t481;
			_t2882 = -_t2881;
			_acc480 += _acc481 * _t2882;
			_t2883 = 2.000000 * _t480;
			_t2884 = (float)1.0 / (_t2883);
			_acc479 += _acc480 * _t2884;
			_acc478 += _acc479;
			_acc472 += _acc478 * _t477;
			_acc477 += _acc478 * _t472;
			_acc476 -= _acc477;
			_t2885 = (float)1.0 / (_t474);
			_acc474 += _acc476 * _t2885;
			cif (_t473 >= 0.000001) {
				_acc473 = _acc474;
			}
			else {
			}
			_acc2 -= _acc473;
			_t2886 = 2.000000 * _t468;
			_acc468 += _acc472 * _t2886;
			_t2887 = sin(_t469);
			_t2888 = -_t2887;
			_acc469 += _acc471 * _t2888;
			_t2889 = cos(_t469);
			_acc469 += _acc470 * _t2889;
			_acc3 += _acc469 * 6.283185;
			_acc467 += _acc468 * vertParams[60];
			_acc466 -= _acc467;
			_acc465 += _acc466 * 0.200000;
			_t2890 = 2.000000 * _t465;
			_t2891 = (float)1.0 / (_t2890);
			_acc462 += _acc465 * _t2891;
			cif (_t461 >= 0.000000) {
				_acc461 = _acc462;
			}
			else {
				_acc464 = _acc462;
				_acc461 -= _acc464;
			}
			_acc252 += _acc461 * _t158;
			_acc253 += _acc461 * _t159;
			_acc254 += _acc461 * _t160;
			_acc158 += _acc461 * _t252;
			_acc159 += _acc461 * _t253;
			_acc160 += _acc461 * _t254;
		}
		else cif (vertParams[51] == 0.000000) {
			_acc815 = _acc283;
			_acc820 = _acc284;
			_acc825 = _acc285;
			_acc806 = _acc289;
			_acc826 = _acc290;
			_acc806 += _acc826 * 0.318310;
			_acc824 += _acc825;
			_acc821 += _acc825;
			_acc823 += _acc824;
			_acc822 += _acc824;
			_acc810 += _acc823 * _t781;
			_acc781 += _acc823 * _t810;
			_acc808 += _acc822 * _t784;
			_acc784 += _acc822 * _t808;
			_acc806 += _acc821 * _t772;
			_acc772 += _acc821 * _t806;
			_acc819 += _acc820;
			_acc816 += _acc820;
			_acc818 += _acc819;
			_acc817 += _acc819;
			_acc810 += _acc818 * _t780;
			_acc780 += _acc818 * _t810;
			_acc808 += _acc817 * _t783;
			_acc783 += _acc817 * _t808;
			_acc806 += _acc816 * _t771;
			_acc771 += _acc816 * _t806;
			_acc814 += _acc815;
			_acc811 += _acc815;
			_acc813 += _acc814;
			_acc812 += _acc814;
			_acc810 += _acc813 * _t779;
			_acc779 += _acc813 * _t810;
			_acc808 += _acc812 * _t782;
			_acc782 += _acc812 * _t808;
			_acc806 += _acc811 * _t770;
			_acc770 += _acc811 * _t806;
			_acc809 += _acc810 * _t803;
			_acc803 += _acc810 * _t809;
			_t2892 = sin(_t799);
			_t2893 = -_t2892;
			_acc799 += _acc809 * _t2893;
			_acc807 += _acc808 * _t803;
			_acc803 += _acc808 * _t807;
			_t2894 = cos(_t799);
			_acc799 += _acc807 * _t2894;
			_t2895 = 2.000000 * _t806;
			_t2896 = (float)1.0 / (_t2895);
			_acc804 += _acc806 * _t2896;
			cif (primary[4] >= 0.000001) {
				_acc3 = _acc804;
			}
			else {
			}
			_t2897 = 2.000000 * _t803;
			_t2898 = (float)1.0 / (_t2897);
			_acc801 += _acc803 * _t2898;
			cif (_t800 >= 0.000001) {
				_acc800 = _acc801;
			}
			else {
			}
			_acc3 -= _acc800;
			_acc2 += _acc799 * 6.283185;
			cif (_t772 < -0.999999) {
			}
			else {
				_acc794 = _acc779;
				_acc790 = _acc780;
				_acc791 = _acc781;
				_acc790 = _acc782;
				_acc798 = _acc783;
				_acc795 = _acc784;
				_acc797 -= _acc798;
				_acc796 += _acc797 * _t787;
				_acc787 += _acc797 * _t796;
				_t2899 = 2.000000 * _t771;
				_acc771 += _acc796 * _t2899;
				_acc771 -= _acc795;
				_acc793 -= _acc794;
				_acc792 += _acc793 * _t787;
				_acc787 += _acc793 * _t792;
				_t2900 = 2.000000 * _t770;
				_acc770 += _acc792 * _t2900;
				_acc770 -= _acc791;
				_acc789 += _acc790 * _t787;
				_acc787 += _acc790 * _t789;
				_acc788 += _acc789 * _t771;
				_acc771 += _acc789 * _t788;
				_acc770 -= _acc788;
				_t2901 = _t787 * _t787;
				_t2902 = -_t2901;
				_acc786 += _acc787 * _t2902;
				_acc772 += _acc786;
			}
			cif (_t769 > 0.000000) {
				_acc158 = _acc770;
				_acc159 = _acc771;
				_acc160 = _acc772;
			}
			else {
				_acc775 = _acc770;
				_acc776 = _acc771;
				_acc777 = _acc772;
				_acc160 -= _acc777;
				_acc159 -= _acc776;
				_acc158 -= _acc775;
			}
		}
		else {
		}
	}
	else {
		_acc835 = _acc272;
		_acc833 = _acc273;
		_acc831 = _acc274;
		_acc841 = _acc275;
		_acc842 = _acc276;
		_acc843 = _acc277;
		_acc844 = _acc278;
		_acc845 = _acc279;
		_acc840 = _acc281;
		cif (vertParams[51] == 1.000000) {
			_acc908 = _acc841;
			_acc909 = _acc842;
			_acc910 = _acc843;
			_acc860 = _acc844;
			_acc906 = _acc845;
			_acc905 += _acc910 * _t860;
			_acc860 += _acc910 * _t905;
			_acc904 += _acc909 * _t860;
			_acc860 += _acc909 * _t904;
			_acc903 += _acc908 * _t860;
			_acc860 += _acc908 * _t903;
			_acc864 += _acc906;
			_acc893 += _acc906;
			_acc863 += _acc905;
			_acc892 += _acc905;
			_acc862 += _acc904;
			_acc891 += _acc904;
			_acc861 += _acc903;
			_acc890 += _acc903;
			cif (vertParams[59] < 1.000000) {
				_acc896 = _acc890;
				_acc897 = _acc891;
				_acc898 = _acc892;
				_acc901 = _acc893;
				_acc900 += _acc901 * _t860;
				_acc860 += _acc901 * _t900;
				_acc899 += _acc900 * 0.318310;
			}
			else {
			}
			cif (vertParams[59] > 0.000000) {
				_acc877 = _acc861;
				_acc878 = _acc862;
				_acc879 = _acc863;
				_acc880 = _acc864;
				cif (_t876 > 0.000000) {
					_acc885 = _acc877;
					_acc886 = _acc878;
					_acc887 = _acc879;
					_acc889 = _acc880;
					_acc888 += _acc889 * _t876;
					_acc876 += _acc889 * _t888;
					_acc882 += _acc888 * vertParams[59];
					_acc884 += _acc887 * vertParams[57];
					_acc884 += _acc886 * vertParams[56];
					_acc884 += _acc885 * vertParams[55];
					_acc883 += _acc884 * _t876;
					_acc876 += _acc884 * _t883;
				}
				else {
				}
				_acc875 += _acc876 * 0.159155;
				_t2903 = vertParams[58]-1.000000;
				_t2904 = pow(_t874,_t2903);
				_t2905 = vertParams[58] * _t2904;
				_acc874 += _acc875 * _t2905;
				_acc869 += _acc874 * _t835;
				_acc871 += _acc874 * _t833;
				_acc873 += _acc874 * _t831;
				_acc835 += _acc874 * _t869;
				_acc833 += _acc874 * _t871;
				_acc831 += _acc874 * _t873;
				_acc872 += _acc873;
				_acc254 -= _acc873;
				_acc867 += _acc872 * _t853;
				_acc853 += _acc872 * _t867;
				_acc870 += _acc871;
				_acc253 -= _acc871;
				_acc867 += _acc870 * _t852;
				_acc852 += _acc870 * _t867;
				_acc868 += _acc869;
				_acc252 -= _acc869;
				_acc867 += _acc868 * _t851;
				_acc851 += _acc868 * _t867;
				_acc866 += _acc867 * 2.000000;
				_acc252 += _acc866 * _t851;
				_acc253 += _acc866 * _t852;
				_acc254 += _acc866 * _t853;
				_acc851 += _acc866 * _t252;
				_acc852 += _acc866 * _t253;
				_acc853 += _acc866 * _t254;
			}
			else {
			}
			_acc851 += _acc860 * _t835;
			_acc852 += _acc860 * _t833;
			_acc853 += _acc860 * _t831;
			_acc835 += _acc860 * _t851;
			_acc833 += _acc860 * _t852;
			_acc831 += _acc860 * _t853;
			cif (_t850 > 0.000000) {
				_acc158 = _acc851;
				_acc159 = _acc852;
				_acc160 = _acc853;
			}
			else {
				_acc856 = _acc851;
				_acc857 = _acc852;
				_acc858 = _acc853;
				_acc160 -= _acc858;
				_acc159 -= _acc857;
				_acc158 -= _acc856;
			}
		}
		else cif (vertParams[51] == 2.000000) {
			_acc1108 = _acc841;
			_acc1109 = _acc842;
			_acc1110 = _acc843;
			_acc912 = _acc844;
			_acc1111 = _acc845;
			cif (_t913 > 0.000000) {
				_acc1120 = _acc1108;
				_acc1121 = _acc1109;
				_acc1122 = _acc1110;
				_acc1126 = _acc1111;
				cif (_t1125 >= 0.000000) {
					_acc1125 = _acc1126;
				}
				else {
					_acc1128 = _acc1126;
					_acc1125 -= _acc1128;
				}
				_t2906 = (float)1.0 / (_t1123);
				_acc1124 += _acc1125 * _t2906;
				_t2907 = -_t1124;
				_t2908 = _t2906 * _t2906;
				_t2909 = _t2907 * _t2908;
				_acc1123 += _acc1125 * _t2909;
				_acc1086 += _acc1124 * _t997;
				_acc997 += _acc1124 * _t1086;
				_acc950 += _acc1123 * 4.000000;
				_acc1117 += _acc1122 * vertParams[54];
				_acc1117 += _acc1121 * vertParams[53];
				_acc1117 += _acc1120 * vertParams[52];
				cif (_t1116 >= 0.000000) {
					_acc1116 = _acc1117;
				}
				else {
					_acc1119 = _acc1117;
					_acc1116 -= _acc1119;
				}
				_t2910 = (float)1.0 / (_t1113);
				_acc1115 += _acc1116 * _t2910;
				_t2911 = -_t1115;
				_t2912 = _t2910 * _t2910;
				_t2913 = _t2911 * _t2912;
				_acc1113 += _acc1116 * _t2913;
				_acc1114 += _acc1115 * _t1065;
				_acc1065 += _acc1115 * _t1114;
				_acc997 += _acc1114 * _t989;
				_acc989 += _acc1114 * _t997;
				_acc911 += _acc1113 * 4.000000;
			}
			else {
				_acc1155 = _acc1108;
				_acc1156 = _acc1109;
				_acc1157 = _acc1110;
				_acc1165 = _acc1111;
				cif (_t1164 >= 0.000000) {
					_acc1164 = _acc1165;
				}
				else {
					_acc1167 = _acc1165;
					_acc1164 -= _acc1167;
				}
				_t2914 = (float)1.0 / (_t1158);
				_acc1163 += _acc1164 * _t2914;
				_t2915 = -_t1163;
				_t2916 = _t2914 * _t2914;
				_t2917 = _t2915 * _t2916;
				_acc1158 += _acc1164 * _t2917;
				_acc1162 += _acc1163 * _t1160;
				_acc1160 += _acc1163 * _t1162;
				_acc1086 += _acc1162 * _t1161;
				_acc1161 += _acc1162 * _t1086;
				_acc997 -= _acc1161;
				_acc1159 += _acc1160 * _t950;
				_acc950 += _acc1160 * _t1159;
				_t2918 = 2.000000 * _t914;
				_acc914 += _acc1159 * _t2918;
				_t2919 = 2.000000 * _t1136;
				_acc1136 += _acc1158 * _t2919;
				_acc1152 += _acc1157 * vertParams[57];
				_acc1152 += _acc1156 * vertParams[56];
				_acc1152 += _acc1155 * vertParams[55];
				cif (_t1151 >= 0.000000) {
					_acc1151 = _acc1152;
				}
				else {
					_acc1154 = _acc1152;
					_acc1151 -= _acc1154;
				}
				_t2920 = (float)1.0 / (_t1142);
				_acc1150 += _acc1151 * _t2920;
				_t2921 = -_t1150;
				_t2922 = _t2920 * _t2920;
				_t2923 = _t2921 * _t2922;
				_acc1142 += _acc1151 * _t2923;
				_acc1140 += _acc1150 * _t1149;
				_acc1149 += _acc1150 * _t1140;
				_acc1148 += _acc1149 * _t950;
				_acc950 += _acc1149 * _t1148;
				_acc1147 += _acc1148 * _t949;
				_acc949 += _acc1148 * _t1147;
				_acc1146 += _acc1147 * _t1143;
				_acc1143 += _acc1147 * _t1146;
				_acc1145 += _acc1146 * _t1065;
				_acc1065 += _acc1146 * _t1145;
				_acc1144 += _acc1145 * _t989;
				_acc989 += _acc1145 * _t1144;
				_acc997 -= _acc1144;
				_t2924 = 2.000000 * _t914;
				_acc914 += _acc1143 * _t2924;
				_acc911 += _acc1142 * _t1141;
				_acc1141 += _acc1142 * _t911;
				_t2925 = 2.000000 * _t1136;
				_acc1136 += _acc1141 * _t2925;
				_t2926 = 2.000000 * _t1139;
				_acc1139 += _acc1140 * _t2926;
				_t2927 = _t1139 * _t1139;
				_t2928 = -_t2927;
				_acc914 += _acc1139 * _t2928;
				_acc949 += _acc1136;
				_acc1135 += _acc1136;
				_acc914 += _acc1135 * _t950;
				_acc950 += _acc1135 * _t914;
			}
			_acc971 += _acc1086 * _t1085;
			_acc1085 += _acc1086 * _t971;
			_t2929 = (float)1.0 / (_t1082);
			_acc1084 += _acc1085 * _t2929;
			_t2930 = -_t1084;
			_t2931 = _t2929 * _t2929;
			_t2932 = _t2930 * _t2931;
			_acc1082 += _acc1085 * _t2932;
			_acc1083 += _acc1084 * _t1084;
			_acc1078 -= _acc1083;
			_acc1081 += _acc1082 * _t1079;
			_acc1079 += _acc1082 * _t1081;
			_acc1080 += _acc1081 * _t1069;
			_acc1069 += _acc1081 * _t1080;
			_acc1069 += _acc1080 * 3.141593;
			_t2933 = 2.000000 * _t1070;
			_acc1070 += _acc1079 * _t2933;
			_t2934 = (float)1.0 / (_t1070);
			_acc1077 += _acc1078 * _t2934;
			_t2935 = -_t1077;
			_t2936 = _t2934 * _t2934;
			_t2937 = _t2935 * _t2936;
			_acc1070 += _acc1078 * _t2937;
			_acc1076 += _acc1077;
			_acc1073 += _acc1077;
			_t2938 = (float)1.0 / (_t1074);
			_acc1075 += _acc1076 * _t2938;
			_t2939 = -_t1075;
			_t2940 = _t2938 * _t2938;
			_t2941 = _t2939 * _t2940;
			_acc1074 += _acc1076 * _t2941;
			_t2942 = 2.000000 * _t973;
			_acc973 += _acc1075 * _t2942;
			_t2943 = 2.000000 * _t1069;
			_acc1069 += _acc1074 * _t2943;
			_t2944 = (float)1.0 / (_t1071);
			_acc1072 += _acc1073 * _t2944;
			_t2945 = -_t1072;
			_t2946 = _t2944 * _t2944;
			_t2947 = _t2945 * _t2946;
			_acc1071 += _acc1073 * _t2947;
			_t2948 = 2.000000 * _t972;
			_acc972 += _acc1072 * _t2948;
			_t2949 = 2.000000 * _t1069;
			_acc1069 += _acc1071 * _t2949;
			_t2950 = 2.000000 * _t971;
			_acc971 += _acc1070 * _t2950;
			_acc1068 += _acc1069 * vertParams[60];
			_acc1067 -= _acc1068;
			_acc1066 += _acc1067 * 0.200000;
			_t2951 = 2.000000 * _t1066;
			_t2952 = (float)1.0 / (_t2951);
			_acc1015 += _acc1066 * _t2952;
			_acc1050 += _acc1065 * _t1028;
			_acc1028 += _acc1065 * _t1050;
			cif (_t1049 <= 0.000000) {
			}
			else {
				_acc1054 = _acc1050;
				cif (_t1053 >= 1.600000) {
				}
				else {
					_acc1064 = _acc1054;
					_t2953 = (float)1.0 / (_t1060);
					_acc1063 += _acc1064 * _t2953;
					_t2954 = -_t1063;
					_t2955 = _t2953 * _t2953;
					_t2956 = _t2954 * _t2955;
					_acc1060 += _acc1064 * _t2956;
					_acc1062 += _acc1063;
					_acc1061 += _acc1063;
					_acc1053 += _acc1062 * 3.535000;
					_acc1056 += _acc1061 * 2.181000;
					_acc1059 += _acc1060;
					_acc1057 += _acc1060;
					_acc1058 += _acc1059;
					_acc1053 += _acc1058 * 2.276000;
					_acc1056 += _acc1057 * 2.577000;
					_t2957 = 2.000000 * _t1053;
					_acc1053 += _acc1056 * _t2957;
				}
				_t2958 = _t1053 * _t1053;
				_t2959 = -_t2958;
				_acc1052 += _acc1053 * _t2959;
				_acc1049 += _acc1052 * vertParams[60];
			}
			_t2960 = (float)1.0 / (_t1015);
			_acc1048 += _acc1049 * _t2960;
			_t2961 = -_t1048;
			_t2962 = _t2960 * _t2960;
			_t2963 = _t2961 * _t2962;
			_acc1015 += _acc1049 * _t2963;
			_t2964 = 2.000000 * _t1048;
			_t2965 = (float)1.0 / (_t2964);
			_acc1045 += _acc1048 * _t2965;
			cif (_t1044 >= 0.000000) {
				_acc1044 = _acc1045;
			}
			else {
				_acc1047 = _acc1045;
				_acc1044 -= _acc1047;
			}
			_acc1043 -= _acc1044;
			_t2966 = 2.000000 * _t1015;
			_acc1015 += _acc1043 * _t2966;
			cif (_t1027 <= 0.000000) {
			}
			else {
				_acc1032 = _acc1028;
				cif (_t1031 >= 1.600000) {
				}
				else {
					_acc1042 = _acc1032;
					_t2967 = (float)1.0 / (_t1038);
					_acc1041 += _acc1042 * _t2967;
					_t2968 = -_t1041;
					_t2969 = _t2967 * _t2967;
					_t2970 = _t2968 * _t2969;
					_acc1038 += _acc1042 * _t2970;
					_acc1040 += _acc1041;
					_acc1039 += _acc1041;
					_acc1031 += _acc1040 * 3.535000;
					_acc1034 += _acc1039 * 2.181000;
					_acc1037 += _acc1038;
					_acc1035 += _acc1038;
					_acc1036 += _acc1037;
					_acc1031 += _acc1036 * 2.276000;
					_acc1034 += _acc1035 * 2.577000;
					_t2971 = 2.000000 * _t1031;
					_acc1031 += _acc1034 * _t2971;
				}
				_t2972 = _t1031 * _t1031;
				_t2973 = -_t2972;
				_acc1030 += _acc1031 * _t2973;
				_acc1027 += _acc1030 * vertParams[60];
			}
			_t2974 = (float)1.0 / (_t1018);
			_acc1026 += _acc1027 * _t2974;
			_t2975 = -_t1026;
			_t2976 = _t2974 * _t2974;
			_t2977 = _t2975 * _t2976;
			_acc1018 += _acc1027 * _t2977;
			_t2978 = 2.000000 * _t1026;
			_t2979 = (float)1.0 / (_t2978);
			_acc1023 += _acc1026 * _t2979;
			cif (_t1022 >= 0.000000) {
				_acc1022 = _acc1023;
			}
			else {
				_acc1025 = _acc1023;
				_acc1022 -= _acc1025;
			}
			_acc1021 -= _acc1022;
			_t2980 = 2.000000 * _t1018;
			_acc1018 += _acc1021 * _t2980;
			cif (_t912 >= 0.000000) {
				_acc912 = _acc1018;
			}
			else {
				_acc1020 = _acc1018;
				_acc912 -= _acc1020;
			}
			cif (_t911 >= 0.000000) {
				_acc911 = _acc1015;
			}
			else {
				_acc1017 = _acc1015;
				_acc911 -= _acc1017;
			}
			cif (_t996 <= 0.000000) {
			}
			else {
				_acc1014 = _acc997;
				_acc1013 += _acc1014 * 0.500000;
				_acc1012 += _acc1013;
				_acc1011 += _acc1013;
				_t2981 = 2.000000 * _t1007;
				_acc1007 += _acc1012 * _t2981;
				_t2982 = 2.000000 * _t1010;
				_acc1010 += _acc1011 * _t2982;
				_t2983 = (float)1.0 / (_t1008);
				_acc1009 += _acc1010 * _t2983;
				_t2984 = -_t1009;
				_t2985 = _t2983 * _t2983;
				_t2986 = _t2984 * _t2985;
				_acc1008 += _acc1010 * _t2986;
				_acc1004 += _acc1009;
				_acc1002 -= _acc1009;
				_acc1004 += _acc1008;
				_acc1002 += _acc1008;
				_t2987 = (float)1.0 / (_t1005);
				_acc1006 += _acc1007 * _t2987;
				_t2988 = -_t1006;
				_t2989 = _t2987 * _t2987;
				_t2990 = _t2988 * _t2989;
				_acc1005 += _acc1007 * _t2990;
				_acc999 += _acc1006;
				_acc1003 -= _acc1006;
				_acc999 += _acc1005;
				_acc1003 += _acc1005;
				_acc999 += _acc1004 * vertParams[58];
				_acc1002 += _acc1003 * vertParams[58];
				_t2991 = 2.000000 * _t1002;
				_t2992 = (float)1.0 / (_t2991);
				_acc996 += _acc1002 * _t2992;
				cif (_t949 >= 0.000000) {
					_acc949 = _acc999;
				}
				else {
					_acc1001 = _acc999;
					_acc949 -= _acc1001;
				}
			}
			_acc995 -= _acc996;
			_acc994 += _acc995 * _t992;
			_acc992 += _acc995 * _t994;
			_acc993 -= _acc994;
			_t2993 = 2.000000 * _t949;
			_acc949 += _acc993 * _t2993;
			_t2994 = 2.000000 * _t990;
			_acc990 += _acc992 * _t2994;
			cif (_t949 > 0.000000) {
			}
			else {
			}
			_t2995 = (float)1.0 / (_t986);
			_acc988 += _acc989 * _t2995;
			_t2996 = -_t988;
			_t2997 = _t2995 * _t2995;
			_t2998 = _t2996 * _t2997;
			_acc986 += _acc989 * _t2998;
			_acc987 += _acc988 * _t988;
			_acc982 -= _acc987;
			_acc985 += _acc986 * _t983;
			_acc983 += _acc986 * _t985;
			_acc984 += _acc985 * vertParams[60];
			_t2999 = 2.000000 * _t974;
			_acc974 += _acc983 * _t2999;
			_t3000 = (float)1.0 / (_t974);
			_acc981 += _acc982 * _t3000;
			_t3001 = -_t981;
			_t3002 = _t3000 * _t3000;
			_t3003 = _t3001 * _t3002;
			_acc974 += _acc982 * _t3003;
			_acc980 += _acc981;
			_acc977 += _acc981;
			_t3004 = (float)1.0 / (_t978);
			_acc979 += _acc980 * _t3004;
			_t3005 = -_t979;
			_t3006 = _t3004 * _t3004;
			_t3007 = _t3005 * _t3006;
			_acc978 += _acc980 * _t3007;
			_t3008 = 2.000000 * _t973;
			_acc973 += _acc979 * _t3008;
			_t3009 = (float)1.0 / (_t975);
			_acc976 += _acc977 * _t3009;
			_t3010 = -_t976;
			_t3011 = _t3009 * _t3009;
			_t3012 = _t3010 * _t3011;
			_acc975 += _acc977 * _t3012;
			_t3013 = 2.000000 * _t972;
			_acc972 += _acc976 * _t3013;
			_t3014 = 2.000000 * _t971;
			_acc971 += _acc974 * _t3014;
			_acc951 += _acc973 * _t942;
			_acc952 += _acc973 * _t943;
			_acc953 += _acc973 * _t944;
			_acc942 += _acc973 * _t951;
			_acc943 += _acc973 * _t952;
			_acc944 += _acc973 * _t953;
			_acc954 += _acc972 * _t942;
			_acc955 += _acc972 * _t943;
			_acc956 += _acc972 * _t944;
			_acc942 += _acc972 * _t954;
			_acc943 += _acc972 * _t955;
			_acc944 += _acc972 * _t956;
			_acc158 += _acc971 * _t942;
			_acc159 += _acc971 * _t943;
			_acc160 += _acc971 * _t944;
			_acc942 += _acc971 * _t158;
			_acc943 += _acc971 * _t159;
			_acc944 += _acc971 * _t160;
			cif (_t160 < -0.999999) {
			}
			else {
				_acc966 = _acc951;
				_acc962 = _acc952;
				_acc963 = _acc953;
				_acc962 = _acc954;
				_acc970 = _acc955;
				_acc967 = _acc956;
				_acc969 -= _acc970;
				_acc968 += _acc969 * _t959;
				_acc959 += _acc969 * _t968;
				_t3015 = 2.000000 * _t159;
				_acc159 += _acc968 * _t3015;
				_acc159 -= _acc967;
				_acc965 -= _acc966;
				_acc964 += _acc965 * _t959;
				_acc959 += _acc965 * _t964;
				_t3016 = 2.000000 * _t158;
				_acc158 += _acc964 * _t3016;
				_acc158 -= _acc963;
				_acc961 += _acc962 * _t959;
				_acc959 += _acc962 * _t961;
				_acc960 += _acc961 * _t159;
				_acc159 += _acc961 * _t960;
				_acc158 -= _acc960;
				_t3017 = _t959 * _t959;
				_t3018 = -_t3017;
				_acc958 += _acc959 * _t3018;
				_acc160 += _acc958;
			}
			_acc835 += _acc950 * _t942;
			_acc833 += _acc950 * _t943;
			_acc831 += _acc950 * _t944;
			_acc942 += _acc950 * _t835;
			_acc943 += _acc950 * _t833;
			_acc944 += _acc950 * _t831;
			_acc252 += _acc949 * _t942;
			_acc253 += _acc949 * _t943;
			_acc254 += _acc949 * _t944;
			_acc942 += _acc949 * _t252;
			_acc943 += _acc949 * _t253;
			_acc944 += _acc949 * _t254;
			cif (_t941 < 0.000000) {
				_acc946 = _acc942;
				_acc947 = _acc943;
				_acc948 = _acc944;
				_acc920 -= _acc948;
				_acc919 -= _acc947;
				_acc918 -= _acc946;
			}
			else {
				_acc918 = _acc942;
				_acc919 = _acc943;
				_acc920 = _acc944;
			}
			cif (_t913 > 0.000000) {
				_acc927 = _acc918;
				_acc928 = _acc919;
				_acc929 = _acc920;
				_acc924 += _acc929 * _t926;
				_acc926 += _acc929 * _t924;
				_acc923 += _acc928 * _t926;
				_acc926 += _acc928 * _t923;
				_acc922 += _acc927 * _t926;
				_acc926 += _acc927 * _t922;
				_t3019 = _t926 * _t926;
				_t3020 = -_t3019;
				_acc925 += _acc926 * _t3020;
				_t3021 = (float)1.0 / (_t925);
				_t3022 = _t922 * _t3021;
				_acc922 += _acc925 * _t3022;
				_t3023 = _t923 * _t3021;
				_acc923 += _acc925 * _t3023;
				_t3024 = _t924 * _t3021;
				_acc924 += _acc925 * _t3024;
				_acc254 += _acc924;
				_acc831 += _acc924;
				_acc253 += _acc923;
				_acc833 += _acc923;
				_acc252 += _acc922;
				_acc835 += _acc922;
			}
			else {
				_acc938 = _acc918;
				_acc939 = _acc919;
				_acc940 = _acc920;
				_acc935 += _acc940 * _t937;
				_acc937 += _acc940 * _t935;
				_acc933 += _acc939 * _t937;
				_acc937 += _acc939 * _t933;
				_acc931 += _acc938 * _t937;
				_acc937 += _acc938 * _t931;
				_t3025 = _t937 * _t937;
				_t3026 = -_t3025;
				_acc936 += _acc937 * _t3026;
				_t3027 = (float)1.0 / (_t936);
				_t3028 = _t931 * _t3027;
				_acc931 += _acc936 * _t3028;
				_t3029 = _t933 * _t3027;
				_acc933 += _acc936 * _t3029;
				_t3030 = _t935 * _t3027;
				_acc935 += _acc936 * _t3030;
				_acc254 += _acc935;
				_acc934 += _acc935;
				_acc831 += _acc934 * _t914;
				_acc914 += _acc934 * _t831;
				_acc253 += _acc933;
				_acc932 += _acc933;
				_acc833 += _acc932 * _t914;
				_acc914 += _acc932 * _t833;
				_acc252 += _acc931;
				_acc930 += _acc931;
				_acc835 += _acc930 * _t914;
				_acc914 += _acc930 * _t835;
			}
			cif (_t911 > 0.000000) {
			}
			else {
			}
			_acc835 += _acc912 * _t158;
			_acc833 += _acc912 * _t159;
			_acc831 += _acc912 * _t160;
			_acc158 += _acc912 * _t835;
			_acc159 += _acc912 * _t833;
			_acc160 += _acc912 * _t831;
			_acc252 += _acc911 * _t158;
			_acc253 += _acc911 * _t159;
			_acc254 += _acc911 * _t160;
			_acc158 += _acc911 * _t252;
			_acc159 += _acc911 * _t253;
			_acc160 += _acc911 * _t254;
		}
		else cif (vertParams[51] == 0.000000) {
			_acc1191 = _acc841;
			_acc1192 = _acc842;
			_acc1193 = _acc843;
			_acc1188 = _acc844;
			_acc1189 = _acc845;
			_acc1189 += _acc1193 * vertParams[54];
			_acc1189 += _acc1192 * vertParams[53];
			_acc1189 += _acc1191 * vertParams[52];
			_acc1188 += _acc1189 * 0.318310;
			_acc1179 += _acc1188 * _t835;
			_acc1180 += _acc1188 * _t833;
			_acc1181 += _acc1188 * _t831;
			_acc835 += _acc1188 * _t1179;
			_acc833 += _acc1188 * _t1180;
			_acc831 += _acc1188 * _t1181;
			cif (_t1178 > 0.000000) {
				_acc158 = _acc1179;
				_acc159 = _acc1180;
				_acc160 = _acc1181;
			}
			else {
				_acc1184 = _acc1179;
				_acc1185 = _acc1180;
				_acc1186 = _acc1181;
				_acc160 -= _acc1186;
				_acc159 -= _acc1185;
				_acc158 -= _acc1184;
			}
		}
		else {
		}
		_acc839 += _acc840 * 3.141593;
		_acc836 += _acc839 * 6.283185;
		cif (_t830 >= 0.000000) {
			_acc830 = _acc836;
		}
		else {
			_acc838 = _acc836;
			_acc830 -= _acc838;
		}
		_acc830 += _acc835 * _t834;
		_acc834 += _acc835 * _t830;
		_t3031 = sin(_t828);
		_t3032 = -_t3031;
		_acc828 += _acc834 * _t3032;
		_acc830 += _acc833 * _t832;
		_acc832 += _acc833 * _t830;
		_t3033 = cos(_t828);
		_acc828 += _acc832 * _t3033;
		_t3034 = sin(_t829);
		_t3035 = -_t3034;
		_acc829 += _acc831 * _t3035;
		_t3036 = cos(_t829);
		_acc829 += _acc830 * _t3036;
		_acc3 += _acc829 * 3.141593;
		_acc2 += _acc828 * 6.283185;
	}
	_acc264 += _acc271 * _t270;
	_acc270 += _acc271 * _t264;
	_t3037 = _t270 * _t270;
	_t3038 = -_t3037;
	_acc269 += _acc270 * _t3038;
	_t3039 = 2.000000 * _t266;
	_acc266 += _acc269 * _t3039;
	cif (_t265 >= 0.000000) {
		_acc265 = _acc266;
	}
	else {
		_acc268 = _acc266;
		_acc265 -= _acc268;
	}
	_acc145 += _acc265 * _t158;
	_acc140 += _acc265 * _t159;
	_acc135 += _acc265 * _t160;
	_acc158 += _acc265 * _t145;
	_acc159 += _acc265 * _t140;
	_acc160 += _acc265 * _t135;
	_acc151 += _acc264 * _t263;
	_acc263 += _acc264 * _t151;
	_t3040 = 2.000000 * _t262;
	_acc262 += _acc263 * _t3040;
	_acc261 += _acc262;
	_acc256 += _acc262;
	_acc260 += _acc261;
	_acc258 += _acc261;
	_t3041 = 2.000000 * _t259;
	_acc259 += _acc260 * _t3041;
	_acc152 -= _acc259;
	_t3042 = 2.000000 * _t257;
	_acc257 += _acc258 * _t3042;
	_acc153 -= _acc257;
	_t3043 = 2.000000 * _t255;
	_acc255 += _acc256 * _t3043;
	_acc154 -= _acc255;
	_acc135 -= _acc254;
	_acc140 -= _acc253;
	_acc145 -= _acc252;
	cif (vertParams[3] == 0.000000) {
		_acc210 = _acc152;
		_acc212 = _acc153;
		_acc214 = _acc154;
		_acc232 = _acc158;
		_acc233 = _acc159;
		_acc234 = _acc160;
		_acc229 += _acc234 * _t231;
		_acc231 += _acc234 * _t229;
		_acc224 += _acc233 * _t231;
		_acc231 += _acc233 * _t224;
		_acc219 += _acc232 * _t231;
		_acc231 += _acc232 * _t219;
		_t3044 = _t231 * _t231;
		_t3045 = -_t3044;
		_acc230 += _acc231 * _t3045;
		_t3046 = (float)1.0 / (_t230);
		_t3047 = _t219 * _t3046;
		_acc219 += _acc230 * _t3047;
		_t3048 = _t224 * _t3046;
		_acc224 += _acc230 * _t3048;
		_t3049 = _t229 * _t3046;
		_acc229 += _acc230 * _t3049;
		_acc228 += _acc229;
		_acc225 += _acc229;
		_acc227 += _acc228;
		_acc226 += _acc228;
		_acc208 += _acc227 * vertParams[16];
		_acc193 += _acc226 * vertParams[19];
		_acc204 += _acc225 * vertParams[22];
		_acc223 += _acc224;
		_acc220 += _acc224;
		_acc222 += _acc223;
		_acc221 += _acc223;
		_acc208 += _acc222 * vertParams[15];
		_acc193 += _acc221 * vertParams[18];
		_acc204 += _acc220 * vertParams[21];
		_acc218 += _acc219;
		_acc215 += _acc219;
		_acc217 += _acc218;
		_acc216 += _acc218;
		_acc208 += _acc217 * vertParams[14];
		_acc193 += _acc216 * vertParams[17];
		_acc204 += _acc215 * vertParams[20];
		_acc213 += _acc214;
		_acc206 += _acc213 * _t135;
		_acc135 += _acc213 * _t206;
		_acc211 += _acc212;
		_acc206 += _acc211 * _t140;
		_acc140 += _acc211 * _t206;
		_acc209 += _acc210;
		_acc206 += _acc209 * _t145;
		_acc145 += _acc209 * _t206;
		_acc207 += _acc208;
		_acc204 -= _acc208;
		_acc193 -= _acc207;
		_acc205 += _acc206 * _t188;
		_acc188 += _acc206 * _t205;
		_acc202 += _acc205 * vertParams[11];
		_acc199 += _acc205 * vertParams[12];
		_acc196 += _acc205 * vertParams[13];
		_acc203 += _acc204 * _t188;
		_acc188 += _acc204 * _t203;
		_acc145 += _acc203 * _t202;
		_acc140 += _acc203 * _t199;
		_acc135 += _acc203 * _t196;
		_acc202 += _acc203 * _t145;
		_acc199 += _acc203 * _t140;
		_acc196 += _acc203 * _t135;
		_acc201 += _acc202;
		_acc200 -= _acc202;
		_acc190 += _acc201 * vertParams[10];
		_acc191 += _acc200 * vertParams[9];
		_acc198 += _acc199;
		_acc197 -= _acc199;
		_acc191 += _acc198 * vertParams[8];
		_acc189 += _acc197 * vertParams[10];
		_acc195 += _acc196;
		_acc194 -= _acc196;
		_acc189 += _acc195 * vertParams[9];
		_acc190 += _acc194 * vertParams[8];
		_acc192 += _acc193 * _t188;
		_acc188 += _acc193 * _t192;
		_acc189 += _acc192 * _t186;
		_acc190 += _acc192 * _t183;
		_acc191 += _acc192 * _t180;
		_acc186 += _acc192 * _t189;
		_acc183 += _acc192 * _t190;
		_acc180 += _acc192 * _t191;
		_t3050 = _t188 * _t188;
		_t3051 = -_t3050;
		_acc187 += _acc188 * _t3051;
		_acc186 += _acc187 * vertParams[8];
		_acc183 += _acc187 * vertParams[9];
		_acc180 += _acc187 * vertParams[10];
		_acc185 += _acc186;
		_acc184 -= _acc186;
		_acc140 += _acc185 * vertParams[13];
		_acc135 += _acc184 * vertParams[12];
		_acc182 += _acc183;
		_acc181 -= _acc183;
		_acc135 += _acc182 * vertParams[11];
		_acc145 += _acc181 * vertParams[13];
		_acc179 += _acc180;
		_acc178 -= _acc180;
		_acc145 += _acc179 * vertParams[12];
		_acc140 += _acc178 * vertParams[11];
	}
	else {
	}
	_t3052 = 2.000000 * _t150;
	_acc150 += _acc151 * _t3052;
	_t3053 = -scene[32];
	_t3054 = (float)1.0 / (_t149);
	_t3055 = _t3054 * _t3054;
	_t3056 = _t3053 * _t3055;
	_acc149 += _acc150 * _t3056;
	_t3057 = (float)1.0 / (_t146);
	_acc148 += _acc149 * _t3057;
	_t3058 = -_t148;
	_t3059 = _t3057 * _t3057;
	_t3060 = _t3058 * _t3059;
	_acc146 += _acc149 * _t3060;
	_t3061 = 2.000000 * _t147;
	_acc147 += _acc148 * _t3061;
	_t3062 = -scene[33];
	_t3063 = (float)1.0 / (_t146);
	_t3064 = _t3063 * _t3063;
	_t3065 = _t3062 * _t3064;
	_acc146 += _acc147 * _t3065;
	_acc75 += _acc146 * _t145;
	_acc70 += _acc146 * _t140;
	_acc65 += _acc146 * _t135;
	_acc145 += _acc146 * _t75;
	_acc140 += _acc146 * _t70;
	_acc135 += _acc146 * _t65;
	_acc144 += _acc145;
	_acc141 += _acc145;
	_acc143 += _acc144;
	_acc142 += _acc144;
	_acc112 += _acc143 * _t98;
	_acc98 += _acc143 * _t112;
	_acc118 += _acc142 * _t99;
	_acc99 += _acc142 * _t118;
	_acc125 += _acc141 * _t100;
	_acc100 += _acc141 * _t125;
	_acc139 += _acc140;
	_acc136 += _acc140;
	_acc138 += _acc139;
	_acc137 += _acc139;
	_acc114 += _acc138 * _t98;
	_acc98 += _acc138 * _t114;
	_acc121 += _acc137 * _t99;
	_acc99 += _acc137 * _t121;
	_acc127 += _acc136 * _t100;
	_acc100 += _acc136 * _t127;
	_acc134 += _acc135;
	_acc131 += _acc135;
	_acc133 += _acc134;
	_acc132 += _acc134;
	_acc116 += _acc133 * _t98;
	_acc98 += _acc133 * _t116;
	_acc123 += _acc132 * _t99;
	_acc99 += _acc132 * _t123;
	_acc130 += _acc131 * _t100;
	_acc100 += _acc131 * _t130;
	_acc129 -= _acc130;
	_acc128 += _acc129 * 2.000000;
	_acc101 += _acc128;
	_acc102 += _acc128;
	_acc126 += _acc127 * 2.000000;
	_acc106 += _acc126;
	_acc107 -= _acc126;
	_acc124 += _acc125 * 2.000000;
	_acc105 += _acc124;
	_acc108 += _acc124;
	_acc122 += _acc123 * 2.000000;
	_acc106 += _acc122;
	_acc107 += _acc122;
	_acc120 -= _acc121;
	_acc119 += _acc120 * 2.000000;
	_acc101 += _acc119;
	_acc103 += _acc119;
	_acc117 += _acc118 * 2.000000;
	_acc104 += _acc117;
	_acc109 -= _acc117;
	_acc115 += _acc116 * 2.000000;
	_acc105 += _acc115;
	_acc108 -= _acc115;
	_acc113 += _acc114 * 2.000000;
	_acc104 += _acc113;
	_acc109 += _acc113;
	_acc111 -= _acc112;
	_acc110 += _acc111 * 2.000000;
	_acc102 += _acc110;
	_acc103 += _acc110;
	_acc93 += _acc100 * _t97;
	_acc97 += _acc100 * _t93;
	_acc94 += _acc99 * _t97;
	_acc97 += _acc99 * _t94;
	_acc95 += _acc98 * _t97;
	_acc97 += _acc98 * _t95;
	_t3066 = _t97 * _t97;
	_t3067 = -_t3066;
	_acc96 += _acc97 * _t3067;
	_t3068 = (float)1.0 / (_t96);
	_t3069 = _t95 * _t3068;
	_acc95 += _acc96 * _t3069;
	_t3070 = _t94 * _t3068;
	_acc94 += _acc96 * _t3070;
	_t3071 = _t93 * _t3068;
	_acc93 += _acc96 * _t3071;
	_acc91 += _acc95 * _t92;
	_acc92 += _acc95 * _t91;
	_acc87 += _acc94 * _t92;
	_acc92 += _acc94 * _t87;
	_acc83 += _acc93 * _t92;
	_acc92 += _acc93 * _t83;
	_t3072 = _t92 * _t92;
	_t3073 = -_t3072;
	_acc79 += _acc92 * _t3073;
	_acc90 += _acc91;
	_acc89 += _acc90;
	_acc88 += _acc90;
	_acc0 += _acc89 * scene[1];
	_acc1 += _acc88 * scene[5];
	_acc86 += _acc87;
	_acc85 += _acc86;
	_acc84 += _acc86;
	_acc0 += _acc85 * scene[2];
	_acc1 += _acc84 * scene[6];
	_acc82 += _acc83;
	_acc81 += _acc82;
	_acc80 += _acc82;
	_acc0 += _acc81 * scene[3];
	_acc1 += _acc80 * scene[7];
	_acc78 += _acc79;
	_acc77 += _acc78;
	_acc76 += _acc78;
	_acc0 += _acc77 * scene[4];
	_acc1 += _acc76 * scene[8];
	_acc74 += _acc75;
	_acc71 += _acc75;
	_acc73 += _acc74;
	_acc72 += _acc74;
	_acc42 += _acc73 * _t28;
	_acc28 += _acc73 * _t42;
	_acc48 += _acc72 * _t29;
	_acc29 += _acc72 * _t48;
	_acc55 += _acc71 * _t30;
	_acc30 += _acc71 * _t55;
	_acc69 += _acc70;
	_acc66 += _acc70;
	_acc68 += _acc69;
	_acc67 += _acc69;
	_acc44 += _acc68 * _t28;
	_acc28 += _acc68 * _t44;
	_acc51 += _acc67 * _t29;
	_acc29 += _acc67 * _t51;
	_acc57 += _acc66 * _t30;
	_acc30 += _acc66 * _t57;
	_acc64 += _acc65;
	_acc61 += _acc65;
	_acc63 += _acc64;
	_acc62 += _acc64;
	_acc46 += _acc63 * _t28;
	_acc28 += _acc63 * _t46;
	_acc53 += _acc62 * _t29;
	_acc29 += _acc62 * _t53;
	_acc60 += _acc61 * _t30;
	_acc30 += _acc61 * _t60;
	_acc59 -= _acc60;
	_acc58 += _acc59 * 2.000000;
	_acc31 += _acc58;
	_acc32 += _acc58;
	_acc56 += _acc57 * 2.000000;
	_acc36 += _acc56;
	_acc37 -= _acc56;
	_acc54 += _acc55 * 2.000000;
	_acc35 += _acc54;
	_acc38 += _acc54;
	_acc52 += _acc53 * 2.000000;
	_acc36 += _acc52;
	_acc37 += _acc52;
	_acc50 -= _acc51;
	_acc49 += _acc50 * 2.000000;
	_acc31 += _acc49;
	_acc33 += _acc49;
	_acc47 += _acc48 * 2.000000;
	_acc34 += _acc47;
	_acc39 -= _acc47;
	_acc45 += _acc46 * 2.000000;
	_acc35 += _acc45;
	_acc38 -= _acc45;
	_acc43 += _acc44 * 2.000000;
	_acc34 += _acc43;
	_acc39 += _acc43;
	_acc41 -= _acc42;
	_acc40 += _acc41 * 2.000000;
	_acc32 += _acc40;
	_acc33 += _acc40;
	_acc23 += _acc30 * _t27;
	_acc27 += _acc30 * _t23;
	_acc24 += _acc29 * _t27;
	_acc27 += _acc29 * _t24;
	_acc25 += _acc28 * _t27;
	_acc27 += _acc28 * _t25;
	_t3074 = _t27 * _t27;
	_t3075 = -_t3074;
	_acc26 += _acc27 * _t3075;
	_t3076 = (float)1.0 / (_t26);
	_t3077 = _t25 * _t3076;
	_acc25 += _acc26 * _t3077;
	_t3078 = _t24 * _t3076;
	_acc24 += _acc26 * _t3078;
	_t3079 = _t23 * _t3076;
	_acc23 += _acc26 * _t3079;
	_acc21 += _acc25 * _t22;
	_acc22 += _acc25 * _t21;
	_acc17 += _acc24 * _t22;
	_acc22 += _acc24 * _t17;
	_acc13 += _acc23 * _t22;
	_acc22 += _acc23 * _t13;
	_t3080 = _t22 * _t22;
	_t3081 = -_t3080;
	_acc9 += _acc22 * _t3081;
	_acc20 += _acc21;
	_acc19 += _acc20;
	_acc18 += _acc20;
	_acc16 += _acc17;
	_acc15 += _acc16;
	_acc14 += _acc16;
	_acc12 += _acc13;
	_acc11 += _acc12;
	_acc10 += _acc12;
	_acc8 += _acc9;
	_acc7 += _acc8;
	_acc6 += _acc8;
	grad[0] = _acc0;
	grad[1] = _acc1;
	grad[2] = _acc2;
	grad[3] = _acc3;
	grad[4] = _acc4;
	grad[5] = _acc5;
}
export void evaluate_path_bidir_mala_3_1_static_derv(uniform const float lens[2], uniform const float primary[7], uniform const float scene[38], uniform const float vertParams[297], uniform float grad[]) {
	float g[6] = {0};
	evaluate_path_bidir_mala_3_1_static_derv_kernel(lens, primary, scene, vertParams, g);
	foreach (index = 0 ... 6) {
		grad[index] = g[index];
	}
}
