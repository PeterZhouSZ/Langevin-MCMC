static void evaluate_path_bidir_mala_3_0_static_derv_kernel(uniform const float lens[2], uniform const float primary[5], uniform const float scene[38], uniform const float vertParams[238], float grad[4]) {
	uniform float _t2029, _t2028, _t2027, _t2026, _t2025, _t2024, _t2023, _t2022, _t2021, _t2020, _t2019, _t2018, _t2017, _t1753, _t1752, _t2007, _t2006, _t2005, _t2004, _t2003, _t2002, _t2001, _t2000, _t1999, _t1998, _t1996, _t1994, _t1990, _t1985, _t1984, _t1982, _t1981, _t1980, _t1977, _t1976, _t1975, _t1974, _t1973, _t1969, _t1968, _t1967, _t1966, _t1965, _t1961, _t1960, _t1959, _t1958, _t1957, _t1956, _t1955, _t1954, _t1953, _t1945, _t1941, _t1940, _t1939, _t1938, _t1936, _t1935, _t1934, _t1933, _t1932, _t1931, _t1930, _t1929, _t1928, _t1924, _t1923, _t1922, _t1921, _t1771, _t1770, _t1768, _t1767, _t1764, _t1763, _t1762, _t1920, _t1919, _t1918, _t1917, _t1914, _t1913, _t1909, _t1902, _t1896, _t1895, _t1894, _t1893, _t1839, _t1838, _t1837, _t1885, _t1884, _t1883, _t1882, _t1878, _t1877, _t1991, _t1876, _t1875, _t1874, _t1873, _t1872, _t1871, _t1870, _t1869, _t1868, _t1866, _t1865, _t1988, _t1864, _t1863, _t1861, _t1979, _t1858, _t1978, _t1857, _t1856, _t1855, _t1853, _t1852, _t1848, _t1847, _t1846, _t1845, _t1844, _t1964, _t1843, _t1963, _t1842, _t1836, _t1835, _t1833, _t1824, _t1822, _t1821, _t1820, _t1819, _t1808, _t1807, _t1805, _t1802, _t1801, _t1799, _t1797, _t1796, _t1795, _t1794, _t1793, _t1792, _t1790, _t1789, _t1788, _t1787, _t1785, _t1784, _t1782, _t1892, _t1780, _t1761, _t1760, _t1759, _t1758, _t1748, _t1747, _t1746, _t1728, _t1745, _t1891, _t1741, _t1743, _t1736, _t1735, _t1734, _t1627, _t1626, _t1625, _t1987, _t1707, _t1706, _t1703, _t1701, _t1700, _t1696, _t1695, _t1694, _t1693, _t1692, _t1691, _t1685, _t1684, _t1683, _t1679, _t1678, _t1677, _t1676, _t1675, _t1673, _t1670, _t1669, _t1665, _t1662, _t1661, _t1659, _t1658, _t1657, _t1653, _t1651, _t1624, _t1060, _t793, _t507, _t190, _t364, _t1599, _t1055, _t201, _t1196, _t25, _t771, _t295, _t1377, _t1756, _t764, _t208, _t1849, _t763, _t1851, _t760, _t1850, _t759, _t758, _t198, _t748, _t1331, _t1992, _t296, _t259, _t725, _t724, _t721, _t824, _t822, _t700, _t752, _t716, _t1214, _t345, _t715, _t344, _t56, _t1739, _t343, _t694, _t691, _t683, _t1927, _t682, _t1925, _t517, _t803, _t1378, _t681, _t687, _t768, _t152, _t1051, _t1258, _t858, _t1997, _t22, _t1910, _t669, _t1216, _t1061, _t1905, _t662, _t656, _t1208, _t707, _t1428, _t613, _t1412, _t612, _t648, _t1800, _t742, _t52, _t642, _t1729, _t523, _t779, _t1215, _t630, _t625, _t1732, _t527, _t855, _t1544, _t619, _t1174, _t1202, _t618, _t836, _t617, _t615, _t1528, _t1527, _t1352, _t1351, _t1173, _t1415, _t55, _t1169, _t1698, _t1697, _t611, _t588, _t1690, _t585, _t1689, _t584, _t1688, _t583, _t1407, _t574, _t206, _t1160, _t573, _t792, _t1944, _t1344, _t569, _t34, _t2012, _t1611, _t129, _t1666, _t556, _t297, _t566, _t104, _t1937, _t1337, _t1389, _t565, _t564, _t766, _t1354, _t1655, _t563, _t561, _t558, _t567, _t1668, _t555, _t1900, _t145, _t1667, _t554, _t1899, _t728, _t143, _t546, _t1904, _t659, _t1187, _t544, _t425, _t543, _t542, _t540, _t539, _t1962, _t537, _t1952, _t533, _t1686, _t1434, _t1951, _t532, _t1213, _t1212, _t706, _t1427, _t1207, _t528, _t1823, _t524, _t520, _t1926, _t624, _t519, _t516, _t38, _t515, _t513, _t1270, _t512, _t511, _t74, _t510, _t509, _t363, _t365, _t616, _t1058, _t1264, _t504, _t189, _t181, _t353, _t1971, _t400, _t965, _t1049, _t498, _t1401, _t1249, _t1731, _t333, _t1948, _t391, _t626, _t1554, _t1583, _t1582, _t898, _t484, _t483, _t1903, _t480, _t657, _t478, _t698, _t1654, _t560, _t477, _t1458, _t475, _t474, _t693, _t1283, _t473, _t788, _t647, _t1803, _t456, _t470, _t936, _t1450, _t1565, _t468, _t938, _t1449, _t467, _t697, _t695, _t464, _t806, _t1281, _t463, _t462, _t452, _t1906, _t661, _t485, _t444, _t575, _t491, _t336, _t1947, _t390, _t472, _t442, _t441, _t1656, _t551, _t1114, _t1186, _t438, _t701, _t437, _t916, _t664, _t487, _t918, _t12, _t663, _t486, _t917, _t1312, _t541, _t906, _t434, _t1414, _t538, _t905, _t433, _t1359, _t432, _t1358, _t431, _t1000, _t430, _t999, _t427, _t426, _t586, _t494, _t455, _t992, _t228, _t414, _t1239, _t778, _t223, _t1535, _t1840, _t1247, _t495, _t1252, _t4, _t184, _t660, _t1854, _t402, _t203, _t761, _t1536, _t224, _t360, _t1806, _t482, _t522, _t354, _t536, _t182, _t966, _t50, _t445, _t5, _t828, _t180, _t1970, _t399, _t967, _t1744, _t179, _t964, _t14, _t178, _t1048, _t177, _t1047, _t133, _t355, _t183, _t988, _t176, _t1633, _t774, _t95, _t889, _t1950, _t534, _t294, _t385, _t915, _t2014, _t310, _t826, _t765, _t290, _t326, _t971, _t204, _t559, _t1495, _t59, _t476, _t82, _t947, _t450, _t202, _t1201, _t1319, _t479, _t876, _t946, _t187, _t794, _t157, _t70, _t200, _t1200, _t666, _t489, _t1155, _t440, _t1834, _t506, _t413, _t156, _t785, _t395, _t1469, _t199, _t1486, _t394, _t2013, _t130, _t568, _t309, _t302, _t1881, _t786, _t127, _t1063, _t11, _t1392, _t780, _t451, _t49, _t289, _t1862, _t118, _t1062, _t1907, _t194, _t1170, _t377, _t117, _t347, _t751, _t19, _t382, _t984, _t113, _t110, _t102, _t1993, _t299, _t28, _t1159, _t101, _t1301, _t73, _t100, _t32, _t77, _t144, _t1399, _t315, _t453, _t421, _t993, _t1244, _t762, _t284, _t37, _t422, _t991, _t449, _t334, _t29, _t115, _t328, _t1457, _t13, _t222, _t1995, _t266, _t298, _t1464, _t821, _t1867, _t69, _t1286, _t123, _t1325, _t307, _t2011, _t137, _t1612, _t64, _t621, _t358, _t796, _t288, _t772, _t731, _t405, _t1446, _t628, _t1555, _t1584, _t2009, _t135, _t1297, _t1949, _t393, _t103, _t1328, _t9, _t1559, _t106, _t753, _t53, _t1672, _t1421, _t114, _t65, _t1804, _t457, _t75, _t111, _t1860, _t43, _t366, _t1912, _t210, _t1400, _t1766, _t1071, _t1279, _t454, _t134, _t227, _t722, _t439, _t550, _t581, _t72, _t622, _t1541, _t27, _t709, _t729, _t141, _t1310, _t98, _t1356, _t66, _t1437, _t311, _t643, _t665, _t488, _t51, _t814, _t1578, _t324, _t1890, _t1779, _t833, _t1621, _t15, _t370, _t231, _t7, _t503, _t36, _t107, _t562, _t300, _t62, _t436, _t465, _t213, _t97, _t580, _t71, _t185, _t1137, _t16, _t1348, _t148, _t314, _t420, _t1243, _t8, _t76, _t1395, _t416, _t108, _t1241, _t40, _t35, _t1119, _t1299, _t754, _t688, _t109, _t1503, _t48, _t831, _t652, _t131, _t1304, _t191, _t308, _t1622, _t47, _t914, _t429, _t23, _t105, _t1564, _t31, _t407, _t658, _t732, _t339, _t57, _t58, _t1581, _t1749, _t192, _t756, _t216, _t20, _t335, _t214, _t466, _t81, _t738, _t257, _t739, _t258, _t67, _t549, _t1363, _t902, _t638, _t461, _t1577, _t579, _t68, _t205, _t767, _t968, _t6, _t912, _t795, _t287, _t1798, _t1430, _t576, _t1242, _t406, _t501, _t78, _t79, _t80, _t1832, _t505, _t1329, _t750, _t346, _t83, _t869, _t1569, _t696, _t84, _t46, _t1571, _t1436, _t1827, _t746, _t529, _t1342, _t86, _t1576, _t1240, _t545, _t514, _t158, _t90, _t94, _t1460, _t250, _t1373, _t1479, _t212, _t215, _t401, _t990, _t384, _t1750, _t193, _t757, _t217, _t1680, _t969, _t644, _t54, _t1367, _t292, _t471, _t1681, _t970, _t1682, _t641, _t26, _t458, _t496, _t1886, _t789, _t24, _t952, _t1580, _t741, _t320, _t880, _t499, _t525, _t745, _t497, _t1674, _t963, _t41, _t776, _t800, _t225, _t226, _t1825, _t587, _t481, _t460, _t637, _t897, _t87, _t1579, _t1751, _t229, _t386, _t373, _t1733, _t337, _t232, _t1195, _t1501, _t944, _t769, _t285, _t151, _t368, _t188, _t301, _t63, _t39, _t1276, _t321, _t1887, _t812, _t1302, _t649, _t1772, _t269, _t322, _t1888, _t808, _t1233, _t690, _t1737, _t338, _t1502, _t372, _t99, _t1156, _t448, _t150, _t770, _t797, _t286, _t1162, _t149, _t251, _t446, _t252, _t1322, _t1916, _t362, _t737, _t196, _t253, _t207, _t623, _t398, _t1263, _t197, _t254, _t1915, _t195, _t255, _t667, _t1311, _t256, _t122, _t1327, _t10, _t492, _t260, _t1908, _t261, _t142, _t727, _t1972, _t403, _t263, _t1056, _t30, _t306, _t2010, _t136, _t264, _t686, _t1338, _t330, _t744, _t268, _t146, _t886, _t410, _t733, _t932, _t1859, _t1345, _t1232, _t885, _t1699, _t1168, _t1053, _t325, _t888, _t802, _t293, _t91, _t1190, _t781, _t119, _t1131, _t303, _t1828, _t749, _t340, _t782, _t120, _t304, _t1829, _t747, _t341, _t783, _t121, _t1324, _t262, _t305, _t1830, _t1738, _t342, _t312, _t313, _t412, _t934, _t1562, _t323, _t1889, _t809, _t327, _t116, _t329, _t1339, _t331, _t332, _t1946, _t388, _t877, _t230, _t369, _t1500, _t552, _t18, _t374, _t375, _t376, _t85, _t1826, _t1341, _t1182, _t387, _t1404, _t490, _t1179, _t389, _t1403, _t128, _t1296, _t45, _t1529, _t428, _t267, _t1259, _t408, _t913, _t734, _t411, _t933, _t805, _t1280, _t88, _t810, _t271, _t1781, _t811, _t813, _t1786, _t815, _t1898, _t1153, _t816, _t817, _t1198, _t773, _t798, _t775, _t799, _t1608, _t777, _t801, _t818, _t977, _t819, _t1791, _t820, _t823, _t825, _t827, _t829, _t650, _t1303, _t830, _t469, _t646, _t904, _t651, _t1306, _t832, _t653, _t132, _t1305, _t839, _t1664, _t841, _t1423, _t847, _t848, _t849, _t850, _t851, _t578, _t1432, _t852, _t853, _t854, _t842, _t843, _t844, _t845, _t834, _t835, _t1199, _t627, _t861, _t139, _t654, _t1307, _t863, _t864, _t1227, _t865, _t1623, _t931, _t866, _t856, _t857, _t1440, _t868, _t940, _t1568, _t316, _t870, _t318, _t871, _t319, _t317, _t873, _t874, _t945, _t875, _t878, _t359, _t881, _t186, _t884, _t887, _t891, _t892, _t893, _t717, _t895, _t896, _t1615, _t899, _t900, _t381, _t983, _t901, _t435, _t903, _t907, _t1704, _t1277, _t908, _t147, _t910, _t1901, _t730, _t911, _t921, _t922, _t1442, _t879, _t1223, _t925, _t926, _t929, _t930, _t883, _t1230, _t935, _t1451, _t1563, _t937, _t1566, _t939, _t1567, _t948, _t1285, _t547, _t951, _t953, _t954, _t955, _t1042, _t1671, _t961, _t959, _t1039, _t1466, _t33, _t962, _t1254, _t974, _t371, _t975, _t976, _t1386, _t928, _t1293, _t956, _t957, _t989, _t1180, _t994, _t1181, _t995, _t996, _t997, _t998, _t1113, _t1005, _t1365, _t1473, _t1282, _t1366, _t1123, _t924, _t927, _t1396, _t1393, _t1394, _t273, _t1035, _t1037, _t1038, _t1040, _t1041, _t610, _t1468, _t1043, _t1044, _t1046, _t1052, _t1054, _t1057, _t2008, _t1598, _t1065, _t1066, _t1067, _t1068, _t1072, _t1493, _t1613, _t1289, _t1660, _t1292, _t60, _t61, _t1185, _t978, _t1619, _t378, _t979, _t1172, _t379, _t981, _t380, _t982, _t985, _t1116, _t1117, _t1118, _t1368, _t1120, _t1475, _t1121, _t1122, _t1124, _t1631, _t1125, _t1632, _t1126, _t1127, _t1397, _t1128, _t1129, _t1130, _t941, _t1132, _t1133, _t1134, _t17, _t943, _t1135, _t1069, _t1492, _t1139, _t1652, _t1879, _t125, _t1142, _t1880, _t126, _t1143, _t1487, _t1146, _t920, _t1390, _t1147, _t1148, _t42, _t1497, _t1783, _t1149, _t1150, _t1151, _t1498, _t1897, _t1152, _t1154, _t124, _t1144, _t1140, _t1157, _t1505, _t1161, _t1164, _t1408, _t1165, _t392, _t980, _t1171, _t1203, _t1261, _t1176, _t972, _t1166, _t1177, _t1178, _t571, _t1424, _t96, _t949, _t1138, _t1194, _t89, _t1189, _t92, _t1191, _t93, _t1205, _t211, _t1206, _t1209, _t708, _t1429, _t218, _t1210, _t1211, _t1217, _t1218, _t1219, _t1542, _t1220, _t1222, _t1226, _t1228, _t1229, _t1231, _t1234, _t1235, _t1236, _t1237, _t1238, _t1245, _t424, _t1454, _t720, _t645, _t702, _t703, _t890, _t704, _t705, _t44, _t1248, _t1250, _t1253, _t1257, _t1255, _t1607, _t1705, _t1002, _t1271, _t1272, _t1287, _t1288, _t1382, _t1290, _t1294, _t1295, _t1291, _t1617, _t726, _t140, _t1308, _t1298, _t1315, _t1911, _t209, _t1316, _t1317, _t1318, _t1320, _t1309, _t1323, _t1481, _t508, _t1330, _t1333, _t1380, _t1383, _t1942, _t530, _t1343, _t1943, _t1346, _t1347, _t1349, _t1350, _t1353, _t1355, _t1357, _t1251, _t1361, _t1362, _t1369, _t1702, _t1275, _t1111, _t1379, _t1491, _t1381, _t1384, _t923, _t1385, _t1388, _t1184, _t1370, _t1371, _t1372, _t1478, _t1374, _t1375, _t1391, _t1398, _t942, _t1402, _t1405, _t1406, _t1409, _t1411, _t1413, _t1420, _t1663, _t1418, _t1422, _t572, _t1425, _t570, _t1426, _t577, _t1431, _t1433, _t1416, _t1687, _t582, _t112, _t1439, _t1441, _t1444, _t1445, _t1561, _t1740, _t1453, _t1455, _t837, _t1456, _t1459, _t840, _t1461, _t1447, _t862, _t1462, _t1463, _t1586, _t1467, _t1471, _t1472, _t1059, _t1476, _t1480, _t1482, _t1483, _t2016, _t1484, _t1485, _t1488, _t1489, _t1490, _t1494, _t1496, _t1499, _t1504, _t219, _t1532, _t220, _t1533, _t221, _t1534, _t1538, _t1539, _t1540, _t1543, _t1547, _t1545, _t1225, _t1558, _t1560, _t1570, _t1573, _t1574, _t1575, _t1530, _t1045, _t1603, _t1604, _t1477, _t1605, _t1600, _t2015, _t138, _t1610, _t1175, _t1260, _t1262, _t270, _t272, _t787, _t274, _t790, _t275, _t21, _t276, _t807, _t277, _t279, _t1614, _t1387, _t1618, _t1620;
	float _t2566, _t2565, _t2553, _t2552, _t2551, _t2550, _t2549, _t2548, _t2547, _t2544, _t2542, _t2568, _t2541, _t2535, _t2529, _t2527, _t2526, _t2525, _t2523, _t2521, _t2520, _t2516, _t2509, _t2508, _t2507, _t2505, _t2504, _t2500, _t2498, _t2495, _t2494, _t2493, _t2492, _t2490, _t2488, _t2485, _t2482, _t2481, _t2480, _t2478, _t2476, _t2474, _t2471, _t2470, _t2469, _t2468, _t2466, _t2464, _t2463, _t2461, _t2459, _t2458, _t2455, _t2447, _t2446, _t2445, _t2444, _t2486, _t2442, _t2435, _t2432, _t2431, _t2430, _t2429, _t2428, _t2427, _t2426, _t2425, _t2423, _t2421, _t2420, _t2417, _t2415, _t2414, _t2413, _t2412, _t2410, _t2408, _t2407, _t2403, _t2401, _t2397, _t2506, _t2396, _t2395, _t2394, _t2393, _t2391, _t2389, _t2386, _t2383, _t2381, _t2376, _t2375, _t2369, _t2367, _t2366, _t2365, _t2364, _t2360, _t2355, _t2353, _t2351, _t2350, _t2349, _t2346, _t2345, _t2344, _t2341, _t2340, _t2503, _t2337, _t2334, _t2333, _t2332, _t2330, _t2329, _t2328, _t2327, _t2326, _t2325, _t2324, _t2323, _t2321, _t2320, _t2319, _t2318, _t2315, _t2314, _t2543, _t2311, _t2306, _t2305, _t2303, _t2301, _t2299, _t2297, _t2296, _t2295, _t2294, _t2293, _t2291, _t2310, _t2289, _t2522, _t2287, _t2382, _t2280, _t2279, _t2277, _t2275, _t2511, _t2272, _t2271, _t2270, _t2268, _t2266, _t2265, _t2477, _t2264, _t2475, _t2263, _t2262, _t2260, _t2259, _t2258, _t2257, _t2255, _t2254, _t2253, _t2250, _t2248, _t2247, _t2246, _t2243, _t2472, _t2241, _t2240, _t2239, _t2237, _t2236, _t2235, _t2233, _t2231, _t2457, _t2228, _t2456, _t2227, _t2226, _t2225, _t2221, _t2219, _t2218, _t2443, _t2217, _t2441, _t2216, _t2213, _t2212, _t2211, _t2439, _t2209, _t2438, _t2208, _t2434, _t2207, _t2203, _t2433, _t2202, _t2201, _t2199, _t2197, _t2195, _t2194, _t2190, _t2189, _t2188, _t2187, _t2185, _t2183, _t2182, _t2181, _t2180, _t2179, _t2175, _t2170, _t2167, _t2166, _t2164, _t2163, _t2162, _t2169, _t2160, _t2159, _t2157, _t2156, _t2563, _t2149, _t2148, _t2144, _t2138, _t2137, _t2135, _t2134, _t2133, _t2130, _t2127, _t2126, _t2125, _t2123, _t2121, _t2120, _t2118, _t2215, _t2116, _t2411, _t2115, _t2114, _t2192, _t2112, _t2111, _t2109, _t2108, _t2107, _t2424, _t2104, _t2103, _t2102, _t2101, _t2100, _t2099, _t2097, _t2095, _t2094, _t2105, _t2200, _t2090, _t2089, _t2088, _t2087, _t2256, _t2086, _t2085, _t2083, _t2080, _t2078, _t2077, _t2223, _t2074, _t2073, _t2451, _t2072, _t2071, _t2070, _t2069, _t2067, _t2066, _t2064, _t2419, _t2098, _t2063, _t2062, _t2061, _t2418, _t2060, _t2174, _t2059, _t2172, _t2058, _t2379, _t2300, _t2274, _t2057, _t2056, _t2050, _t2338, _t2049, _t2502, _t2336, _t2048, _t2047, _t2046, _t2045, _t2044, _t2304, _t2043, _t2517, _t2242, _t2040, _t2039, _t2038, _t2036, _t2572, _t2035, _t2245, _t2033, _t2142, _t2032, _t2561, _t2031, _t2030, _t2491, _t2244, _t2249, _t2473, _t2278, _t2387, _t1776, _t1775, _t1773, _t1769, _t2380, _t2377, _t2368, _t2513, _t2398, _t2392, _t2285, _t2281, _t1818, _t1817, _t1816, _t1815, _t1810, _t1809, _t2276, _t2273, _t2531, _t2402, _t1727, _t1629, _t1628, _t1709, _t1708, _t1724, _t1721, _t1720, _t1719, _t1718, _t2198, _t1717, _t1716, _t1715, _t1714, _t2106, _t1713, _t1712, _t1711, _t2052, _t1650, _t1648, _t1647, _t2560, _t1646, _t1643, _t1642, _t1641, _t1640, _t2312, _t594, _t2286, _t603, _t1516, _t2076, _t714, _t348, _t1593, _t634, _t2348, _t680, _t677, _t673, _t671, _t670, _t2347, _t633, _t2501, _t2214, _t599, _t1812, _t2540, _t595, _t2510, _t2309, _t1197, _t592, _t591, _t590, _t589, _t1524, _t2512, _t2399, _t2251, _t2161, _t2055, _t1188, _t1092, _t1014, _t2173, _t2168, _t2054, _t2153, _t2178, _t1814, _t2388, _t1813, _t2143, _t2479, _t639, _t1519, _t2450, _t1096, _t2288, _t2196, _t2453, _t2362, _t2422, _t718, _t2238, _t1591, _t692, _t2267, _t2373, _t2129, _t1313, _t2372, _t2184, _t597, _t596, _t2158, _t2065, _t2546, _t2538, _t418, _t2378, _t356, _t2343, _t606, _t160, _t2390, _t2110, _t159, _t2176, _t165, _t162, _t1029, _t607, _t247, _t172, _t236, _t636, _t2404, _t2533, _t2269, _t2374, _t1510, _t1008, _t2252, _t396, _t1509, _t723, _t1512, _t784, _t2440, _t614, _t2524, _t2146, _t155, _t598, _t1726, _t2316, _t2539, _t2339, _t2530, _t1511, _t1517, _t242, _t1514, _t2358, _t2117, _t1335, _t604, _t1093, _t2370, _t2298, _t168, _t2193, _t238, _t1594, _t2385, _t1326, _t352, _t154, _t1518, _t243, _t2284, _t2119, _t2406, _t2515, _t2448, _t443, _t1774, _t600, _t241, _t2053, _t2528, _t2514, _t1515, _t2359, _t601, _t239, _t2487, _t2499, _t2091, _t163, _t2558, _t1018, _t409, _t735, _t2454, _t2361, _t2222, _t632, _t1506, _t679, _t2573, _t175, _t2465, _t2092, _t164, _t2093, _t167, _t2567, _t169, _t2283, _t1590, _t2154, _t415, _t2079, _t2075, _t2569, _t170, _t2570, _t2409, _t173, _t2571, _t174, _t2460, _t1034, _t244, _t2037, _t2342, _t675, _t2436, _t2210, _t605, _t2042, _t2186, _t1520, _t2096, _t2449, _t1606, _t245, _t246, _t248, _t2363, _t249, _t2462, _t2081, _t233, _t2497, _t2416, _t234, _t2532, _t2354, _t676, _t674, _t859, _t602, _t1022, _t2313, _t1597, _t1100, _t1609, _t2356, _t2371, _t1021, _t153, _t2400, _t593, _t2308, _t2232, _t2452, _t1587, _t2282, _t1723, _t2224, _t2292, _t2234, _t1765, _t1332, _t2261, _t1645, _t1522, _t1644, _t1521, _t689, _t404, _t2384, _t2082, _t867, _t1722, _t2136, _t2034, _t1073, _t1081, _t1087, _t2518, _t2405, _t2302, _t240, _t1101, _t2537, _t2171, _t2437, _t608, _t609, _t2206, _t2534, _t2335, _t1508, _t1551, _t2229, _t1637, _t872, _t684, _t2357, _t171, _t2139, _t1097, _t640, _t2131, _t361, _t1553, _t631, _t2151, _t2467, _t2084, _t1592, _t1076, _t1015, _t1102, _t2545, _t1003, _t1004, _t1006, _t1009, _t1010, _t2140, _t1011, _t1013, _t1016, _t2559, _t1019, _t1020, _t1025, _t1026, _t1027, _t1634, _t1030, _t1635, _t1031, _t2177, _t1032, _t1265, _t2322, _t2331, _t1075, _t1077, _t2496, _t1078, _t1079, _t2141, _t1080, _t1088, _t1085, _t2122, _t1086, _t1089, _t1090, _t1091, _t1094, _t1095, _t1103, _t1107, _t1110, _t1108, _t1083, _t2556, _t1616, _t986, _t1023, _t1024, _t1630, _t2147, _t1028, _t2150, _t1638, _t1106, _t1639, _t2562, _t2155, _t1777, _t2489, _t2519, _t2564, _t1526, _t1525, _t1192, _t2041, _t1550, _t2352, _t1246, _t710, _t2536, _t1596, _t2124, _t1269, _t1099, _t2132, _t1278, _t1098, _t1273, _t2145, _t2557, _t672, _t1321, _t2484, _t1811, _t1725, _t2307, _t1360, _t1084, _t2555, _t1012, _t2128, _t2317, _t1104, _t1105, _t2152, _t1523, _t1649, _t2051, _t166, _t2165, _t2191, _t2220, _t237, _t1556, _t2204, _t2205, _t2113, _t2483, _t1507, _t1513, _t1548, _t1549, _t2068, _t1557, _t2230, _t1588, _t1589, _t1531, _t1601, _t2290, _t278, _t1017, _t2554;
	/* Forward */
	_t4 = scene[8] * 0.500000;
	_t5 = scene[4] * 0.500000;
	_t6 = _t5+_t4;
	_t7 = _t6+scene[16];
	_t8 = scene[7] * 0.500000;
	_t9 = scene[3] * 0.500000;
	_t10 = _t9+_t8;
	_t11 = _t10+scene[15];
	_t12 = scene[6] * 0.500000;
	_t13 = scene[2] * 0.500000;
	_t14 = _t13+_t12;
	_t15 = _t14+scene[14];
	_t16 = scene[5] * 0.500000;
	_t17 = scene[1] * 0.500000;
	_t18 = _t17+_t16;
	_t19 = _t18+scene[13];
	_t20 = (float)1.0 / (_t7);
	_t21 = _t11 * _t20;
	_t22 = _t15 * _t20;
	_t23 = _t19 * _t20;
	_t24 = sqrt(_t23*_t23+_t22*_t22+_t21*_t21);
	_t25 = (float)1.0 / (_t24);
	_t26 = _t23 * _t25;
	_t27 = _t22 * _t25;
	_t28 = _t21 * _t25;
	_t29 = scene[24] * scene[24];
	_t30 = scene[25] * scene[25];
	_t31 = scene[26] * scene[26];
	_t32 = scene[24] * scene[25];
	_t33 = scene[24] * scene[26];
	_t34 = scene[25] * scene[26];
	_t35 = scene[24] * scene[27];
	_t36 = scene[25] * scene[27];
	_t37 = scene[26] * scene[27];
	_t38 = _t30+_t31;
	_t39 = 2.000000 * _t38;
	_t40 = 1.000000-_t39;
	_t41 = _t32+_t37;
	_t42 = 2.000000 * _t41;
	_t43 = _t33-_t36;
	_t44 = 2.000000 * _t43;
	_t45 = _t32-_t37;
	_t46 = 2.000000 * _t45;
	_t47 = _t29+_t31;
	_t48 = 2.000000 * _t47;
	_t49 = 1.000000-_t48;
	_t50 = _t34+_t35;
	_t51 = 2.000000 * _t50;
	_t52 = _t33+_t36;
	_t53 = 2.000000 * _t52;
	_t54 = _t34-_t35;
	_t55 = 2.000000 * _t54;
	_t56 = _t29+_t30;
	_t57 = 2.000000 * _t56;
	_t58 = 1.000000-_t57;
	_t59 = _t58 * _t28;
	_t60 = _t51 * _t27;
	_t61 = _t44 * _t26;
	_t62 = _t61+_t60;
	_t63 = _t62+_t59;
	_t64 = _t55 * _t28;
	_t65 = _t49 * _t27;
	_t66 = _t42 * _t26;
	_t67 = _t66+_t65;
	_t68 = _t67+_t64;
	_t69 = _t53 * _t28;
	_t70 = _t46 * _t27;
	_t71 = _t40 * _t26;
	_t72 = _t71+_t70;
	_t73 = _t72+_t69;
	_t74 = scene[8] * primary[2];
	_t75 = scene[4] * primary[1];
	_t76 = _t75+_t74;
	_t77 = _t76+scene[16];
	_t78 = scene[7] * primary[2];
	_t79 = scene[3] * primary[1];
	_t80 = _t79+_t78;
	_t81 = _t80+scene[15];
	_t82 = scene[6] * primary[2];
	_t83 = scene[2] * primary[1];
	_t84 = _t83+_t82;
	_t85 = _t84+scene[14];
	_t86 = scene[5] * primary[2];
	_t87 = scene[1] * primary[1];
	_t88 = _t87+_t86;
	_t89 = _t88+scene[13];
	_t90 = (float)1.0 / (_t77);
	_t91 = _t81 * _t90;
	_t92 = _t85 * _t90;
	_t93 = _t89 * _t90;
	_t94 = sqrt(_t93*_t93+_t92*_t92+_t91*_t91);
	_t95 = (float)1.0 / (_t94);
	_t96 = _t93 * _t95;
	_t97 = _t92 * _t95;
	_t98 = _t91 * _t95;
	_t99 = scene[24] * scene[24];
	_t100 = scene[25] * scene[25];
	_t101 = scene[26] * scene[26];
	_t102 = scene[24] * scene[25];
	_t103 = scene[24] * scene[26];
	_t104 = scene[25] * scene[26];
	_t105 = scene[24] * scene[27];
	_t106 = scene[25] * scene[27];
	_t107 = scene[26] * scene[27];
	_t108 = _t100+_t101;
	_t109 = 2.000000 * _t108;
	_t110 = 1.000000-_t109;
	_t111 = _t102+_t107;
	_t112 = 2.000000 * _t111;
	_t113 = _t103-_t106;
	_t114 = 2.000000 * _t113;
	_t115 = _t102-_t107;
	_t116 = 2.000000 * _t115;
	_t117 = _t99+_t101;
	_t118 = 2.000000 * _t117;
	_t119 = 1.000000-_t118;
	_t120 = _t104+_t105;
	_t121 = 2.000000 * _t120;
	_t122 = _t103+_t106;
	_t123 = 2.000000 * _t122;
	_t124 = _t104-_t105;
	_t125 = 2.000000 * _t124;
	_t126 = _t99+_t100;
	_t127 = 2.000000 * _t126;
	_t128 = 1.000000-_t127;
	_t129 = _t128 * _t98;
	_t130 = _t121 * _t97;
	_t131 = _t114 * _t96;
	_t132 = _t131+_t130;
	_t133 = _t132+_t129;
	_t134 = _t125 * _t98;
	_t135 = _t119 * _t97;
	_t136 = _t112 * _t96;
	_t137 = _t136+_t135;
	_t138 = _t137+_t134;
	_t139 = _t123 * _t98;
	_t140 = _t116 * _t97;
	_t141 = _t110 * _t96;
	_t142 = _t141+_t140;
	_t143 = _t142+_t139;
	_t144 = _t73 * _t143 + _t68 * _t138 + _t63 * _t133;
	_t145 = scene[33] / _t144;
	_t146 = _t145 * _t145;
	_t147 = _t146 / _t144;
	_t148 = scene[32] / _t147;
	_t149 = _t148 * _t148;
	cif (vertParams[3] == 0.000000) {
		_t162 = vertParams[9] * vertParams[11];
		_t163 = vertParams[8] * vertParams[12];
		_t164 = _t163-_t162;
		_t165 = vertParams[8] * vertParams[13];
		_t166 = vertParams[10] * vertParams[11];
		_t167 = _t166-_t165;
		_t168 = vertParams[10] * vertParams[12];
		_t169 = vertParams[9] * vertParams[13];
		_t170 = _t169-_t168;
		_t171 = sqrt(_t170*_t170+_t167*_t167+_t164*_t164);
		_t172 = (float)1.0 / (_t171);
		_t173 = _t170 * _t172;
		_t174 = _t167 * _t172;
		_t175 = _t164 * _t172;
		_t176 = _t138 * vertParams[11];
		_t177 = _t143 * vertParams[12];
		_t178 = _t177-_t176;
		_t179 = _t143 * vertParams[13];
		_t180 = _t133 * vertParams[11];
		_t181 = _t180-_t179;
		_t182 = _t133 * vertParams[12];
		_t183 = _t138 * vertParams[13];
		_t184 = _t183-_t182;
		_t185 = _t184 * vertParams[8] + _t181 * vertParams[9] + _t178 * vertParams[10];
		_t186 = (float)1.0 / (_t185);
		_t187 = scene[18]-vertParams[5];
		_t188 = scene[19]-vertParams[6];
		_t189 = scene[20]-vertParams[7];
		_t190 = _t187 * _t184 + _t188 * _t181 + _t189 * _t178;
		_t191 = _t190 * _t186;
		_t192 = _t188 * vertParams[8];
		_t193 = _t187 * vertParams[9];
		_t194 = _t193-_t192;
		_t195 = _t187 * vertParams[10];
		_t196 = _t189 * vertParams[8];
		_t197 = _t196-_t195;
		_t198 = _t189 * vertParams[9];
		_t199 = _t188 * vertParams[10];
		_t200 = _t199-_t198;
		_t201 = _t143 * _t200 + _t138 * _t197 + _t133 * _t194;
		_t202 = _t201 * _t186;
		_t203 = vertParams[11] * _t200 + vertParams[12] * _t197 + vertParams[13] * _t194;
		_t204 = _t203 * _t186;
		_t205 = 1.000000-_t191;
		_t206 = _t205-_t202;
		_t207 = _t204 * _t143;
		_t208 = scene[18]+_t207;
		_t209 = _t204 * _t138;
		_t210 = scene[19]+_t209;
		_t211 = _t204 * _t133;
		_t212 = scene[20]+_t211;
		_t213 = _t202 * vertParams[20];
		_t214 = _t191 * vertParams[17];
		_t215 = _t206 * vertParams[14];
		_t216 = _t215+_t214;
		_t217 = _t216+_t213;
		_t218 = _t202 * vertParams[21];
		_t219 = _t191 * vertParams[18];
		_t220 = _t206 * vertParams[15];
		_t221 = _t220+_t219;
		_t222 = _t221+_t218;
		_t223 = _t202 * vertParams[22];
		_t224 = _t191 * vertParams[19];
		_t225 = _t206 * vertParams[16];
		_t226 = _t225+_t224;
		_t227 = _t226+_t223;
		_t228 = sqrt(_t217*_t217+_t222*_t222+_t227*_t227);
		_t229 = (float)1.0 / (_t228);
		_t230 = _t217 * _t229;
		_t231 = _t222 * _t229;
		_t232 = _t227 * _t229;
		cif (vertParams[41] == 0.000000) {
			_t233 = _t191;
			_t234 = _t202;
		}
		else {
			_t236 = _t202 * vertParams[46];
			_t237 = _t191 * vertParams[44];
			_t238 = 1.000000-_t191;
			_t239 = _t238-_t202;
			_t240 = _t239 * vertParams[42];
			_t241 = _t240+_t237;
			_t242 = _t241+_t236;
			_t243 = _t202 * vertParams[47];
			_t244 = _t191 * vertParams[45];
			_t245 = 1.000000-_t191;
			_t246 = _t245-_t202;
			_t247 = _t246 * vertParams[43];
			_t248 = _t247+_t244;
			_t249 = _t248+_t243;
			_t233 = _t242;
			_t234 = _t249;
		}
		_t150 = _t208;
		_t151 = _t210;
		_t152 = _t212;
		_t153 = _t173;
		_t154 = _t174;
		_t155 = _t175;
		_t156 = _t230;
		_t157 = _t231;
		_t158 = _t232;
		_t159 = _t233;
		_t160 = _t234;
	}
	else {
		_t150 = 0.000000;
		_t151 = 0.000000;
		_t152 = 0.000000;
		_t153 = 0.000000;
		_t154 = 0.000000;
		_t155 = 0.000000;
		_t156 = 0.000000;
		_t157 = 0.000000;
		_t158 = 0.000000;
		_t159 = 0.000000;
		_t160 = 0.000000;
	}
	_t250 = -_t143;
	_t251 = -_t138;
	_t252 = -_t133;
	_t253 = scene[20]-_t152;
	_t254 = _t253 * _t253;
	_t255 = scene[19]-_t151;
	_t256 = _t255 * _t255;
	_t257 = scene[18]-_t150;
	_t258 = _t257 * _t257;
	_t259 = _t258+_t256;
	_t260 = _t259+_t254;
	_t261 = _t260 * _t260;
	_t262 = _t149 * _t261;
	_t263 = _t143 * _t156 + _t138 * _t157 + _t133 * _t158;
	cif (_t263 >= 0.000000) {
		_t264 = _t263;
	}
	else {
		_t266 = -_t263;
		_t264 = _t266;
	}
	_t267 = _t264 * _t264;
	_t268 = (float)1.0 / (_t267);
	_t269 = _t262 * _t268;
	cif ((scene[0] == 1.000000) && (vertParams[108] == 1.000000)) {
		cif (vertParams[62] == 0.000000) {
			_t292 = 1.000001-primary[3];
			_t293 = sqrt(_t292);
			_t294 = 1.000000-_t293;
			_t295 = _t293 * primary[4];
			_t296 = vertParams[70] * _t295;
			_t297 = vertParams[67] * _t294;
			_t298 = vertParams[64]+_t297;
			_t299 = _t298+_t296;
			_t300 = vertParams[71] * _t295;
			_t301 = vertParams[68] * _t294;
			_t302 = vertParams[65]+_t301;
			_t303 = _t302+_t300;
			_t304 = vertParams[72] * _t295;
			_t305 = vertParams[69] * _t294;
			_t306 = vertParams[66]+_t305;
			_t307 = _t306+_t304;
			_t308 = 1.000000-_t294;
			_t309 = _t308-_t295;
			_t310 = vertParams[79] * _t295;
			_t311 = vertParams[76] * _t294;
			_t312 = vertParams[73] * _t309;
			_t313 = _t312+_t311;
			_t314 = _t313+_t310;
			_t315 = vertParams[80] * _t295;
			_t316 = vertParams[77] * _t294;
			_t317 = vertParams[74] * _t309;
			_t318 = _t317+_t316;
			_t319 = _t318+_t315;
			_t320 = vertParams[81] * _t295;
			_t321 = vertParams[78] * _t294;
			_t322 = vertParams[75] * _t309;
			_t323 = _t322+_t321;
			_t324 = _t323+_t320;
			_t325 = sqrt(_t314*_t314+_t319*_t319+_t324*_t324);
			_t326 = (float)1.0 / (_t325);
			_t327 = _t314 * _t326;
			_t328 = _t319 * _t326;
			_t329 = _t324 * _t326;
			_t284 = _t299;
			_t285 = _t303;
			_t286 = _t307;
			_t287 = _t327;
			_t288 = _t328;
			_t289 = _t329;
			_t290 = vertParams[107];
		}
		else {
			_t284 = 0.000000;
			_t285 = 0.000000;
			_t286 = 0.000000;
			_t287 = 0.000000;
			_t288 = 0.000000;
			_t289 = 0.000000;
			_t290 = 0.000000;
		}
		_t330 = _t284-_t150;
		_t331 = _t285-_t151;
		_t332 = _t286-_t152;
		_t333 = _t332 * _t332;
		_t334 = _t331 * _t331;
		_t335 = _t330 * _t330;
		_t336 = _t335+_t334;
		_t337 = _t336+_t333;
		_t338 = (float)1.0 / (_t337);
		_t339 = sqrt(_t338);
		_t340 = _t330 * _t339;
		_t341 = _t331 * _t339;
		_t342 = _t332 * _t339;
		cif (vertParams[51] == 1.000000) {
			_t352 = _t156 * _t250 + _t157 * _t251 + _t158 * _t252;
			cif (_t352 > 0.000000) {
				_t353 = _t156;
				_t354 = _t157;
				_t355 = _t158;
				_t356 = _t352;
			}
			else {
				_t358 = -_t156;
				_t359 = -_t157;
				_t360 = -_t158;
				_t361 = -_t352;
				_t353 = _t358;
				_t354 = _t359;
				_t355 = _t360;
				_t356 = _t361;
			}
			_t362 = _t353 * _t340 + _t354 * _t341 + _t355 * _t342;
			cif (vertParams[59] > 0.000000) {
				_t368 = _t250 * _t353 + _t251 * _t354 + _t252 * _t355;
				_t369 = 2.000000 * _t368;
				_t370 = _t369 * _t353;
				_t371 = _t370-_t250;
				_t372 = _t369 * _t354;
				_t373 = _t372-_t251;
				_t374 = _t369 * _t355;
				_t375 = _t374-_t252;
				_t376 = _t371 * _t340 + _t373 * _t341 + _t375 * _t342;
				_t377 = pow(_t376,vertParams[58]);
				_t378 = _t377 * 0.159155;
				cif (_t378 > 0.000000) {
					_t384 = vertParams[58]+1.000000;
					_t385 = vertParams[58]+2.000000;
					_t386 = _t385 * _t378;
					_t387 = vertParams[55] * _t386;
					_t388 = vertParams[56] * _t386;
					_t389 = vertParams[57] * _t386;
					_t390 = vertParams[59] * _t384;
					_t391 = _t390 * _t378;
					_t379 = _t387;
					_t380 = _t388;
					_t381 = _t389;
					_t382 = _t391;
				}
				else {
					_t379 = 0.000000;
					_t380 = 0.000000;
					_t381 = 0.000000;
					_t382 = 0.000000;
				}
				_t363 = _t379;
				_t364 = _t380;
				_t365 = _t381;
				_t366 = _t382;
			}
			else {
				_t363 = 0.000000;
				_t364 = 0.000000;
				_t365 = 0.000000;
				_t366 = 0.000000;
			}
			cif (vertParams[59] < 1.000000) {
				_t398 = vertParams[52] * 0.318310;
				_t399 = vertParams[53] * 0.318310;
				_t400 = vertParams[54] * 0.318310;
				_t401 = 1.000000-vertParams[59];
				_t402 = _t401 * 0.318310;
				_t403 = _t402 * _t362;
				_t404 = _t402 * _t356;
				_t392 = _t398;
				_t393 = _t399;
				_t394 = _t400;
				_t395 = _t403;
				_t396 = _t404;
			}
			else {
				_t392 = 0.000000;
				_t393 = 0.000000;
				_t394 = 0.000000;
				_t395 = 0.000000;
				_t396 = 0.000000;
			}
			_t405 = _t363+_t392;
			_t406 = _t364+_t393;
			_t407 = _t365+_t394;
			_t408 = _t366+_t395;
			_t409 = _t366+_t396;
			_t410 = _t405 * _t362;
			_t411 = _t406 * _t362;
			_t412 = _t407 * _t362;
			_t343 = _t410;
			_t344 = _t411;
			_t345 = _t412;
			_t346 = _t362;
			_t347 = _t408;
			_t348 = _t409;
		}
		else cif (vertParams[51] == 2.000000) {
			_t413 = _t250 * _t156 + _t251 * _t157 + _t252 * _t158;
			_t414 = _t340 * _t156 + _t341 * _t157 + _t342 * _t158;
			_t415 = _t413 * _t414;
			cif (_t413 > 0.000000) {
				_t416 = vertParams[58];
			}
			else {
				_t416 = vertParams[59];
			}
			cif (_t414 > 0.000000) {
				_t418 = vertParams[58];
			}
			else {
				_t418 = vertParams[59];
			}
			cif (_t415 > 0.000000) {
				_t424 = _t250+_t340;
				_t425 = _t251+_t341;
				_t426 = _t252+_t342;
				_t427 = sqrt(_t424*_t424+_t425*_t425+_t426*_t426);
				_t428 = (float)1.0 / (_t427);
				_t429 = _t424 * _t428;
				_t430 = _t425 * _t428;
				_t431 = _t426 * _t428;
				_t420 = _t429;
				_t421 = _t430;
				_t422 = _t431;
			}
			else {
				_t432 = _t340 * _t416;
				_t433 = _t250+_t432;
				_t434 = _t341 * _t416;
				_t435 = _t251+_t434;
				_t436 = _t342 * _t416;
				_t437 = _t252+_t436;
				_t438 = sqrt(_t433*_t433+_t435*_t435+_t437*_t437);
				_t439 = (float)1.0 / (_t438);
				_t440 = _t433 * _t439;
				_t441 = _t435 * _t439;
				_t442 = _t437 * _t439;
				_t420 = _t440;
				_t421 = _t441;
				_t422 = _t442;
			}
			_t443 = _t420 * _t156 + _t421 * _t157 + _t422 * _t158;
			cif (_t443 < 0.000000) {
				_t448 = -_t420;
				_t449 = -_t421;
				_t450 = -_t422;
				_t444 = _t448;
				_t445 = _t449;
				_t446 = _t450;
			}
			else {
				_t444 = _t420;
				_t445 = _t421;
				_t446 = _t422;
			}
			_t451 = _t250 * _t444 + _t251 * _t445 + _t252 * _t446;
			_t452 = _t340 * _t444 + _t341 * _t445 + _t342 * _t446;
			cif (_t158 < -0.999999) {
				_t453 = 0.000000;
				_t454 = -1.000000;
				_t455 = 0.000000;
				_t456 = -1.000000;
				_t457 = 0.000000;
				_t458 = 0.000000;
			}
			else {
				_t460 = 1.000000+_t158;
				_t461 = (float)1.0 / (_t460);
				_t462 = -_t156;
				_t463 = _t462 * _t157;
				_t464 = _t463 * _t461;
				_t465 = -_t156;
				_t466 = _t156 * _t156;
				_t467 = _t466 * _t461;
				_t468 = 1.000000-_t467;
				_t469 = -_t157;
				_t470 = _t157 * _t157;
				_t471 = _t470 * _t461;
				_t472 = 1.000000-_t471;
				_t453 = _t468;
				_t454 = _t464;
				_t455 = _t465;
				_t456 = _t464;
				_t457 = _t472;
				_t458 = _t469;
			}
			_t473 = _t156 * _t444 + _t157 * _t445 + _t158 * _t446;
			_t474 = _t456 * _t444 + _t457 * _t445 + _t458 * _t446;
			_t475 = _t453 * _t444 + _t454 * _t445 + _t455 * _t446;
			_t476 = _t473 * _t473;
			_t477 = vertParams[60] * vertParams[60];
			_t478 = _t474 * _t474;
			_t479 = _t478 / _t477;
			_t480 = vertParams[60] * vertParams[60];
			_t481 = _t475 * _t475;
			_t482 = _t481 / _t480;
			_t483 = _t482+_t479;
			_t484 = _t483 / _t476;
			_t485 = _t476 * _t476;
			_t486 = 3.141593 * vertParams[60];
			_t487 = _t486 * vertParams[60];
			_t488 = _t487 * _t485;
			_t489 = -_t484;
			_t490 = exp(_t489);
			_t491 = _t490 / _t488;
			cif (_t451 > 0.000000) {
				_t492 = vertParams[59];
			}
			else {
				_t492 = vertParams[58];
			}
			_t494 = _t492 * _t492;
			_t495 = _t451 * _t451;
			_t496 = 1.000000-_t495;
			_t497 = _t496 * _t494;
			_t498 = 1.000000-_t497;
			cif (_t498 <= 0.000000) {
				_t499 = 1.000000;
			}
			else {
				cif (_t451 >= 0.000000) {
					_t501 = _t451;
				}
				else {
					_t503 = -_t451;
					_t501 = _t503;
				}
				_t504 = sqrt(_t498);
				_t505 = vertParams[58] * _t504;
				_t506 = vertParams[58] * _t501;
				_t507 = _t501+_t505;
				_t508 = _t501-_t505;
				_t509 = _t508 / _t507;
				_t510 = _t506+_t504;
				_t511 = _t506-_t504;
				_t512 = _t511 / _t510;
				_t513 = _t512 * _t512;
				_t514 = _t509 * _t509;
				_t515 = _t514+_t513;
				_t516 = 0.500000 * _t515;
				_t499 = _t516;
			}
			cif (_t413 >= 0.000000) {
				_t517 = _t413;
			}
			else {
				_t519 = -_t413;
				_t517 = _t519;
			}
			cif (_t414 >= 0.000000) {
				_t520 = _t414;
			}
			else {
				_t522 = -_t414;
				_t520 = _t522;
			}
			_t523 = _t520 * _t520;
			_t524 = 1.000001-_t523;
			cif (_t524 >= 0.000000) {
				_t525 = _t524;
			}
			else {
				_t527 = -_t524;
				_t525 = _t527;
			}
			_t528 = sqrt(_t525);
			_t529 = _t528 / _t520;
			cif (_t529 <= 0.000000) {
				_t530 = 1.000000;
			}
			else {
				_t532 = vertParams[60] * _t529;
				_t533 = (float)1.0 / (_t532);
				cif (_t533 >= 1.600000) {
					_t534 = 1.000000;
				}
				else {
					_t536 = _t533 * _t533;
					_t537 = 2.577000 * _t536;
					_t538 = 2.276000 * _t533;
					_t539 = 1.000000+_t538;
					_t540 = _t539+_t537;
					_t541 = 2.181000 * _t536;
					_t542 = 3.535000 * _t533;
					_t543 = _t542+_t541;
					_t544 = _t543 / _t540;
					_t534 = _t544;
				}
				_t530 = _t534;
			}
			_t545 = _t517 * _t517;
			_t546 = 1.000001-_t545;
			cif (_t546 >= 0.000000) {
				_t547 = _t546;
			}
			else {
				_t549 = -_t546;
				_t547 = _t549;
			}
			_t550 = sqrt(_t547);
			_t551 = _t550 / _t517;
			cif (_t551 <= 0.000000) {
				_t552 = 1.000000;
			}
			else {
				_t554 = vertParams[60] * _t551;
				_t555 = (float)1.0 / (_t554);
				cif (_t555 >= 1.600000) {
					_t556 = 1.000000;
				}
				else {
					_t558 = _t555 * _t555;
					_t559 = 2.577000 * _t558;
					_t560 = 2.276000 * _t555;
					_t561 = 1.000000+_t560;
					_t562 = _t561+_t559;
					_t563 = 2.181000 * _t558;
					_t564 = 3.535000 * _t555;
					_t565 = _t564+_t563;
					_t566 = _t565 / _t562;
					_t556 = _t566;
				}
				_t552 = _t556;
			}
			_t567 = _t552 * _t530;
			_t568 = sqrt(_t517);
			_t569 = 0.200000 * _t568;
			_t570 = 1.200000-_t569;
			_t571 = vertParams[60] * _t570;
			_t572 = _t473 * _t473;
			_t573 = _t571 * _t571;
			_t574 = _t474 * _t474;
			_t575 = _t574 / _t573;
			_t576 = _t571 * _t571;
			_t577 = _t475 * _t475;
			_t578 = _t577 / _t576;
			_t579 = _t578+_t575;
			_t580 = _t579 / _t572;
			_t581 = _t572 * _t572;
			_t582 = 3.141593 * _t571;
			_t583 = _t582 * _t571;
			_t584 = _t583 * _t581;
			_t585 = -_t580;
			_t586 = exp(_t585);
			_t587 = _t586 / _t584;
			_t588 = _t473 * _t587;
			_t589 = sqrt(_t520);
			_t590 = 0.200000 * _t589;
			_t591 = 1.200000-_t590;
			_t592 = vertParams[60] * _t591;
			_t593 = _t473 * _t473;
			_t594 = _t592 * _t592;
			_t595 = _t474 * _t474;
			_t596 = _t595 / _t594;
			_t597 = _t592 * _t592;
			_t598 = _t475 * _t475;
			_t599 = _t598 / _t597;
			_t600 = _t599+_t596;
			_t601 = _t600 / _t593;
			_t602 = _t593 * _t593;
			_t603 = 3.141593 * _t592;
			_t604 = _t603 * _t592;
			_t605 = _t604 * _t602;
			_t606 = -_t601;
			_t607 = exp(_t606);
			_t608 = _t607 / _t605;
			_t609 = _t473 * _t608;
			cif (_t415 > 0.000000) {
				_t615 = 4.000000 * _t413;
				_t616 = _t499 * _t491;
				_t617 = _t616 * _t567;
				_t618 = _t617 / _t615;
				cif (_t618 >= 0.000000) {
					_t619 = _t618;
				}
				else {
					_t621 = -_t618;
					_t619 = _t621;
				}
				_t622 = vertParams[52] * _t619;
				_t623 = vertParams[53] * _t619;
				_t624 = vertParams[54] * _t619;
				_t625 = 4.000000 * _t452;
				_t626 = _t588 * _t499;
				_t627 = _t626 / _t625;
				cif (_t627 >= 0.000000) {
					_t628 = _t627;
				}
				else {
					_t630 = -_t627;
					_t628 = _t630;
				}
				_t631 = 4.000000 * _t451;
				_t632 = _t609 * _t499;
				_t633 = _t632 / _t631;
				cif (_t633 >= 0.000000) {
					_t634 = _t633;
				}
				else {
					_t636 = -_t633;
					_t634 = _t636;
				}
				_t610 = _t622;
				_t611 = _t623;
				_t612 = _t624;
				_t613 = _t628;
				_t614 = _t634;
			}
			else {
				_t637 = _t416 * _t452;
				_t638 = _t451+_t637;
				_t639 = _t418 * _t451;
				_t640 = _t452+_t639;
				_t641 = (float)1.0 / (_t416);
				_t642 = _t641 * _t641;
				_t643 = _t638 * _t638;
				_t644 = _t413 * _t643;
				_t645 = _t416 * _t416;
				_t646 = 1.000000-_t499;
				_t647 = _t646 * _t491;
				_t648 = _t647 * _t567;
				_t649 = _t648 * _t645;
				_t650 = _t649 * _t451;
				_t651 = _t650 * _t452;
				_t652 = _t642 * _t651;
				_t653 = _t652 / _t644;
				cif (_t653 >= 0.000000) {
					_t654 = _t653;
				}
				else {
					_t656 = -_t653;
					_t654 = _t656;
				}
				_t657 = vertParams[55] * _t654;
				_t658 = vertParams[56] * _t654;
				_t659 = vertParams[57] * _t654;
				_t660 = _t638 * _t638;
				_t661 = _t416 * _t416;
				_t662 = _t661 * _t452;
				_t663 = 1.000000-_t499;
				_t664 = _t588 * _t663;
				_t665 = _t664 * _t662;
				_t666 = _t665 / _t660;
				cif (_t666 >= 0.000000) {
					_t667 = _t666;
				}
				else {
					_t669 = -_t666;
					_t667 = _t669;
				}
				_t670 = _t640 * _t640;
				_t671 = _t418 * _t418;
				_t672 = _t671 * _t451;
				_t673 = 1.000000-_t499;
				_t674 = _t609 * _t673;
				_t675 = _t674 * _t672;
				_t676 = _t675 / _t670;
				cif (_t676 >= 0.000000) {
					_t677 = _t676;
				}
				else {
					_t679 = -_t676;
					_t677 = _t679;
				}
				_t610 = _t657;
				_t611 = _t658;
				_t612 = _t659;
				_t613 = _t667;
				_t614 = _t677;
			}
			_t343 = _t610;
			_t344 = _t611;
			_t345 = _t612;
			_t346 = _t414;
			_t347 = _t613;
			_t348 = _t614;
		}
		else cif (vertParams[51] == 0.000000) {
			_t680 = _t156 * _t250 + _t157 * _t251 + _t158 * _t252;
			cif (_t680 > 0.000000) {
				_t681 = _t156;
				_t682 = _t157;
				_t683 = _t158;
				_t684 = _t680;
			}
			else {
				_t686 = -_t156;
				_t687 = -_t157;
				_t688 = -_t158;
				_t689 = -_t680;
				_t681 = _t686;
				_t682 = _t687;
				_t683 = _t688;
				_t684 = _t689;
			}
			_t690 = _t681 * _t340 + _t682 * _t341 + _t683 * _t342;
			_t691 = _t690 * 0.318310;
			_t692 = _t684 * 0.318310;
			_t693 = _t691 * vertParams[52];
			_t694 = _t691 * vertParams[53];
			_t695 = _t691 * vertParams[54];
			_t343 = _t693;
			_t344 = _t694;
			_t345 = _t695;
			_t346 = _t690;
			_t347 = _t691;
			_t348 = _t692;
		}
		else {
			_t343 = 0.000000;
			_t344 = 0.000000;
			_t345 = 0.000000;
			_t346 = 0.000000;
			_t347 = 0.000000;
			_t348 = 0.000000;
		}
		_t696 = _t287 * _t340 + _t288 * _t341 + _t289 * _t342;
		_t697 = _t696 * _t338;
		cif (_t697 >= 0.000000) {
			_t698 = _t697;
		}
		else {
			_t700 = -_t697;
			_t698 = _t700;
		}
		_t701 = _t698 / _t290;
		_t270 = _t340;
		_t271 = _t341;
		_t272 = _t342;
		_t273 = _t343;
		_t274 = _t344;
		_t275 = _t345;
		_t276 = _t346;
		_t277 = _t347;
		_t278 = _t348;
		_t279 = _t701;
	}
	else cif (vertParams[50] == 0.000000) {
		cif (vertParams[51] == 1.000000) {
			_t714 = _t156 * _t250 + _t157 * _t251 + _t158 * _t252;
			cif (_t714 > 0.000000) {
				_t715 = _t156;
				_t716 = _t157;
				_t717 = _t158;
				_t718 = _t714;
			}
			else {
				_t720 = -_t156;
				_t721 = -_t157;
				_t722 = -_t158;
				_t723 = -_t714;
				_t715 = _t720;
				_t716 = _t721;
				_t717 = _t722;
				_t718 = _t723;
			}
			_t724 = _t250 * _t715 + _t251 * _t716 + _t252 * _t717;
			_t725 = 2.000000 * _t724;
			_t726 = _t725 * _t715;
			_t727 = _t726-_t250;
			_t728 = _t725 * _t716;
			_t729 = _t728-_t251;
			_t730 = _t725 * _t717;
			_t731 = _t730-_t252;
			cif (vertParams[49] > vertParams[59]) {
				_t737 = 6.283185 * primary[3];
				_t738 = 1.000000-primary[4];
				cif (_t738 >= 0.000001) {
					_t739 = _t738;
				}
				else {
					_t739 = 0.000001;
				}
				_t741 = sqrt(_t739);
				cif (primary[4] >= 0.000001) {
					_t742 = primary[4];
				}
				else {
					_t742 = 0.000001;
				}
				_t744 = sqrt(_t742);
				_t745 = sin(_t737);
				_t746 = _t745 * _t741;
				_t747 = cos(_t737);
				_t748 = _t747 * _t741;
				cif (_t717 < -0.999999) {
					_t749 = 0.000000;
					_t750 = -1.000000;
					_t751 = 0.000000;
					_t752 = -1.000000;
					_t753 = 0.000000;
					_t754 = 0.000000;
				}
				else {
					_t756 = 1.000000+_t717;
					_t757 = (float)1.0 / (_t756);
					_t758 = -_t715;
					_t759 = _t758 * _t716;
					_t760 = _t759 * _t757;
					_t761 = -_t715;
					_t762 = _t715 * _t715;
					_t763 = _t762 * _t757;
					_t764 = 1.000000-_t763;
					_t765 = -_t716;
					_t766 = _t716 * _t716;
					_t767 = _t766 * _t757;
					_t768 = 1.000000-_t767;
					_t749 = _t764;
					_t750 = _t760;
					_t751 = _t761;
					_t752 = _t760;
					_t753 = _t768;
					_t754 = _t765;
				}
				_t769 = _t744 * _t715;
				_t770 = _t746 * _t752;
				_t771 = _t748 * _t749;
				_t772 = _t771+_t770;
				_t773 = _t772+_t769;
				_t774 = _t744 * _t716;
				_t775 = _t746 * _t753;
				_t776 = _t748 * _t750;
				_t777 = _t776+_t775;
				_t778 = _t777+_t774;
				_t779 = _t744 * _t717;
				_t780 = _t746 * _t754;
				_t781 = _t748 * _t751;
				_t782 = _t781+_t780;
				_t783 = _t782+_t779;
				_t784 = 1.000000-vertParams[59];
				_t732 = _t773;
				_t733 = _t778;
				_t734 = _t783;
				_t735 = _t784;
			}
			else {
				_t785 = vertParams[58]+1.000000;
				_t786 = (float)1.0 / (_t785);
				_t787 = pow(primary[4],_t786);
				_t788 = _t787 * _t787;
				_t789 = 1.000000-_t788;
				cif (_t789 >= 0.000001) {
					_t790 = _t789;
				}
				else {
					_t790 = 0.000001;
				}
				_t792 = sqrt(_t790);
				_t793 = 6.283185 * primary[3];
				_t794 = sin(_t793);
				_t795 = _t792 * _t794;
				_t796 = cos(_t793);
				_t797 = _t792 * _t796;
				cif (_t731 < -0.999999) {
					_t798 = 0.000000;
					_t799 = -1.000000;
					_t800 = 0.000000;
					_t801 = -1.000000;
					_t802 = 0.000000;
					_t803 = 0.000000;
				}
				else {
					_t805 = 1.000000+_t731;
					_t806 = (float)1.0 / (_t805);
					_t807 = -_t727;
					_t808 = _t807 * _t729;
					_t809 = _t808 * _t806;
					_t810 = -_t727;
					_t811 = _t727 * _t727;
					_t812 = _t811 * _t806;
					_t813 = 1.000000-_t812;
					_t814 = -_t729;
					_t815 = _t729 * _t729;
					_t816 = _t815 * _t806;
					_t817 = 1.000000-_t816;
					_t798 = _t813;
					_t799 = _t809;
					_t800 = _t810;
					_t801 = _t809;
					_t802 = _t817;
					_t803 = _t814;
				}
				_t818 = _t787 * _t727;
				_t819 = _t795 * _t801;
				_t820 = _t797 * _t798;
				_t821 = _t820+_t819;
				_t822 = _t821+_t818;
				_t823 = _t787 * _t729;
				_t824 = _t795 * _t802;
				_t825 = _t797 * _t799;
				_t826 = _t825+_t824;
				_t827 = _t826+_t823;
				_t828 = _t787 * _t731;
				_t829 = _t795 * _t803;
				_t830 = _t797 * _t800;
				_t831 = _t830+_t829;
				_t832 = _t831+_t828;
				_t732 = _t822;
				_t733 = _t827;
				_t734 = _t832;
				_t735 = vertParams[59];
			}
			_t833 = _t715 * _t732 + _t716 * _t733 + _t717 * _t734;
			cif (vertParams[59] > 0.000000) {
				_t839 = _t727 * _t732 + _t729 * _t733 + _t731 * _t734;
				_t840 = pow(_t839,vertParams[58]);
				_t841 = _t840 * 0.159155;
				cif (_t841 > 0.000000) {
					_t847 = vertParams[58]+1.000000;
					_t848 = vertParams[58]+2.000000;
					_t849 = _t848 * _t841;
					_t850 = vertParams[55] * _t849;
					_t851 = vertParams[56] * _t849;
					_t852 = vertParams[57] * _t849;
					_t853 = vertParams[59] * _t847;
					_t854 = _t853 * _t841;
					_t842 = _t850;
					_t843 = _t851;
					_t844 = _t852;
					_t845 = _t854;
				}
				else {
					_t842 = 0.000000;
					_t843 = 0.000000;
					_t844 = 0.000000;
					_t845 = 0.000000;
				}
				_t834 = _t842;
				_t835 = _t843;
				_t836 = _t844;
				_t837 = _t845;
			}
			else {
				_t834 = 0.000000;
				_t835 = 0.000000;
				_t836 = 0.000000;
				_t837 = 0.000000;
			}
			cif (vertParams[59] < 1.000000) {
				_t861 = vertParams[52] * 0.318310;
				_t862 = vertParams[53] * 0.318310;
				_t863 = vertParams[54] * 0.318310;
				_t864 = 1.000000-vertParams[59];
				_t865 = _t864 * 0.318310;
				_t866 = _t865 * _t833;
				_t867 = _t865 * _t718;
				_t855 = _t861;
				_t856 = _t862;
				_t857 = _t863;
				_t858 = _t866;
				_t859 = _t867;
			}
			else {
				_t855 = 0.000000;
				_t856 = 0.000000;
				_t857 = 0.000000;
				_t858 = 0.000000;
				_t859 = 0.000000;
			}
			_t868 = _t834+_t855;
			_t869 = _t835+_t856;
			_t870 = _t836+_t857;
			_t871 = _t837+_t858;
			_t872 = _t837+_t859;
			_t873 = _t868 * _t833;
			_t874 = _t869 * _t833;
			_t875 = _t870 * _t833;
			_t876 = (float)1.0 / (_t871);
			_t877 = _t873 * _t876;
			_t878 = _t874 * _t876;
			_t879 = _t875 * _t876;
			_t702 = _t732;
			_t703 = _t733;
			_t704 = _t734;
			_t705 = _t877;
			_t706 = _t878;
			_t707 = _t879;
			_t708 = _t833;
			_t709 = _t871;
			_t710 = _t872;
		}
		else cif (vertParams[51] == 2.000000) {
			_t880 = _t250 * _t156 + _t251 * _t157 + _t252 * _t158;
			cif (_t880 >= 0.000000) {
				_t881 = _t880;
			}
			else {
				_t883 = -_t880;
				_t881 = _t883;
			}
			_t884 = sqrt(_t881);
			_t885 = 0.200000 * _t884;
			_t886 = 1.200000-_t885;
			_t887 = vertParams[60] * _t886;
			_t888 = 6.283185 * primary[4];
			_t889 = sin(_t888);
			_t890 = cos(_t888);
			_t891 = _t887 * _t887;
			_t892 = 1.000000-primary[3];
			cif (_t892 >= 0.000001) {
				_t893 = _t892;
			}
			else {
				_t893 = 0.000001;
			}
			_t895 = log(_t893);
			_t896 = -_t895;
			_t897 = _t891 * _t896;
			_t898 = 1.000000+_t897;
			_t899 = sqrt(_t898);
			_t900 = (float)1.0 / (_t899);
			_t901 = _t900 * _t900;
			_t902 = 3.141593 * _t891;
			_t903 = _t902 * _t900;
			_t904 = _t903 * _t901;
			_t905 = 1.000000-primary[3];
			_t906 = _t905 / _t904;
			_t907 = 1.000000-_t901;
			cif (_t907 >= 0.000001) {
				_t908 = _t907;
			}
			else {
				_t908 = 0.000001;
			}
			_t910 = sqrt(_t908);
			_t911 = _t910 * _t889;
			_t912 = _t910 * _t890;
			cif (_t158 < -0.999999) {
				_t913 = 0.000000;
				_t914 = -1.000000;
				_t915 = 0.000000;
				_t916 = -1.000000;
				_t917 = 0.000000;
				_t918 = 0.000000;
			}
			else {
				_t920 = 1.000000+_t158;
				_t921 = (float)1.0 / (_t920);
				_t922 = -_t156;
				_t923 = _t922 * _t157;
				_t924 = _t923 * _t921;
				_t925 = -_t156;
				_t926 = _t156 * _t156;
				_t927 = _t926 * _t921;
				_t928 = 1.000000-_t927;
				_t929 = -_t157;
				_t930 = _t157 * _t157;
				_t931 = _t930 * _t921;
				_t932 = 1.000000-_t931;
				_t913 = _t928;
				_t914 = _t924;
				_t915 = _t925;
				_t916 = _t924;
				_t917 = _t932;
				_t918 = _t929;
			}
			_t933 = _t900 * _t156;
			_t934 = _t911 * _t916;
			_t935 = _t912 * _t913;
			_t936 = _t935+_t934;
			_t937 = _t936+_t933;
			_t938 = _t900 * _t157;
			_t939 = _t911 * _t917;
			_t940 = _t912 * _t914;
			_t941 = _t940+_t939;
			_t942 = _t941+_t938;
			_t943 = _t900 * _t158;
			_t944 = _t911 * _t918;
			_t945 = _t912 * _t915;
			_t946 = _t945+_t944;
			_t947 = _t946+_t943;
			_t948 = _t250 * _t937 + _t251 * _t942 + _t252 * _t947;
			cif (_t948 > 0.000000) {
				_t949 = vertParams[59];
			}
			else {
				_t949 = vertParams[58];
			}
			_t951 = _t949 * _t949;
			_t952 = _t948 * _t948;
			_t953 = 1.000000-_t952;
			_t954 = _t953 * _t951;
			_t955 = 1.000000-_t954;
			cif (_t955 <= 0.000000) {
				_t956 = 0.000000;
				_t957 = 1.000000;
			}
			else {
				cif (_t948 >= 0.000000) {
					_t959 = _t948;
				}
				else {
					_t961 = -_t948;
					_t959 = _t961;
				}
				_t962 = sqrt(_t955);
				_t963 = vertParams[58] * _t962;
				_t964 = vertParams[58] * _t959;
				_t965 = _t959+_t963;
				_t966 = _t959-_t963;
				_t967 = _t966 / _t965;
				_t968 = _t964+_t962;
				_t969 = _t964-_t962;
				_t970 = _t969 / _t968;
				_t971 = -_t962;
				cif (_t948 > 0.000000) {
					_t972 = _t971;
				}
				else {
					_t972 = _t962;
				}
				_t974 = _t970 * _t970;
				_t975 = _t967 * _t967;
				_t976 = _t975+_t974;
				_t977 = 0.500000 * _t976;
				_t956 = _t972;
				_t957 = _t977;
			}
			cif (vertParams[49] <= _t957) {
				_t988 = _t250 * _t937 + _t251 * _t942 + _t252 * _t947;
				_t989 = 2.000000 * _t988;
				_t990 = _t989 * _t937;
				_t991 = _t990-_t250;
				_t992 = _t989 * _t942;
				_t993 = _t992-_t251;
				_t994 = _t989 * _t947;
				_t995 = _t994-_t252;
				_t996 = _t991 * _t937 + _t993 * _t942 + _t995 * _t947;
				_t997 = 4.000000 * _t996;
				_t998 = _t906 * _t957;
				_t999 = _t998 / _t997;
				cif (_t999 >= 0.000000) {
					_t1000 = _t999;
				}
				else {
					_t1002 = -_t999;
					_t1000 = _t1002;
				}
				_t1003 = 4.000000 * _t948;
				_t1004 = (float)1.0 / (_t1003);
				_t1005 = _t991 * _t156 + _t993 * _t157 + _t995 * _t158;
				cif (_t1005 >= 0.000000) {
					_t1006 = _t1005;
				}
				else {
					_t1008 = -_t1005;
					_t1006 = _t1008;
				}
				_t1009 = sqrt(_t1006);
				_t1010 = 0.200000 * _t1009;
				_t1011 = 1.200000-_t1010;
				_t1012 = vertParams[60] * _t1011;
				_t1013 = _t900 * _t900;
				_t1014 = _t1012 * _t1012;
				_t1015 = _t911 * _t911;
				_t1016 = _t1015 / _t1014;
				_t1017 = _t1012 * _t1012;
				_t1018 = _t912 * _t912;
				_t1019 = _t1018 / _t1017;
				_t1020 = _t1019+_t1016;
				_t1021 = _t1020 / _t1013;
				_t1022 = _t1013 * _t1013;
				_t1023 = 3.141593 * _t1012;
				_t1024 = _t1023 * _t1012;
				_t1025 = _t1024 * _t1022;
				_t1026 = -_t1021;
				_t1027 = exp(_t1026);
				_t1028 = _t1027 / _t1025;
				_t1029 = _t957 * _t1028;
				_t1030 = _t1029 * _t900;
				_t1031 = _t1030 * _t1004;
				cif (_t1031 >= 0.000000) {
					_t1032 = _t1031;
				}
				else {
					_t1034 = -_t1031;
					_t1032 = _t1034;
				}
				_t978 = _t991;
				_t979 = _t993;
				_t980 = _t995;
				_t981 = vertParams[52];
				_t982 = vertParams[53];
				_t983 = vertParams[54];
				_t984 = _t1005;
				_t985 = _t1000;
				_t986 = _t1032;
			}
			else {
				cif (_t956 < 0.000000) {
					_t1035 = vertParams[59];
				}
				else {
					_t1035 = vertParams[58];
				}
				_t1037 = _t250 * _t937 + _t251 * _t942 + _t252 * _t947;
				_t1038 = _t1037 * _t1035;
				_t1039 = _t1038+_t956;
				_t1040 = _t250 * _t1035;
				_t1041 = _t937 * _t1039;
				_t1042 = _t1041-_t1040;
				_t1043 = _t251 * _t1035;
				_t1044 = _t942 * _t1039;
				_t1045 = _t1044-_t1043;
				_t1046 = _t252 * _t1035;
				_t1047 = _t947 * _t1039;
				_t1048 = _t1047-_t1046;
				cif (_t880 > 0.000000) {
					_t1049 = vertParams[58];
				}
				else {
					_t1049 = vertParams[59];
				}
				_t1051 = (float)1.0 / (_t1049);
				_t1052 = _t1051 * _t1051;
				_t1053 = vertParams[55] * _t1052;
				_t1054 = vertParams[56] * _t1052;
				_t1055 = vertParams[57] * _t1052;
				_t1056 = _t1042 * _t937 + _t1045 * _t942 + _t1048 * _t947;
				_t1057 = _t1049 * _t1056;
				_t1058 = _t948+_t1057;
				_t1059 = _t1058 * _t1058;
				_t1060 = _t1049 * _t1049;
				_t1061 = _t1060 * _t1056;
				_t1062 = _t1061 / _t1059;
				cif (_t1062 >= 0.000000) {
					_t1063 = _t1062;
				}
				else {
					_t1065 = -_t1062;
					_t1063 = _t1065;
				}
				_t1066 = 1.000000-_t957;
				_t1067 = _t906 * _t1066;
				_t1068 = _t1067 * _t1063;
				cif (_t1068 >= 0.000000) {
					_t1069 = _t1068;
				}
				else {
					_t1071 = -_t1068;
					_t1069 = _t1071;
				}
				_t1072 = _t1042 * _t156 + _t1045 * _t157 + _t1048 * _t158;
				cif (_t1072 > 0.000000) {
					_t1073 = vertParams[58];
				}
				else {
					_t1073 = vertParams[59];
				}
				_t1075 = _t1073 * _t948;
				_t1076 = _t1056+_t1075;
				_t1077 = _t1076 * _t1076;
				_t1078 = _t1073 * _t1073;
				_t1079 = _t1078 * _t948;
				_t1080 = _t1079 / _t1077;
				cif (_t1072 >= 0.000000) {
					_t1081 = _t1072;
				}
				else {
					_t1083 = -_t1072;
					_t1081 = _t1083;
				}
				_t1084 = sqrt(_t1081);
				_t1085 = 0.200000 * _t1084;
				_t1086 = 1.200000-_t1085;
				_t1087 = vertParams[60] * _t1086;
				_t1088 = _t900 * _t900;
				_t1089 = _t1087 * _t1087;
				_t1090 = _t911 * _t911;
				_t1091 = _t1090 / _t1089;
				_t1092 = _t1087 * _t1087;
				_t1093 = _t912 * _t912;
				_t1094 = _t1093 / _t1092;
				_t1095 = _t1094+_t1091;
				_t1096 = _t1095 / _t1088;
				_t1097 = _t1088 * _t1088;
				_t1098 = 3.141593 * _t1087;
				_t1099 = _t1098 * _t1087;
				_t1100 = _t1099 * _t1097;
				_t1101 = -_t1096;
				_t1102 = exp(_t1101);
				_t1103 = _t1102 / _t1100;
				_t1104 = 1.000000-_t957;
				_t1105 = _t1104 * _t1103;
				_t1106 = _t1105 * _t900;
				_t1107 = _t1106 * _t1080;
				cif (_t1107 >= 0.000000) {
					_t1108 = _t1107;
				}
				else {
					_t1110 = -_t1107;
					_t1108 = _t1110;
				}
				_t978 = _t1042;
				_t979 = _t1045;
				_t980 = _t1048;
				_t981 = _t1053;
				_t982 = _t1054;
				_t983 = _t1055;
				_t984 = _t1072;
				_t985 = _t1069;
				_t986 = _t1108;
			}
			cif (_t880 >= 0.000000) {
				_t1111 = _t880;
			}
			else {
				_t1113 = -_t880;
				_t1111 = _t1113;
			}
			cif (_t984 >= 0.000000) {
				_t1114 = _t984;
			}
			else {
				_t1116 = -_t984;
				_t1114 = _t1116;
			}
			_t1117 = _t900 * _t900;
			_t1118 = vertParams[60] * vertParams[60];
			_t1119 = _t911 * _t911;
			_t1120 = _t1119 / _t1118;
			_t1121 = vertParams[60] * vertParams[60];
			_t1122 = _t912 * _t912;
			_t1123 = _t1122 / _t1121;
			_t1124 = _t1123+_t1120;
			_t1125 = _t1124 / _t1117;
			_t1126 = _t1117 * _t1117;
			_t1127 = 3.141593 * vertParams[60];
			_t1128 = _t1127 * vertParams[60];
			_t1129 = _t1128 * _t1126;
			_t1130 = -_t1125;
			_t1131 = exp(_t1130);
			_t1132 = _t1131 / _t1129;
			_t1133 = _t1114 * _t1114;
			_t1134 = 1.000001-_t1133;
			cif (_t1134 >= 0.000000) {
				_t1135 = _t1134;
			}
			else {
				_t1137 = -_t1134;
				_t1135 = _t1137;
			}
			_t1138 = sqrt(_t1135);
			_t1139 = _t1138 / _t1114;
			cif (_t1139 <= 0.000000) {
				_t1140 = 1.000000;
			}
			else {
				_t1142 = vertParams[60] * _t1139;
				_t1143 = (float)1.0 / (_t1142);
				cif (_t1143 >= 1.600000) {
					_t1144 = 1.000000;
				}
				else {
					_t1146 = _t1143 * _t1143;
					_t1147 = 2.577000 * _t1146;
					_t1148 = 2.276000 * _t1143;
					_t1149 = 1.000000+_t1148;
					_t1150 = _t1149+_t1147;
					_t1151 = 2.181000 * _t1146;
					_t1152 = 3.535000 * _t1143;
					_t1153 = _t1152+_t1151;
					_t1154 = _t1153 / _t1150;
					_t1144 = _t1154;
				}
				_t1140 = _t1144;
			}
			_t1155 = _t1111 * _t1111;
			_t1156 = 1.000001-_t1155;
			cif (_t1156 >= 0.000000) {
				_t1157 = _t1156;
			}
			else {
				_t1159 = -_t1156;
				_t1157 = _t1159;
			}
			_t1160 = sqrt(_t1157);
			_t1161 = _t1160 / _t1111;
			cif (_t1161 <= 0.000000) {
				_t1162 = 1.000000;
			}
			else {
				_t1164 = vertParams[60] * _t1161;
				_t1165 = (float)1.0 / (_t1164);
				cif (_t1165 >= 1.600000) {
					_t1166 = 1.000000;
				}
				else {
					_t1168 = _t1165 * _t1165;
					_t1169 = 2.577000 * _t1168;
					_t1170 = 2.276000 * _t1165;
					_t1171 = 1.000000+_t1170;
					_t1172 = _t1171+_t1169;
					_t1173 = 2.181000 * _t1168;
					_t1174 = 3.535000 * _t1165;
					_t1175 = _t1174+_t1173;
					_t1176 = _t1175 / _t1172;
					_t1166 = _t1176;
				}
				_t1162 = _t1166;
			}
			_t1177 = _t1162 * _t1140;
			_t1178 = _t1132 * _t1177;
			_t1179 = _t1178 * _t948;
			_t1180 = _t906 * _t1111;
			_t1181 = _t1179 / _t1180;
			cif (_t1181 >= 0.000000) {
				_t1182 = _t1181;
			}
			else {
				_t1184 = -_t1181;
				_t1182 = _t1184;
			}
			_t1185 = _t981 * _t1182;
			_t1186 = _t982 * _t1182;
			_t1187 = _t983 * _t1182;
			_t702 = _t978;
			_t703 = _t979;
			_t704 = _t980;
			_t705 = _t1185;
			_t706 = _t1186;
			_t707 = _t1187;
			_t708 = _t984;
			_t709 = _t985;
			_t710 = _t986;
		}
		else cif (vertParams[51] == 0.000000) {
			_t1188 = _t250 * _t156 + _t251 * _t157 + _t252 * _t158;
			cif (_t1188 > 0.000000) {
				_t1189 = _t156;
				_t1190 = _t157;
				_t1191 = _t158;
				_t1192 = _t1188;
			}
			else {
				_t1194 = -_t156;
				_t1195 = -_t157;
				_t1196 = -_t158;
				_t1197 = -_t1188;
				_t1189 = _t1194;
				_t1190 = _t1195;
				_t1191 = _t1196;
				_t1192 = _t1197;
			}
			cif (_t1191 < -0.999999) {
				_t1198 = 0.000000;
				_t1199 = -1.000000;
				_t1200 = 0.000000;
				_t1201 = -1.000000;
				_t1202 = 0.000000;
				_t1203 = 0.000000;
			}
			else {
				_t1205 = 1.000000+_t1191;
				_t1206 = (float)1.0 / (_t1205);
				_t1207 = -_t1189;
				_t1208 = _t1207 * _t1190;
				_t1209 = _t1208 * _t1206;
				_t1210 = -_t1189;
				_t1211 = _t1189 * _t1189;
				_t1212 = _t1211 * _t1206;
				_t1213 = 1.000000-_t1212;
				_t1214 = -_t1190;
				_t1215 = _t1190 * _t1190;
				_t1216 = _t1215 * _t1206;
				_t1217 = 1.000000-_t1216;
				_t1198 = _t1213;
				_t1199 = _t1209;
				_t1200 = _t1210;
				_t1201 = _t1209;
				_t1202 = _t1217;
				_t1203 = _t1214;
			}
			_t1218 = 6.283185 * primary[3];
			_t1219 = 1.000000-primary[4];
			cif (_t1219 >= 0.000001) {
				_t1220 = _t1219;
			}
			else {
				_t1220 = 0.000001;
			}
			_t1222 = sqrt(_t1220);
			cif (primary[4] >= 0.000001) {
				_t1223 = primary[4];
			}
			else {
				_t1223 = 0.000001;
			}
			_t1225 = sqrt(_t1223);
			_t1226 = sin(_t1218);
			_t1227 = _t1226 * _t1222;
			_t1228 = cos(_t1218);
			_t1229 = _t1228 * _t1222;
			_t1230 = _t1225 * _t1189;
			_t1231 = _t1227 * _t1201;
			_t1232 = _t1229 * _t1198;
			_t1233 = _t1232+_t1231;
			_t1234 = _t1233+_t1230;
			_t1235 = _t1225 * _t1190;
			_t1236 = _t1227 * _t1202;
			_t1237 = _t1229 * _t1199;
			_t1238 = _t1237+_t1236;
			_t1239 = _t1238+_t1235;
			_t1240 = _t1225 * _t1191;
			_t1241 = _t1227 * _t1203;
			_t1242 = _t1229 * _t1200;
			_t1243 = _t1242+_t1241;
			_t1244 = _t1243+_t1240;
			_t1245 = _t1225 * 0.318310;
			_t1246 = _t1192 * 0.318310;
			_t702 = _t1234;
			_t703 = _t1239;
			_t704 = _t1244;
			_t705 = vertParams[52];
			_t706 = vertParams[53];
			_t707 = vertParams[54];
			_t708 = _t1225;
			_t709 = _t1245;
			_t710 = _t1246;
		}
		else {
			_t702 = 0.000000;
			_t703 = 0.000000;
			_t704 = 0.000000;
			_t705 = 0.000000;
			_t706 = 0.000000;
			_t707 = 0.000000;
			_t708 = 0.000000;
			_t709 = 0.000000;
			_t710 = 0.000000;
		}
		_t270 = _t702;
		_t271 = _t703;
		_t272 = _t704;
		_t273 = _t705;
		_t274 = _t706;
		_t275 = _t707;
		_t276 = _t708;
		_t277 = _t709;
		_t278 = _t710;
		_t279 = 1.000000;
	}
	else {
		_t1247 = 6.283185 * primary[3];
		_t1248 = 3.141593 * primary[4];
		_t1249 = sin(_t1248);
		_t1250 = cos(_t1248);
		_t1251 = sin(_t1247);
		_t1252 = _t1249 * _t1251;
		_t1253 = cos(_t1247);
		_t1254 = _t1249 * _t1253;
		cif (_t1249 >= 0.000000) {
			_t1255 = _t1249;
		}
		else {
			_t1257 = -_t1249;
			_t1255 = _t1257;
		}
		_t1258 = _t1255 * 6.283185;
		_t1259 = _t1258 * 3.141593;
		cif (vertParams[51] == 1.000000) {
			_t1269 = _t156 * _t250 + _t157 * _t251 + _t158 * _t252;
			cif (_t1269 > 0.000000) {
				_t1270 = _t156;
				_t1271 = _t157;
				_t1272 = _t158;
				_t1273 = _t1269;
			}
			else {
				_t1275 = -_t156;
				_t1276 = -_t157;
				_t1277 = -_t158;
				_t1278 = -_t1269;
				_t1270 = _t1275;
				_t1271 = _t1276;
				_t1272 = _t1277;
				_t1273 = _t1278;
			}
			_t1279 = _t1270 * _t1254 + _t1271 * _t1252 + _t1272 * _t1250;
			cif (vertParams[59] > 0.000000) {
				_t1285 = _t250 * _t1270 + _t251 * _t1271 + _t252 * _t1272;
				_t1286 = 2.000000 * _t1285;
				_t1287 = _t1286 * _t1270;
				_t1288 = _t1287-_t250;
				_t1289 = _t1286 * _t1271;
				_t1290 = _t1289-_t251;
				_t1291 = _t1286 * _t1272;
				_t1292 = _t1291-_t252;
				_t1293 = _t1288 * _t1254 + _t1290 * _t1252 + _t1292 * _t1250;
				_t1294 = pow(_t1293,vertParams[58]);
				_t1295 = _t1294 * 0.159155;
				cif (_t1295 > 0.000000) {
					_t1301 = vertParams[58]+1.000000;
					_t1302 = vertParams[58]+2.000000;
					_t1303 = _t1302 * _t1295;
					_t1304 = vertParams[55] * _t1303;
					_t1305 = vertParams[56] * _t1303;
					_t1306 = vertParams[57] * _t1303;
					_t1307 = vertParams[59] * _t1301;
					_t1308 = _t1307 * _t1295;
					_t1296 = _t1304;
					_t1297 = _t1305;
					_t1298 = _t1306;
					_t1299 = _t1308;
				}
				else {
					_t1296 = 0.000000;
					_t1297 = 0.000000;
					_t1298 = 0.000000;
					_t1299 = 0.000000;
				}
				_t1280 = _t1296;
				_t1281 = _t1297;
				_t1282 = _t1298;
				_t1283 = _t1299;
			}
			else {
				_t1280 = 0.000000;
				_t1281 = 0.000000;
				_t1282 = 0.000000;
				_t1283 = 0.000000;
			}
			cif (vertParams[59] < 1.000000) {
				_t1315 = vertParams[52] * 0.318310;
				_t1316 = vertParams[53] * 0.318310;
				_t1317 = vertParams[54] * 0.318310;
				_t1318 = 1.000000-vertParams[59];
				_t1319 = _t1318 * 0.318310;
				_t1320 = _t1319 * _t1279;
				_t1321 = _t1319 * _t1273;
				_t1309 = _t1315;
				_t1310 = _t1316;
				_t1311 = _t1317;
				_t1312 = _t1320;
				_t1313 = _t1321;
			}
			else {
				_t1309 = 0.000000;
				_t1310 = 0.000000;
				_t1311 = 0.000000;
				_t1312 = 0.000000;
				_t1313 = 0.000000;
			}
			_t1322 = _t1280+_t1309;
			_t1323 = _t1281+_t1310;
			_t1324 = _t1282+_t1311;
			_t1325 = _t1283+_t1312;
			_t1326 = _t1283+_t1313;
			_t1327 = _t1322 * _t1279;
			_t1328 = _t1323 * _t1279;
			_t1329 = _t1324 * _t1279;
			_t1260 = _t1327;
			_t1261 = _t1328;
			_t1262 = _t1329;
			_t1263 = _t1279;
			_t1264 = _t1325;
			_t1265 = _t1326;
		}
		else cif (vertParams[51] == 2.000000) {
			_t1330 = _t250 * _t156 + _t251 * _t157 + _t252 * _t158;
			_t1331 = _t1254 * _t156 + _t1252 * _t157 + _t1250 * _t158;
			_t1332 = _t1330 * _t1331;
			cif (_t1330 > 0.000000) {
				_t1333 = vertParams[58];
			}
			else {
				_t1333 = vertParams[59];
			}
			cif (_t1331 > 0.000000) {
				_t1335 = vertParams[58];
			}
			else {
				_t1335 = vertParams[59];
			}
			cif (_t1332 > 0.000000) {
				_t1341 = _t250+_t1254;
				_t1342 = _t251+_t1252;
				_t1343 = _t252+_t1250;
				_t1344 = sqrt(_t1341*_t1341+_t1342*_t1342+_t1343*_t1343);
				_t1345 = (float)1.0 / (_t1344);
				_t1346 = _t1341 * _t1345;
				_t1347 = _t1342 * _t1345;
				_t1348 = _t1343 * _t1345;
				_t1337 = _t1346;
				_t1338 = _t1347;
				_t1339 = _t1348;
			}
			else {
				_t1349 = _t1254 * _t1333;
				_t1350 = _t250+_t1349;
				_t1351 = _t1252 * _t1333;
				_t1352 = _t251+_t1351;
				_t1353 = _t1250 * _t1333;
				_t1354 = _t252+_t1353;
				_t1355 = sqrt(_t1350*_t1350+_t1352*_t1352+_t1354*_t1354);
				_t1356 = (float)1.0 / (_t1355);
				_t1357 = _t1350 * _t1356;
				_t1358 = _t1352 * _t1356;
				_t1359 = _t1354 * _t1356;
				_t1337 = _t1357;
				_t1338 = _t1358;
				_t1339 = _t1359;
			}
			_t1360 = _t1337 * _t156 + _t1338 * _t157 + _t1339 * _t158;
			cif (_t1360 < 0.000000) {
				_t1365 = -_t1337;
				_t1366 = -_t1338;
				_t1367 = -_t1339;
				_t1361 = _t1365;
				_t1362 = _t1366;
				_t1363 = _t1367;
			}
			else {
				_t1361 = _t1337;
				_t1362 = _t1338;
				_t1363 = _t1339;
			}
			_t1368 = _t250 * _t1361 + _t251 * _t1362 + _t252 * _t1363;
			_t1369 = _t1254 * _t1361 + _t1252 * _t1362 + _t1250 * _t1363;
			cif (_t158 < -0.999999) {
				_t1370 = 0.000000;
				_t1371 = -1.000000;
				_t1372 = 0.000000;
				_t1373 = -1.000000;
				_t1374 = 0.000000;
				_t1375 = 0.000000;
			}
			else {
				_t1377 = 1.000000+_t158;
				_t1378 = (float)1.0 / (_t1377);
				_t1379 = -_t156;
				_t1380 = _t1379 * _t157;
				_t1381 = _t1380 * _t1378;
				_t1382 = -_t156;
				_t1383 = _t156 * _t156;
				_t1384 = _t1383 * _t1378;
				_t1385 = 1.000000-_t1384;
				_t1386 = -_t157;
				_t1387 = _t157 * _t157;
				_t1388 = _t1387 * _t1378;
				_t1389 = 1.000000-_t1388;
				_t1370 = _t1385;
				_t1371 = _t1381;
				_t1372 = _t1382;
				_t1373 = _t1381;
				_t1374 = _t1389;
				_t1375 = _t1386;
			}
			_t1390 = _t156 * _t1361 + _t157 * _t1362 + _t158 * _t1363;
			_t1391 = _t1373 * _t1361 + _t1374 * _t1362 + _t1375 * _t1363;
			_t1392 = _t1370 * _t1361 + _t1371 * _t1362 + _t1372 * _t1363;
			_t1393 = _t1390 * _t1390;
			_t1394 = vertParams[60] * vertParams[60];
			_t1395 = _t1391 * _t1391;
			_t1396 = _t1395 / _t1394;
			_t1397 = vertParams[60] * vertParams[60];
			_t1398 = _t1392 * _t1392;
			_t1399 = _t1398 / _t1397;
			_t1400 = _t1399+_t1396;
			_t1401 = _t1400 / _t1393;
			_t1402 = _t1393 * _t1393;
			_t1403 = 3.141593 * vertParams[60];
			_t1404 = _t1403 * vertParams[60];
			_t1405 = _t1404 * _t1402;
			_t1406 = -_t1401;
			_t1407 = exp(_t1406);
			_t1408 = _t1407 / _t1405;
			cif (_t1368 > 0.000000) {
				_t1409 = vertParams[59];
			}
			else {
				_t1409 = vertParams[58];
			}
			_t1411 = _t1409 * _t1409;
			_t1412 = _t1368 * _t1368;
			_t1413 = 1.000000-_t1412;
			_t1414 = _t1413 * _t1411;
			_t1415 = 1.000000-_t1414;
			cif (_t1415 <= 0.000000) {
				_t1416 = 1.000000;
			}
			else {
				cif (_t1368 >= 0.000000) {
					_t1418 = _t1368;
				}
				else {
					_t1420 = -_t1368;
					_t1418 = _t1420;
				}
				_t1421 = sqrt(_t1415);
				_t1422 = vertParams[58] * _t1421;
				_t1423 = vertParams[58] * _t1418;
				_t1424 = _t1418+_t1422;
				_t1425 = _t1418-_t1422;
				_t1426 = _t1425 / _t1424;
				_t1427 = _t1423+_t1421;
				_t1428 = _t1423-_t1421;
				_t1429 = _t1428 / _t1427;
				_t1430 = _t1429 * _t1429;
				_t1431 = _t1426 * _t1426;
				_t1432 = _t1431+_t1430;
				_t1433 = 0.500000 * _t1432;
				_t1416 = _t1433;
			}
			cif (_t1330 >= 0.000000) {
				_t1434 = _t1330;
			}
			else {
				_t1436 = -_t1330;
				_t1434 = _t1436;
			}
			cif (_t1331 >= 0.000000) {
				_t1437 = _t1331;
			}
			else {
				_t1439 = -_t1331;
				_t1437 = _t1439;
			}
			_t1440 = _t1437 * _t1437;
			_t1441 = 1.000001-_t1440;
			cif (_t1441 >= 0.000000) {
				_t1442 = _t1441;
			}
			else {
				_t1444 = -_t1441;
				_t1442 = _t1444;
			}
			_t1445 = sqrt(_t1442);
			_t1446 = _t1445 / _t1437;
			cif (_t1446 <= 0.000000) {
				_t1447 = 1.000000;
			}
			else {
				_t1449 = vertParams[60] * _t1446;
				_t1450 = (float)1.0 / (_t1449);
				cif (_t1450 >= 1.600000) {
					_t1451 = 1.000000;
				}
				else {
					_t1453 = _t1450 * _t1450;
					_t1454 = 2.577000 * _t1453;
					_t1455 = 2.276000 * _t1450;
					_t1456 = 1.000000+_t1455;
					_t1457 = _t1456+_t1454;
					_t1458 = 2.181000 * _t1453;
					_t1459 = 3.535000 * _t1450;
					_t1460 = _t1459+_t1458;
					_t1461 = _t1460 / _t1457;
					_t1451 = _t1461;
				}
				_t1447 = _t1451;
			}
			_t1462 = _t1434 * _t1434;
			_t1463 = 1.000001-_t1462;
			cif (_t1463 >= 0.000000) {
				_t1464 = _t1463;
			}
			else {
				_t1466 = -_t1463;
				_t1464 = _t1466;
			}
			_t1467 = sqrt(_t1464);
			_t1468 = _t1467 / _t1434;
			cif (_t1468 <= 0.000000) {
				_t1469 = 1.000000;
			}
			else {
				_t1471 = vertParams[60] * _t1468;
				_t1472 = (float)1.0 / (_t1471);
				cif (_t1472 >= 1.600000) {
					_t1473 = 1.000000;
				}
				else {
					_t1475 = _t1472 * _t1472;
					_t1476 = 2.577000 * _t1475;
					_t1477 = 2.276000 * _t1472;
					_t1478 = 1.000000+_t1477;
					_t1479 = _t1478+_t1476;
					_t1480 = 2.181000 * _t1475;
					_t1481 = 3.535000 * _t1472;
					_t1482 = _t1481+_t1480;
					_t1483 = _t1482 / _t1479;
					_t1473 = _t1483;
				}
				_t1469 = _t1473;
			}
			_t1484 = _t1469 * _t1447;
			_t1485 = sqrt(_t1434);
			_t1486 = 0.200000 * _t1485;
			_t1487 = 1.200000-_t1486;
			_t1488 = vertParams[60] * _t1487;
			_t1489 = _t1390 * _t1390;
			_t1490 = _t1488 * _t1488;
			_t1491 = _t1391 * _t1391;
			_t1492 = _t1491 / _t1490;
			_t1493 = _t1488 * _t1488;
			_t1494 = _t1392 * _t1392;
			_t1495 = _t1494 / _t1493;
			_t1496 = _t1495+_t1492;
			_t1497 = _t1496 / _t1489;
			_t1498 = _t1489 * _t1489;
			_t1499 = 3.141593 * _t1488;
			_t1500 = _t1499 * _t1488;
			_t1501 = _t1500 * _t1498;
			_t1502 = -_t1497;
			_t1503 = exp(_t1502);
			_t1504 = _t1503 / _t1501;
			_t1505 = _t1390 * _t1504;
			_t1506 = sqrt(_t1437);
			_t1507 = 0.200000 * _t1506;
			_t1508 = 1.200000-_t1507;
			_t1509 = vertParams[60] * _t1508;
			_t1510 = _t1390 * _t1390;
			_t1511 = _t1509 * _t1509;
			_t1512 = _t1391 * _t1391;
			_t1513 = _t1512 / _t1511;
			_t1514 = _t1509 * _t1509;
			_t1515 = _t1392 * _t1392;
			_t1516 = _t1515 / _t1514;
			_t1517 = _t1516+_t1513;
			_t1518 = _t1517 / _t1510;
			_t1519 = _t1510 * _t1510;
			_t1520 = 3.141593 * _t1509;
			_t1521 = _t1520 * _t1509;
			_t1522 = _t1521 * _t1519;
			_t1523 = -_t1518;
			_t1524 = exp(_t1523);
			_t1525 = _t1524 / _t1522;
			_t1526 = _t1390 * _t1525;
			cif (_t1332 > 0.000000) {
				_t1532 = 4.000000 * _t1330;
				_t1533 = _t1416 * _t1408;
				_t1534 = _t1533 * _t1484;
				_t1535 = _t1534 / _t1532;
				cif (_t1535 >= 0.000000) {
					_t1536 = _t1535;
				}
				else {
					_t1538 = -_t1535;
					_t1536 = _t1538;
				}
				_t1539 = vertParams[52] * _t1536;
				_t1540 = vertParams[53] * _t1536;
				_t1541 = vertParams[54] * _t1536;
				_t1542 = 4.000000 * _t1369;
				_t1543 = _t1505 * _t1416;
				_t1544 = _t1543 / _t1542;
				cif (_t1544 >= 0.000000) {
					_t1545 = _t1544;
				}
				else {
					_t1547 = -_t1544;
					_t1545 = _t1547;
				}
				_t1548 = 4.000000 * _t1368;
				_t1549 = _t1526 * _t1416;
				_t1550 = _t1549 / _t1548;
				cif (_t1550 >= 0.000000) {
					_t1551 = _t1550;
				}
				else {
					_t1553 = -_t1550;
					_t1551 = _t1553;
				}
				_t1527 = _t1539;
				_t1528 = _t1540;
				_t1529 = _t1541;
				_t1530 = _t1545;
				_t1531 = _t1551;
			}
			else {
				_t1554 = _t1333 * _t1369;
				_t1555 = _t1368+_t1554;
				_t1556 = _t1335 * _t1368;
				_t1557 = _t1369+_t1556;
				_t1558 = (float)1.0 / (_t1333);
				_t1559 = _t1558 * _t1558;
				_t1560 = _t1555 * _t1555;
				_t1561 = _t1330 * _t1560;
				_t1562 = _t1333 * _t1333;
				_t1563 = 1.000000-_t1416;
				_t1564 = _t1563 * _t1408;
				_t1565 = _t1564 * _t1484;
				_t1566 = _t1565 * _t1562;
				_t1567 = _t1566 * _t1368;
				_t1568 = _t1567 * _t1369;
				_t1569 = _t1559 * _t1568;
				_t1570 = _t1569 / _t1561;
				cif (_t1570 >= 0.000000) {
					_t1571 = _t1570;
				}
				else {
					_t1573 = -_t1570;
					_t1571 = _t1573;
				}
				_t1574 = vertParams[55] * _t1571;
				_t1575 = vertParams[56] * _t1571;
				_t1576 = vertParams[57] * _t1571;
				_t1577 = _t1555 * _t1555;
				_t1578 = _t1333 * _t1333;
				_t1579 = _t1578 * _t1369;
				_t1580 = 1.000000-_t1416;
				_t1581 = _t1505 * _t1580;
				_t1582 = _t1581 * _t1579;
				_t1583 = _t1582 / _t1577;
				cif (_t1583 >= 0.000000) {
					_t1584 = _t1583;
				}
				else {
					_t1586 = -_t1583;
					_t1584 = _t1586;
				}
				_t1587 = _t1557 * _t1557;
				_t1588 = _t1335 * _t1335;
				_t1589 = _t1588 * _t1368;
				_t1590 = 1.000000-_t1416;
				_t1591 = _t1526 * _t1590;
				_t1592 = _t1591 * _t1589;
				_t1593 = _t1592 / _t1587;
				cif (_t1593 >= 0.000000) {
					_t1594 = _t1593;
				}
				else {
					_t1596 = -_t1593;
					_t1594 = _t1596;
				}
				_t1527 = _t1574;
				_t1528 = _t1575;
				_t1529 = _t1576;
				_t1530 = _t1584;
				_t1531 = _t1594;
			}
			_t1260 = _t1527;
			_t1261 = _t1528;
			_t1262 = _t1529;
			_t1263 = _t1331;
			_t1264 = _t1530;
			_t1265 = _t1531;
		}
		else cif (vertParams[51] == 0.000000) {
			_t1597 = _t156 * _t250 + _t157 * _t251 + _t158 * _t252;
			cif (_t1597 > 0.000000) {
				_t1598 = _t156;
				_t1599 = _t157;
				_t1600 = _t158;
				_t1601 = _t1597;
			}
			else {
				_t1603 = -_t156;
				_t1604 = -_t157;
				_t1605 = -_t158;
				_t1606 = -_t1597;
				_t1598 = _t1603;
				_t1599 = _t1604;
				_t1600 = _t1605;
				_t1601 = _t1606;
			}
			_t1607 = _t1598 * _t1254 + _t1599 * _t1252 + _t1600 * _t1250;
			_t1608 = _t1607 * 0.318310;
			_t1609 = _t1601 * 0.318310;
			_t1610 = _t1608 * vertParams[52];
			_t1611 = _t1608 * vertParams[53];
			_t1612 = _t1608 * vertParams[54];
			_t1260 = _t1610;
			_t1261 = _t1611;
			_t1262 = _t1612;
			_t1263 = _t1607;
			_t1264 = _t1608;
			_t1265 = _t1609;
		}
		else {
			_t1260 = 0.000000;
			_t1261 = 0.000000;
			_t1262 = 0.000000;
			_t1263 = 0.000000;
			_t1264 = 0.000000;
			_t1265 = 0.000000;
		}
		_t270 = _t1254;
		_t271 = _t1252;
		_t272 = _t1250;
		_t273 = _t1260;
		_t274 = _t1261;
		_t275 = _t1262;
		_t276 = _t1263;
		_t277 = _t1264;
		_t278 = _t1265;
		_t279 = _t1259;
	}
	_t1613 = _t273 * _t279;
	_t1614 = _t274 * _t279;
	_t1615 = _t275 * _t279;
	_t1616 = _t278 * _t278;
	_t1617 = _t276 / _t277;
	_t1618 = _t1617 * _t1617;
	_t1619 = _t1618 * _t269;
	_t1620 = (float)1.0 / (_t277);
	_t1621 = _t1620 * _t1620;
	_t1622 = _t1613 * vertParams[61];
	_t1623 = _t1614 * vertParams[61];
	_t1624 = _t1615 * vertParams[61];
	cif (vertParams[62] == 0.000000) {
		_t1637 = vertParams[68] * vertParams[70];
		_t1638 = vertParams[67] * vertParams[71];
		_t1639 = _t1638-_t1637;
		_t1640 = vertParams[67] * vertParams[72];
		_t1641 = vertParams[69] * vertParams[70];
		_t1642 = _t1641-_t1640;
		_t1643 = vertParams[69] * vertParams[71];
		_t1644 = vertParams[68] * vertParams[72];
		_t1645 = _t1644-_t1643;
		_t1646 = sqrt(_t1645*_t1645+_t1642*_t1642+_t1639*_t1639);
		_t1647 = (float)1.0 / (_t1646);
		_t1648 = _t1645 * _t1647;
		_t1649 = _t1642 * _t1647;
		_t1650 = _t1639 * _t1647;
		_t1651 = _t271 * vertParams[70];
		_t1652 = _t270 * vertParams[71];
		_t1653 = _t1652-_t1651;
		_t1654 = _t270 * vertParams[72];
		_t1655 = _t272 * vertParams[70];
		_t1656 = _t1655-_t1654;
		_t1657 = _t272 * vertParams[71];
		_t1658 = _t271 * vertParams[72];
		_t1659 = _t1658-_t1657;
		_t1660 = _t1659 * vertParams[67] + _t1656 * vertParams[68] + _t1653 * vertParams[69];
		_t1661 = (float)1.0 / (_t1660);
		_t1662 = _t150-vertParams[64];
		_t1663 = _t151-vertParams[65];
		_t1664 = _t152-vertParams[66];
		_t1665 = _t1662 * _t1659 + _t1663 * _t1656 + _t1664 * _t1653;
		_t1666 = _t1665 * _t1661;
		_t1667 = _t1663 * vertParams[67];
		_t1668 = _t1662 * vertParams[68];
		_t1669 = _t1668-_t1667;
		_t1670 = _t1662 * vertParams[69];
		_t1671 = _t1664 * vertParams[67];
		_t1672 = _t1671-_t1670;
		_t1673 = _t1664 * vertParams[68];
		_t1674 = _t1663 * vertParams[69];
		_t1675 = _t1674-_t1673;
		_t1676 = _t270 * _t1675 + _t271 * _t1672 + _t272 * _t1669;
		_t1677 = _t1676 * _t1661;
		_t1678 = vertParams[70] * _t1675 + vertParams[71] * _t1672 + vertParams[72] * _t1669;
		_t1679 = _t1678 * _t1661;
		_t1680 = 1.000000-_t1666;
		_t1681 = _t1680-_t1677;
		_t1682 = _t1679 * _t270;
		_t1683 = _t150+_t1682;
		_t1684 = _t1679 * _t271;
		_t1685 = _t151+_t1684;
		_t1686 = _t1679 * _t272;
		_t1687 = _t152+_t1686;
		_t1688 = _t1677 * vertParams[79];
		_t1689 = _t1666 * vertParams[76];
		_t1690 = _t1681 * vertParams[73];
		_t1691 = _t1690+_t1689;
		_t1692 = _t1691+_t1688;
		_t1693 = _t1677 * vertParams[80];
		_t1694 = _t1666 * vertParams[77];
		_t1695 = _t1681 * vertParams[74];
		_t1696 = _t1695+_t1694;
		_t1697 = _t1696+_t1693;
		_t1698 = _t1677 * vertParams[81];
		_t1699 = _t1666 * vertParams[78];
		_t1700 = _t1681 * vertParams[75];
		_t1701 = _t1700+_t1699;
		_t1702 = _t1701+_t1698;
		_t1703 = sqrt(_t1692*_t1692+_t1697*_t1697+_t1702*_t1702);
		_t1704 = (float)1.0 / (_t1703);
		_t1705 = _t1692 * _t1704;
		_t1706 = _t1697 * _t1704;
		_t1707 = _t1702 * _t1704;
		cif (vertParams[100] == 0.000000) {
			_t1708 = _t1666;
			_t1709 = _t1677;
		}
		else {
			_t1711 = _t1677 * vertParams[105];
			_t1712 = _t1666 * vertParams[103];
			_t1713 = 1.000000-_t1666;
			_t1714 = _t1713-_t1677;
			_t1715 = _t1714 * vertParams[101];
			_t1716 = _t1715+_t1712;
			_t1717 = _t1716+_t1711;
			_t1718 = _t1677 * vertParams[106];
			_t1719 = _t1666 * vertParams[104];
			_t1720 = 1.000000-_t1666;
			_t1721 = _t1720-_t1677;
			_t1722 = _t1721 * vertParams[102];
			_t1723 = _t1722+_t1719;
			_t1724 = _t1723+_t1718;
			_t1708 = _t1717;
			_t1709 = _t1724;
		}
		_t1625 = _t1683;
		_t1626 = _t1685;
		_t1627 = _t1687;
		_t1628 = _t1648;
		_t1629 = _t1649;
		_t1630 = _t1650;
		_t1631 = _t1705;
		_t1632 = _t1706;
		_t1633 = _t1707;
		_t1634 = _t1708;
		_t1635 = _t1709;
	}
	else {
		_t1625 = 0.000000;
		_t1626 = 0.000000;
		_t1627 = 0.000000;
		_t1628 = 0.000000;
		_t1629 = 0.000000;
		_t1630 = 0.000000;
		_t1631 = 0.000000;
		_t1632 = 0.000000;
		_t1633 = 0.000000;
		_t1634 = 0.000000;
		_t1635 = 0.000000;
	}
	_t1725 = -_t270;
	_t1726 = -_t271;
	_t1727 = -_t272;
	cif (vertParams[108] == 2.000000) {
		_t1728 = 1.000000;
		_t1729 = 1.000000;
	}
	else {
		_t1731 = _t152-_t1627;
		_t1732 = _t1731 * _t1731;
		_t1733 = _t151-_t1626;
		_t1734 = _t1733 * _t1733;
		_t1735 = _t150-_t1625;
		_t1736 = _t1735 * _t1735;
		_t1737 = _t1736+_t1734;
		_t1738 = _t1737+_t1732;
		_t1739 = _t1738 * _t1738;
		_t1740 = _t270 * _t1631 + _t271 * _t1632 + _t272 * _t1633;
		cif (_t1740 >= 0.000000) {
			_t1741 = _t1740;
		}
		else {
			_t1743 = -_t1740;
			_t1741 = _t1743;
		}
		_t1744 = _t1741 * _t1741;
		_t1745 = (float)1.0 / (_t1744);
		_t1728 = _t1745;
		_t1729 = _t1739;
	}
	_t1746 = _t1728 * _t1729;
	_t1747 = _t1621 * _t1746;
	_t1748 = _t1619 * _t1728;
	cif (vertParams[108] == 1.000000) {
		cif (vertParams[109] == 0.000000) {
			_t1756 = vertParams[154];
		}
		else {
			_t1756 = 0.000000;
		}
		_t1758 = _t1631 * _t270 + _t1632 * _t271 + _t1633 * _t272;
		_t1759 = -_t1758;
		_t1760 = _t1759 * _t1756;
		_t1761 = _t1760 * 0.318310;
		_t1749 = vertParams[155];
		_t1750 = vertParams[156];
		_t1751 = vertParams[157];
		_t1752 = _t1756;
		_t1753 = _t1761;
	}
	else cif (vertParams[108] == 2.000000) {
		cif (vertParams[124] == 0.000000) {
			_t1779 = vertParams[131] * vertParams[131];
			_t1780 = vertParams[132] * vertParams[132];
			_t1781 = vertParams[133] * vertParams[133];
			_t1782 = vertParams[131] * vertParams[132];
			_t1783 = vertParams[131] * vertParams[133];
			_t1784 = vertParams[132] * vertParams[133];
			_t1785 = vertParams[131] * vertParams[134];
			_t1786 = vertParams[132] * vertParams[134];
			_t1787 = vertParams[133] * vertParams[134];
			_t1788 = _t1780+_t1781;
			_t1789 = 2.000000 * _t1788;
			_t1790 = 1.000000-_t1789;
			_t1791 = _t1782+_t1787;
			_t1792 = 2.000000 * _t1791;
			_t1793 = _t1783-_t1786;
			_t1794 = 2.000000 * _t1793;
			_t1795 = _t1782-_t1787;
			_t1796 = 2.000000 * _t1795;
			_t1797 = _t1779+_t1781;
			_t1798 = 2.000000 * _t1797;
			_t1799 = 1.000000-_t1798;
			_t1800 = _t1784+_t1785;
			_t1801 = 2.000000 * _t1800;
			_t1802 = _t1783+_t1786;
			_t1803 = 2.000000 * _t1802;
			_t1804 = _t1784-_t1785;
			_t1805 = 2.000000 * _t1804;
			_t1806 = _t1779+_t1780;
			_t1807 = 2.000000 * _t1806;
			_t1808 = 1.000000-_t1807;
			_t1762 = _t1790;
			_t1763 = _t1792;
			_t1764 = _t1794;
			_t1765 = 0.000000;
			_t1766 = _t1796;
			_t1767 = _t1799;
			_t1768 = _t1801;
			_t1769 = 0.000000;
			_t1770 = _t1803;
			_t1771 = _t1805;
			_t1772 = _t1808;
			_t1773 = 0.000000;
			_t1774 = vertParams[125];
			_t1775 = vertParams[126];
			_t1776 = vertParams[127];
			_t1777 = 1.000000;
		}
		else {
			_t1809 = 1.000000-primary[0];
			_t1810 = primary[0] * vertParams[128];
			_t1811 = _t1809 * vertParams[125];
			_t1812 = _t1811+_t1810;
			_t1813 = primary[0] * vertParams[129];
			_t1814 = _t1809 * vertParams[126];
			_t1815 = _t1814+_t1813;
			_t1816 = primary[0] * vertParams[130];
			_t1817 = _t1809 * vertParams[127];
			_t1818 = _t1817+_t1816;
			_t1819 = vertParams[134] * vertParams[138];
			_t1820 = vertParams[133] * vertParams[137];
			_t1821 = vertParams[132] * vertParams[136];
			_t1822 = vertParams[131] * vertParams[135];
			_t1823 = _t1822+_t1821;
			_t1824 = _t1823+_t1820;
			_t1825 = _t1824+_t1819;
			cif (_t1825 < 0.000000) {
				_t1832 = -vertParams[135];
				_t1833 = -vertParams[136];
				_t1834 = -vertParams[137];
				_t1835 = -vertParams[138];
				_t1836 = -_t1825;
				_t1826 = _t1832;
				_t1827 = _t1833;
				_t1828 = _t1834;
				_t1829 = _t1835;
				_t1830 = _t1836;
			}
			else {
				_t1826 = vertParams[135];
				_t1827 = vertParams[136];
				_t1828 = vertParams[137];
				_t1829 = vertParams[138];
				_t1830 = _t1825;
			}
			cif (_t1830 > 0.999500) {
				_t1842 = 1.000000-primary[0];
				_t1843 = primary[0] * _t1826;
				_t1844 = _t1842 * vertParams[131];
				_t1845 = _t1844+_t1843;
				_t1846 = primary[0] * _t1827;
				_t1847 = _t1842 * vertParams[132];
				_t1848 = _t1847+_t1846;
				_t1849 = primary[0] * _t1828;
				_t1850 = _t1842 * vertParams[133];
				_t1851 = _t1850+_t1849;
				_t1852 = primary[0] * _t1829;
				_t1853 = _t1842 * vertParams[134];
				_t1854 = _t1853+_t1852;
				_t1855 = sqrt(_t1845*_t1845+_t1848*_t1848+_t1851*_t1851+_t1854*_t1854);
				_t1856 = (float)1.0 / (_t1855);
				_t1857 = _t1845 * _t1856;
				_t1858 = _t1848 * _t1856;
				_t1859 = _t1851 * _t1856;
				_t1860 = _t1854 * _t1856;
				_t1837 = _t1857;
				_t1838 = _t1858;
				_t1839 = _t1859;
				_t1840 = _t1860;
			}
			else {
				_t1861 = acos(_t1830);
				_t1862 = _t1861 * primary[0];
				_t1863 = vertParams[131] * _t1830;
				_t1864 = _t1826-_t1863;
				_t1865 = vertParams[132] * _t1830;
				_t1866 = _t1827-_t1865;
				_t1867 = vertParams[133] * _t1830;
				_t1868 = _t1828-_t1867;
				_t1869 = vertParams[134] * _t1830;
				_t1870 = _t1829-_t1869;
				_t1871 = sqrt(_t1864*_t1864+_t1866*_t1866+_t1868*_t1868+_t1870*_t1870);
				_t1872 = (float)1.0 / (_t1871);
				_t1873 = _t1864 * _t1872;
				_t1874 = _t1866 * _t1872;
				_t1875 = _t1868 * _t1872;
				_t1876 = _t1870 * _t1872;
				_t1877 = sin(_t1862);
				_t1878 = cos(_t1862);
				_t1879 = _t1873 * _t1877;
				_t1880 = vertParams[131] * _t1878;
				_t1881 = _t1880+_t1879;
				_t1882 = _t1874 * _t1877;
				_t1883 = vertParams[132] * _t1878;
				_t1884 = _t1883+_t1882;
				_t1885 = _t1875 * _t1877;
				_t1886 = vertParams[133] * _t1878;
				_t1887 = _t1886+_t1885;
				_t1888 = _t1876 * _t1877;
				_t1889 = vertParams[134] * _t1878;
				_t1890 = _t1889+_t1888;
				_t1837 = _t1881;
				_t1838 = _t1884;
				_t1839 = _t1887;
				_t1840 = _t1890;
			}
			_t1891 = _t1837 * _t1837;
			_t1892 = _t1838 * _t1838;
			_t1893 = _t1839 * _t1839;
			_t1894 = _t1837 * _t1838;
			_t1895 = _t1837 * _t1839;
			_t1896 = _t1838 * _t1839;
			_t1897 = _t1837 * _t1840;
			_t1898 = _t1838 * _t1840;
			_t1899 = _t1839 * _t1840;
			_t1900 = _t1892+_t1893;
			_t1901 = 2.000000 * _t1900;
			_t1902 = 1.000000-_t1901;
			_t1903 = _t1894+_t1899;
			_t1904 = 2.000000 * _t1903;
			_t1905 = _t1895-_t1898;
			_t1906 = 2.000000 * _t1905;
			_t1907 = _t1894-_t1899;
			_t1908 = 2.000000 * _t1907;
			_t1909 = _t1891+_t1893;
			_t1910 = 2.000000 * _t1909;
			_t1911 = 1.000000-_t1910;
			_t1912 = _t1896+_t1897;
			_t1913 = 2.000000 * _t1912;
			_t1914 = _t1895+_t1898;
			_t1915 = 2.000000 * _t1914;
			_t1916 = _t1896-_t1897;
			_t1917 = 2.000000 * _t1916;
			_t1918 = _t1891+_t1892;
			_t1919 = 2.000000 * _t1918;
			_t1920 = 1.000000-_t1919;
			_t1762 = _t1902;
			_t1763 = _t1904;
			_t1764 = _t1906;
			_t1765 = 0.000000;
			_t1766 = _t1908;
			_t1767 = _t1911;
			_t1768 = _t1913;
			_t1769 = 0.000000;
			_t1770 = _t1915;
			_t1771 = _t1917;
			_t1772 = _t1920;
			_t1773 = 0.000000;
			_t1774 = _t1812;
			_t1775 = _t1815;
			_t1776 = _t1818;
			_t1777 = 1.000000;
		}
		_t1921 = _t1772 * _t272;
		_t1922 = _t1768 * _t271;
		_t1923 = _t1764 * _t270;
		_t1924 = _t1923+_t1922;
		_t1925 = _t1924+_t1921;
		_t1926 = _t1771 * _t272;
		_t1927 = _t1767 * _t271;
		_t1928 = _t1763 * _t270;
		_t1929 = _t1928+_t1927;
		_t1930 = _t1929+_t1926;
		_t1931 = _t1770 * _t272;
		_t1932 = _t1766 * _t271;
		_t1933 = _t1762 * _t270;
		_t1934 = _t1933+_t1932;
		_t1935 = _t1934+_t1931;
		_t1936 = acos(_t1930);
		_t1937 = _t1936 / vertParams[146];
		_t1938 = _t1937-0.500000;
		_t1939 = -_t1925;
		_t1940 = atan2(_t1935,_t1939);
		_t1941 = _t1940 / vertParams[145];
		_t1942 = _t1941-0.500000;
		_t1943 = _t1942-vertParams[143];
		_t1944 = 1.000000-_t1943;
		_t1945 = _t1938-vertParams[144];
		_t1946 = 1.000000-_t1945;
		_t1947 = vertParams[150] * _t1943;
		_t1948 = _t1947 * _t1946;
		_t1949 = vertParams[147] * _t1944;
		_t1950 = _t1949 * _t1946;
		_t1951 = _t1950+_t1948;
		_t1952 = vertParams[151] * _t1943;
		_t1953 = _t1952 * _t1946;
		_t1954 = vertParams[148] * _t1944;
		_t1955 = _t1954 * _t1946;
		_t1956 = _t1955+_t1953;
		_t1957 = vertParams[152] * _t1943;
		_t1958 = _t1957 * _t1946;
		_t1959 = vertParams[149] * _t1944;
		_t1960 = _t1959 * _t1946;
		_t1961 = _t1960+_t1958;
		_t1962 = vertParams[156] * _t1943;
		_t1963 = _t1962 * _t1945;
		_t1964 = vertParams[153] * _t1944;
		_t1965 = _t1964 * _t1945;
		_t1966 = _t1965+_t1963;
		_t1967 = vertParams[157] * _t1943;
		_t1968 = _t1967 * _t1945;
		_t1969 = vertParams[154] * _t1944;
		_t1970 = _t1969 * _t1945;
		_t1971 = _t1970+_t1968;
		_t1972 = vertParams[158] * _t1943;
		_t1973 = _t1972 * _t1945;
		_t1974 = vertParams[155] * _t1944;
		_t1975 = _t1974 * _t1945;
		_t1976 = _t1975+_t1973;
		_t1977 = _t1951+_t1966;
		_t1978 = _t1956+_t1971;
		_t1979 = _t1961+_t1976;
		_t1980 = _t1930 * _t1930;
		_t1981 = 1.000000-_t1980;
		cif (_t1981 >= 0.000001) {
			_t1982 = _t1981;
		}
		else {
			_t1982 = 0.000001;
		}
		_t1984 = sqrt(_t1982);
		cif (_t1984 >= 0.000000) {
			_t1985 = _t1984;
		}
		else {
			_t1987 = -_t1984;
			_t1985 = _t1987;
		}
		cif (_t1985 >= 0.000000) {
			_t1988 = _t1985;
		}
		else {
			_t1988 = 0.000000;
		}
		_t1990 = _t1976 * 0.072169;
		_t1991 = _t1971 * 0.715160;
		_t1992 = _t1966 * 0.212671;
		_t1993 = _t1992+_t1991;
		_t1994 = _t1993+_t1990;
		_t1995 = _t1994 * vertParams[160];
		_t1996 = _t1961 * 0.072169;
		_t1997 = _t1956 * 0.715160;
		_t1998 = _t1951 * 0.212671;
		_t1999 = _t1998+_t1997;
		_t2000 = _t1999+_t1996;
		_t2001 = _t2000 * vertParams[159];
		_t2002 = _t2001+_t1995;
		_t2003 = _t2002 * vertParams[161];
		_t2004 = _t2003 / _t1988;
		_t2005 = scene[37] * scene[37];
		_t2006 = (float)1.0 / (_t2005);
		_t2007 = 0.318310 * _t2006;
		_t2008 = _t2004 * _t2007;
		_t1749 = _t1977;
		_t1750 = _t1978;
		_t1751 = _t1979;
		_t1752 = _t2004;
		_t1753 = _t2008;
	}
	else {
		_t1749 = 0.000000;
		_t1750 = 0.000000;
		_t1751 = 0.000000;
		_t1752 = 0.000000;
		_t1753 = 0.000000;
	}
	_t2009 = _t1622 * _t1749;
	_t2010 = _t1623 * _t1750;
	_t2011 = _t1624 * _t1751;
	_t2012 = _t1752 * vertParams[164];
	_t2013 = _t1753 * vertParams[164];
	_t2014 = _t2013 * _t2013;
	_t2015 = _t2014 * _t1748;
	_t2016 = _t2012 * _t2012;
	_t2017 = _t2016 * _t1747;
	_t2018 = _t2017+_t2015;
	_t2019 = 1.000000+_t2018;
	_t2020 = (float)1.0 / (_t2019);
	_t2021 = _t2009 * _t2020;
	_t2022 = _t2010 * _t2020;
	_t2023 = _t2011 * _t2020;
	_t2024 = _t2023 * 0.072169;
	_t2025 = _t2022 * 0.715160;
	_t2026 = _t2021 * 0.212671;
	_t2027 = _t2026+_t2025;
	_t2028 = _t2027+_t2024;
	_t2029 = log(_t2028);
	float _acc4 = 0, _acc9 = 0, _acc10 = 0, _acc14 = 0, _acc17 = 0, _acc18 = 0, _acc7 = 0, _acc20 = 0, _acc23 = 0, _acc43 = 0, _acc32 = 0, _acc31 = 0, _acc50 = 0, _acc36 = 0, _acc33 = 0, _acc35 = 0, _acc30 = 0, _acc29 = 0, _acc57 = 0, _acc60 = 0, _acc61 = 0, _acc62 = 0, _acc42 = 0, _acc65 = 0, _acc64 = 0, _acc67 = 0, _acc53 = 0, _acc40 = 0, _acc70 = 0, _acc71 = 0, _acc76 = 0, _acc78 = 0, _acc79 = 0, _acc80 = 0, _acc83 = 0, _acc84 = 0, _acc81 = 0, _acc108 = 0, _acc111 = 0, _acc113 = 0, _acc107 = 0, _acc117 = 0, _acc118 = 0, _acc120 = 0, _acc124 = 0, _acc100 = 0, _acc99 = 0, _acc126 = 0, _acc127 = 0, _acc114 = 0, _acc132 = 0, _acc125 = 0, _acc112 = 0, _acc135 = 0, _acc137 = 0, _acc98 = 0, _acc97 = 0, _acc140 = 0, _acc139 = 0, _acc63 = 0, _acc73 = 0, _acc176 = 0, _acc184 = 0, _acc192 = 0, _acc193 = 0, _acc187 = 0, _acc196 = 0, _acc189 = 0, _acc188 = 0, _acc199 = 0, _acc200 = 0, _acc203 = 0, _acc205 = 0, _acc207 = 0, _acc211 = 0, _acc214 = 0, _acc213 = 0, _acc219 = 0, _acc220 = 0, _acc221 = 0, _acc202 = 0, _acc191 = 0, _acc225 = 0, _acc226 = 0, _acc229 = 0, _acc134 = 0, _acc227 = 0, _acc231 = 0, _acc230 = 0, _acc212 = 0, _acc253 = 0, _acc255 = 0, _acc254 = 0, _acc259 = 0, _acc260 = 0, _acc261 = 0, _acc133 = 0, _acc59 = 0, _acc138 = 0, _acc264 = 0, _acc267 = 0, _acc262 = 0, _acc1247 = 0, _acc1253 = 0, _acc1257 = 0, _acc1605 = 0, _acc1604 = 0, _acc1603 = 0, _acc1600 = 0, _acc1610 = 0, _acc1349 = 0, _acc1351 = 0, _acc1353 = 0, _acc1355 = 0, _acc1350 = 0, _acc1352 = 0, _acc1357 = 0, _acc1345 = 0, _acc1343 = 0, _acc16 = 0, _acc1348 = 0, _acc1347 = 0, _acc1346 = 0, _acc105 = 0, _acc1338 = 0, _acc106 = 0, _acc1339 = 0, _acc54 = 0, _acc1367 = 0, _acc1366 = 0, _acc1383 = 0, _acc1384 = 0, _acc1387 = 0, _acc1388 = 0, _acc1381 = 0, _acc1385 = 0, _acc1362 = 0, _acc1361 = 0, _acc1371 = 0, _acc1370 = 0, _acc8 = 0, _acc1395 = 0, _acc204 = 0, _acc1397 = 0, _acc1398 = 0, _acc209 = 0, _acc1399 = 0, _acc210 = 0, _acc1400 = 0, _acc1402 = 0, _acc1406 = 0, _acc1405 = 0, _acc1411 = 0, _acc1413 = 0, _acc1415 = 0, _acc1418 = 0, _acc1424 = 0, _acc1425 = 0, _acc1423 = 0, _acc1426 = 0, _acc1431 = 0, _acc1433 = 0, _acc1436 = 0, _acc1439 = 0, _acc1441 = 0, _acc66 = 0, _acc1437 = 0, _acc1445 = 0, _acc1455 = 0, _acc1454 = 0, _acc1456 = 0, _acc1461 = 0, _acc1462 = 0, _acc1463 = 0, _acc1467 = 0, _acc1471 = 0, _acc1476 = 0, _acc1372 = 0, _acc1478 = 0, _acc1472 = 0, _acc1482 = 0, _acc1483 = 0, _acc1365 = 0, _acc1473 = 0, _acc1447 = 0, _acc1485 = 0, _acc1486 = 0, _acc1487 = 0, _acc1391 = 0, _acc1490 = 0, _acc1379 = 0, _acc1491 = 0, _acc11 = 0, _acc195 = 0, _acc1392 = 0, _acc1494 = 0, _acc1496 = 0, _acc1489 = 0, _acc1488 = 0, _acc1499 = 0, _acc1502 = 0, _acc232 = 0, _acc1501 = 0, _acc109 = 0, _acc1503 = 0, _acc1504 = 0, _acc1558 = 0, _acc1560 = 0, _acc1573 = 0, _acc1570 = 0, _acc1571 = 0, _acc1380 = 0, _acc1333 = 0, _acc58 = 0, _acc1581 = 0, _acc1577 = 0, _acc1586 = 0, _acc86 = 0, _acc1576 = 0, _acc1575 = 0, _acc1574 = 0, _acc1330 = 0, _acc1484 = 0, _acc1533 = 0, _acc1532 = 0, _acc1534 = 0, _acc1538 = 0, _acc1369 = 0, _acc1416 = 0, _acc1543 = 0, _acc1547 = 0, _acc1545 = 0, _acc1540 = 0, _acc1539 = 0, _acc1530 = 0, _acc1529 = 0, _acc1527 = 0, _acc72 = 0, _acc1277 = 0, _acc77 = 0, _acc1276 = 0, _acc1287 = 0, _acc1271 = 0, _acc1289 = 0, _acc1272 = 0, _acc1292 = 0, _acc1290 = 0, _acc1288 = 0, _acc1294 = 0, _acc101 = 0, _acc1301 = 0, _acc1295 = 0, _acc1308 = 0, _acc44 = 0, _acc1299 = 0, _acc1298 = 0, _acc1297 = 0, _acc128 = 0, _acc1296 = 0, _acc1318 = 0, _acc141 = 0, _acc1319 = 0, _acc1320 = 0, _acc1317 = 0, _acc1316 = 0, _acc1315 = 0, _acc1309 = 0, _acc27 = 0, _acc1310 = 0, _acc1481 = 0, _acc1323 = 0, _acc121 = 0, _acc1324 = 0, _acc123 = 0, _acc1325 = 0, _acc1329 = 0, _acc122 = 0, _acc256 = 0, _acc1327 = 0, _acc1259 = 0, _acc1262 = 0, _acc1260 = 0, _acc1250 = 0, _acc46 = 0, _acc1195 = 0, _acc1194 = 0, _acc1205 = 0, _acc1207 = 0, _acc1206 = 0, _acc1215 = 0, _acc1217 = 0, _acc1210 = 0, _acc1219 = 0, _acc1222 = 0, _acc1189 = 0, _acc1414 = 0, _acc1198 = 0, _acc1236 = 0, _acc1237 = 0, _acc1235 = 0, _acc1238 = 0, _acc1191 = 0, _acc89 = 0, _acc1241 = 0, _acc91 = 0, _acc1242 = 0, _acc88 = 0, _acc1240 = 0, _acc92 = 0, _acc1243 = 0, _acc1245 = 0, _acc1225 = 0, _acc1234 = 0, _acc884 = 0, _acc887 = 0, _acc892 = 0, _acc893 = 0, _acc895 = 0, _acc898 = 0, _acc899 = 0, _acc903 = 0, _acc901 = 0, _acc69 = 0, _acc1286 = 0, _acc890 = 0, _acc910 = 0, _acc1442 = 0, _acc922 = 0, _acc1223 = 0, _acc923 = 0, _acc926 = 0, _acc929 = 0, _acc925 = 0, _acc924 = 0, _acc943 = 0, _acc85 = 0, _acc949 = 0, _acc24 = 0, _acc1580 = 0, _acc952 = 0, _acc951 = 0, _acc953 = 0, _acc961 = 0, _acc955 = 0, _acc179 = 0, _acc964 = 0, _acc216 = 0, _acc968 = 0, _acc217 = 0, _acc969 = 0, _acc218 = 0, _acc970 = 0, _acc974 = 0, _acc975 = 0, _acc1293 = 0, _acc976 = 0, _acc972 = 0, _acc1037 = 0, _acc956 = 0, _acc1038 = 0, _acc1040 = 0, _acc1468 = 0, _acc1041 = 0, _acc1043 = 0, _acc1044 = 0, _acc1035 = 0, _acc1466 = 0, _acc959 = 0, _acc1039 = 0, _acc177 = 0, _acc1047 = 0, _acc1051 = 0, _acc1052 = 0, _acc1057 = 0, _acc1065 = 0, _acc1066 = 0, _acc1067 = 0, _acc1068 = 0, _acc1275 = 0, _acc881 = 0, _acc1069 = 0, _acc1072 = 0, _acc1055 = 0, _acc1054 = 0, _acc1053 = 0, _acc178 = 0, _acc1048 = 0, _acc1042 = 0, _acc994 = 0, _acc942 = 0, _acc996 = 0, _acc957 = 0, _acc997 = 0, _acc1002 = 0, _acc995 = 0, _acc1113 = 0, _acc1116 = 0, _acc1368 = 0, _acc1118 = 0, _acc6 = 0, _acc912 = 0, _acc1121 = 0, _acc1122 = 0, _acc1475 = 0, _acc1120 = 0, _acc1123 = 0, _acc1124 = 0, _acc1127 = 0, _acc1126 = 0, _acc1128 = 0, _acc1125 = 0, _acc1130 = 0, _acc1129 = 0, _acc119 = 0, _acc1131 = 0, _acc185 = 0, _acc1137 = 0, _acc1135 = 0, _acc1492 = 0, _acc1138 = 0, _acc1139 = 0, _acc1142 = 0, _acc1497 = 0, _acc1148 = 0, _acc1147 = 0, _acc1390 = 0, _acc1146 = 0, _acc1152 = 0, _acc21 = 0, _acc1153 = 0, _acc1154 = 0, _acc1144 = 0, _acc1159 = 0, _acc1156 = 0, _acc1505 = 0, _acc1157 = 0, _acc1161 = 0, _acc55 = 0, _acc1169 = 0, _acc1171 = 0, _acc1168 = 0, _acc1173 = 0, _acc1202 = 0, _acc1174 = 0, _acc1172 = 0, _acc1203 = 0, _acc1175 = 0, _acc1176 = 0, _acc1140 = 0, _acc1177 = 0, _acc1285 = 0, _acc948 = 0, _acc1178 = 0, _acc981 = 0, _acc980 = 0, _acc979 = 0, _acc721 = 0, _acc720 = 0, _acc724 = 0, _acc728 = 0, _acc725 = 0, _acc1554 = 0, _acc730 = 0, _acc785 = 0, _acc1542 = 0, _acc789 = 0, _acc1060 = 0, _acc794 = 0, _acc1063 = 0, _acc796 = 0, _acc1599 = 0, _acc792 = 0, _acc807 = 0, _acc811 = 0, _acc266 = 0, _acc1281 = 0, _acc885 = 0, _acc806 = 0, _acc816 = 0, _acc51 = 0, _acc814 = 0, _acc1291 = 0, _acc817 = 0, _acc813 = 0, _acc801 = 0, _acc798 = 0, _acc819 = 0, _acc820 = 0, _acc977 = 0, _acc818 = 0, _acc186 = 0, _acc897 = 0, _acc821 = 0, _acc1403 = 0, _acc389 = 0, _acc1404 = 0, _acc387 = 0, _acc1393 = 0, _acc379 = 0, _acc788 = 0, _acc647 = 0, _acc180 = 0, _acc967 = 0, _acc399 = 0, _acc0 = 0, _acc1342 = 0, _acc1396 = 0, _acc392 = 0, _acc393 = 0, _acc998 = 0, _acc2026 = 0, _acc1801 = 0, _acc347 = 0, _acc466 = 0, _acc346 = 0, _acc194 = 0, _acc377 = 0, _acc841 = 0, _acc717 = 0, _acc345 = 0, _acc1214 = 0, _acc716 = 0, _acc342 = 0, _acc338 = 0, _acc371 = 0, _acc279 = 0, _acc275 = 0, _acc1665 = 0, _acc1312 = 0, _acc917 = 0, _acc435 = 0, _acc1873 = 0, _acc918 = 0, _acc436 = 0, _acc1569 = 0, _acc941 = 0, _acc869 = 0, _acc1617 = 0, _acc1918 = 0, _acc94 = 0, _acc1460 = 0, _acc745 = 0, _acc1874 = 0, _acc1620 = 0, _acc761 = 0, _acc45 = 0, _acc1613 = 0, _acc896 = 0, _acc1615 = 0, _acc1750 = 0, _acc382 = 0, _acc760 = 0, _acc148 = 0, _acc1658 = 0, _acc1780 = 0, _acc149 = 0, _acc1660 = 0, _acc1990 = 0, _acc144 = 0, _acc1659 = 0, _acc1480 = 0, _acc1664 = 0, _acc274 = 0, _acc1311 = 0, _acc916 = 0, _acc437 = 0, _acc1661 = 0, _acc341 = 0, _acc1678 = 0, _acc547 = 0, _acc1694 = 0, _acc1693 = 0, _acc1150 = 0, _acc1696 = 0, _acc1703 = 0, _acc1704 = 0, _acc812 = 0, _acc321 = 0, _acc152 = 0, _acc1994 = 0, _acc1162 = 0, _acc286 = 0, _acc1444 = 0, _acc1731 = 0, _acc1305 = 0, _acc832 = 0, _acc394 = 0, _acc289 = 0, _acc451 = 0, _acc780 = 0, _acc87 = 0, _acc1579 = 0, _acc481 = 0, _acc1228 = 0, _acc1734 = 0, _acc1226 = 0, _acc1732 = 0, _acc1230 = 0, _acc930 = 0, _acc1737 = 0, _acc1307 = 0, _acc861 = 0, _acc834 = 0, _acc1382 = 0, _acc1690 = 0, _acc752 = 0, _acc1741 = 0, _acc1977 = 0, _acc1117 = 0, _acc1985 = 0, _acc464 = 0, _acc1282 = 0, _acc695 = 0, _acc1739 = 0, _acc978 = 0, _acc1619 = 0, _acc1408 = 0, _acc1164 = 0, _acc1821 = 0, _acc1165 = 0, _acc1822 = 0, _acc1166 = 0, _acc1820 = 0, _acc1819 = 0, _acc1409 = 0, _acc1824 = 0, _acc197 = 0, _acc1834 = 0, _acc1830 = 0, _acc136 = 0, _acc1155 = 0, _acc1872 = 0, _acc1700 = 0, _acc1880 = 0, _acc1882 = 0, _acc427 = 0, _acc1960 = 0, _acc1883 = 0, _acc690 = 0, _acc1794 = 0, _acc1885 = 0, _acc1451 = 0, _acc1563 = 0, _acc935 = 0, _acc1886 = 0, _acc90 = 0, _acc362 = 0, _acc1561 = 0, _acc1878 = 0, _acc2021 = 0, _acc1862 = 0, _acc669 = 0, _acc1961 = 0, _acc1884 = 0, _acc1680 = 0, _acc1881 = 0, _acc358 = 0, _acc340 = 0, _acc47 = 0, _acc1677 = 0, _acc703 = 0, _acc1843 = 0, _acc1464 = 0, _acc492 = 0, _acc1827 = 0, _acc1459 = 0, _acc1753 = 0, _acc849 = 0, _acc1846 = 0, _acc737 = 0, _acc1828 = 0, _acc573 = 0, _acc1829 = 0, _acc1842 = 0, _acc1685 = 0, _acc1566 = 0, _acc937 = 0, _acc1889 = 0, _acc1852 = 0, _acc1686 = 0, _acc1567 = 0, _acc939 = 0, _acc1890 = 0, _acc1853 = 0, _acc848 = 0, _acc1845 = 0, _acc1211 = 0, _acc1851 = 0, _acc1687 = 0, _acc1568 = 0, _acc940 = 0, _acc868 = 0, _acc1892 = 0, _acc576 = 0, _acc1306 = 0, _acc904 = 0, _acc830 = 0, _acc1218 = 0, _acc1860 = 0, _acc1915 = 0, _acc1698 = 0, _acc1859 = 0, _acc1434 = 0, _acc533 = 0, _acc1858 = 0, _acc1857 = 0, _acc858 = 0, _acc1868 = 0, _acc1964 = 0, _acc1440 = 0, _acc857 = 0, _acc1867 = 0, _acc215 = 0, _acc401 = 0, _acc1869 = 0, _acc1965 = 0, _acc1457 = 0, _acc328 = 0, _acc1614 = 0, _acc1749 = 0, _acc381 = 0, _acc759 = 0, _acc116 = 0, _acc1806 = 0, _acc989 = 0, _acc1947 = 0, _acc1987 = 0, _acc662 = 0, _acc1061 = 0, _acc797 = 0, _acc1946 = 0, _acc115 = 0, _acc1493 = 0, _acc1805 = 0, _acc1528 = 0, _acc2 = 0, _acc1562 = 0, _acc934 = 0, _acc412 = 0, _acc317 = 0, _acc1976 = 0, _acc1046 = 0, _acc1903 = 0, _acc129 = 0, _acc567 = 0, _acc775 = 0, _acc1870 = 0, _acc1966 = 0, _acc1833 = 0, _acc329 = 0, _acc28 = 0, _acc102 = 0, _acc1622 = 0, _acc698 = 0, _acc954 = 0, _acc1756 = 0, _acc560 = 0, _acc1458 = 0, _acc477 = 0, _acc257 = 0, _acc1672 = 0, _acc1359 = 0, _acc914 = 0, _acc433 = 0, _acc992 = 0, _acc1951 = 0, _acc1231 = 0, _acc1736 = 0, _acc1469 = 0, _acc395 = 0, _acc156 = 0, _acc781 = 0, _acc413 = 0, _acc738 = 0, _acc905 = 0, _acc538 = 0, _acc1626 = 0, _acc222 = 0, _acc1908 = 0, _acc1855 = 0, _acc1997 = 0, _acc1907 = 0, _acc287 = 0, _acc1280 = 0, _acc805 = 0, _acc1996 = 0, _acc700 = 0, _acc2006 = 0, _acc1969 = 0, _acc455 = 0, _acc1618 = 0, _acc1134 = 0, _acc1991 = 0, _acc276 = 0, _acc2007 = 0, _acc696 = 0, _acc1932 = 0, _acc1791 = 0, _acc366 = 0, _acc49 = 0, _acc522 = 0, _acc270 = 0, _acc1671 = 0, _acc1930 = 0, _acc1453 = 0, _acc1894 = 0, _acc1973 = 0, _acc697 = 0, _acc1937 = 0, _acc1767 = 0, _acc2000 = 0, _acc1535 = 0, _acc778 = 0, _acc637 = 0, _acc1945 = 0, _acc2014 = 0, _acc1633 = 0, _acc445 = 0, _acc183 = 0, _acc988 = 0, _acc355 = 0, _acc22 = 0, _acc1863 = 0, _acc429 = 0, _acc1959 = 0, _acc442 = 0, _acc1653 = 0, _acc582 = 0, _acc2002 = 0, _acc1190 = 0, _acc293 = 0, _acc441 = 0, _acc1652 = 0, _acc2001 = 0, _acc1768 = 0, _acc1974 = 0, _acc56 = 0, _acc344 = 0, _acc715 = 0, _acc2020 = 0, _acc1790 = 0, _acc263 = 0, _acc1056 = 0, _acc1910 = 0, _acc641 = 0, _acc496 = 0, _acc1944 = 0, _acc2013 = 0, _acc444 = 0, _acc1904 = 0, _acc1420 = 0, _acc1837 = 0, _acc616 = 0, _acc1264 = 0, _acc1058 = 0, _acc1911 = 0, _acc505 = 0, _acc757 = 0, _acc1899 = 0, _acc1705 = 0, _acc103 = 0, _acc1623 = 0, _acc1358 = 0, _acc913 = 0, _acc432 = 0, _acc1847 = 0, _acc1804 = 0, _acc534 = 0, _acc1797 = 0, _acc810 = 0, _acc271 = 0, _acc1921 = 0, _acc1363 = 0, _acc549 = 0, _acc1761 = 0, _acc1785 = 0, _acc1913 = 0, _acc617 = 0, _acc1838 = 0, _acc911 = 0, _acc2029 = 0, _acc290 = 0, _acc765 = 0, _acc95 = 0, _acc889 = 0, _acc273 = 0, _acc1477 = 0, _acc1663 = 0, _acc906 = 0, _acc1627 = 0, _acc541 = 0, _acc915 = 0, _acc434 = 0, _acc426 = 0, _acc1958 = 0, _acc1220 = 0, _acc1866 = 0, _acc2003 = 0, _acc1770 = 0, _acc1229 = 0, _acc1735 = 0, _acc490 = 0, _acc877 = 0, _acc1251 = 0, _acc1045 = 0, _acc1902 = 0, _acc773 = 0, _acc933 = 0, _acc411 = 0, _acc1279 = 0, _acc1071 = 0, _acc316 = 0, _acc1975 = 0, _acc615 = 0, _acc368 = 0, _acc151 = 0, _acc285 = 0, _acc1625 = 0, _acc2018 = 0, _acc258 = 0, _acc1673 = 0, _acc1149 = 0, _acc1695 = 0, _acc1835 = 0, _acc888 = 0, _acc325 = 0, _acc2012 = 0, _acc1943 = 0, _acc1981 = 0, _acc1999 = 0, _acc1906 = 0, _acc1766 = 0, _acc907 = 0, _acc2022 = 0, _acc15 = 0, _acc1631 = 0, _acc131 = 0, _acc1982 = 0, _acc982 = 0, _acc2009 = 0, _acc1938 = 0, _acc908 = 0, _acc2023 = 0, _acc1679 = 0, _acc2025 = 0, _acc1752 = 0, _acc1740 = 0, _acc1826 = 0, _acc1662 = 0, _acc1988 = 0, _acc470 = 0, _acc1953 = 0, _acc1697 = 0, _acc343 = 0, _acc1760 = 0, _acc147 = 0, _acc1657 = 0, _acc1779 = 0, _acc999 = 0, _acc2027 = 0, _acc430 = 0, _acc1270 = 0, _acc513 = 0, _acc1783 = 0, _acc1701 = 0, _acc288 = 0, _acc1536 = 0, _acc638 = 0, _acc779 = 0, _acc2017 = 0, _acc1624 = 0, _acc13 = 0, _acc879 = 0, _acc1807 = 0, _acc722 = 0, _acc1865 = 0, _acc1962 = 0, _acc1258 = 0, _acc1772 = 0, _acc862 = 0, _acc75 = 0, _acc1759 = 0, _acc702 = 0, _acc1000 = 0, _acc431 = 0, _acc2028 = 0, _acc1758 = 0, _acc1998 = 0, _acc1979 = 0, _acc335 = 0, _acc1864 = 0, _acc2004 = 0, _acc277 = 0, _acc2008 = 0, _acc1598 = 0, _acc1059 = 0, _acc1912 = 0, _acc228 = 0, _acc1898 = 0, _acc1933 = 0, _acc1954 = 0, _acc1005 = 0, _acc1952 = 0, _acc110 = 0, _acc1861 = 0, _acc201 = 0, _acc223 = 0, _acc1909 = 0, _acc990 = 0, _acc420 = 0, _acc1948 = 0, _acc993 = 0, _acc421 = 0, _acc1949 = 0, _acc1699 = 0, _acc1836 = 0, _acc2024 = 0, _acc900 = 0, _acc983 = 0, _acc2010 = 0, _acc1940 = 0, _acc1328 = 0, _acc1993 = 0, _acc1676 = 0, _acc665 = 0, _acc1935 = 0, _acc145 = 0, _acc1119 = 0, _acc1656 = 0, _acc555 = 0, _acc1939 = 0, _acc1374 = 0, _acc1667 = 0, _acc1185 = 0, _acc657 = 0, _acc363 = 0, _acc509 = 0, _acc1925 = 0, _acc1825 = 0, _acc68 = 0, _acc1936 = 0, _acc1132 = 0, _acc1669 = 0, _acc1995 = 0, _acc1675 = 0, _acc12 = 0, _acc664 = 0, _acc1934 = 0, _acc1931 = 0, _acc1895 = 0, _acc1254 = 0, _acc962 = 0, _acc1762 = 0, _acc571 = 0, _acc1764 = 0, _acc1255 = 0, _acc1763 = 0, _acc572 = 0, _acc920 = 0, _acc1728 = 0, _acc327 = 0, _acc550 = 0, _acc439 = 0, _acc1133 = 0, _acc1670 = 0, _acc1929 = 0, _acc891 = 0, _acc1926 = 0, _acc815 = 0, _acc1928 = 0, _acc93 = 0, _acc1244 = 0, _acc1893 = 0, _acc1375 = 0, _acc1668 = 0, _acc1186 = 0, _acc658 = 0, _acc190 = 0, _acc793 = 0, _acc364 = 0, _acc507 = 0, _acc438 = 0, _acc1927 = 0, _acc921 = 0, _acc1729 = 0, _acc506 = 0, _acc1924 = 0, _acc1978 = 0, _acc552 = 0, _acc181 = 0, _acc965 = 0, _acc1049 = 0, _acc353 = 0, _acc400 = 0, _acc525 = 0, _acc646 = 0, _acc365 = 0, _acc508 = 0, _acc1914 = 0, _acc2005 = 0, _acc1923 = 0, _acc1891 = 0, _acc767 = 0, _acc272 = 0, _acc1922 = 0, _acc726 = 0, _acc1875 = 0, _acc150 = 0, _acc1632 = 0, _acc448 = 0, _acc762 = 0, _acc284 = 0, _acc1143 = 0, _acc1799 = 0, _acc1905 = 0, _acc1498 = 0, _acc1151 = 0, _acc1808 = 0, _acc143 = 0, _acc554 = 0, _acc1655 = 0, _acc1917 = 0, _acc1786 = 0, _acc1744 = 0, _acc870 = 0, _acc944 = 0, _acc1746 = 0, _acc19 = 0, _acc984 = 0, _acc1941 = 0, _acc2011 = 0, _acc1839 = 0, _acc1992 = 0, _acc1674 = 0, _acc663 = 0, _acc1800 = 0, _acc268 = 0, _acc886 = 0, _acc1798 = 0, _acc142 = 0, _acc556 = 0, _acc1654 = 0, _acc1684 = 0, _acc1802 = 0, _acc314 = 0, _acc1795 = 0, _acc1607 = 0, _acc1787 = 0, _acc873 = 0, _acc756 = 0, _acc985 = 0, _acc1942 = 0, _acc2015 = 0, _acc1422 = 0, _acc1840 = 0, _acc1745 = 0, _acc376 = 0, _acc1788 = 0, _acc1771 = 0, _acc402 = 0, _acc428 = 0, _acc927 = 0, _acc1871 = 0, _acc1111 = 0, _acc453 = 0, _acc1967 = 0, _acc1181 = 0, _acc654 = 0, _acc512 = 0, _acc1782 = 0, _acc1263 = 0, _acc398 = 0, _acc1844 = 0, _acc1796 = 0, _acc1803 = 0, _acc1248 = 0, _acc1900 = 0, _acc878 = 0, _acc1341 = 0, _acc378 = 0, _acc384 = 0, _acc386 = 0, _acc385 = 0, _acc373 = 0, _acc337 = 0, _acc375 = 0, _acc374 = 0, _acc1322 = 0, _acc252 = 0, _acc1500 = 0, _acc1856 = 0, _acc369 = 0, _acc1429 = 0, _acc1209 = 0, _acc708 = 0, _acc372 = 0, _acc251 = 0, _acc182 = 0, _acc966 = 0, _acc403 = 0, _acc354 = 0, _acc1386 = 0, _acc370 = 0, _acc1373 = 0, _acc1479 = 0, _acc1666 = 0, _acc250 = 0, _acc157 = 0, _acc782 = 0, _acc739 = 0, _acc158 = 0, _acc783 = 0, _acc359 = 0, _acc224 = 0, _acc360 = 0, _acc1421 = 0, _acc627 = 0, _acc650 = 0, _acc501 = 0, _acc1179 = 0, _acc651 = 0, _acc1182 = 0, _acc652 = 0, _acc1239 = 0, _acc414 = 0, _acc1180 = 0, _acc653 = 0, _acc624 = 0, _acc628 = 0, _acc1430 = 0, _acc709 = 0, _acc630 = 0, _acc626 = 0, _acc588 = 0, _acc499 = 0, _acc770 = 0, _acc295 = 0, _acc863 = 0, _acc880 = 0, _acc741 = 0, _acc1356 = 0, _acc452 = 0, _acc786 = 0, _acc621 = 0, _acc1187 = 0, _acc659 = 0, _acc667 = 0, _acc1216 = 0, _acc666 = 0, _acc1702 = 0, _acc660 = 0, _acc1062 = 0, _acc795 = 0, _acc1854 = 0, _acc661 = 0, _acc416 = 0, _acc902 = 0, _acc701 = 0, _acc822 = 0, _acc644 = 0, _acc292 = 0, _acc523 = 0, _acc642 = 0, _acc52 = 0, _acc1897 = 0, _acc742 = 0, _acc649 = 0, _acc648 = 0, _acc643 = 0, _acc1407 = 0, _acc1706 = 0, _acc583 = 0, _acc1559 = 0, _acc473 = 0, _acc1283 = 0, _acc693 = 0, _acc587 = 0, _acc302 = 0, _acc1823 = 0, _acc586 = 0, _acc1957 = 0, _acc544 = 0, _acc425 = 0, _acc1707 = 0, _acc584 = 0, _acc585 = 0, _acc580 = 0, _acc581 = 0, _acc579 = 0, _acc578 = 0, _acc1252 = 0, _acc1901 = 0, _acc495 = 0, _acc1394 = 0, _acc575 = 0, _acc449 = 0, _acc1401 = 0, _acc577 = 0, _acc1249 = 0, _acc494 = 0, _acc475 = 0, _acc206 = 0, _acc1160 = 0, _acc574 = 0, _acc96 = 0, _acc1896 = 0, _acc474 = 0, _acc1344 = 0, _acc570 = 0, _acc34 = 0, _acc569 = 0, _acc130 = 0, _acc1832 = 0, _acc568 = 0, _acc776 = 0, _acc530 = 0, _acc104 = 0, _acc1337 = 0, _acc1389 = 0, _acc566 = 0, _acc297 = 0, _acc769 = 0, _acc565 = 0, _acc562 = 0, _acc564 = 0, _acc563 = 0, _acc1354 = 0, _acc766 = 0, _acc558 = 0, _acc561 = 0, _acc1495 = 0, _acc559 = 0, _acc1114 = 0, _acc1651 = 0, _acc440 = 0, _acc551 = 0, _acc546 = 0, _acc41 = 0, _acc800 = 0, _acc1963 = 0, _acc545 = 0, _acc514 = 0, _acc540 = 0, _acc1955 = 0, _acc542 = 0, _acc26 = 0, _acc536 = 0, _acc539 = 0, _acc537 = 0, _acc1213 = 0, _acc532 = 0, _acc529 = 0, _acc528 = 0, _acc1170 = 0, _acc520 = 0, _acc840 = 0, _acc645 = 0, _acc524 = 0, _acc625 = 0, _acc527 = 0, _acc305 = 0, _acc519 = 0, _acc38 = 0, _acc1920 = 0, _acc516 = 0, _acc1919 = 0, _acc515 = 0, _acc74 = 0, _acc1784 = 0, _acc511 = 0, _acc1916 = 0, _acc1781 = 0, _acc510 = 0, _acc504 = 0, _acc498 = 0, _acc1227 = 0, _acc1733 = 0, _acc864 = 0, _acc1261 = 0, _acc503 = 0, _acc963 = 0, _acc497 = 0, _acc3 = 0, _acc296 = 0, _acc866 = 0, _acc1541 = 0, _acc622 = 0, _acc787 = 0, _acc1584 = 0, _acc488 = 0, _acc1446 = 0, _acc1555 = 0, _acc405 = 0, _acc731 = 0, _acc489 = 0, _acc484 = 0, _acc1583 = 0, _acc487 = 0, _acc485 = 0, _acc1582 = 0, _acc486 = 0, _acc82 = 0, _acc947 = 0, _acc476 = 0, _acc1578 = 0, _acc483 = 0, _acc482 = 0, _acc1751 = 0, _acc480 = 0, _acc854 = 0, _acc478 = 0, _acc1968 = 0, _acc454 = 0, _acc37 = 0, _acc991 = 0, _acc1950 = 0, _acc422 = 0, _acc2019 = 0, _acc446 = 0, _acc1970 = 0, _acc456 = 0, _acc1971 = 0, _acc457 = 0, _acc1972 = 0, _acc458 = 0, _acc1449 = 0, _acc1564 = 0, _acc938 = 0, _acc1887 = 0, _acc468 = 0, _acc465 = 0, _acc1743 = 0, _acc472 = 0, _acc1450 = 0, _acc1565 = 0, _acc936 = 0, _acc1888 = 0, _acc469 = 0, _acc471 = 0, _acc339 = 0, _acc1232 = 0, _acc467 = 0, _acc1233 = 0, _acc463 = 0, _acc1879 = 0, _acc462 = 0, _acc406 = 0, _acc460 = 0, _acc450 = 0, _acc1956 = 0, _acc543 = 0, _acc424 = 0, _acc694 = 0, _acc691 = 0, _acc1378 = 0, _acc1683 = 0, _acc747 = 0, _acc1980 = 0, _acc803 = 0, _acc517 = 0, _acc682 = 0, _acc683 = 0, _acc1789 = 0, _acc686 = 0, _acc330 = 0, _acc1611 = 0, _acc687 = 0, _acc688 = 0, _acc1692 = 0, _acc754 = 0, _acc388 = 0, _acc332 = 0, _acc331 = 0, _acc491 = 0, _acc390 = 0, _acc336 = 0, _acc391 = 0, _acc333 = 0, _acc334 = 0, _acc611 = 0, _acc299 = 0, _acc303 = 0, _acc1612 = 0, _acc307 = 0, _acc971 = 0, _acc326 = 0, _acc39 = 0, _acc319 = 0, _acc809 = 0, _acc323 = 0, _acc320 = 0, _acc808 = 0, _acc269 = 0, _acc322 = 0, _acc309 = 0, _acc294 = 0, _acc318 = 0, _acc883 = 0, _acc315 = 0, _acc1793 = 0, _acc313 = 0, _acc310 = 0, _acc1792 = 0, _acc312 = 0, _acc311 = 0, _acc308 = 0, _acc306 = 0, _acc1984 = 0, _acc304 = 0, _acc612 = 0, _acc300 = 0, _acc1412 = 0, _acc613 = 0, _acc301 = 0, _acc610 = 0, _acc298 = 0, _acc704 = 0, _acc705 = 0, _acc1427 = 0, _acc1212 = 0, _acc706 = 0, _acc1428 = 0, _acc1208 = 0, _acc1184 = 0, _acc656 = 0, _acc707 = 0, _acc407 = 0, _acc461 = 0, _acc732 = 0, _acc932 = 0, _acc410 = 0, _acc733 = 0, _acc408 = 0, _acc1738 = 0, _acc734 = 0, _acc1621 = 0, _acc324 = 0, _acc833 = 0, _acc871 = 0, _acc875 = 0, _acc946 = 0, _acc1748 = 0, _acc479 = 0, _acc876 = 0, _acc945 = 0, _acc1747 = 0, _acc874 = 0, _acc1201 = 0, _acc619 = 0, _acc837 = 0, _acc1200 = 0, _acc618 = 0, _acc836 = 0, _acc1199 = 0, _acc835 = 0, _acc856 = 0, _acc1544 = 0, _acc790 = 0, _acc623 = 0, _acc855 = 0, _acc931 = 0, _acc865 = 0, _acc842 = 0, _acc843 = 0, _acc844 = 0, _acc845 = 0, _acc1849 = 0, _acc850 = 0, _acc1432 = 0, _acc1850 = 0, _acc851 = 0, _acc1848 = 0, _acc852 = 0, _acc853 = 0, _acc847 = 0, _acc839 = 0, _acc928 = 0, _acc1877 = 0, _acc727 = 0, _acc1876 = 0, _acc729 = 0, _acc748 = 0, _acc1689 = 0, _acc751 = 0, _acc1331 = 0, _acc1681 = 0, _acc746 = 0, _acc744 = 0, _acc1196 = 0, _acc777 = 0, _acc25 = 0, _acc774 = 0, _acc1688 = 0, _acc750 = 0, _acc1691 = 0, _acc753 = 0, _acc772 = 0, _acc771 = 0, _acc1377 = 0, _acc1682 = 0, _acc749 = 0, _acc208 = 0, _acc764 = 0, _acc768 = 0, _acc380 = 0, _acc763 = 0, _acc1 = 0, _acc198 = 0, _acc758 = 0, _acc827 = 0, _acc48 = 0, _acc1304 = 0, _acc831 = 0, _acc5 = 0, _acc1302 = 0, _acc828 = 0, _acc1303 = 0, _acc2016 = 0, _acc829 = 0, _acc146 = 0, _acc826 = 0, _acc823 = 0, _acc825 = 0, _acc824 = 0, _acc1608 = 0, _acc799 = 0, _acc681 = 0, _acc802 = 0;
	/* Reverse accumulation */
	_acc2029 = 1.0;
	_t2030 = (float)1.0 / (_t2028);
	_acc2028 += _acc2029 * _t2030;
	_acc2027 += _acc2028;
	_acc2024 += _acc2028;
	_acc2026 += _acc2027;
	_acc2025 += _acc2027;
	_acc2021 += _acc2026 * 0.212671;
	_acc2022 += _acc2025 * 0.715160;
	_acc2023 += _acc2024 * 0.072169;
	_acc2011 += _acc2023 * _t2020;
	_acc2020 += _acc2023 * _t2011;
	_acc2010 += _acc2022 * _t2020;
	_acc2020 += _acc2022 * _t2010;
	_acc2009 += _acc2021 * _t2020;
	_acc2020 += _acc2021 * _t2009;
	_t2031 = _t2020 * _t2020;
	_t2032 = -_t2031;
	_acc2019 += _acc2020 * _t2032;
	_acc2018 += _acc2019;
	_acc2017 += _acc2018;
	_acc2015 += _acc2018;
	_acc2016 += _acc2017 * _t1747;
	_acc1747 += _acc2017 * _t2016;
	_t2033 = 2.000000 * _t2012;
	_acc2012 += _acc2016 * _t2033;
	_acc2014 += _acc2015 * _t1748;
	_acc1748 += _acc2015 * _t2014;
	_t2034 = 2.000000 * _t2013;
	_acc2013 += _acc2014 * _t2034;
	_acc1753 += _acc2013 * vertParams[164];
	_acc1752 += _acc2012 * vertParams[164];
	_acc1624 += _acc2011 * _t1751;
	_acc1751 += _acc2011 * _t1624;
	_acc1623 += _acc2010 * _t1750;
	_acc1750 += _acc2010 * _t1623;
	_acc1622 += _acc2009 * _t1749;
	_acc1749 += _acc2009 * _t1622;
	cif (vertParams[108] == 1.000000) {
		_acc1756 = _acc1752;
		_acc1761 = _acc1753;
		_acc1760 += _acc1761 * 0.318310;
		_acc1759 += _acc1760 * _t1756;
		_acc1756 += _acc1760 * _t1759;
		_acc1758 -= _acc1759;
		_acc1631 += _acc1758 * _t270;
		_acc1632 += _acc1758 * _t271;
		_acc1633 += _acc1758 * _t272;
		_acc270 += _acc1758 * _t1631;
		_acc271 += _acc1758 * _t1632;
		_acc272 += _acc1758 * _t1633;
		cif (vertParams[109] == 0.000000) {
		}
		else {
		}
	}
	else cif (vertParams[108] == 2.000000) {
		_acc1977 = _acc1749;
		_acc1978 = _acc1750;
		_acc1979 = _acc1751;
		_acc2004 = _acc1752;
		_acc2008 = _acc1753;
		_acc2004 += _acc2008 * _t2007;
		_acc2007 += _acc2008 * _t2004;
		_acc2006 += _acc2007 * 0.318310;
		_t2035 = _t2006 * _t2006;
		_t2036 = -_t2035;
		_acc2005 += _acc2006 * _t2036;
		_t2037 = (float)1.0 / (_t1988);
		_acc2003 += _acc2004 * _t2037;
		_t2038 = -_t2003;
		_t2039 = _t2037 * _t2037;
		_t2040 = _t2038 * _t2039;
		_acc1988 += _acc2004 * _t2040;
		_acc2002 += _acc2003 * vertParams[161];
		_acc2001 += _acc2002;
		_acc1995 += _acc2002;
		_acc2000 += _acc2001 * vertParams[159];
		_acc1999 += _acc2000;
		_acc1996 += _acc2000;
		_acc1998 += _acc1999;
		_acc1997 += _acc1999;
		_acc1951 += _acc1998 * 0.212671;
		_acc1956 += _acc1997 * 0.715160;
		_acc1961 += _acc1996 * 0.072169;
		_acc1994 += _acc1995 * vertParams[160];
		_acc1993 += _acc1994;
		_acc1990 += _acc1994;
		_acc1992 += _acc1993;
		_acc1991 += _acc1993;
		_acc1966 += _acc1992 * 0.212671;
		_acc1971 += _acc1991 * 0.715160;
		_acc1976 += _acc1990 * 0.072169;
		cif (_t1985 >= 0.000000) {
			_acc1985 = _acc1988;
		}
		else {
		}
		cif (_t1984 >= 0.000000) {
			_acc1984 = _acc1985;
		}
		else {
			_acc1987 = _acc1985;
			_acc1984 -= _acc1987;
		}
		_t2041 = 2.000000 * _t1984;
		_t2042 = (float)1.0 / (_t2041);
		_acc1982 += _acc1984 * _t2042;
		cif (_t1981 >= 0.000001) {
			_acc1981 = _acc1982;
		}
		else {
		}
		_acc1980 -= _acc1981;
		_t2043 = 2.000000 * _t1930;
		_acc1930 += _acc1980 * _t2043;
		_acc1961 += _acc1979;
		_acc1976 += _acc1979;
		_acc1956 += _acc1978;
		_acc1971 += _acc1978;
		_acc1951 += _acc1977;
		_acc1966 += _acc1977;
		_acc1975 += _acc1976;
		_acc1973 += _acc1976;
		_acc1974 += _acc1975 * _t1945;
		_acc1945 += _acc1975 * _t1974;
		_acc1944 += _acc1974 * vertParams[155];
		_acc1972 += _acc1973 * _t1945;
		_acc1945 += _acc1973 * _t1972;
		_acc1943 += _acc1972 * vertParams[158];
		_acc1970 += _acc1971;
		_acc1968 += _acc1971;
		_acc1969 += _acc1970 * _t1945;
		_acc1945 += _acc1970 * _t1969;
		_acc1944 += _acc1969 * vertParams[154];
		_acc1967 += _acc1968 * _t1945;
		_acc1945 += _acc1968 * _t1967;
		_acc1943 += _acc1967 * vertParams[157];
		_acc1965 += _acc1966;
		_acc1963 += _acc1966;
		_acc1964 += _acc1965 * _t1945;
		_acc1945 += _acc1965 * _t1964;
		_acc1944 += _acc1964 * vertParams[153];
		_acc1962 += _acc1963 * _t1945;
		_acc1945 += _acc1963 * _t1962;
		_acc1943 += _acc1962 * vertParams[156];
		_acc1960 += _acc1961;
		_acc1958 += _acc1961;
		_acc1959 += _acc1960 * _t1946;
		_acc1946 += _acc1960 * _t1959;
		_acc1944 += _acc1959 * vertParams[149];
		_acc1957 += _acc1958 * _t1946;
		_acc1946 += _acc1958 * _t1957;
		_acc1943 += _acc1957 * vertParams[152];
		_acc1955 += _acc1956;
		_acc1953 += _acc1956;
		_acc1954 += _acc1955 * _t1946;
		_acc1946 += _acc1955 * _t1954;
		_acc1944 += _acc1954 * vertParams[148];
		_acc1952 += _acc1953 * _t1946;
		_acc1946 += _acc1953 * _t1952;
		_acc1943 += _acc1952 * vertParams[151];
		_acc1950 += _acc1951;
		_acc1948 += _acc1951;
		_acc1949 += _acc1950 * _t1946;
		_acc1946 += _acc1950 * _t1949;
		_acc1944 += _acc1949 * vertParams[147];
		_acc1947 += _acc1948 * _t1946;
		_acc1946 += _acc1948 * _t1947;
		_acc1943 += _acc1947 * vertParams[150];
		_acc1945 -= _acc1946;
		_acc1938 += _acc1945;
		_acc1943 -= _acc1944;
		_acc1942 += _acc1943;
		_acc1941 += _acc1942;
		_t2044 = (float)1.0 / (vertParams[145]);
		_acc1940 += _acc1941 * _t2044;
		_t2045 = _t1935 * _t1935;
		_t2046 = _t1939 * _t1939;
		_t2047 = _t2045+_t2046;
		_t2048 = (float)1.0 / (_t2047);
		_t2049 = _t1939 * _t2048;
		_acc1935 += _acc1940 * _t2049;
		_t2050 = -_t1935;
		_t2051 = _t2050 * _t2048;
		_acc1939 += _acc1940 * _t2051;
		_acc1925 -= _acc1939;
		_acc1937 += _acc1938;
		_t2052 = (float)1.0 / (vertParams[146]);
		_acc1936 += _acc1937 * _t2052;
		_t2053 = _t1930 * _t1930;
		_t2054 = 1.000000-_t2053;
		_t2055 = sqrt(_t2054);
		_t2056 = (float)1.0 / (_t2055);
		_t2057 = -_t2056;
		_acc1930 += _acc1936 * _t2057;
		_acc1934 += _acc1935;
		_acc1931 += _acc1935;
		_acc1933 += _acc1934;
		_acc1932 += _acc1934;
		_acc1762 += _acc1933 * _t270;
		_acc270 += _acc1933 * _t1762;
		_acc1766 += _acc1932 * _t271;
		_acc271 += _acc1932 * _t1766;
		_acc1770 += _acc1931 * _t272;
		_acc272 += _acc1931 * _t1770;
		_acc1929 += _acc1930;
		_acc1926 += _acc1930;
		_acc1928 += _acc1929;
		_acc1927 += _acc1929;
		_acc1763 += _acc1928 * _t270;
		_acc270 += _acc1928 * _t1763;
		_acc1767 += _acc1927 * _t271;
		_acc271 += _acc1927 * _t1767;
		_acc1771 += _acc1926 * _t272;
		_acc272 += _acc1926 * _t1771;
		_acc1924 += _acc1925;
		_acc1921 += _acc1925;
		_acc1923 += _acc1924;
		_acc1922 += _acc1924;
		_acc1764 += _acc1923 * _t270;
		_acc270 += _acc1923 * _t1764;
		_acc1768 += _acc1922 * _t271;
		_acc271 += _acc1922 * _t1768;
		_acc1772 += _acc1921 * _t272;
		_acc272 += _acc1921 * _t1772;
		cif (vertParams[124] == 0.000000) {
			_acc1790 = _acc1762;
			_acc1792 = _acc1763;
			_acc1794 = _acc1764;
			_acc1796 = _acc1766;
			_acc1799 = _acc1767;
			_acc1801 = _acc1768;
			_acc1803 = _acc1770;
			_acc1805 = _acc1771;
			_acc1808 = _acc1772;
			_acc1807 -= _acc1808;
			_acc1806 += _acc1807 * 2.000000;
			_acc1779 += _acc1806;
			_acc1780 += _acc1806;
			_acc1804 += _acc1805 * 2.000000;
			_acc1784 += _acc1804;
			_acc1785 -= _acc1804;
			_acc1802 += _acc1803 * 2.000000;
			_acc1783 += _acc1802;
			_acc1786 += _acc1802;
			_acc1800 += _acc1801 * 2.000000;
			_acc1784 += _acc1800;
			_acc1785 += _acc1800;
			_acc1798 -= _acc1799;
			_acc1797 += _acc1798 * 2.000000;
			_acc1779 += _acc1797;
			_acc1781 += _acc1797;
			_acc1795 += _acc1796 * 2.000000;
			_acc1782 += _acc1795;
			_acc1787 -= _acc1795;
			_acc1793 += _acc1794 * 2.000000;
			_acc1783 += _acc1793;
			_acc1786 -= _acc1793;
			_acc1791 += _acc1792 * 2.000000;
			_acc1782 += _acc1791;
			_acc1787 += _acc1791;
			_acc1789 -= _acc1790;
			_acc1788 += _acc1789 * 2.000000;
			_acc1780 += _acc1788;
			_acc1781 += _acc1788;
		}
		else {
			_acc1902 = _acc1762;
			_acc1904 = _acc1763;
			_acc1906 = _acc1764;
			_acc1908 = _acc1766;
			_acc1911 = _acc1767;
			_acc1913 = _acc1768;
			_acc1915 = _acc1770;
			_acc1917 = _acc1771;
			_acc1920 = _acc1772;
			_acc1919 -= _acc1920;
			_acc1918 += _acc1919 * 2.000000;
			_acc1891 += _acc1918;
			_acc1892 += _acc1918;
			_acc1916 += _acc1917 * 2.000000;
			_acc1896 += _acc1916;
			_acc1897 -= _acc1916;
			_acc1914 += _acc1915 * 2.000000;
			_acc1895 += _acc1914;
			_acc1898 += _acc1914;
			_acc1912 += _acc1913 * 2.000000;
			_acc1896 += _acc1912;
			_acc1897 += _acc1912;
			_acc1910 -= _acc1911;
			_acc1909 += _acc1910 * 2.000000;
			_acc1891 += _acc1909;
			_acc1893 += _acc1909;
			_acc1907 += _acc1908 * 2.000000;
			_acc1894 += _acc1907;
			_acc1899 -= _acc1907;
			_acc1905 += _acc1906 * 2.000000;
			_acc1895 += _acc1905;
			_acc1898 -= _acc1905;
			_acc1903 += _acc1904 * 2.000000;
			_acc1894 += _acc1903;
			_acc1899 += _acc1903;
			_acc1901 -= _acc1902;
			_acc1900 += _acc1901 * 2.000000;
			_acc1892 += _acc1900;
			_acc1893 += _acc1900;
			_acc1839 += _acc1899 * _t1840;
			_acc1840 += _acc1899 * _t1839;
			_acc1838 += _acc1898 * _t1840;
			_acc1840 += _acc1898 * _t1838;
			_acc1837 += _acc1897 * _t1840;
			_acc1840 += _acc1897 * _t1837;
			_acc1838 += _acc1896 * _t1839;
			_acc1839 += _acc1896 * _t1838;
			_acc1837 += _acc1895 * _t1839;
			_acc1839 += _acc1895 * _t1837;
			_acc1837 += _acc1894 * _t1838;
			_acc1838 += _acc1894 * _t1837;
			_acc1839 += _acc1893 * _t1839;
			_acc1839 += _acc1893 * _t1839;
			_acc1838 += _acc1892 * _t1838;
			_acc1838 += _acc1892 * _t1838;
			_acc1837 += _acc1891 * _t1837;
			_acc1837 += _acc1891 * _t1837;
			cif (_t1830 > 0.999500) {
				_acc1857 = _acc1837;
				_acc1858 = _acc1838;
				_acc1859 = _acc1839;
				_acc1860 = _acc1840;
				_acc1854 += _acc1860 * _t1856;
				_acc1856 += _acc1860 * _t1854;
				_acc1851 += _acc1859 * _t1856;
				_acc1856 += _acc1859 * _t1851;
				_acc1848 += _acc1858 * _t1856;
				_acc1856 += _acc1858 * _t1848;
				_acc1845 += _acc1857 * _t1856;
				_acc1856 += _acc1857 * _t1845;
				_t2058 = _t1856 * _t1856;
				_t2059 = -_t2058;
				_acc1855 += _acc1856 * _t2059;
				_t2060 = (float)1.0 / (_t1855);
				_t2061 = _t1845 * _t2060;
				_acc1845 += _acc1855 * _t2061;
				_t2062 = _t1848 * _t2060;
				_acc1848 += _acc1855 * _t2062;
				_t2063 = _t1851 * _t2060;
				_acc1851 += _acc1855 * _t2063;
				_t2064 = _t1854 * _t2060;
				_acc1854 += _acc1855 * _t2064;
				_acc1853 += _acc1854;
				_acc1852 += _acc1854;
				_acc1842 += _acc1853 * vertParams[134];
				_acc1829 += _acc1852 * primary[0];
				_acc1850 += _acc1851;
				_acc1849 += _acc1851;
				_acc1842 += _acc1850 * vertParams[133];
				_acc1828 += _acc1849 * primary[0];
				_acc1847 += _acc1848;
				_acc1846 += _acc1848;
				_acc1842 += _acc1847 * vertParams[132];
				_acc1827 += _acc1846 * primary[0];
				_acc1844 += _acc1845;
				_acc1843 += _acc1845;
				_acc1842 += _acc1844 * vertParams[131];
				_acc1826 += _acc1843 * primary[0];
			}
			else {
				_acc1881 = _acc1837;
				_acc1884 = _acc1838;
				_acc1887 = _acc1839;
				_acc1890 = _acc1840;
				_acc1889 += _acc1890;
				_acc1888 += _acc1890;
				_acc1878 += _acc1889 * vertParams[134];
				_acc1876 += _acc1888 * _t1877;
				_acc1877 += _acc1888 * _t1876;
				_acc1886 += _acc1887;
				_acc1885 += _acc1887;
				_acc1878 += _acc1886 * vertParams[133];
				_acc1875 += _acc1885 * _t1877;
				_acc1877 += _acc1885 * _t1875;
				_acc1883 += _acc1884;
				_acc1882 += _acc1884;
				_acc1878 += _acc1883 * vertParams[132];
				_acc1874 += _acc1882 * _t1877;
				_acc1877 += _acc1882 * _t1874;
				_acc1880 += _acc1881;
				_acc1879 += _acc1881;
				_acc1878 += _acc1880 * vertParams[131];
				_acc1873 += _acc1879 * _t1877;
				_acc1877 += _acc1879 * _t1873;
				_t2065 = sin(_t1862);
				_t2066 = -_t2065;
				_acc1862 += _acc1878 * _t2066;
				_t2067 = cos(_t1862);
				_acc1862 += _acc1877 * _t2067;
				_acc1870 += _acc1876 * _t1872;
				_acc1872 += _acc1876 * _t1870;
				_acc1868 += _acc1875 * _t1872;
				_acc1872 += _acc1875 * _t1868;
				_acc1866 += _acc1874 * _t1872;
				_acc1872 += _acc1874 * _t1866;
				_acc1864 += _acc1873 * _t1872;
				_acc1872 += _acc1873 * _t1864;
				_t2068 = _t1872 * _t1872;
				_t2069 = -_t2068;
				_acc1871 += _acc1872 * _t2069;
				_t2070 = (float)1.0 / (_t1871);
				_t2071 = _t1864 * _t2070;
				_acc1864 += _acc1871 * _t2071;
				_t2072 = _t1866 * _t2070;
				_acc1866 += _acc1871 * _t2072;
				_t2073 = _t1868 * _t2070;
				_acc1868 += _acc1871 * _t2073;
				_t2074 = _t1870 * _t2070;
				_acc1870 += _acc1871 * _t2074;
				_acc1829 += _acc1870;
				_acc1869 -= _acc1870;
				_acc1830 += _acc1869 * vertParams[134];
				_acc1828 += _acc1868;
				_acc1867 -= _acc1868;
				_acc1830 += _acc1867 * vertParams[133];
				_acc1827 += _acc1866;
				_acc1865 -= _acc1866;
				_acc1830 += _acc1865 * vertParams[132];
				_acc1826 += _acc1864;
				_acc1863 -= _acc1864;
				_acc1830 += _acc1863 * vertParams[131];
				_acc1861 += _acc1862 * primary[0];
				_t2075 = _t1830 * _t1830;
				_t2076 = 1.000000-_t2075;
				_t2077 = sqrt(_t2076);
				_t2078 = (float)1.0 / (_t2077);
				_t2079 = -_t2078;
				_acc1830 += _acc1861 * _t2079;
			}
			cif (_t1825 < 0.000000) {
				_acc1832 = _acc1826;
				_acc1833 = _acc1827;
				_acc1834 = _acc1828;
				_acc1835 = _acc1829;
				_acc1836 = _acc1830;
				_acc1825 -= _acc1836;
			}
			else {
				_acc1825 = _acc1830;
			}
			_acc1824 += _acc1825;
			_acc1819 += _acc1825;
			_acc1823 += _acc1824;
			_acc1820 += _acc1824;
			_acc1822 += _acc1823;
			_acc1821 += _acc1823;
		}
	}
	else {
	}
	_acc1619 += _acc1748 * _t1728;
	_acc1728 += _acc1748 * _t1619;
	_acc1621 += _acc1747 * _t1746;
	_acc1746 += _acc1747 * _t1621;
	_acc1728 += _acc1746 * _t1729;
	_acc1729 += _acc1746 * _t1728;
	cif (vertParams[108] == 2.000000) {
	}
	else {
		_acc1745 = _acc1728;
		_acc1739 = _acc1729;
		_t2080 = _t1745 * _t1745;
		_t2081 = -_t2080;
		_acc1744 += _acc1745 * _t2081;
		_t2082 = 2.000000 * _t1741;
		_acc1741 += _acc1744 * _t2082;
		cif (_t1740 >= 0.000000) {
			_acc1740 = _acc1741;
		}
		else {
			_acc1743 = _acc1741;
			_acc1740 -= _acc1743;
		}
		_acc270 += _acc1740 * _t1631;
		_acc271 += _acc1740 * _t1632;
		_acc272 += _acc1740 * _t1633;
		_acc1631 += _acc1740 * _t270;
		_acc1632 += _acc1740 * _t271;
		_acc1633 += _acc1740 * _t272;
		_t2083 = 2.000000 * _t1738;
		_acc1738 += _acc1739 * _t2083;
		_acc1737 += _acc1738;
		_acc1732 += _acc1738;
		_acc1736 += _acc1737;
		_acc1734 += _acc1737;
		_t2084 = 2.000000 * _t1735;
		_acc1735 += _acc1736 * _t2084;
		_acc150 += _acc1735;
		_acc1625 -= _acc1735;
		_t2085 = 2.000000 * _t1733;
		_acc1733 += _acc1734 * _t2085;
		_acc151 += _acc1733;
		_acc1626 -= _acc1733;
		_t2086 = 2.000000 * _t1731;
		_acc1731 += _acc1732 * _t2086;
		_acc152 += _acc1731;
		_acc1627 -= _acc1731;
	}
	cif (vertParams[62] == 0.000000) {
		_acc1683 = _acc1625;
		_acc1685 = _acc1626;
		_acc1687 = _acc1627;
		_acc1705 = _acc1631;
		_acc1706 = _acc1632;
		_acc1707 = _acc1633;
		_acc1702 += _acc1707 * _t1704;
		_acc1704 += _acc1707 * _t1702;
		_acc1697 += _acc1706 * _t1704;
		_acc1704 += _acc1706 * _t1697;
		_acc1692 += _acc1705 * _t1704;
		_acc1704 += _acc1705 * _t1692;
		_t2087 = _t1704 * _t1704;
		_t2088 = -_t2087;
		_acc1703 += _acc1704 * _t2088;
		_t2089 = (float)1.0 / (_t1703);
		_t2090 = _t1692 * _t2089;
		_acc1692 += _acc1703 * _t2090;
		_t2091 = _t1697 * _t2089;
		_acc1697 += _acc1703 * _t2091;
		_t2092 = _t1702 * _t2089;
		_acc1702 += _acc1703 * _t2092;
		_acc1701 += _acc1702;
		_acc1698 += _acc1702;
		_acc1700 += _acc1701;
		_acc1699 += _acc1701;
		_acc1681 += _acc1700 * vertParams[75];
		_acc1666 += _acc1699 * vertParams[78];
		_acc1677 += _acc1698 * vertParams[81];
		_acc1696 += _acc1697;
		_acc1693 += _acc1697;
		_acc1695 += _acc1696;
		_acc1694 += _acc1696;
		_acc1681 += _acc1695 * vertParams[74];
		_acc1666 += _acc1694 * vertParams[77];
		_acc1677 += _acc1693 * vertParams[80];
		_acc1691 += _acc1692;
		_acc1688 += _acc1692;
		_acc1690 += _acc1691;
		_acc1689 += _acc1691;
		_acc1681 += _acc1690 * vertParams[73];
		_acc1666 += _acc1689 * vertParams[76];
		_acc1677 += _acc1688 * vertParams[79];
		_acc152 += _acc1687;
		_acc1686 += _acc1687;
		_acc1679 += _acc1686 * _t272;
		_acc272 += _acc1686 * _t1679;
		_acc151 += _acc1685;
		_acc1684 += _acc1685;
		_acc1679 += _acc1684 * _t271;
		_acc271 += _acc1684 * _t1679;
		_acc150 += _acc1683;
		_acc1682 += _acc1683;
		_acc1679 += _acc1682 * _t270;
		_acc270 += _acc1682 * _t1679;
		_acc1680 += _acc1681;
		_acc1677 -= _acc1681;
		_acc1666 -= _acc1680;
		_acc1678 += _acc1679 * _t1661;
		_acc1661 += _acc1679 * _t1678;
		_acc1675 += _acc1678 * vertParams[70];
		_acc1672 += _acc1678 * vertParams[71];
		_acc1669 += _acc1678 * vertParams[72];
		_acc1676 += _acc1677 * _t1661;
		_acc1661 += _acc1677 * _t1676;
		_acc270 += _acc1676 * _t1675;
		_acc271 += _acc1676 * _t1672;
		_acc272 += _acc1676 * _t1669;
		_acc1675 += _acc1676 * _t270;
		_acc1672 += _acc1676 * _t271;
		_acc1669 += _acc1676 * _t272;
		_acc1674 += _acc1675;
		_acc1673 -= _acc1675;
		_acc1663 += _acc1674 * vertParams[69];
		_acc1664 += _acc1673 * vertParams[68];
		_acc1671 += _acc1672;
		_acc1670 -= _acc1672;
		_acc1664 += _acc1671 * vertParams[67];
		_acc1662 += _acc1670 * vertParams[69];
		_acc1668 += _acc1669;
		_acc1667 -= _acc1669;
		_acc1662 += _acc1668 * vertParams[68];
		_acc1663 += _acc1667 * vertParams[67];
		_acc1665 += _acc1666 * _t1661;
		_acc1661 += _acc1666 * _t1665;
		_acc1662 += _acc1665 * _t1659;
		_acc1663 += _acc1665 * _t1656;
		_acc1664 += _acc1665 * _t1653;
		_acc1659 += _acc1665 * _t1662;
		_acc1656 += _acc1665 * _t1663;
		_acc1653 += _acc1665 * _t1664;
		_acc152 += _acc1664;
		_acc151 += _acc1663;
		_acc150 += _acc1662;
		_t2093 = _t1661 * _t1661;
		_t2094 = -_t2093;
		_acc1660 += _acc1661 * _t2094;
		_acc1659 += _acc1660 * vertParams[67];
		_acc1656 += _acc1660 * vertParams[68];
		_acc1653 += _acc1660 * vertParams[69];
		_acc1658 += _acc1659;
		_acc1657 -= _acc1659;
		_acc271 += _acc1658 * vertParams[72];
		_acc272 += _acc1657 * vertParams[71];
		_acc1655 += _acc1656;
		_acc1654 -= _acc1656;
		_acc272 += _acc1655 * vertParams[70];
		_acc270 += _acc1654 * vertParams[72];
		_acc1652 += _acc1653;
		_acc1651 -= _acc1653;
		_acc270 += _acc1652 * vertParams[71];
		_acc271 += _acc1651 * vertParams[70];
	}
	else {
	}
	_acc1615 += _acc1624 * vertParams[61];
	_acc1614 += _acc1623 * vertParams[61];
	_acc1613 += _acc1622 * vertParams[61];
	_t2095 = 2.000000 * _t1620;
	_acc1620 += _acc1621 * _t2095;
	_t2096 = _t1620 * _t1620;
	_t2097 = -_t2096;
	_acc277 += _acc1620 * _t2097;
	_acc1618 += _acc1619 * _t269;
	_acc269 += _acc1619 * _t1618;
	_t2098 = 2.000000 * _t1617;
	_acc1617 += _acc1618 * _t2098;
	_t2099 = (float)1.0 / (_t277);
	_acc276 += _acc1617 * _t2099;
	_t2100 = -_t276;
	_t2101 = _t2099 * _t2099;
	_t2102 = _t2100 * _t2101;
	_acc277 += _acc1617 * _t2102;
	_acc275 += _acc1615 * _t279;
	_acc279 += _acc1615 * _t275;
	_acc274 += _acc1614 * _t279;
	_acc279 += _acc1614 * _t274;
	_acc273 += _acc1613 * _t279;
	_acc279 += _acc1613 * _t273;
	cif ((scene[0] == 1.000000) && (vertParams[108] == 1.000000)) {
		_acc340 = _acc270;
		_acc341 = _acc271;
		_acc342 = _acc272;
		_acc343 = _acc273;
		_acc344 = _acc274;
		_acc345 = _acc275;
		_acc346 = _acc276;
		_acc347 = _acc277;
		_acc701 = _acc279;
		_t2103 = (float)1.0 / (_t290);
		_acc698 += _acc701 * _t2103;
		_t2104 = -_t698;
		_t2105 = _t2103 * _t2103;
		_t2106 = _t2104 * _t2105;
		_acc290 += _acc701 * _t2106;
		cif (_t697 >= 0.000000) {
			_acc697 = _acc698;
		}
		else {
			_acc700 = _acc698;
			_acc697 -= _acc700;
		}
		_acc696 += _acc697 * _t338;
		_acc338 += _acc697 * _t696;
		_acc287 += _acc696 * _t340;
		_acc288 += _acc696 * _t341;
		_acc289 += _acc696 * _t342;
		_acc340 += _acc696 * _t287;
		_acc341 += _acc696 * _t288;
		_acc342 += _acc696 * _t289;
		cif (vertParams[51] == 1.000000) {
			_acc410 = _acc343;
			_acc411 = _acc344;
			_acc412 = _acc345;
			_acc362 = _acc346;
			_acc408 = _acc347;
			_acc407 += _acc412 * _t362;
			_acc362 += _acc412 * _t407;
			_acc406 += _acc411 * _t362;
			_acc362 += _acc411 * _t406;
			_acc405 += _acc410 * _t362;
			_acc362 += _acc410 * _t405;
			_acc366 += _acc408;
			_acc395 += _acc408;
			_acc365 += _acc407;
			_acc394 += _acc407;
			_acc364 += _acc406;
			_acc393 += _acc406;
			_acc363 += _acc405;
			_acc392 += _acc405;
			cif (vertParams[59] < 1.000000) {
				_acc398 = _acc392;
				_acc399 = _acc393;
				_acc400 = _acc394;
				_acc403 = _acc395;
				_acc402 += _acc403 * _t362;
				_acc362 += _acc403 * _t402;
				_acc401 += _acc402 * 0.318310;
			}
			else {
			}
			cif (vertParams[59] > 0.000000) {
				_acc379 = _acc363;
				_acc380 = _acc364;
				_acc381 = _acc365;
				_acc382 = _acc366;
				cif (_t378 > 0.000000) {
					_acc387 = _acc379;
					_acc388 = _acc380;
					_acc389 = _acc381;
					_acc391 = _acc382;
					_acc390 += _acc391 * _t378;
					_acc378 += _acc391 * _t390;
					_acc384 += _acc390 * vertParams[59];
					_acc386 += _acc389 * vertParams[57];
					_acc386 += _acc388 * vertParams[56];
					_acc386 += _acc387 * vertParams[55];
					_acc385 += _acc386 * _t378;
					_acc378 += _acc386 * _t385;
				}
				else {
				}
				_acc377 += _acc378 * 0.159155;
				_t2107 = vertParams[58]-1.000000;
				_t2108 = pow(_t376,_t2107);
				_t2109 = vertParams[58] * _t2108;
				_acc376 += _acc377 * _t2109;
				_acc371 += _acc376 * _t340;
				_acc373 += _acc376 * _t341;
				_acc375 += _acc376 * _t342;
				_acc340 += _acc376 * _t371;
				_acc341 += _acc376 * _t373;
				_acc342 += _acc376 * _t375;
				_acc374 += _acc375;
				_acc252 -= _acc375;
				_acc369 += _acc374 * _t355;
				_acc355 += _acc374 * _t369;
				_acc372 += _acc373;
				_acc251 -= _acc373;
				_acc369 += _acc372 * _t354;
				_acc354 += _acc372 * _t369;
				_acc370 += _acc371;
				_acc250 -= _acc371;
				_acc369 += _acc370 * _t353;
				_acc353 += _acc370 * _t369;
				_acc368 += _acc369 * 2.000000;
				_acc250 += _acc368 * _t353;
				_acc251 += _acc368 * _t354;
				_acc252 += _acc368 * _t355;
				_acc353 += _acc368 * _t250;
				_acc354 += _acc368 * _t251;
				_acc355 += _acc368 * _t252;
			}
			else {
			}
			_acc353 += _acc362 * _t340;
			_acc354 += _acc362 * _t341;
			_acc355 += _acc362 * _t342;
			_acc340 += _acc362 * _t353;
			_acc341 += _acc362 * _t354;
			_acc342 += _acc362 * _t355;
			cif (_t352 > 0.000000) {
				_acc156 = _acc353;
				_acc157 = _acc354;
				_acc158 = _acc355;
			}
			else {
				_acc358 = _acc353;
				_acc359 = _acc354;
				_acc360 = _acc355;
				_acc158 -= _acc360;
				_acc157 -= _acc359;
				_acc156 -= _acc358;
			}
		}
		else cif (vertParams[51] == 2.000000) {
			_acc610 = _acc343;
			_acc611 = _acc344;
			_acc612 = _acc345;
			_acc414 = _acc346;
			_acc613 = _acc347;
			cif (_t415 > 0.000000) {
				_acc622 = _acc610;
				_acc623 = _acc611;
				_acc624 = _acc612;
				_acc628 = _acc613;
				cif (_t627 >= 0.000000) {
					_acc627 = _acc628;
				}
				else {
					_acc630 = _acc628;
					_acc627 -= _acc630;
				}
				_t2110 = (float)1.0 / (_t625);
				_acc626 += _acc627 * _t2110;
				_t2111 = -_t626;
				_t2112 = _t2110 * _t2110;
				_t2113 = _t2111 * _t2112;
				_acc625 += _acc627 * _t2113;
				_acc588 += _acc626 * _t499;
				_acc499 += _acc626 * _t588;
				_acc452 += _acc625 * 4.000000;
				_acc619 += _acc624 * vertParams[54];
				_acc619 += _acc623 * vertParams[53];
				_acc619 += _acc622 * vertParams[52];
				cif (_t618 >= 0.000000) {
					_acc618 = _acc619;
				}
				else {
					_acc621 = _acc619;
					_acc618 -= _acc621;
				}
				_t2114 = (float)1.0 / (_t615);
				_acc617 += _acc618 * _t2114;
				_t2115 = -_t617;
				_t2116 = _t2114 * _t2114;
				_t2117 = _t2115 * _t2116;
				_acc615 += _acc618 * _t2117;
				_acc616 += _acc617 * _t567;
				_acc567 += _acc617 * _t616;
				_acc499 += _acc616 * _t491;
				_acc491 += _acc616 * _t499;
				_acc413 += _acc615 * 4.000000;
			}
			else {
				_acc657 = _acc610;
				_acc658 = _acc611;
				_acc659 = _acc612;
				_acc667 = _acc613;
				cif (_t666 >= 0.000000) {
					_acc666 = _acc667;
				}
				else {
					_acc669 = _acc667;
					_acc666 -= _acc669;
				}
				_t2118 = (float)1.0 / (_t660);
				_acc665 += _acc666 * _t2118;
				_t2119 = -_t665;
				_t2120 = _t2118 * _t2118;
				_t2121 = _t2119 * _t2120;
				_acc660 += _acc666 * _t2121;
				_acc664 += _acc665 * _t662;
				_acc662 += _acc665 * _t664;
				_acc588 += _acc664 * _t663;
				_acc663 += _acc664 * _t588;
				_acc499 -= _acc663;
				_acc661 += _acc662 * _t452;
				_acc452 += _acc662 * _t661;
				_t2122 = 2.000000 * _t416;
				_acc416 += _acc661 * _t2122;
				_t2123 = 2.000000 * _t638;
				_acc638 += _acc660 * _t2123;
				_acc654 += _acc659 * vertParams[57];
				_acc654 += _acc658 * vertParams[56];
				_acc654 += _acc657 * vertParams[55];
				cif (_t653 >= 0.000000) {
					_acc653 = _acc654;
				}
				else {
					_acc656 = _acc654;
					_acc653 -= _acc656;
				}
				_t2124 = (float)1.0 / (_t644);
				_acc652 += _acc653 * _t2124;
				_t2125 = -_t652;
				_t2126 = _t2124 * _t2124;
				_t2127 = _t2125 * _t2126;
				_acc644 += _acc653 * _t2127;
				_acc642 += _acc652 * _t651;
				_acc651 += _acc652 * _t642;
				_acc650 += _acc651 * _t452;
				_acc452 += _acc651 * _t650;
				_acc649 += _acc650 * _t451;
				_acc451 += _acc650 * _t649;
				_acc648 += _acc649 * _t645;
				_acc645 += _acc649 * _t648;
				_acc647 += _acc648 * _t567;
				_acc567 += _acc648 * _t647;
				_acc646 += _acc647 * _t491;
				_acc491 += _acc647 * _t646;
				_acc499 -= _acc646;
				_t2128 = 2.000000 * _t416;
				_acc416 += _acc645 * _t2128;
				_acc413 += _acc644 * _t643;
				_acc643 += _acc644 * _t413;
				_t2129 = 2.000000 * _t638;
				_acc638 += _acc643 * _t2129;
				_t2130 = 2.000000 * _t641;
				_acc641 += _acc642 * _t2130;
				_t2131 = _t641 * _t641;
				_t2132 = -_t2131;
				_acc416 += _acc641 * _t2132;
				_acc451 += _acc638;
				_acc637 += _acc638;
				_acc416 += _acc637 * _t452;
				_acc452 += _acc637 * _t416;
			}
			_acc473 += _acc588 * _t587;
			_acc587 += _acc588 * _t473;
			_t2133 = (float)1.0 / (_t584);
			_acc586 += _acc587 * _t2133;
			_t2134 = -_t586;
			_t2135 = _t2133 * _t2133;
			_t2136 = _t2134 * _t2135;
			_acc584 += _acc587 * _t2136;
			_acc585 += _acc586 * _t586;
			_acc580 -= _acc585;
			_acc583 += _acc584 * _t581;
			_acc581 += _acc584 * _t583;
			_acc582 += _acc583 * _t571;
			_acc571 += _acc583 * _t582;
			_acc571 += _acc582 * 3.141593;
			_t2137 = 2.000000 * _t572;
			_acc572 += _acc581 * _t2137;
			_t2138 = (float)1.0 / (_t572);
			_acc579 += _acc580 * _t2138;
			_t2139 = -_t579;
			_t2140 = _t2138 * _t2138;
			_t2141 = _t2139 * _t2140;
			_acc572 += _acc580 * _t2141;
			_acc578 += _acc579;
			_acc575 += _acc579;
			_t2142 = (float)1.0 / (_t576);
			_acc577 += _acc578 * _t2142;
			_t2143 = -_t577;
			_t2144 = _t2142 * _t2142;
			_t2145 = _t2143 * _t2144;
			_acc576 += _acc578 * _t2145;
			_t2146 = 2.000000 * _t475;
			_acc475 += _acc577 * _t2146;
			_t2147 = 2.000000 * _t571;
			_acc571 += _acc576 * _t2147;
			_t2148 = (float)1.0 / (_t573);
			_acc574 += _acc575 * _t2148;
			_t2149 = -_t574;
			_t2150 = _t2148 * _t2148;
			_t2151 = _t2149 * _t2150;
			_acc573 += _acc575 * _t2151;
			_t2152 = 2.000000 * _t474;
			_acc474 += _acc574 * _t2152;
			_t2153 = 2.000000 * _t571;
			_acc571 += _acc573 * _t2153;
			_t2154 = 2.000000 * _t473;
			_acc473 += _acc572 * _t2154;
			_acc570 += _acc571 * vertParams[60];
			_acc569 -= _acc570;
			_acc568 += _acc569 * 0.200000;
			_t2155 = 2.000000 * _t568;
			_t2156 = (float)1.0 / (_t2155);
			_acc517 += _acc568 * _t2156;
			_acc552 += _acc567 * _t530;
			_acc530 += _acc567 * _t552;
			cif (_t551 <= 0.000000) {
			}
			else {
				_acc556 = _acc552;
				cif (_t555 >= 1.600000) {
				}
				else {
					_acc566 = _acc556;
					_t2157 = (float)1.0 / (_t562);
					_acc565 += _acc566 * _t2157;
					_t2158 = -_t565;
					_t2159 = _t2157 * _t2157;
					_t2160 = _t2158 * _t2159;
					_acc562 += _acc566 * _t2160;
					_acc564 += _acc565;
					_acc563 += _acc565;
					_acc555 += _acc564 * 3.535000;
					_acc558 += _acc563 * 2.181000;
					_acc561 += _acc562;
					_acc559 += _acc562;
					_acc560 += _acc561;
					_acc555 += _acc560 * 2.276000;
					_acc558 += _acc559 * 2.577000;
					_t2161 = 2.000000 * _t555;
					_acc555 += _acc558 * _t2161;
				}
				_t2162 = _t555 * _t555;
				_t2163 = -_t2162;
				_acc554 += _acc555 * _t2163;
				_acc551 += _acc554 * vertParams[60];
			}
			_t2164 = (float)1.0 / (_t517);
			_acc550 += _acc551 * _t2164;
			_t2165 = -_t550;
			_t2166 = _t2164 * _t2164;
			_t2167 = _t2165 * _t2166;
			_acc517 += _acc551 * _t2167;
			_t2168 = 2.000000 * _t550;
			_t2169 = (float)1.0 / (_t2168);
			_acc547 += _acc550 * _t2169;
			cif (_t546 >= 0.000000) {
				_acc546 = _acc547;
			}
			else {
				_acc549 = _acc547;
				_acc546 -= _acc549;
			}
			_acc545 -= _acc546;
			_t2170 = 2.000000 * _t517;
			_acc517 += _acc545 * _t2170;
			cif (_t529 <= 0.000000) {
			}
			else {
				_acc534 = _acc530;
				cif (_t533 >= 1.600000) {
				}
				else {
					_acc544 = _acc534;
					_t2171 = (float)1.0 / (_t540);
					_acc543 += _acc544 * _t2171;
					_t2172 = -_t543;
					_t2173 = _t2171 * _t2171;
					_t2174 = _t2172 * _t2173;
					_acc540 += _acc544 * _t2174;
					_acc542 += _acc543;
					_acc541 += _acc543;
					_acc533 += _acc542 * 3.535000;
					_acc536 += _acc541 * 2.181000;
					_acc539 += _acc540;
					_acc537 += _acc540;
					_acc538 += _acc539;
					_acc533 += _acc538 * 2.276000;
					_acc536 += _acc537 * 2.577000;
					_t2175 = 2.000000 * _t533;
					_acc533 += _acc536 * _t2175;
				}
				_t2176 = _t533 * _t533;
				_t2177 = -_t2176;
				_acc532 += _acc533 * _t2177;
				_acc529 += _acc532 * vertParams[60];
			}
			_t2178 = (float)1.0 / (_t520);
			_acc528 += _acc529 * _t2178;
			_t2179 = -_t528;
			_t2180 = _t2178 * _t2178;
			_t2181 = _t2179 * _t2180;
			_acc520 += _acc529 * _t2181;
			_t2182 = 2.000000 * _t528;
			_t2183 = (float)1.0 / (_t2182);
			_acc525 += _acc528 * _t2183;
			cif (_t524 >= 0.000000) {
				_acc524 = _acc525;
			}
			else {
				_acc527 = _acc525;
				_acc524 -= _acc527;
			}
			_acc523 -= _acc524;
			_t2184 = 2.000000 * _t520;
			_acc520 += _acc523 * _t2184;
			cif (_t414 >= 0.000000) {
				_acc414 = _acc520;
			}
			else {
				_acc522 = _acc520;
				_acc414 -= _acc522;
			}
			cif (_t413 >= 0.000000) {
				_acc413 = _acc517;
			}
			else {
				_acc519 = _acc517;
				_acc413 -= _acc519;
			}
			cif (_t498 <= 0.000000) {
			}
			else {
				_acc516 = _acc499;
				_acc515 += _acc516 * 0.500000;
				_acc514 += _acc515;
				_acc513 += _acc515;
				_t2185 = 2.000000 * _t509;
				_acc509 += _acc514 * _t2185;
				_t2186 = 2.000000 * _t512;
				_acc512 += _acc513 * _t2186;
				_t2187 = (float)1.0 / (_t510);
				_acc511 += _acc512 * _t2187;
				_t2188 = -_t511;
				_t2189 = _t2187 * _t2187;
				_t2190 = _t2188 * _t2189;
				_acc510 += _acc512 * _t2190;
				_acc506 += _acc511;
				_acc504 -= _acc511;
				_acc506 += _acc510;
				_acc504 += _acc510;
				_t2191 = (float)1.0 / (_t507);
				_acc508 += _acc509 * _t2191;
				_t2192 = -_t508;
				_t2193 = _t2191 * _t2191;
				_t2194 = _t2192 * _t2193;
				_acc507 += _acc509 * _t2194;
				_acc501 += _acc508;
				_acc505 -= _acc508;
				_acc501 += _acc507;
				_acc505 += _acc507;
				_acc501 += _acc506 * vertParams[58];
				_acc504 += _acc505 * vertParams[58];
				_t2195 = 2.000000 * _t504;
				_t2196 = (float)1.0 / (_t2195);
				_acc498 += _acc504 * _t2196;
				cif (_t451 >= 0.000000) {
					_acc451 = _acc501;
				}
				else {
					_acc503 = _acc501;
					_acc451 -= _acc503;
				}
			}
			_acc497 -= _acc498;
			_acc496 += _acc497 * _t494;
			_acc494 += _acc497 * _t496;
			_acc495 -= _acc496;
			_t2197 = 2.000000 * _t451;
			_acc451 += _acc495 * _t2197;
			_t2198 = 2.000000 * _t492;
			_acc492 += _acc494 * _t2198;
			cif (_t451 > 0.000000) {
			}
			else {
			}
			_t2199 = (float)1.0 / (_t488);
			_acc490 += _acc491 * _t2199;
			_t2200 = -_t490;
			_t2201 = _t2199 * _t2199;
			_t2202 = _t2200 * _t2201;
			_acc488 += _acc491 * _t2202;
			_acc489 += _acc490 * _t490;
			_acc484 -= _acc489;
			_acc487 += _acc488 * _t485;
			_acc485 += _acc488 * _t487;
			_acc486 += _acc487 * vertParams[60];
			_t2203 = 2.000000 * _t476;
			_acc476 += _acc485 * _t2203;
			_t2204 = (float)1.0 / (_t476);
			_acc483 += _acc484 * _t2204;
			_t2205 = -_t483;
			_t2206 = _t2204 * _t2204;
			_t2207 = _t2205 * _t2206;
			_acc476 += _acc484 * _t2207;
			_acc482 += _acc483;
			_acc479 += _acc483;
			_t2208 = (float)1.0 / (_t480);
			_acc481 += _acc482 * _t2208;
			_t2209 = -_t481;
			_t2210 = _t2208 * _t2208;
			_t2211 = _t2209 * _t2210;
			_acc480 += _acc482 * _t2211;
			_t2212 = 2.000000 * _t475;
			_acc475 += _acc481 * _t2212;
			_t2213 = (float)1.0 / (_t477);
			_acc478 += _acc479 * _t2213;
			_t2214 = -_t478;
			_t2215 = _t2213 * _t2213;
			_t2216 = _t2214 * _t2215;
			_acc477 += _acc479 * _t2216;
			_t2217 = 2.000000 * _t474;
			_acc474 += _acc478 * _t2217;
			_t2218 = 2.000000 * _t473;
			_acc473 += _acc476 * _t2218;
			_acc453 += _acc475 * _t444;
			_acc454 += _acc475 * _t445;
			_acc455 += _acc475 * _t446;
			_acc444 += _acc475 * _t453;
			_acc445 += _acc475 * _t454;
			_acc446 += _acc475 * _t455;
			_acc456 += _acc474 * _t444;
			_acc457 += _acc474 * _t445;
			_acc458 += _acc474 * _t446;
			_acc444 += _acc474 * _t456;
			_acc445 += _acc474 * _t457;
			_acc446 += _acc474 * _t458;
			_acc156 += _acc473 * _t444;
			_acc157 += _acc473 * _t445;
			_acc158 += _acc473 * _t446;
			_acc444 += _acc473 * _t156;
			_acc445 += _acc473 * _t157;
			_acc446 += _acc473 * _t158;
			cif (_t158 < -0.999999) {
			}
			else {
				_acc468 = _acc453;
				_acc464 = _acc454;
				_acc465 = _acc455;
				_acc464 = _acc456;
				_acc472 = _acc457;
				_acc469 = _acc458;
				_acc471 -= _acc472;
				_acc470 += _acc471 * _t461;
				_acc461 += _acc471 * _t470;
				_t2219 = 2.000000 * _t157;
				_acc157 += _acc470 * _t2219;
				_acc157 -= _acc469;
				_acc467 -= _acc468;
				_acc466 += _acc467 * _t461;
				_acc461 += _acc467 * _t466;
				_t2220 = 2.000000 * _t156;
				_acc156 += _acc466 * _t2220;
				_acc156 -= _acc465;
				_acc463 += _acc464 * _t461;
				_acc461 += _acc464 * _t463;
				_acc462 += _acc463 * _t157;
				_acc157 += _acc463 * _t462;
				_acc156 -= _acc462;
				_t2221 = _t461 * _t461;
				_t2222 = -_t2221;
				_acc460 += _acc461 * _t2222;
				_acc158 += _acc460;
			}
			_acc340 += _acc452 * _t444;
			_acc341 += _acc452 * _t445;
			_acc342 += _acc452 * _t446;
			_acc444 += _acc452 * _t340;
			_acc445 += _acc452 * _t341;
			_acc446 += _acc452 * _t342;
			_acc250 += _acc451 * _t444;
			_acc251 += _acc451 * _t445;
			_acc252 += _acc451 * _t446;
			_acc444 += _acc451 * _t250;
			_acc445 += _acc451 * _t251;
			_acc446 += _acc451 * _t252;
			cif (_t443 < 0.000000) {
				_acc448 = _acc444;
				_acc449 = _acc445;
				_acc450 = _acc446;
				_acc422 -= _acc450;
				_acc421 -= _acc449;
				_acc420 -= _acc448;
			}
			else {
				_acc420 = _acc444;
				_acc421 = _acc445;
				_acc422 = _acc446;
			}
			cif (_t415 > 0.000000) {
				_acc429 = _acc420;
				_acc430 = _acc421;
				_acc431 = _acc422;
				_acc426 += _acc431 * _t428;
				_acc428 += _acc431 * _t426;
				_acc425 += _acc430 * _t428;
				_acc428 += _acc430 * _t425;
				_acc424 += _acc429 * _t428;
				_acc428 += _acc429 * _t424;
				_t2223 = _t428 * _t428;
				_t2224 = -_t2223;
				_acc427 += _acc428 * _t2224;
				_t2225 = (float)1.0 / (_t427);
				_t2226 = _t424 * _t2225;
				_acc424 += _acc427 * _t2226;
				_t2227 = _t425 * _t2225;
				_acc425 += _acc427 * _t2227;
				_t2228 = _t426 * _t2225;
				_acc426 += _acc427 * _t2228;
				_acc252 += _acc426;
				_acc342 += _acc426;
				_acc251 += _acc425;
				_acc341 += _acc425;
				_acc250 += _acc424;
				_acc340 += _acc424;
			}
			else {
				_acc440 = _acc420;
				_acc441 = _acc421;
				_acc442 = _acc422;
				_acc437 += _acc442 * _t439;
				_acc439 += _acc442 * _t437;
				_acc435 += _acc441 * _t439;
				_acc439 += _acc441 * _t435;
				_acc433 += _acc440 * _t439;
				_acc439 += _acc440 * _t433;
				_t2229 = _t439 * _t439;
				_t2230 = -_t2229;
				_acc438 += _acc439 * _t2230;
				_t2231 = (float)1.0 / (_t438);
				_t2232 = _t433 * _t2231;
				_acc433 += _acc438 * _t2232;
				_t2233 = _t435 * _t2231;
				_acc435 += _acc438 * _t2233;
				_t2234 = _t437 * _t2231;
				_acc437 += _acc438 * _t2234;
				_acc252 += _acc437;
				_acc436 += _acc437;
				_acc342 += _acc436 * _t416;
				_acc416 += _acc436 * _t342;
				_acc251 += _acc435;
				_acc434 += _acc435;
				_acc341 += _acc434 * _t416;
				_acc416 += _acc434 * _t341;
				_acc250 += _acc433;
				_acc432 += _acc433;
				_acc340 += _acc432 * _t416;
				_acc416 += _acc432 * _t340;
			}
			cif (_t413 > 0.000000) {
			}
			else {
			}
			_acc340 += _acc414 * _t156;
			_acc341 += _acc414 * _t157;
			_acc342 += _acc414 * _t158;
			_acc156 += _acc414 * _t340;
			_acc157 += _acc414 * _t341;
			_acc158 += _acc414 * _t342;
			_acc250 += _acc413 * _t156;
			_acc251 += _acc413 * _t157;
			_acc252 += _acc413 * _t158;
			_acc156 += _acc413 * _t250;
			_acc157 += _acc413 * _t251;
			_acc158 += _acc413 * _t252;
		}
		else cif (vertParams[51] == 0.000000) {
			_acc693 = _acc343;
			_acc694 = _acc344;
			_acc695 = _acc345;
			_acc690 = _acc346;
			_acc691 = _acc347;
			_acc691 += _acc695 * vertParams[54];
			_acc691 += _acc694 * vertParams[53];
			_acc691 += _acc693 * vertParams[52];
			_acc690 += _acc691 * 0.318310;
			_acc681 += _acc690 * _t340;
			_acc682 += _acc690 * _t341;
			_acc683 += _acc690 * _t342;
			_acc340 += _acc690 * _t681;
			_acc341 += _acc690 * _t682;
			_acc342 += _acc690 * _t683;
			cif (_t680 > 0.000000) {
				_acc156 = _acc681;
				_acc157 = _acc682;
				_acc158 = _acc683;
			}
			else {
				_acc686 = _acc681;
				_acc687 = _acc682;
				_acc688 = _acc683;
				_acc158 -= _acc688;
				_acc157 -= _acc687;
				_acc156 -= _acc686;
			}
		}
		else {
		}
		_acc332 += _acc342 * _t339;
		_acc339 += _acc342 * _t332;
		_acc331 += _acc341 * _t339;
		_acc339 += _acc341 * _t331;
		_acc330 += _acc340 * _t339;
		_acc339 += _acc340 * _t330;
		_t2235 = 2.000000 * _t339;
		_t2236 = (float)1.0 / (_t2235);
		_acc338 += _acc339 * _t2236;
		_t2237 = _t338 * _t338;
		_t2238 = -_t2237;
		_acc337 += _acc338 * _t2238;
		_acc336 += _acc337;
		_acc333 += _acc337;
		_acc335 += _acc336;
		_acc334 += _acc336;
		_t2239 = 2.000000 * _t330;
		_acc330 += _acc335 * _t2239;
		_t2240 = 2.000000 * _t331;
		_acc331 += _acc334 * _t2240;
		_t2241 = 2.000000 * _t332;
		_acc332 += _acc333 * _t2241;
		_acc286 += _acc332;
		_acc152 -= _acc332;
		_acc285 += _acc331;
		_acc151 -= _acc331;
		_acc284 += _acc330;
		_acc150 -= _acc330;
		cif (vertParams[62] == 0.000000) {
			_acc299 = _acc284;
			_acc303 = _acc285;
			_acc307 = _acc286;
			_acc327 = _acc287;
			_acc328 = _acc288;
			_acc329 = _acc289;
			_acc324 += _acc329 * _t326;
			_acc326 += _acc329 * _t324;
			_acc319 += _acc328 * _t326;
			_acc326 += _acc328 * _t319;
			_acc314 += _acc327 * _t326;
			_acc326 += _acc327 * _t314;
			_t2242 = _t326 * _t326;
			_t2243 = -_t2242;
			_acc325 += _acc326 * _t2243;
			_t2244 = (float)1.0 / (_t325);
			_t2245 = _t314 * _t2244;
			_acc314 += _acc325 * _t2245;
			_t2246 = _t319 * _t2244;
			_acc319 += _acc325 * _t2246;
			_t2247 = _t324 * _t2244;
			_acc324 += _acc325 * _t2247;
			_acc323 += _acc324;
			_acc320 += _acc324;
			_acc322 += _acc323;
			_acc321 += _acc323;
			_acc309 += _acc322 * vertParams[75];
			_acc294 += _acc321 * vertParams[78];
			_acc295 += _acc320 * vertParams[81];
			_acc318 += _acc319;
			_acc315 += _acc319;
			_acc317 += _acc318;
			_acc316 += _acc318;
			_acc309 += _acc317 * vertParams[74];
			_acc294 += _acc316 * vertParams[77];
			_acc295 += _acc315 * vertParams[80];
			_acc313 += _acc314;
			_acc310 += _acc314;
			_acc312 += _acc313;
			_acc311 += _acc313;
			_acc309 += _acc312 * vertParams[73];
			_acc294 += _acc311 * vertParams[76];
			_acc295 += _acc310 * vertParams[79];
			_acc308 += _acc309;
			_acc295 -= _acc309;
			_acc294 -= _acc308;
			_acc306 += _acc307;
			_acc304 += _acc307;
			_acc305 += _acc306;
			_acc294 += _acc305 * vertParams[69];
			_acc295 += _acc304 * vertParams[72];
			_acc302 += _acc303;
			_acc300 += _acc303;
			_acc301 += _acc302;
			_acc294 += _acc301 * vertParams[68];
			_acc295 += _acc300 * vertParams[71];
			_acc298 += _acc299;
			_acc296 += _acc299;
			_acc297 += _acc298;
			_acc294 += _acc297 * vertParams[67];
			_acc295 += _acc296 * vertParams[70];
			_acc293 += _acc295 * primary[4];
			_acc3 += _acc295 * _t293;
			_acc293 -= _acc294;
			_t2248 = 2.000000 * _t293;
			_t2249 = (float)1.0 / (_t2248);
			_acc292 += _acc293 * _t2249;
			_acc2 -= _acc292;
		}
		else {
		}
	}
	else cif (vertParams[50] == 0.000000) {
		_acc702 = _acc270;
		_acc703 = _acc271;
		_acc704 = _acc272;
		_acc705 = _acc273;
		_acc706 = _acc274;
		_acc707 = _acc275;
		_acc708 = _acc276;
		_acc709 = _acc277;
		cif (vertParams[51] == 1.000000) {
			_acc732 = _acc702;
			_acc733 = _acc703;
			_acc734 = _acc704;
			_acc877 = _acc705;
			_acc878 = _acc706;
			_acc879 = _acc707;
			_acc833 = _acc708;
			_acc871 = _acc709;
			_acc875 += _acc879 * _t876;
			_acc876 += _acc879 * _t875;
			_acc874 += _acc878 * _t876;
			_acc876 += _acc878 * _t874;
			_acc873 += _acc877 * _t876;
			_acc876 += _acc877 * _t873;
			_t2250 = _t876 * _t876;
			_t2251 = -_t2250;
			_acc871 += _acc876 * _t2251;
			_acc870 += _acc875 * _t833;
			_acc833 += _acc875 * _t870;
			_acc869 += _acc874 * _t833;
			_acc833 += _acc874 * _t869;
			_acc868 += _acc873 * _t833;
			_acc833 += _acc873 * _t868;
			_acc837 += _acc871;
			_acc858 += _acc871;
			_acc836 += _acc870;
			_acc857 += _acc870;
			_acc835 += _acc869;
			_acc856 += _acc869;
			_acc834 += _acc868;
			_acc855 += _acc868;
			cif (vertParams[59] < 1.000000) {
				_acc861 = _acc855;
				_acc862 = _acc856;
				_acc863 = _acc857;
				_acc866 = _acc858;
				_acc865 += _acc866 * _t833;
				_acc833 += _acc866 * _t865;
				_acc864 += _acc865 * 0.318310;
			}
			else {
			}
			cif (vertParams[59] > 0.000000) {
				_acc842 = _acc834;
				_acc843 = _acc835;
				_acc844 = _acc836;
				_acc845 = _acc837;
				cif (_t841 > 0.000000) {
					_acc850 = _acc842;
					_acc851 = _acc843;
					_acc852 = _acc844;
					_acc854 = _acc845;
					_acc853 += _acc854 * _t841;
					_acc841 += _acc854 * _t853;
					_acc847 += _acc853 * vertParams[59];
					_acc849 += _acc852 * vertParams[57];
					_acc849 += _acc851 * vertParams[56];
					_acc849 += _acc850 * vertParams[55];
					_acc848 += _acc849 * _t841;
					_acc841 += _acc849 * _t848;
				}
				else {
				}
				_acc840 += _acc841 * 0.159155;
				_t2252 = vertParams[58]-1.000000;
				_t2253 = pow(_t839,_t2252);
				_t2254 = vertParams[58] * _t2253;
				_acc839 += _acc840 * _t2254;
				_acc727 += _acc839 * _t732;
				_acc729 += _acc839 * _t733;
				_acc731 += _acc839 * _t734;
				_acc732 += _acc839 * _t727;
				_acc733 += _acc839 * _t729;
				_acc734 += _acc839 * _t731;
			}
			else {
			}
			_acc715 += _acc833 * _t732;
			_acc716 += _acc833 * _t733;
			_acc717 += _acc833 * _t734;
			_acc732 += _acc833 * _t715;
			_acc733 += _acc833 * _t716;
			_acc734 += _acc833 * _t717;
			cif (vertParams[49] > vertParams[59]) {
				_acc773 = _acc732;
				_acc778 = _acc733;
				_acc783 = _acc734;
				_acc782 += _acc783;
				_acc779 += _acc783;
				_acc781 += _acc782;
				_acc780 += _acc782;
				_acc748 += _acc781 * _t751;
				_acc751 += _acc781 * _t748;
				_acc746 += _acc780 * _t754;
				_acc754 += _acc780 * _t746;
				_acc744 += _acc779 * _t717;
				_acc717 += _acc779 * _t744;
				_acc777 += _acc778;
				_acc774 += _acc778;
				_acc776 += _acc777;
				_acc775 += _acc777;
				_acc748 += _acc776 * _t750;
				_acc750 += _acc776 * _t748;
				_acc746 += _acc775 * _t753;
				_acc753 += _acc775 * _t746;
				_acc744 += _acc774 * _t716;
				_acc716 += _acc774 * _t744;
				_acc772 += _acc773;
				_acc769 += _acc773;
				_acc771 += _acc772;
				_acc770 += _acc772;
				_acc748 += _acc771 * _t749;
				_acc749 += _acc771 * _t748;
				_acc746 += _acc770 * _t752;
				_acc752 += _acc770 * _t746;
				_acc744 += _acc769 * _t715;
				_acc715 += _acc769 * _t744;
				cif (_t717 < -0.999999) {
				}
				else {
					_acc764 = _acc749;
					_acc760 = _acc750;
					_acc761 = _acc751;
					_acc760 = _acc752;
					_acc768 = _acc753;
					_acc765 = _acc754;
					_acc767 -= _acc768;
					_acc766 += _acc767 * _t757;
					_acc757 += _acc767 * _t766;
					_t2255 = 2.000000 * _t716;
					_acc716 += _acc766 * _t2255;
					_acc716 -= _acc765;
					_acc763 -= _acc764;
					_acc762 += _acc763 * _t757;
					_acc757 += _acc763 * _t762;
					_t2256 = 2.000000 * _t715;
					_acc715 += _acc762 * _t2256;
					_acc715 -= _acc761;
					_acc759 += _acc760 * _t757;
					_acc757 += _acc760 * _t759;
					_acc758 += _acc759 * _t716;
					_acc716 += _acc759 * _t758;
					_acc715 -= _acc758;
					_t2257 = _t757 * _t757;
					_t2258 = -_t2257;
					_acc756 += _acc757 * _t2258;
					_acc717 += _acc756;
				}
				_acc747 += _acc748 * _t741;
				_acc741 += _acc748 * _t747;
				_t2259 = sin(_t737);
				_t2260 = -_t2259;
				_acc737 += _acc747 * _t2260;
				_acc745 += _acc746 * _t741;
				_acc741 += _acc746 * _t745;
				_t2261 = cos(_t737);
				_acc737 += _acc745 * _t2261;
				_t2262 = 2.000000 * _t744;
				_t2263 = (float)1.0 / (_t2262);
				_acc742 += _acc744 * _t2263;
				cif (primary[4] >= 0.000001) {
					_acc3 = _acc742;
				}
				else {
				}
				_t2264 = 2.000000 * _t741;
				_t2265 = (float)1.0 / (_t2264);
				_acc739 += _acc741 * _t2265;
				cif (_t738 >= 0.000001) {
					_acc738 = _acc739;
				}
				else {
				}
				_acc3 -= _acc738;
				_acc2 += _acc737 * 6.283185;
			}
			else {
				_acc822 = _acc732;
				_acc827 = _acc733;
				_acc832 = _acc734;
				_acc831 += _acc832;
				_acc828 += _acc832;
				_acc830 += _acc831;
				_acc829 += _acc831;
				_acc797 += _acc830 * _t800;
				_acc800 += _acc830 * _t797;
				_acc795 += _acc829 * _t803;
				_acc803 += _acc829 * _t795;
				_acc787 += _acc828 * _t731;
				_acc731 += _acc828 * _t787;
				_acc826 += _acc827;
				_acc823 += _acc827;
				_acc825 += _acc826;
				_acc824 += _acc826;
				_acc797 += _acc825 * _t799;
				_acc799 += _acc825 * _t797;
				_acc795 += _acc824 * _t802;
				_acc802 += _acc824 * _t795;
				_acc787 += _acc823 * _t729;
				_acc729 += _acc823 * _t787;
				_acc821 += _acc822;
				_acc818 += _acc822;
				_acc820 += _acc821;
				_acc819 += _acc821;
				_acc797 += _acc820 * _t798;
				_acc798 += _acc820 * _t797;
				_acc795 += _acc819 * _t801;
				_acc801 += _acc819 * _t795;
				_acc787 += _acc818 * _t727;
				_acc727 += _acc818 * _t787;
				cif (_t731 < -0.999999) {
				}
				else {
					_acc813 = _acc798;
					_acc809 = _acc799;
					_acc810 = _acc800;
					_acc809 = _acc801;
					_acc817 = _acc802;
					_acc814 = _acc803;
					_acc816 -= _acc817;
					_acc815 += _acc816 * _t806;
					_acc806 += _acc816 * _t815;
					_t2266 = 2.000000 * _t729;
					_acc729 += _acc815 * _t2266;
					_acc729 -= _acc814;
					_acc812 -= _acc813;
					_acc811 += _acc812 * _t806;
					_acc806 += _acc812 * _t811;
					_t2267 = 2.000000 * _t727;
					_acc727 += _acc811 * _t2267;
					_acc727 -= _acc810;
					_acc808 += _acc809 * _t806;
					_acc806 += _acc809 * _t808;
					_acc807 += _acc808 * _t729;
					_acc729 += _acc808 * _t807;
					_acc727 -= _acc807;
					_t2268 = _t806 * _t806;
					_t2269 = -_t2268;
					_acc805 += _acc806 * _t2269;
					_acc731 += _acc805;
				}
				_acc792 += _acc797 * _t796;
				_acc796 += _acc797 * _t792;
				_t2270 = sin(_t793);
				_t2271 = -_t2270;
				_acc793 += _acc796 * _t2271;
				_acc792 += _acc795 * _t794;
				_acc794 += _acc795 * _t792;
				_t2272 = cos(_t793);
				_acc793 += _acc794 * _t2272;
				_acc2 += _acc793 * 6.283185;
				_t2273 = 2.000000 * _t792;
				_t2274 = (float)1.0 / (_t2273);
				_acc790 += _acc792 * _t2274;
				cif (_t789 >= 0.000001) {
					_acc789 = _acc790;
				}
				else {
				}
				_acc788 -= _acc789;
				_t2275 = 2.000000 * _t787;
				_acc787 += _acc788 * _t2275;
				_t2276 = _t786-1.000000;
				_t2277 = pow(primary[4],_t2276);
				_t2278 = _t786 * _t2277;
				_acc3 += _acc787 * _t2278;
				_t2279 = log(_t786);
				_t2280 = _t787 * _t2279;
				_acc786 += _acc787 * _t2280;
				_t2281 = _t786 * _t786;
				_t2282 = -_t2281;
				_acc785 += _acc786 * _t2282;
			}
			_acc730 += _acc731;
			_acc252 -= _acc731;
			_acc725 += _acc730 * _t717;
			_acc717 += _acc730 * _t725;
			_acc728 += _acc729;
			_acc251 -= _acc729;
			_acc725 += _acc728 * _t716;
			_acc716 += _acc728 * _t725;
			_acc726 += _acc727;
			_acc250 -= _acc727;
			_acc725 += _acc726 * _t715;
			_acc715 += _acc726 * _t725;
			_acc724 += _acc725 * 2.000000;
			_acc250 += _acc724 * _t715;
			_acc251 += _acc724 * _t716;
			_acc252 += _acc724 * _t717;
			_acc715 += _acc724 * _t250;
			_acc716 += _acc724 * _t251;
			_acc717 += _acc724 * _t252;
			cif (_t714 > 0.000000) {
				_acc156 = _acc715;
				_acc157 = _acc716;
				_acc158 = _acc717;
			}
			else {
				_acc720 = _acc715;
				_acc721 = _acc716;
				_acc722 = _acc717;
				_acc158 -= _acc722;
				_acc157 -= _acc721;
				_acc156 -= _acc720;
			}
		}
		else cif (vertParams[51] == 2.000000) {
			_acc978 = _acc702;
			_acc979 = _acc703;
			_acc980 = _acc704;
			_acc1185 = _acc705;
			_acc1186 = _acc706;
			_acc1187 = _acc707;
			_acc984 = _acc708;
			_acc985 = _acc709;
			_acc983 += _acc1187 * _t1182;
			_acc1182 += _acc1187 * _t983;
			_acc982 += _acc1186 * _t1182;
			_acc1182 += _acc1186 * _t982;
			_acc981 += _acc1185 * _t1182;
			_acc1182 += _acc1185 * _t981;
			cif (_t1181 >= 0.000000) {
				_acc1181 = _acc1182;
			}
			else {
				_acc1184 = _acc1182;
				_acc1181 -= _acc1184;
			}
			_t2283 = (float)1.0 / (_t1180);
			_acc1179 += _acc1181 * _t2283;
			_t2284 = -_t1179;
			_t2285 = _t2283 * _t2283;
			_t2286 = _t2284 * _t2285;
			_acc1180 += _acc1181 * _t2286;
			_acc906 += _acc1180 * _t1111;
			_acc1111 += _acc1180 * _t906;
			_acc1178 += _acc1179 * _t948;
			_acc948 += _acc1179 * _t1178;
			_acc1132 += _acc1178 * _t1177;
			_acc1177 += _acc1178 * _t1132;
			_acc1162 += _acc1177 * _t1140;
			_acc1140 += _acc1177 * _t1162;
			cif (_t1161 <= 0.000000) {
			}
			else {
				_acc1166 = _acc1162;
				cif (_t1165 >= 1.600000) {
				}
				else {
					_acc1176 = _acc1166;
					_t2287 = (float)1.0 / (_t1172);
					_acc1175 += _acc1176 * _t2287;
					_t2288 = -_t1175;
					_t2289 = _t2287 * _t2287;
					_t2290 = _t2288 * _t2289;
					_acc1172 += _acc1176 * _t2290;
					_acc1174 += _acc1175;
					_acc1173 += _acc1175;
					_acc1165 += _acc1174 * 3.535000;
					_acc1168 += _acc1173 * 2.181000;
					_acc1171 += _acc1172;
					_acc1169 += _acc1172;
					_acc1170 += _acc1171;
					_acc1165 += _acc1170 * 2.276000;
					_acc1168 += _acc1169 * 2.577000;
					_t2291 = 2.000000 * _t1165;
					_acc1165 += _acc1168 * _t2291;
				}
				_t2292 = _t1165 * _t1165;
				_t2293 = -_t2292;
				_acc1164 += _acc1165 * _t2293;
				_acc1161 += _acc1164 * vertParams[60];
			}
			_t2294 = (float)1.0 / (_t1111);
			_acc1160 += _acc1161 * _t2294;
			_t2295 = -_t1160;
			_t2296 = _t2294 * _t2294;
			_t2297 = _t2295 * _t2296;
			_acc1111 += _acc1161 * _t2297;
			_t2298 = 2.000000 * _t1160;
			_t2299 = (float)1.0 / (_t2298);
			_acc1157 += _acc1160 * _t2299;
			cif (_t1156 >= 0.000000) {
				_acc1156 = _acc1157;
			}
			else {
				_acc1159 = _acc1157;
				_acc1156 -= _acc1159;
			}
			_acc1155 -= _acc1156;
			_t2300 = 2.000000 * _t1111;
			_acc1111 += _acc1155 * _t2300;
			cif (_t1139 <= 0.000000) {
			}
			else {
				_acc1144 = _acc1140;
				cif (_t1143 >= 1.600000) {
				}
				else {
					_acc1154 = _acc1144;
					_t2301 = (float)1.0 / (_t1150);
					_acc1153 += _acc1154 * _t2301;
					_t2302 = -_t1153;
					_t2303 = _t2301 * _t2301;
					_t2304 = _t2302 * _t2303;
					_acc1150 += _acc1154 * _t2304;
					_acc1152 += _acc1153;
					_acc1151 += _acc1153;
					_acc1143 += _acc1152 * 3.535000;
					_acc1146 += _acc1151 * 2.181000;
					_acc1149 += _acc1150;
					_acc1147 += _acc1150;
					_acc1148 += _acc1149;
					_acc1143 += _acc1148 * 2.276000;
					_acc1146 += _acc1147 * 2.577000;
					_t2305 = 2.000000 * _t1143;
					_acc1143 += _acc1146 * _t2305;
				}
				_t2306 = _t1143 * _t1143;
				_t2307 = -_t2306;
				_acc1142 += _acc1143 * _t2307;
				_acc1139 += _acc1142 * vertParams[60];
			}
			_t2308 = (float)1.0 / (_t1114);
			_acc1138 += _acc1139 * _t2308;
			_t2309 = -_t1138;
			_t2310 = _t2308 * _t2308;
			_t2311 = _t2309 * _t2310;
			_acc1114 += _acc1139 * _t2311;
			_t2312 = 2.000000 * _t1138;
			_t2313 = (float)1.0 / (_t2312);
			_acc1135 += _acc1138 * _t2313;
			cif (_t1134 >= 0.000000) {
				_acc1134 = _acc1135;
			}
			else {
				_acc1137 = _acc1135;
				_acc1134 -= _acc1137;
			}
			_acc1133 -= _acc1134;
			_t2314 = 2.000000 * _t1114;
			_acc1114 += _acc1133 * _t2314;
			_t2315 = (float)1.0 / (_t1129);
			_acc1131 += _acc1132 * _t2315;
			_t2316 = -_t1131;
			_t2317 = _t2315 * _t2315;
			_t2318 = _t2316 * _t2317;
			_acc1129 += _acc1132 * _t2318;
			_acc1130 += _acc1131 * _t1131;
			_acc1125 -= _acc1130;
			_acc1128 += _acc1129 * _t1126;
			_acc1126 += _acc1129 * _t1128;
			_acc1127 += _acc1128 * vertParams[60];
			_t2319 = 2.000000 * _t1117;
			_acc1117 += _acc1126 * _t2319;
			_t2320 = (float)1.0 / (_t1117);
			_acc1124 += _acc1125 * _t2320;
			_t2321 = -_t1124;
			_t2322 = _t2320 * _t2320;
			_t2323 = _t2321 * _t2322;
			_acc1117 += _acc1125 * _t2323;
			_acc1123 += _acc1124;
			_acc1120 += _acc1124;
			_t2324 = (float)1.0 / (_t1121);
			_acc1122 += _acc1123 * _t2324;
			_t2325 = -_t1122;
			_t2326 = _t2324 * _t2324;
			_t2327 = _t2325 * _t2326;
			_acc1121 += _acc1123 * _t2327;
			_t2328 = 2.000000 * _t912;
			_acc912 += _acc1122 * _t2328;
			_t2329 = (float)1.0 / (_t1118);
			_acc1119 += _acc1120 * _t2329;
			_t2330 = -_t1119;
			_t2331 = _t2329 * _t2329;
			_t2332 = _t2330 * _t2331;
			_acc1118 += _acc1120 * _t2332;
			_t2333 = 2.000000 * _t911;
			_acc911 += _acc1119 * _t2333;
			_t2334 = 2.000000 * _t900;
			_acc900 += _acc1117 * _t2334;
			cif (_t984 >= 0.000000) {
				_acc984 = _acc1114;
			}
			else {
				_acc1116 = _acc1114;
				_acc984 -= _acc1116;
			}
			cif (_t880 >= 0.000000) {
				_acc880 = _acc1111;
			}
			else {
				_acc1113 = _acc1111;
				_acc880 -= _acc1113;
			}
			cif (vertParams[49] <= _t957) {
				_acc991 = _acc978;
				_acc993 = _acc979;
				_acc995 = _acc980;
				_acc1005 = _acc984;
				_acc1000 = _acc985;
				_acc991 += _acc1005 * _t156;
				_acc993 += _acc1005 * _t157;
				_acc995 += _acc1005 * _t158;
				_acc156 += _acc1005 * _t991;
				_acc157 += _acc1005 * _t993;
				_acc158 += _acc1005 * _t995;
				cif (_t999 >= 0.000000) {
					_acc999 = _acc1000;
				}
				else {
					_acc1002 = _acc1000;
					_acc999 -= _acc1002;
				}
				_t2335 = (float)1.0 / (_t997);
				_acc998 += _acc999 * _t2335;
				_t2336 = -_t998;
				_t2337 = _t2335 * _t2335;
				_t2338 = _t2336 * _t2337;
				_acc997 += _acc999 * _t2338;
				_acc906 += _acc998 * _t957;
				_acc957 += _acc998 * _t906;
				_acc996 += _acc997 * 4.000000;
				_acc991 += _acc996 * _t937;
				_acc993 += _acc996 * _t942;
				_acc995 += _acc996 * _t947;
				_acc937 += _acc996 * _t991;
				_acc942 += _acc996 * _t993;
				_acc947 += _acc996 * _t995;
				_acc994 += _acc995;
				_acc252 -= _acc995;
				_acc989 += _acc994 * _t947;
				_acc947 += _acc994 * _t989;
				_acc992 += _acc993;
				_acc251 -= _acc993;
				_acc989 += _acc992 * _t942;
				_acc942 += _acc992 * _t989;
				_acc990 += _acc991;
				_acc250 -= _acc991;
				_acc989 += _acc990 * _t937;
				_acc937 += _acc990 * _t989;
				_acc988 += _acc989 * 2.000000;
				_acc250 += _acc988 * _t937;
				_acc251 += _acc988 * _t942;
				_acc252 += _acc988 * _t947;
				_acc937 += _acc988 * _t250;
				_acc942 += _acc988 * _t251;
				_acc947 += _acc988 * _t252;
			}
			else {
				_acc1042 = _acc978;
				_acc1045 = _acc979;
				_acc1048 = _acc980;
				_acc1053 = _acc981;
				_acc1054 = _acc982;
				_acc1055 = _acc983;
				_acc1072 = _acc984;
				_acc1069 = _acc985;
				_acc1042 += _acc1072 * _t156;
				_acc1045 += _acc1072 * _t157;
				_acc1048 += _acc1072 * _t158;
				_acc156 += _acc1072 * _t1042;
				_acc157 += _acc1072 * _t1045;
				_acc158 += _acc1072 * _t1048;
				cif (_t1068 >= 0.000000) {
					_acc1068 = _acc1069;
				}
				else {
					_acc1071 = _acc1069;
					_acc1068 -= _acc1071;
				}
				_acc1067 += _acc1068 * _t1063;
				_acc1063 += _acc1068 * _t1067;
				_acc906 += _acc1067 * _t1066;
				_acc1066 += _acc1067 * _t906;
				_acc957 -= _acc1066;
				cif (_t1062 >= 0.000000) {
					_acc1062 = _acc1063;
				}
				else {
					_acc1065 = _acc1063;
					_acc1062 -= _acc1065;
				}
				_t2339 = (float)1.0 / (_t1059);
				_acc1061 += _acc1062 * _t2339;
				_t2340 = -_t1061;
				_t2341 = _t2339 * _t2339;
				_t2342 = _t2340 * _t2341;
				_acc1059 += _acc1062 * _t2342;
				_acc1060 += _acc1061 * _t1056;
				_acc1056 += _acc1061 * _t1060;
				_t2343 = 2.000000 * _t1049;
				_acc1049 += _acc1060 * _t2343;
				_t2344 = 2.000000 * _t1058;
				_acc1058 += _acc1059 * _t2344;
				_acc948 += _acc1058;
				_acc1057 += _acc1058;
				_acc1049 += _acc1057 * _t1056;
				_acc1056 += _acc1057 * _t1049;
				_acc1042 += _acc1056 * _t937;
				_acc1045 += _acc1056 * _t942;
				_acc1048 += _acc1056 * _t947;
				_acc937 += _acc1056 * _t1042;
				_acc942 += _acc1056 * _t1045;
				_acc947 += _acc1056 * _t1048;
				_acc1052 += _acc1055 * vertParams[57];
				_acc1052 += _acc1054 * vertParams[56];
				_acc1052 += _acc1053 * vertParams[55];
				_t2345 = 2.000000 * _t1051;
				_acc1051 += _acc1052 * _t2345;
				_t2346 = _t1051 * _t1051;
				_t2347 = -_t2346;
				_acc1049 += _acc1051 * _t2347;
				cif (_t880 > 0.000000) {
				}
				else {
				}
				_acc1047 += _acc1048;
				_acc1046 -= _acc1048;
				_acc947 += _acc1047 * _t1039;
				_acc1039 += _acc1047 * _t947;
				_acc252 += _acc1046 * _t1035;
				_acc1035 += _acc1046 * _t252;
				_acc1044 += _acc1045;
				_acc1043 -= _acc1045;
				_acc942 += _acc1044 * _t1039;
				_acc1039 += _acc1044 * _t942;
				_acc251 += _acc1043 * _t1035;
				_acc1035 += _acc1043 * _t251;
				_acc1041 += _acc1042;
				_acc1040 -= _acc1042;
				_acc937 += _acc1041 * _t1039;
				_acc1039 += _acc1041 * _t937;
				_acc250 += _acc1040 * _t1035;
				_acc1035 += _acc1040 * _t250;
				_acc1038 += _acc1039;
				_acc956 += _acc1039;
				_acc1037 += _acc1038 * _t1035;
				_acc1035 += _acc1038 * _t1037;
				_acc250 += _acc1037 * _t937;
				_acc251 += _acc1037 * _t942;
				_acc252 += _acc1037 * _t947;
				_acc937 += _acc1037 * _t250;
				_acc942 += _acc1037 * _t251;
				_acc947 += _acc1037 * _t252;
				cif (_t956 < 0.000000) {
				}
				else {
				}
			}
			cif (_t955 <= 0.000000) {
			}
			else {
				_acc972 = _acc956;
				_acc977 = _acc957;
				_acc976 += _acc977 * 0.500000;
				_acc975 += _acc976;
				_acc974 += _acc976;
				_t2348 = 2.000000 * _t967;
				_acc967 += _acc975 * _t2348;
				_t2349 = 2.000000 * _t970;
				_acc970 += _acc974 * _t2349;
				cif (_t948 > 0.000000) {
					_acc971 = _acc972;
				}
				else {
					_acc962 = _acc972;
				}
				_acc962 -= _acc971;
				_t2350 = (float)1.0 / (_t968);
				_acc969 += _acc970 * _t2350;
				_t2351 = -_t969;
				_t2352 = _t2350 * _t2350;
				_t2353 = _t2351 * _t2352;
				_acc968 += _acc970 * _t2353;
				_acc964 += _acc969;
				_acc962 -= _acc969;
				_acc964 += _acc968;
				_acc962 += _acc968;
				_t2354 = (float)1.0 / (_t965);
				_acc966 += _acc967 * _t2354;
				_t2355 = -_t966;
				_t2356 = _t2354 * _t2354;
				_t2357 = _t2355 * _t2356;
				_acc965 += _acc967 * _t2357;
				_acc959 += _acc966;
				_acc963 -= _acc966;
				_acc959 += _acc965;
				_acc963 += _acc965;
				_acc959 += _acc964 * vertParams[58];
				_acc962 += _acc963 * vertParams[58];
				_t2358 = 2.000000 * _t962;
				_t2359 = (float)1.0 / (_t2358);
				_acc955 += _acc962 * _t2359;
				cif (_t948 >= 0.000000) {
					_acc948 = _acc959;
				}
				else {
					_acc961 = _acc959;
					_acc948 -= _acc961;
				}
			}
			_acc954 -= _acc955;
			_acc953 += _acc954 * _t951;
			_acc951 += _acc954 * _t953;
			_acc952 -= _acc953;
			_t2360 = 2.000000 * _t948;
			_acc948 += _acc952 * _t2360;
			_t2361 = 2.000000 * _t949;
			_acc949 += _acc951 * _t2361;
			cif (_t948 > 0.000000) {
			}
			else {
			}
			_acc250 += _acc948 * _t937;
			_acc251 += _acc948 * _t942;
			_acc252 += _acc948 * _t947;
			_acc937 += _acc948 * _t250;
			_acc942 += _acc948 * _t251;
			_acc947 += _acc948 * _t252;
			_acc946 += _acc947;
			_acc943 += _acc947;
			_acc945 += _acc946;
			_acc944 += _acc946;
			_acc912 += _acc945 * _t915;
			_acc915 += _acc945 * _t912;
			_acc911 += _acc944 * _t918;
			_acc918 += _acc944 * _t911;
			_acc900 += _acc943 * _t158;
			_acc158 += _acc943 * _t900;
			_acc941 += _acc942;
			_acc938 += _acc942;
			_acc940 += _acc941;
			_acc939 += _acc941;
			_acc912 += _acc940 * _t914;
			_acc914 += _acc940 * _t912;
			_acc911 += _acc939 * _t917;
			_acc917 += _acc939 * _t911;
			_acc900 += _acc938 * _t157;
			_acc157 += _acc938 * _t900;
			_acc936 += _acc937;
			_acc933 += _acc937;
			_acc935 += _acc936;
			_acc934 += _acc936;
			_acc912 += _acc935 * _t913;
			_acc913 += _acc935 * _t912;
			_acc911 += _acc934 * _t916;
			_acc916 += _acc934 * _t911;
			_acc900 += _acc933 * _t156;
			_acc156 += _acc933 * _t900;
			cif (_t158 < -0.999999) {
			}
			else {
				_acc928 = _acc913;
				_acc924 = _acc914;
				_acc925 = _acc915;
				_acc924 = _acc916;
				_acc932 = _acc917;
				_acc929 = _acc918;
				_acc931 -= _acc932;
				_acc930 += _acc931 * _t921;
				_acc921 += _acc931 * _t930;
				_t2362 = 2.000000 * _t157;
				_acc157 += _acc930 * _t2362;
				_acc157 -= _acc929;
				_acc927 -= _acc928;
				_acc926 += _acc927 * _t921;
				_acc921 += _acc927 * _t926;
				_t2363 = 2.000000 * _t156;
				_acc156 += _acc926 * _t2363;
				_acc156 -= _acc925;
				_acc923 += _acc924 * _t921;
				_acc921 += _acc924 * _t923;
				_acc922 += _acc923 * _t157;
				_acc157 += _acc923 * _t922;
				_acc156 -= _acc922;
				_t2364 = _t921 * _t921;
				_t2365 = -_t2364;
				_acc920 += _acc921 * _t2365;
				_acc158 += _acc920;
			}
			_acc910 += _acc912 * _t890;
			_acc890 += _acc912 * _t910;
			_acc910 += _acc911 * _t889;
			_acc889 += _acc911 * _t910;
			_t2366 = 2.000000 * _t910;
			_t2367 = (float)1.0 / (_t2366);
			_acc908 += _acc910 * _t2367;
			cif (_t907 >= 0.000001) {
				_acc907 = _acc908;
			}
			else {
			}
			_acc901 -= _acc907;
			_t2368 = (float)1.0 / (_t904);
			_acc905 += _acc906 * _t2368;
			_t2369 = -_t905;
			_t2370 = _t2368 * _t2368;
			_t2371 = _t2369 * _t2370;
			_acc904 += _acc906 * _t2371;
			_acc2 -= _acc905;
			_acc903 += _acc904 * _t901;
			_acc901 += _acc904 * _t903;
			_acc902 += _acc903 * _t900;
			_acc900 += _acc903 * _t902;
			_acc891 += _acc902 * 3.141593;
			_t2372 = 2.000000 * _t900;
			_acc900 += _acc901 * _t2372;
			_t2373 = _t900 * _t900;
			_t2374 = -_t2373;
			_acc899 += _acc900 * _t2374;
			_t2375 = 2.000000 * _t899;
			_t2376 = (float)1.0 / (_t2375);
			_acc898 += _acc899 * _t2376;
			_acc897 += _acc898;
			_acc891 += _acc897 * _t896;
			_acc896 += _acc897 * _t891;
			_acc895 -= _acc896;
			_t2377 = (float)1.0 / (_t893);
			_acc893 += _acc895 * _t2377;
			cif (_t892 >= 0.000001) {
				_acc892 = _acc893;
			}
			else {
			}
			_acc2 -= _acc892;
			_t2378 = 2.000000 * _t887;
			_acc887 += _acc891 * _t2378;
			_t2379 = sin(_t888);
			_t2380 = -_t2379;
			_acc888 += _acc890 * _t2380;
			_t2381 = cos(_t888);
			_acc888 += _acc889 * _t2381;
			_acc3 += _acc888 * 6.283185;
			_acc886 += _acc887 * vertParams[60];
			_acc885 -= _acc886;
			_acc884 += _acc885 * 0.200000;
			_t2382 = 2.000000 * _t884;
			_t2383 = (float)1.0 / (_t2382);
			_acc881 += _acc884 * _t2383;
			cif (_t880 >= 0.000000) {
				_acc880 = _acc881;
			}
			else {
				_acc883 = _acc881;
				_acc880 -= _acc883;
			}
			_acc250 += _acc880 * _t156;
			_acc251 += _acc880 * _t157;
			_acc252 += _acc880 * _t158;
			_acc156 += _acc880 * _t250;
			_acc157 += _acc880 * _t251;
			_acc158 += _acc880 * _t252;
		}
		else cif (vertParams[51] == 0.000000) {
			_acc1234 = _acc702;
			_acc1239 = _acc703;
			_acc1244 = _acc704;
			_acc1225 = _acc708;
			_acc1245 = _acc709;
			_acc1225 += _acc1245 * 0.318310;
			_acc1243 += _acc1244;
			_acc1240 += _acc1244;
			_acc1242 += _acc1243;
			_acc1241 += _acc1243;
			_acc1229 += _acc1242 * _t1200;
			_acc1200 += _acc1242 * _t1229;
			_acc1227 += _acc1241 * _t1203;
			_acc1203 += _acc1241 * _t1227;
			_acc1225 += _acc1240 * _t1191;
			_acc1191 += _acc1240 * _t1225;
			_acc1238 += _acc1239;
			_acc1235 += _acc1239;
			_acc1237 += _acc1238;
			_acc1236 += _acc1238;
			_acc1229 += _acc1237 * _t1199;
			_acc1199 += _acc1237 * _t1229;
			_acc1227 += _acc1236 * _t1202;
			_acc1202 += _acc1236 * _t1227;
			_acc1225 += _acc1235 * _t1190;
			_acc1190 += _acc1235 * _t1225;
			_acc1233 += _acc1234;
			_acc1230 += _acc1234;
			_acc1232 += _acc1233;
			_acc1231 += _acc1233;
			_acc1229 += _acc1232 * _t1198;
			_acc1198 += _acc1232 * _t1229;
			_acc1227 += _acc1231 * _t1201;
			_acc1201 += _acc1231 * _t1227;
			_acc1225 += _acc1230 * _t1189;
			_acc1189 += _acc1230 * _t1225;
			_acc1228 += _acc1229 * _t1222;
			_acc1222 += _acc1229 * _t1228;
			_t2384 = sin(_t1218);
			_t2385 = -_t2384;
			_acc1218 += _acc1228 * _t2385;
			_acc1226 += _acc1227 * _t1222;
			_acc1222 += _acc1227 * _t1226;
			_t2386 = cos(_t1218);
			_acc1218 += _acc1226 * _t2386;
			_t2387 = 2.000000 * _t1225;
			_t2388 = (float)1.0 / (_t2387);
			_acc1223 += _acc1225 * _t2388;
			cif (primary[4] >= 0.000001) {
				_acc3 = _acc1223;
			}
			else {
			}
			_t2389 = 2.000000 * _t1222;
			_t2390 = (float)1.0 / (_t2389);
			_acc1220 += _acc1222 * _t2390;
			cif (_t1219 >= 0.000001) {
				_acc1219 = _acc1220;
			}
			else {
			}
			_acc3 -= _acc1219;
			_acc2 += _acc1218 * 6.283185;
			cif (_t1191 < -0.999999) {
			}
			else {
				_acc1213 = _acc1198;
				_acc1209 = _acc1199;
				_acc1210 = _acc1200;
				_acc1209 = _acc1201;
				_acc1217 = _acc1202;
				_acc1214 = _acc1203;
				_acc1216 -= _acc1217;
				_acc1215 += _acc1216 * _t1206;
				_acc1206 += _acc1216 * _t1215;
				_t2391 = 2.000000 * _t1190;
				_acc1190 += _acc1215 * _t2391;
				_acc1190 -= _acc1214;
				_acc1212 -= _acc1213;
				_acc1211 += _acc1212 * _t1206;
				_acc1206 += _acc1212 * _t1211;
				_t2392 = 2.000000 * _t1189;
				_acc1189 += _acc1211 * _t2392;
				_acc1189 -= _acc1210;
				_acc1208 += _acc1209 * _t1206;
				_acc1206 += _acc1209 * _t1208;
				_acc1207 += _acc1208 * _t1190;
				_acc1190 += _acc1208 * _t1207;
				_acc1189 -= _acc1207;
				_t2393 = _t1206 * _t1206;
				_t2394 = -_t2393;
				_acc1205 += _acc1206 * _t2394;
				_acc1191 += _acc1205;
			}
			cif (_t1188 > 0.000000) {
				_acc156 = _acc1189;
				_acc157 = _acc1190;
				_acc158 = _acc1191;
			}
			else {
				_acc1194 = _acc1189;
				_acc1195 = _acc1190;
				_acc1196 = _acc1191;
				_acc158 -= _acc1196;
				_acc157 -= _acc1195;
				_acc156 -= _acc1194;
			}
		}
		else {
		}
	}
	else {
		_acc1254 = _acc270;
		_acc1252 = _acc271;
		_acc1250 = _acc272;
		_acc1260 = _acc273;
		_acc1261 = _acc274;
		_acc1262 = _acc275;
		_acc1263 = _acc276;
		_acc1264 = _acc277;
		_acc1259 = _acc279;
		cif (vertParams[51] == 1.000000) {
			_acc1327 = _acc1260;
			_acc1328 = _acc1261;
			_acc1329 = _acc1262;
			_acc1279 = _acc1263;
			_acc1325 = _acc1264;
			_acc1324 += _acc1329 * _t1279;
			_acc1279 += _acc1329 * _t1324;
			_acc1323 += _acc1328 * _t1279;
			_acc1279 += _acc1328 * _t1323;
			_acc1322 += _acc1327 * _t1279;
			_acc1279 += _acc1327 * _t1322;
			_acc1283 += _acc1325;
			_acc1312 += _acc1325;
			_acc1282 += _acc1324;
			_acc1311 += _acc1324;
			_acc1281 += _acc1323;
			_acc1310 += _acc1323;
			_acc1280 += _acc1322;
			_acc1309 += _acc1322;
			cif (vertParams[59] < 1.000000) {
				_acc1315 = _acc1309;
				_acc1316 = _acc1310;
				_acc1317 = _acc1311;
				_acc1320 = _acc1312;
				_acc1319 += _acc1320 * _t1279;
				_acc1279 += _acc1320 * _t1319;
				_acc1318 += _acc1319 * 0.318310;
			}
			else {
			}
			cif (vertParams[59] > 0.000000) {
				_acc1296 = _acc1280;
				_acc1297 = _acc1281;
				_acc1298 = _acc1282;
				_acc1299 = _acc1283;
				cif (_t1295 > 0.000000) {
					_acc1304 = _acc1296;
					_acc1305 = _acc1297;
					_acc1306 = _acc1298;
					_acc1308 = _acc1299;
					_acc1307 += _acc1308 * _t1295;
					_acc1295 += _acc1308 * _t1307;
					_acc1301 += _acc1307 * vertParams[59];
					_acc1303 += _acc1306 * vertParams[57];
					_acc1303 += _acc1305 * vertParams[56];
					_acc1303 += _acc1304 * vertParams[55];
					_acc1302 += _acc1303 * _t1295;
					_acc1295 += _acc1303 * _t1302;
				}
				else {
				}
				_acc1294 += _acc1295 * 0.159155;
				_t2395 = vertParams[58]-1.000000;
				_t2396 = pow(_t1293,_t2395);
				_t2397 = vertParams[58] * _t2396;
				_acc1293 += _acc1294 * _t2397;
				_acc1288 += _acc1293 * _t1254;
				_acc1290 += _acc1293 * _t1252;
				_acc1292 += _acc1293 * _t1250;
				_acc1254 += _acc1293 * _t1288;
				_acc1252 += _acc1293 * _t1290;
				_acc1250 += _acc1293 * _t1292;
				_acc1291 += _acc1292;
				_acc252 -= _acc1292;
				_acc1286 += _acc1291 * _t1272;
				_acc1272 += _acc1291 * _t1286;
				_acc1289 += _acc1290;
				_acc251 -= _acc1290;
				_acc1286 += _acc1289 * _t1271;
				_acc1271 += _acc1289 * _t1286;
				_acc1287 += _acc1288;
				_acc250 -= _acc1288;
				_acc1286 += _acc1287 * _t1270;
				_acc1270 += _acc1287 * _t1286;
				_acc1285 += _acc1286 * 2.000000;
				_acc250 += _acc1285 * _t1270;
				_acc251 += _acc1285 * _t1271;
				_acc252 += _acc1285 * _t1272;
				_acc1270 += _acc1285 * _t250;
				_acc1271 += _acc1285 * _t251;
				_acc1272 += _acc1285 * _t252;
			}
			else {
			}
			_acc1270 += _acc1279 * _t1254;
			_acc1271 += _acc1279 * _t1252;
			_acc1272 += _acc1279 * _t1250;
			_acc1254 += _acc1279 * _t1270;
			_acc1252 += _acc1279 * _t1271;
			_acc1250 += _acc1279 * _t1272;
			cif (_t1269 > 0.000000) {
				_acc156 = _acc1270;
				_acc157 = _acc1271;
				_acc158 = _acc1272;
			}
			else {
				_acc1275 = _acc1270;
				_acc1276 = _acc1271;
				_acc1277 = _acc1272;
				_acc158 -= _acc1277;
				_acc157 -= _acc1276;
				_acc156 -= _acc1275;
			}
		}
		else cif (vertParams[51] == 2.000000) {
			_acc1527 = _acc1260;
			_acc1528 = _acc1261;
			_acc1529 = _acc1262;
			_acc1331 = _acc1263;
			_acc1530 = _acc1264;
			cif (_t1332 > 0.000000) {
				_acc1539 = _acc1527;
				_acc1540 = _acc1528;
				_acc1541 = _acc1529;
				_acc1545 = _acc1530;
				cif (_t1544 >= 0.000000) {
					_acc1544 = _acc1545;
				}
				else {
					_acc1547 = _acc1545;
					_acc1544 -= _acc1547;
				}
				_t2398 = (float)1.0 / (_t1542);
				_acc1543 += _acc1544 * _t2398;
				_t2399 = -_t1543;
				_t2400 = _t2398 * _t2398;
				_t2401 = _t2399 * _t2400;
				_acc1542 += _acc1544 * _t2401;
				_acc1505 += _acc1543 * _t1416;
				_acc1416 += _acc1543 * _t1505;
				_acc1369 += _acc1542 * 4.000000;
				_acc1536 += _acc1541 * vertParams[54];
				_acc1536 += _acc1540 * vertParams[53];
				_acc1536 += _acc1539 * vertParams[52];
				cif (_t1535 >= 0.000000) {
					_acc1535 = _acc1536;
				}
				else {
					_acc1538 = _acc1536;
					_acc1535 -= _acc1538;
				}
				_t2402 = (float)1.0 / (_t1532);
				_acc1534 += _acc1535 * _t2402;
				_t2403 = -_t1534;
				_t2404 = _t2402 * _t2402;
				_t2405 = _t2403 * _t2404;
				_acc1532 += _acc1535 * _t2405;
				_acc1533 += _acc1534 * _t1484;
				_acc1484 += _acc1534 * _t1533;
				_acc1416 += _acc1533 * _t1408;
				_acc1408 += _acc1533 * _t1416;
				_acc1330 += _acc1532 * 4.000000;
			}
			else {
				_acc1574 = _acc1527;
				_acc1575 = _acc1528;
				_acc1576 = _acc1529;
				_acc1584 = _acc1530;
				cif (_t1583 >= 0.000000) {
					_acc1583 = _acc1584;
				}
				else {
					_acc1586 = _acc1584;
					_acc1583 -= _acc1586;
				}
				_t2406 = (float)1.0 / (_t1577);
				_acc1582 += _acc1583 * _t2406;
				_t2407 = -_t1582;
				_t2408 = _t2406 * _t2406;
				_t2409 = _t2407 * _t2408;
				_acc1577 += _acc1583 * _t2409;
				_acc1581 += _acc1582 * _t1579;
				_acc1579 += _acc1582 * _t1581;
				_acc1505 += _acc1581 * _t1580;
				_acc1580 += _acc1581 * _t1505;
				_acc1416 -= _acc1580;
				_acc1578 += _acc1579 * _t1369;
				_acc1369 += _acc1579 * _t1578;
				_t2410 = 2.000000 * _t1333;
				_acc1333 += _acc1578 * _t2410;
				_t2411 = 2.000000 * _t1555;
				_acc1555 += _acc1577 * _t2411;
				_acc1571 += _acc1576 * vertParams[57];
				_acc1571 += _acc1575 * vertParams[56];
				_acc1571 += _acc1574 * vertParams[55];
				cif (_t1570 >= 0.000000) {
					_acc1570 = _acc1571;
				}
				else {
					_acc1573 = _acc1571;
					_acc1570 -= _acc1573;
				}
				_t2412 = (float)1.0 / (_t1561);
				_acc1569 += _acc1570 * _t2412;
				_t2413 = -_t1569;
				_t2414 = _t2412 * _t2412;
				_t2415 = _t2413 * _t2414;
				_acc1561 += _acc1570 * _t2415;
				_acc1559 += _acc1569 * _t1568;
				_acc1568 += _acc1569 * _t1559;
				_acc1567 += _acc1568 * _t1369;
				_acc1369 += _acc1568 * _t1567;
				_acc1566 += _acc1567 * _t1368;
				_acc1368 += _acc1567 * _t1566;
				_acc1565 += _acc1566 * _t1562;
				_acc1562 += _acc1566 * _t1565;
				_acc1564 += _acc1565 * _t1484;
				_acc1484 += _acc1565 * _t1564;
				_acc1563 += _acc1564 * _t1408;
				_acc1408 += _acc1564 * _t1563;
				_acc1416 -= _acc1563;
				_t2416 = 2.000000 * _t1333;
				_acc1333 += _acc1562 * _t2416;
				_acc1330 += _acc1561 * _t1560;
				_acc1560 += _acc1561 * _t1330;
				_t2417 = 2.000000 * _t1555;
				_acc1555 += _acc1560 * _t2417;
				_t2418 = 2.000000 * _t1558;
				_acc1558 += _acc1559 * _t2418;
				_t2419 = _t1558 * _t1558;
				_t2420 = -_t2419;
				_acc1333 += _acc1558 * _t2420;
				_acc1368 += _acc1555;
				_acc1554 += _acc1555;
				_acc1333 += _acc1554 * _t1369;
				_acc1369 += _acc1554 * _t1333;
			}
			_acc1390 += _acc1505 * _t1504;
			_acc1504 += _acc1505 * _t1390;
			_t2421 = (float)1.0 / (_t1501);
			_acc1503 += _acc1504 * _t2421;
			_t2422 = -_t1503;
			_t2423 = _t2421 * _t2421;
			_t2424 = _t2422 * _t2423;
			_acc1501 += _acc1504 * _t2424;
			_acc1502 += _acc1503 * _t1503;
			_acc1497 -= _acc1502;
			_acc1500 += _acc1501 * _t1498;
			_acc1498 += _acc1501 * _t1500;
			_acc1499 += _acc1500 * _t1488;
			_acc1488 += _acc1500 * _t1499;
			_acc1488 += _acc1499 * 3.141593;
			_t2425 = 2.000000 * _t1489;
			_acc1489 += _acc1498 * _t2425;
			_t2426 = (float)1.0 / (_t1489);
			_acc1496 += _acc1497 * _t2426;
			_t2427 = -_t1496;
			_t2428 = _t2426 * _t2426;
			_t2429 = _t2427 * _t2428;
			_acc1489 += _acc1497 * _t2429;
			_acc1495 += _acc1496;
			_acc1492 += _acc1496;
			_t2430 = (float)1.0 / (_t1493);
			_acc1494 += _acc1495 * _t2430;
			_t2431 = -_t1494;
			_t2432 = _t2430 * _t2430;
			_t2433 = _t2431 * _t2432;
			_acc1493 += _acc1495 * _t2433;
			_t2434 = 2.000000 * _t1392;
			_acc1392 += _acc1494 * _t2434;
			_t2435 = 2.000000 * _t1488;
			_acc1488 += _acc1493 * _t2435;
			_t2436 = (float)1.0 / (_t1490);
			_acc1491 += _acc1492 * _t2436;
			_t2437 = -_t1491;
			_t2438 = _t2436 * _t2436;
			_t2439 = _t2437 * _t2438;
			_acc1490 += _acc1492 * _t2439;
			_t2440 = 2.000000 * _t1391;
			_acc1391 += _acc1491 * _t2440;
			_t2441 = 2.000000 * _t1488;
			_acc1488 += _acc1490 * _t2441;
			_t2442 = 2.000000 * _t1390;
			_acc1390 += _acc1489 * _t2442;
			_acc1487 += _acc1488 * vertParams[60];
			_acc1486 -= _acc1487;
			_acc1485 += _acc1486 * 0.200000;
			_t2443 = 2.000000 * _t1485;
			_t2444 = (float)1.0 / (_t2443);
			_acc1434 += _acc1485 * _t2444;
			_acc1469 += _acc1484 * _t1447;
			_acc1447 += _acc1484 * _t1469;
			cif (_t1468 <= 0.000000) {
			}
			else {
				_acc1473 = _acc1469;
				cif (_t1472 >= 1.600000) {
				}
				else {
					_acc1483 = _acc1473;
					_t2445 = (float)1.0 / (_t1479);
					_acc1482 += _acc1483 * _t2445;
					_t2446 = -_t1482;
					_t2447 = _t2445 * _t2445;
					_t2448 = _t2446 * _t2447;
					_acc1479 += _acc1483 * _t2448;
					_acc1481 += _acc1482;
					_acc1480 += _acc1482;
					_acc1472 += _acc1481 * 3.535000;
					_acc1475 += _acc1480 * 2.181000;
					_acc1478 += _acc1479;
					_acc1476 += _acc1479;
					_acc1477 += _acc1478;
					_acc1472 += _acc1477 * 2.276000;
					_acc1475 += _acc1476 * 2.577000;
					_t2449 = 2.000000 * _t1472;
					_acc1472 += _acc1475 * _t2449;
				}
				_t2450 = _t1472 * _t1472;
				_t2451 = -_t2450;
				_acc1471 += _acc1472 * _t2451;
				_acc1468 += _acc1471 * vertParams[60];
			}
			_t2452 = (float)1.0 / (_t1434);
			_acc1467 += _acc1468 * _t2452;
			_t2453 = -_t1467;
			_t2454 = _t2452 * _t2452;
			_t2455 = _t2453 * _t2454;
			_acc1434 += _acc1468 * _t2455;
			_t2456 = 2.000000 * _t1467;
			_t2457 = (float)1.0 / (_t2456);
			_acc1464 += _acc1467 * _t2457;
			cif (_t1463 >= 0.000000) {
				_acc1463 = _acc1464;
			}
			else {
				_acc1466 = _acc1464;
				_acc1463 -= _acc1466;
			}
			_acc1462 -= _acc1463;
			_t2458 = 2.000000 * _t1434;
			_acc1434 += _acc1462 * _t2458;
			cif (_t1446 <= 0.000000) {
			}
			else {
				_acc1451 = _acc1447;
				cif (_t1450 >= 1.600000) {
				}
				else {
					_acc1461 = _acc1451;
					_t2459 = (float)1.0 / (_t1457);
					_acc1460 += _acc1461 * _t2459;
					_t2460 = -_t1460;
					_t2461 = _t2459 * _t2459;
					_t2462 = _t2460 * _t2461;
					_acc1457 += _acc1461 * _t2462;
					_acc1459 += _acc1460;
					_acc1458 += _acc1460;
					_acc1450 += _acc1459 * 3.535000;
					_acc1453 += _acc1458 * 2.181000;
					_acc1456 += _acc1457;
					_acc1454 += _acc1457;
					_acc1455 += _acc1456;
					_acc1450 += _acc1455 * 2.276000;
					_acc1453 += _acc1454 * 2.577000;
					_t2463 = 2.000000 * _t1450;
					_acc1450 += _acc1453 * _t2463;
				}
				_t2464 = _t1450 * _t1450;
				_t2465 = -_t2464;
				_acc1449 += _acc1450 * _t2465;
				_acc1446 += _acc1449 * vertParams[60];
			}
			_t2466 = (float)1.0 / (_t1437);
			_acc1445 += _acc1446 * _t2466;
			_t2467 = -_t1445;
			_t2468 = _t2466 * _t2466;
			_t2469 = _t2467 * _t2468;
			_acc1437 += _acc1446 * _t2469;
			_t2470 = 2.000000 * _t1445;
			_t2471 = (float)1.0 / (_t2470);
			_acc1442 += _acc1445 * _t2471;
			cif (_t1441 >= 0.000000) {
				_acc1441 = _acc1442;
			}
			else {
				_acc1444 = _acc1442;
				_acc1441 -= _acc1444;
			}
			_acc1440 -= _acc1441;
			_t2472 = 2.000000 * _t1437;
			_acc1437 += _acc1440 * _t2472;
			cif (_t1331 >= 0.000000) {
				_acc1331 = _acc1437;
			}
			else {
				_acc1439 = _acc1437;
				_acc1331 -= _acc1439;
			}
			cif (_t1330 >= 0.000000) {
				_acc1330 = _acc1434;
			}
			else {
				_acc1436 = _acc1434;
				_acc1330 -= _acc1436;
			}
			cif (_t1415 <= 0.000000) {
			}
			else {
				_acc1433 = _acc1416;
				_acc1432 += _acc1433 * 0.500000;
				_acc1431 += _acc1432;
				_acc1430 += _acc1432;
				_t2473 = 2.000000 * _t1426;
				_acc1426 += _acc1431 * _t2473;
				_t2474 = 2.000000 * _t1429;
				_acc1429 += _acc1430 * _t2474;
				_t2475 = (float)1.0 / (_t1427);
				_acc1428 += _acc1429 * _t2475;
				_t2476 = -_t1428;
				_t2477 = _t2475 * _t2475;
				_t2478 = _t2476 * _t2477;
				_acc1427 += _acc1429 * _t2478;
				_acc1423 += _acc1428;
				_acc1421 -= _acc1428;
				_acc1423 += _acc1427;
				_acc1421 += _acc1427;
				_t2479 = (float)1.0 / (_t1424);
				_acc1425 += _acc1426 * _t2479;
				_t2480 = -_t1425;
				_t2481 = _t2479 * _t2479;
				_t2482 = _t2480 * _t2481;
				_acc1424 += _acc1426 * _t2482;
				_acc1418 += _acc1425;
				_acc1422 -= _acc1425;
				_acc1418 += _acc1424;
				_acc1422 += _acc1424;
				_acc1418 += _acc1423 * vertParams[58];
				_acc1421 += _acc1422 * vertParams[58];
				_t2483 = 2.000000 * _t1421;
				_t2484 = (float)1.0 / (_t2483);
				_acc1415 += _acc1421 * _t2484;
				cif (_t1368 >= 0.000000) {
					_acc1368 = _acc1418;
				}
				else {
					_acc1420 = _acc1418;
					_acc1368 -= _acc1420;
				}
			}
			_acc1414 -= _acc1415;
			_acc1413 += _acc1414 * _t1411;
			_acc1411 += _acc1414 * _t1413;
			_acc1412 -= _acc1413;
			_t2485 = 2.000000 * _t1368;
			_acc1368 += _acc1412 * _t2485;
			_t2486 = 2.000000 * _t1409;
			_acc1409 += _acc1411 * _t2486;
			cif (_t1368 > 0.000000) {
			}
			else {
			}
			_t2487 = (float)1.0 / (_t1405);
			_acc1407 += _acc1408 * _t2487;
			_t2488 = -_t1407;
			_t2489 = _t2487 * _t2487;
			_t2490 = _t2488 * _t2489;
			_acc1405 += _acc1408 * _t2490;
			_acc1406 += _acc1407 * _t1407;
			_acc1401 -= _acc1406;
			_acc1404 += _acc1405 * _t1402;
			_acc1402 += _acc1405 * _t1404;
			_acc1403 += _acc1404 * vertParams[60];
			_t2491 = 2.000000 * _t1393;
			_acc1393 += _acc1402 * _t2491;
			_t2492 = (float)1.0 / (_t1393);
			_acc1400 += _acc1401 * _t2492;
			_t2493 = -_t1400;
			_t2494 = _t2492 * _t2492;
			_t2495 = _t2493 * _t2494;
			_acc1393 += _acc1401 * _t2495;
			_acc1399 += _acc1400;
			_acc1396 += _acc1400;
			_t2496 = (float)1.0 / (_t1397);
			_acc1398 += _acc1399 * _t2496;
			_t2497 = -_t1398;
			_t2498 = _t2496 * _t2496;
			_t2499 = _t2497 * _t2498;
			_acc1397 += _acc1399 * _t2499;
			_t2500 = 2.000000 * _t1392;
			_acc1392 += _acc1398 * _t2500;
			_t2501 = (float)1.0 / (_t1394);
			_acc1395 += _acc1396 * _t2501;
			_t2502 = -_t1395;
			_t2503 = _t2501 * _t2501;
			_t2504 = _t2502 * _t2503;
			_acc1394 += _acc1396 * _t2504;
			_t2505 = 2.000000 * _t1391;
			_acc1391 += _acc1395 * _t2505;
			_t2506 = 2.000000 * _t1390;
			_acc1390 += _acc1393 * _t2506;
			_acc1370 += _acc1392 * _t1361;
			_acc1371 += _acc1392 * _t1362;
			_acc1372 += _acc1392 * _t1363;
			_acc1361 += _acc1392 * _t1370;
			_acc1362 += _acc1392 * _t1371;
			_acc1363 += _acc1392 * _t1372;
			_acc1373 += _acc1391 * _t1361;
			_acc1374 += _acc1391 * _t1362;
			_acc1375 += _acc1391 * _t1363;
			_acc1361 += _acc1391 * _t1373;
			_acc1362 += _acc1391 * _t1374;
			_acc1363 += _acc1391 * _t1375;
			_acc156 += _acc1390 * _t1361;
			_acc157 += _acc1390 * _t1362;
			_acc158 += _acc1390 * _t1363;
			_acc1361 += _acc1390 * _t156;
			_acc1362 += _acc1390 * _t157;
			_acc1363 += _acc1390 * _t158;
			cif (_t158 < -0.999999) {
			}
			else {
				_acc1385 = _acc1370;
				_acc1381 = _acc1371;
				_acc1382 = _acc1372;
				_acc1381 = _acc1373;
				_acc1389 = _acc1374;
				_acc1386 = _acc1375;
				_acc1388 -= _acc1389;
				_acc1387 += _acc1388 * _t1378;
				_acc1378 += _acc1388 * _t1387;
				_t2507 = 2.000000 * _t157;
				_acc157 += _acc1387 * _t2507;
				_acc157 -= _acc1386;
				_acc1384 -= _acc1385;
				_acc1383 += _acc1384 * _t1378;
				_acc1378 += _acc1384 * _t1383;
				_t2508 = 2.000000 * _t156;
				_acc156 += _acc1383 * _t2508;
				_acc156 -= _acc1382;
				_acc1380 += _acc1381 * _t1378;
				_acc1378 += _acc1381 * _t1380;
				_acc1379 += _acc1380 * _t157;
				_acc157 += _acc1380 * _t1379;
				_acc156 -= _acc1379;
				_t2509 = _t1378 * _t1378;
				_t2510 = -_t2509;
				_acc1377 += _acc1378 * _t2510;
				_acc158 += _acc1377;
			}
			_acc1254 += _acc1369 * _t1361;
			_acc1252 += _acc1369 * _t1362;
			_acc1250 += _acc1369 * _t1363;
			_acc1361 += _acc1369 * _t1254;
			_acc1362 += _acc1369 * _t1252;
			_acc1363 += _acc1369 * _t1250;
			_acc250 += _acc1368 * _t1361;
			_acc251 += _acc1368 * _t1362;
			_acc252 += _acc1368 * _t1363;
			_acc1361 += _acc1368 * _t250;
			_acc1362 += _acc1368 * _t251;
			_acc1363 += _acc1368 * _t252;
			cif (_t1360 < 0.000000) {
				_acc1365 = _acc1361;
				_acc1366 = _acc1362;
				_acc1367 = _acc1363;
				_acc1339 -= _acc1367;
				_acc1338 -= _acc1366;
				_acc1337 -= _acc1365;
			}
			else {
				_acc1337 = _acc1361;
				_acc1338 = _acc1362;
				_acc1339 = _acc1363;
			}
			cif (_t1332 > 0.000000) {
				_acc1346 = _acc1337;
				_acc1347 = _acc1338;
				_acc1348 = _acc1339;
				_acc1343 += _acc1348 * _t1345;
				_acc1345 += _acc1348 * _t1343;
				_acc1342 += _acc1347 * _t1345;
				_acc1345 += _acc1347 * _t1342;
				_acc1341 += _acc1346 * _t1345;
				_acc1345 += _acc1346 * _t1341;
				_t2511 = _t1345 * _t1345;
				_t2512 = -_t2511;
				_acc1344 += _acc1345 * _t2512;
				_t2513 = (float)1.0 / (_t1344);
				_t2514 = _t1341 * _t2513;
				_acc1341 += _acc1344 * _t2514;
				_t2515 = _t1342 * _t2513;
				_acc1342 += _acc1344 * _t2515;
				_t2516 = _t1343 * _t2513;
				_acc1343 += _acc1344 * _t2516;
				_acc252 += _acc1343;
				_acc1250 += _acc1343;
				_acc251 += _acc1342;
				_acc1252 += _acc1342;
				_acc250 += _acc1341;
				_acc1254 += _acc1341;
			}
			else {
				_acc1357 = _acc1337;
				_acc1358 = _acc1338;
				_acc1359 = _acc1339;
				_acc1354 += _acc1359 * _t1356;
				_acc1356 += _acc1359 * _t1354;
				_acc1352 += _acc1358 * _t1356;
				_acc1356 += _acc1358 * _t1352;
				_acc1350 += _acc1357 * _t1356;
				_acc1356 += _acc1357 * _t1350;
				_t2517 = _t1356 * _t1356;
				_t2518 = -_t2517;
				_acc1355 += _acc1356 * _t2518;
				_t2519 = (float)1.0 / (_t1355);
				_t2520 = _t1350 * _t2519;
				_acc1350 += _acc1355 * _t2520;
				_t2521 = _t1352 * _t2519;
				_acc1352 += _acc1355 * _t2521;
				_t2522 = _t1354 * _t2519;
				_acc1354 += _acc1355 * _t2522;
				_acc252 += _acc1354;
				_acc1353 += _acc1354;
				_acc1250 += _acc1353 * _t1333;
				_acc1333 += _acc1353 * _t1250;
				_acc251 += _acc1352;
				_acc1351 += _acc1352;
				_acc1252 += _acc1351 * _t1333;
				_acc1333 += _acc1351 * _t1252;
				_acc250 += _acc1350;
				_acc1349 += _acc1350;
				_acc1254 += _acc1349 * _t1333;
				_acc1333 += _acc1349 * _t1254;
			}
			cif (_t1330 > 0.000000) {
			}
			else {
			}
			_acc1254 += _acc1331 * _t156;
			_acc1252 += _acc1331 * _t157;
			_acc1250 += _acc1331 * _t158;
			_acc156 += _acc1331 * _t1254;
			_acc157 += _acc1331 * _t1252;
			_acc158 += _acc1331 * _t1250;
			_acc250 += _acc1330 * _t156;
			_acc251 += _acc1330 * _t157;
			_acc252 += _acc1330 * _t158;
			_acc156 += _acc1330 * _t250;
			_acc157 += _acc1330 * _t251;
			_acc158 += _acc1330 * _t252;
		}
		else cif (vertParams[51] == 0.000000) {
			_acc1610 = _acc1260;
			_acc1611 = _acc1261;
			_acc1612 = _acc1262;
			_acc1607 = _acc1263;
			_acc1608 = _acc1264;
			_acc1608 += _acc1612 * vertParams[54];
			_acc1608 += _acc1611 * vertParams[53];
			_acc1608 += _acc1610 * vertParams[52];
			_acc1607 += _acc1608 * 0.318310;
			_acc1598 += _acc1607 * _t1254;
			_acc1599 += _acc1607 * _t1252;
			_acc1600 += _acc1607 * _t1250;
			_acc1254 += _acc1607 * _t1598;
			_acc1252 += _acc1607 * _t1599;
			_acc1250 += _acc1607 * _t1600;
			cif (_t1597 > 0.000000) {
				_acc156 = _acc1598;
				_acc157 = _acc1599;
				_acc158 = _acc1600;
			}
			else {
				_acc1603 = _acc1598;
				_acc1604 = _acc1599;
				_acc1605 = _acc1600;
				_acc158 -= _acc1605;
				_acc157 -= _acc1604;
				_acc156 -= _acc1603;
			}
		}
		else {
		}
		_acc1258 += _acc1259 * 3.141593;
		_acc1255 += _acc1258 * 6.283185;
		cif (_t1249 >= 0.000000) {
			_acc1249 = _acc1255;
		}
		else {
			_acc1257 = _acc1255;
			_acc1249 -= _acc1257;
		}
		_acc1249 += _acc1254 * _t1253;
		_acc1253 += _acc1254 * _t1249;
		_t2523 = sin(_t1247);
		_t2524 = -_t2523;
		_acc1247 += _acc1253 * _t2524;
		_acc1249 += _acc1252 * _t1251;
		_acc1251 += _acc1252 * _t1249;
		_t2525 = cos(_t1247);
		_acc1247 += _acc1251 * _t2525;
		_t2526 = sin(_t1248);
		_t2527 = -_t2526;
		_acc1248 += _acc1250 * _t2527;
		_t2528 = cos(_t1248);
		_acc1248 += _acc1249 * _t2528;
		_acc3 += _acc1248 * 3.141593;
		_acc2 += _acc1247 * 6.283185;
	}
	_acc262 += _acc269 * _t268;
	_acc268 += _acc269 * _t262;
	_t2529 = _t268 * _t268;
	_t2530 = -_t2529;
	_acc267 += _acc268 * _t2530;
	_t2531 = 2.000000 * _t264;
	_acc264 += _acc267 * _t2531;
	cif (_t263 >= 0.000000) {
		_acc263 = _acc264;
	}
	else {
		_acc266 = _acc264;
		_acc263 -= _acc266;
	}
	_acc143 += _acc263 * _t156;
	_acc138 += _acc263 * _t157;
	_acc133 += _acc263 * _t158;
	_acc156 += _acc263 * _t143;
	_acc157 += _acc263 * _t138;
	_acc158 += _acc263 * _t133;
	_acc149 += _acc262 * _t261;
	_acc261 += _acc262 * _t149;
	_t2532 = 2.000000 * _t260;
	_acc260 += _acc261 * _t2532;
	_acc259 += _acc260;
	_acc254 += _acc260;
	_acc258 += _acc259;
	_acc256 += _acc259;
	_t2533 = 2.000000 * _t257;
	_acc257 += _acc258 * _t2533;
	_acc150 -= _acc257;
	_t2534 = 2.000000 * _t255;
	_acc255 += _acc256 * _t2534;
	_acc151 -= _acc255;
	_t2535 = 2.000000 * _t253;
	_acc253 += _acc254 * _t2535;
	_acc152 -= _acc253;
	_acc133 -= _acc252;
	_acc138 -= _acc251;
	_acc143 -= _acc250;
	cif (vertParams[3] == 0.000000) {
		_acc208 = _acc150;
		_acc210 = _acc151;
		_acc212 = _acc152;
		_acc230 = _acc156;
		_acc231 = _acc157;
		_acc232 = _acc158;
		_acc227 += _acc232 * _t229;
		_acc229 += _acc232 * _t227;
		_acc222 += _acc231 * _t229;
		_acc229 += _acc231 * _t222;
		_acc217 += _acc230 * _t229;
		_acc229 += _acc230 * _t217;
		_t2536 = _t229 * _t229;
		_t2537 = -_t2536;
		_acc228 += _acc229 * _t2537;
		_t2538 = (float)1.0 / (_t228);
		_t2539 = _t217 * _t2538;
		_acc217 += _acc228 * _t2539;
		_t2540 = _t222 * _t2538;
		_acc222 += _acc228 * _t2540;
		_t2541 = _t227 * _t2538;
		_acc227 += _acc228 * _t2541;
		_acc226 += _acc227;
		_acc223 += _acc227;
		_acc225 += _acc226;
		_acc224 += _acc226;
		_acc206 += _acc225 * vertParams[16];
		_acc191 += _acc224 * vertParams[19];
		_acc202 += _acc223 * vertParams[22];
		_acc221 += _acc222;
		_acc218 += _acc222;
		_acc220 += _acc221;
		_acc219 += _acc221;
		_acc206 += _acc220 * vertParams[15];
		_acc191 += _acc219 * vertParams[18];
		_acc202 += _acc218 * vertParams[21];
		_acc216 += _acc217;
		_acc213 += _acc217;
		_acc215 += _acc216;
		_acc214 += _acc216;
		_acc206 += _acc215 * vertParams[14];
		_acc191 += _acc214 * vertParams[17];
		_acc202 += _acc213 * vertParams[20];
		_acc211 += _acc212;
		_acc204 += _acc211 * _t133;
		_acc133 += _acc211 * _t204;
		_acc209 += _acc210;
		_acc204 += _acc209 * _t138;
		_acc138 += _acc209 * _t204;
		_acc207 += _acc208;
		_acc204 += _acc207 * _t143;
		_acc143 += _acc207 * _t204;
		_acc205 += _acc206;
		_acc202 -= _acc206;
		_acc191 -= _acc205;
		_acc203 += _acc204 * _t186;
		_acc186 += _acc204 * _t203;
		_acc200 += _acc203 * vertParams[11];
		_acc197 += _acc203 * vertParams[12];
		_acc194 += _acc203 * vertParams[13];
		_acc201 += _acc202 * _t186;
		_acc186 += _acc202 * _t201;
		_acc143 += _acc201 * _t200;
		_acc138 += _acc201 * _t197;
		_acc133 += _acc201 * _t194;
		_acc200 += _acc201 * _t143;
		_acc197 += _acc201 * _t138;
		_acc194 += _acc201 * _t133;
		_acc199 += _acc200;
		_acc198 -= _acc200;
		_acc188 += _acc199 * vertParams[10];
		_acc189 += _acc198 * vertParams[9];
		_acc196 += _acc197;
		_acc195 -= _acc197;
		_acc189 += _acc196 * vertParams[8];
		_acc187 += _acc195 * vertParams[10];
		_acc193 += _acc194;
		_acc192 -= _acc194;
		_acc187 += _acc193 * vertParams[9];
		_acc188 += _acc192 * vertParams[8];
		_acc190 += _acc191 * _t186;
		_acc186 += _acc191 * _t190;
		_acc187 += _acc190 * _t184;
		_acc188 += _acc190 * _t181;
		_acc189 += _acc190 * _t178;
		_acc184 += _acc190 * _t187;
		_acc181 += _acc190 * _t188;
		_acc178 += _acc190 * _t189;
		_t2542 = _t186 * _t186;
		_t2543 = -_t2542;
		_acc185 += _acc186 * _t2543;
		_acc184 += _acc185 * vertParams[8];
		_acc181 += _acc185 * vertParams[9];
		_acc178 += _acc185 * vertParams[10];
		_acc183 += _acc184;
		_acc182 -= _acc184;
		_acc138 += _acc183 * vertParams[13];
		_acc133 += _acc182 * vertParams[12];
		_acc180 += _acc181;
		_acc179 -= _acc181;
		_acc133 += _acc180 * vertParams[11];
		_acc143 += _acc179 * vertParams[13];
		_acc177 += _acc178;
		_acc176 -= _acc178;
		_acc143 += _acc177 * vertParams[12];
		_acc138 += _acc176 * vertParams[11];
	}
	else {
	}
	_t2544 = 2.000000 * _t148;
	_acc148 += _acc149 * _t2544;
	_t2545 = -scene[32];
	_t2546 = (float)1.0 / (_t147);
	_t2547 = _t2546 * _t2546;
	_t2548 = _t2545 * _t2547;
	_acc147 += _acc148 * _t2548;
	_t2549 = (float)1.0 / (_t144);
	_acc146 += _acc147 * _t2549;
	_t2550 = -_t146;
	_t2551 = _t2549 * _t2549;
	_t2552 = _t2550 * _t2551;
	_acc144 += _acc147 * _t2552;
	_t2553 = 2.000000 * _t145;
	_acc145 += _acc146 * _t2553;
	_t2554 = -scene[33];
	_t2555 = (float)1.0 / (_t144);
	_t2556 = _t2555 * _t2555;
	_t2557 = _t2554 * _t2556;
	_acc144 += _acc145 * _t2557;
	_acc73 += _acc144 * _t143;
	_acc68 += _acc144 * _t138;
	_acc63 += _acc144 * _t133;
	_acc143 += _acc144 * _t73;
	_acc138 += _acc144 * _t68;
	_acc133 += _acc144 * _t63;
	_acc142 += _acc143;
	_acc139 += _acc143;
	_acc141 += _acc142;
	_acc140 += _acc142;
	_acc110 += _acc141 * _t96;
	_acc96 += _acc141 * _t110;
	_acc116 += _acc140 * _t97;
	_acc97 += _acc140 * _t116;
	_acc123 += _acc139 * _t98;
	_acc98 += _acc139 * _t123;
	_acc137 += _acc138;
	_acc134 += _acc138;
	_acc136 += _acc137;
	_acc135 += _acc137;
	_acc112 += _acc136 * _t96;
	_acc96 += _acc136 * _t112;
	_acc119 += _acc135 * _t97;
	_acc97 += _acc135 * _t119;
	_acc125 += _acc134 * _t98;
	_acc98 += _acc134 * _t125;
	_acc132 += _acc133;
	_acc129 += _acc133;
	_acc131 += _acc132;
	_acc130 += _acc132;
	_acc114 += _acc131 * _t96;
	_acc96 += _acc131 * _t114;
	_acc121 += _acc130 * _t97;
	_acc97 += _acc130 * _t121;
	_acc128 += _acc129 * _t98;
	_acc98 += _acc129 * _t128;
	_acc127 -= _acc128;
	_acc126 += _acc127 * 2.000000;
	_acc99 += _acc126;
	_acc100 += _acc126;
	_acc124 += _acc125 * 2.000000;
	_acc104 += _acc124;
	_acc105 -= _acc124;
	_acc122 += _acc123 * 2.000000;
	_acc103 += _acc122;
	_acc106 += _acc122;
	_acc120 += _acc121 * 2.000000;
	_acc104 += _acc120;
	_acc105 += _acc120;
	_acc118 -= _acc119;
	_acc117 += _acc118 * 2.000000;
	_acc99 += _acc117;
	_acc101 += _acc117;
	_acc115 += _acc116 * 2.000000;
	_acc102 += _acc115;
	_acc107 -= _acc115;
	_acc113 += _acc114 * 2.000000;
	_acc103 += _acc113;
	_acc106 -= _acc113;
	_acc111 += _acc112 * 2.000000;
	_acc102 += _acc111;
	_acc107 += _acc111;
	_acc109 -= _acc110;
	_acc108 += _acc109 * 2.000000;
	_acc100 += _acc108;
	_acc101 += _acc108;
	_acc91 += _acc98 * _t95;
	_acc95 += _acc98 * _t91;
	_acc92 += _acc97 * _t95;
	_acc95 += _acc97 * _t92;
	_acc93 += _acc96 * _t95;
	_acc95 += _acc96 * _t93;
	_t2558 = _t95 * _t95;
	_t2559 = -_t2558;
	_acc94 += _acc95 * _t2559;
	_t2560 = (float)1.0 / (_t94);
	_t2561 = _t93 * _t2560;
	_acc93 += _acc94 * _t2561;
	_t2562 = _t92 * _t2560;
	_acc92 += _acc94 * _t2562;
	_t2563 = _t91 * _t2560;
	_acc91 += _acc94 * _t2563;
	_acc89 += _acc93 * _t90;
	_acc90 += _acc93 * _t89;
	_acc85 += _acc92 * _t90;
	_acc90 += _acc92 * _t85;
	_acc81 += _acc91 * _t90;
	_acc90 += _acc91 * _t81;
	_t2564 = _t90 * _t90;
	_t2565 = -_t2564;
	_acc77 += _acc90 * _t2565;
	_acc88 += _acc89;
	_acc87 += _acc88;
	_acc86 += _acc88;
	_acc0 += _acc87 * scene[1];
	_acc1 += _acc86 * scene[5];
	_acc84 += _acc85;
	_acc83 += _acc84;
	_acc82 += _acc84;
	_acc0 += _acc83 * scene[2];
	_acc1 += _acc82 * scene[6];
	_acc80 += _acc81;
	_acc79 += _acc80;
	_acc78 += _acc80;
	_acc0 += _acc79 * scene[3];
	_acc1 += _acc78 * scene[7];
	_acc76 += _acc77;
	_acc75 += _acc76;
	_acc74 += _acc76;
	_acc0 += _acc75 * scene[4];
	_acc1 += _acc74 * scene[8];
	_acc72 += _acc73;
	_acc69 += _acc73;
	_acc71 += _acc72;
	_acc70 += _acc72;
	_acc40 += _acc71 * _t26;
	_acc26 += _acc71 * _t40;
	_acc46 += _acc70 * _t27;
	_acc27 += _acc70 * _t46;
	_acc53 += _acc69 * _t28;
	_acc28 += _acc69 * _t53;
	_acc67 += _acc68;
	_acc64 += _acc68;
	_acc66 += _acc67;
	_acc65 += _acc67;
	_acc42 += _acc66 * _t26;
	_acc26 += _acc66 * _t42;
	_acc49 += _acc65 * _t27;
	_acc27 += _acc65 * _t49;
	_acc55 += _acc64 * _t28;
	_acc28 += _acc64 * _t55;
	_acc62 += _acc63;
	_acc59 += _acc63;
	_acc61 += _acc62;
	_acc60 += _acc62;
	_acc44 += _acc61 * _t26;
	_acc26 += _acc61 * _t44;
	_acc51 += _acc60 * _t27;
	_acc27 += _acc60 * _t51;
	_acc58 += _acc59 * _t28;
	_acc28 += _acc59 * _t58;
	_acc57 -= _acc58;
	_acc56 += _acc57 * 2.000000;
	_acc29 += _acc56;
	_acc30 += _acc56;
	_acc54 += _acc55 * 2.000000;
	_acc34 += _acc54;
	_acc35 -= _acc54;
	_acc52 += _acc53 * 2.000000;
	_acc33 += _acc52;
	_acc36 += _acc52;
	_acc50 += _acc51 * 2.000000;
	_acc34 += _acc50;
	_acc35 += _acc50;
	_acc48 -= _acc49;
	_acc47 += _acc48 * 2.000000;
	_acc29 += _acc47;
	_acc31 += _acc47;
	_acc45 += _acc46 * 2.000000;
	_acc32 += _acc45;
	_acc37 -= _acc45;
	_acc43 += _acc44 * 2.000000;
	_acc33 += _acc43;
	_acc36 -= _acc43;
	_acc41 += _acc42 * 2.000000;
	_acc32 += _acc41;
	_acc37 += _acc41;
	_acc39 -= _acc40;
	_acc38 += _acc39 * 2.000000;
	_acc30 += _acc38;
	_acc31 += _acc38;
	_acc21 += _acc28 * _t25;
	_acc25 += _acc28 * _t21;
	_acc22 += _acc27 * _t25;
	_acc25 += _acc27 * _t22;
	_acc23 += _acc26 * _t25;
	_acc25 += _acc26 * _t23;
	_t2566 = _t25 * _t25;
	_t2567 = -_t2566;
	_acc24 += _acc25 * _t2567;
	_t2568 = (float)1.0 / (_t24);
	_t2569 = _t23 * _t2568;
	_acc23 += _acc24 * _t2569;
	_t2570 = _t22 * _t2568;
	_acc22 += _acc24 * _t2570;
	_t2571 = _t21 * _t2568;
	_acc21 += _acc24 * _t2571;
	_acc19 += _acc23 * _t20;
	_acc20 += _acc23 * _t19;
	_acc15 += _acc22 * _t20;
	_acc20 += _acc22 * _t15;
	_acc11 += _acc21 * _t20;
	_acc20 += _acc21 * _t11;
	_t2572 = _t20 * _t20;
	_t2573 = -_t2572;
	_acc7 += _acc20 * _t2573;
	_acc18 += _acc19;
	_acc17 += _acc18;
	_acc16 += _acc18;
	_acc14 += _acc15;
	_acc13 += _acc14;
	_acc12 += _acc14;
	_acc10 += _acc11;
	_acc9 += _acc10;
	_acc8 += _acc10;
	_acc6 += _acc7;
	_acc5 += _acc6;
	_acc4 += _acc6;
	grad[0] = _acc0;
	grad[1] = _acc1;
	grad[2] = _acc2;
	grad[3] = _acc3;
}
export void evaluate_path_bidir_mala_3_0_static_derv(uniform const float lens[2], uniform const float primary[5], uniform const float scene[38], uniform const float vertParams[238], uniform float grad[]) {
	float g[4] = {0};
	evaluate_path_bidir_mala_3_0_static_derv_kernel(lens, primary, scene, vertParams, g);
	foreach (index = 0 ... 4) {
		grad[index] = g[index];
	}
}
